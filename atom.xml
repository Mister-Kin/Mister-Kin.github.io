<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr. Kin&#39;s Blog</title>
  <icon>https://mister-kin.github.io/images_public/favicon/Logo.svg</icon>
  <subtitle>计算机知识分享/软件应用讲解</subtitle>
  <link href="https://mister-kin.github.io/atom.xml" rel="self"/>
  
  <link href="https://mister-kin.github.io/"/>
  <updated>2024-05-11T17:26:31.000Z</updated>
  <id>https://mister-kin.github.io/</id>
  
  <author>
    <name>Mr. Kin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>维修工具</title>
    <link href="https://mister-kin.github.io/cad/repair-tools/"/>
    <id>https://mister-kin.github.io/cad/repair-tools/</id>
    <published>2024-05-11T17:15:23.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>可调电源：检测电流，电压。接入机器才会显示电流。可剪断电源正极的通用口线，自己做一个开关。（防止弄坏电源机械开关，有些机器待机电流也偏大，不宜频繁开关？）通用口可接特定的接口，可接不同厂商的机器。</li><li>烙铁</li><li>热风枪</li><li>万用表，打值卡，假负载，诊断卡</li><li>示波器：主要是供电和信号，不是频率</li><li>BGA返修台</li></ul><h1 id="参考文献">1 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;可调电源：检测电流，电压。接入机器才会显示电流。可剪断电源正极的通用口线，自己做一个开关。（防止弄坏电源机械开关，有些机器待机电流也偏大，不宜频繁开关？）通用口可接特定的接口，可接不同厂商的机器。&lt;/li&gt;
&lt;li&gt;烙铁&lt;/li&gt;
&lt;li&gt;热风枪&lt;/li&gt;
&lt;l</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
    <category term="维修" scheme="https://mister-kin.github.io/tags/%E7%BB%B4%E4%BF%AE/"/>
    
    <category term="工具" scheme="https://mister-kin.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>计算机安全</title>
    <link href="https://mister-kin.github.io/code/computer-security/"/>
    <id>https://mister-kin.github.io/code/computer-security/</id>
    <published>2024-05-11T16:56:41.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络安全">1 &nbsp&nbsp<a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h1><h2 id="无线网络的加密形式">1.1 &nbsp&nbsp<a href="#无线网络的加密形式" class="headerlink" title="无线网络的加密形式"></a>无线网络的加密形式</h2><ul><li>wep：几乎都能破解，注入包一分钟即可</li><li>wpa&#x2F;wpa2、混合、pin：暴力破解</li></ul><h1 id="关于代理服务器和跳板攻击">2 &nbsp&nbsp<a href="#关于代理服务器和跳板攻击" class="headerlink" title="关于代理服务器和跳板攻击"></a>关于代理服务器和跳板攻击</h1><p>通过代理跳板，跳板越多，主机链越长（若有路由器或者交换机，可删除保存在flash内的登录日志，消除痕迹），可做到防止被攻击（隐藏IP），突破一些网址的限制访问（墙或者请求次数），隐藏身份进行攻击。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;网络安全&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#网络安全&quot; class=&quot;headerlink&quot; title=&quot;网络安全&quot;&gt;&lt;/a&gt;网络安全&lt;/h1&gt;&lt;h2 id=&quot;无线网络的加密形式&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="计算机安全" scheme="https://mister-kin.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8/"/>
    
    <category term="信息安全" scheme="https://mister-kin.github.io/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Powershell总结</title>
    <link href="https://mister-kin.github.io/code/powershell/"/>
    <id>https://mister-kin.github.io/code/powershell/</id>
    <published>2024-05-11T15:07:18.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ps脚本无法运行">1 &nbsp&nbsp<a href="#ps脚本无法运行" class="headerlink" title="ps脚本无法运行"></a>ps脚本无法运行</h1><p>出于安全考虑，默认的 Windows PowerShell 策略不允许执行脚本。</p><p>设置运行策略：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> unrestricted</span><br><span class="line"><span class="comment"># Restricted：默认设置，不允许运行任何脚本</span></span><br><span class="line"><span class="comment"># AllSigned：仅运行受信任脚本</span></span><br><span class="line"><span class="comment"># RemoteSigned：运行本地脚本，不管这些脚本是否受信任</span></span><br><span class="line"><span class="comment"># Unrestricted：允许运行所有脚本，甚至是不受信任的</span></span><br></pre></td></tr></table></figure><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;ps脚本无法运行&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#ps脚本无法运行&quot; class=&quot;headerlink&quot; title=&quot;ps脚本无法运行&quot;&gt;&lt;/a&gt;ps脚本无法运行&lt;/h1&gt;&lt;p&gt;出于安全考虑，默认的 Windows PowerShell</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="运维" scheme="https://mister-kin.github.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="powershell" scheme="https://mister-kin.github.io/tags/powershell/"/>
    
    <category term="脚本" scheme="https://mister-kin.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Audacity总结</title>
    <link href="https://mister-kin.github.io/software/audacity/"/>
    <id>https://mister-kin.github.io/software/audacity/</id>
    <published>2024-04-28T02:34:08.000Z</published>
    <updated>2024-04-28T04:42:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装openvino-plugins-ai-audacity找不到组件">1 &nbsp&nbsp<a href="#安装openvino-plugins-ai-audacity找不到组件" class="headerlink" title="安装openvino-plugins-ai-audacity找不到组件"></a>安装openvino-plugins-ai-audacity找不到组件</h1><p>运行openvino-plugins-ai-audacity安装程序后，默认是没有启用组件的。</p><p>解决方法：编辑-&gt;偏好设置-&gt;模块-&gt;mod-openvino-&gt;已启用</p><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Installed in Program Files&#x2F;Audacity but does not show up in Audacity[EB&#x2F;OL]. <a href="https://github.com/intel/openvino%E2%80%91plugins%E2%80%91ai%E2%80%91audacity/issues/132">https://github.com/intel/openvino‑plugins‑ai‑audacity/issues/132</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;安装openvino-plugins-ai-audacity找不到组件&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#安装openvino-plugins-ai-audacity找不到组件&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
    <category term="audacity" scheme="https://mister-kin.github.io/tags/audacity/"/>
    
    <category term="音频" scheme="https://mister-kin.github.io/tags/%E9%9F%B3%E9%A2%91/"/>
    
    <category term="后期处理" scheme="https://mister-kin.github.io/tags/%E5%90%8E%E6%9C%9F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Stable Diffusion</title>
    <link href="https://mister-kin.github.io/software/stable-diffusion/"/>
    <id>https://mister-kin.github.io/software/stable-diffusion/</id>
    <published>2024-04-20T16:54:27.000Z</published>
    <updated>2024-04-20T19:27:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Stable-Diffusion-Webui局域网多人共享">1 &nbsp&nbsp<a href="#Stable-Diffusion-Webui局域网多人共享" class="headerlink" title="Stable Diffusion Webui局域网多人共享"></a>Stable Diffusion Webui局域网多人共享</h1><p>默认情况下，Stable Diffusion Webui实现的局域网共享，无法实现多人队列提交，并且SD模型和VAE模型是全局设置，一人改变会导致后台改变，而网页端显示的值并未变化更新。</p><p>队列提交&#x2F;多人共享使用的一些插件实现：</p><ul><li><a href="https://github.com/ArtVentureX/sd-webui-agent-scheduler">sd-webui-agent-scheduler</a></li><li><a href="https://github.com/wolverinn/stable-diffusion-multi-user">stable-diffusion-multi-user</a></li></ul><p>多人共享使用的一些问题讨论：</p><ul><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/11531">multiple users use it at the same time</a></li></ul><h1 id="Stable-Diffusion-Webui多卡算力">2 &nbsp&nbsp<a href="#Stable-Diffusion-Webui多卡算力" class="headerlink" title="Stable Diffusion Webui多卡算力"></a>Stable Diffusion Webui多卡算力</h1><p>当前Webui并未支持多卡同时加速计算，通过共享实例进程实现多人使用（队列提交）均衡多卡负载倒是可以实现。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Accelerate doesn&#39;t use multi GPU with automatic1111[EB&#x2F;OL]. <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/13942">https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/13942</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Stable-Diffusion-Webui局域网多人共享&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#Stable-Diffusion-Webui局域网多人共享&quot; class=&quot;headerlink&quot; title=&quot;Stable Diffusion</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="SD" scheme="https://mister-kin.github.io/tags/SD/"/>
    
    <category term="stable diffusion" scheme="https://mister-kin.github.io/tags/stable-diffusion/"/>
    
    <category term="stable diffusion webui" scheme="https://mister-kin.github.io/tags/stable-diffusion-webui/"/>
    
    <category term="AIGC" scheme="https://mister-kin.github.io/tags/AIGC/"/>
    
    <category term="AI" scheme="https://mister-kin.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>yolo目标检测框架总结</title>
    <link href="https://mister-kin.github.io/software/yolo/"/>
    <id>https://mister-kin.github.io/software/yolo/</id>
    <published>2024-03-09T21:12:01.000Z</published>
    <updated>2024-03-09T21:19:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实践项目">1 &nbsp&nbsp<a href="#实践项目" class="headerlink" title="实践项目"></a>实践项目</h1><h2 id="毛囊检测">1.1 &nbsp&nbsp<a href="#毛囊检测" class="headerlink" title="毛囊检测"></a>毛囊检测</h2><ul><li>数据集：<ul><li><a href="https://universe.roboflow.com/project-0iwdt/hair-tootr/dataset/3">hair Image Dataset</a></li><li><a href="https://drive.google.com/file/d/1rMw8OzgxuTOSqKD8EBPN_BYXW18q9d3H/view">FDU_HairFollicleDataset.zip</a></li></ul></li><li>论文资料<ul><li><a href="https://dl.acm.org/doi/abs/10.1007/978-3-031-44207-0_4">A New Dataset for Hair Follicle Recognition and Classification in Robot-Aided Hair Transplantation</a></li><li>上一篇论文镜像链接（附有数据集下载链接，已明写在上一小节）<a href="https://link.springer.com/chapter/10.1007/978-3-031-44207-0_4">A New Dataset for Hair Follicle Recognition and Classification in Robot-Aided Hair Transplantation</a></li></ul></li></ul><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;实践项目&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#实践项目&quot; class=&quot;headerlink&quot; title=&quot;实践项目&quot;&gt;&lt;/a&gt;实践项目&lt;/h1&gt;&lt;h2 id=&quot;毛囊检测&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#毛囊检测&quot;</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
  </entry>
  
  <entry>
    <title>闪存驱动器设计</title>
    <link href="https://mister-kin.github.io/cad/flash-disk/"/>
    <id>https://mister-kin.github.io/cad/flash-disk/</id>
    <published>2024-03-07T11:50:45.000Z</published>
    <updated>2024-03-09T03:37:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="颗粒芯片资料查询链接">1 &nbsp&nbsp<a href="#颗粒芯片资料查询链接" class="headerlink" title="颗粒芯片资料查询链接"></a>颗粒芯片资料查询链接</h1><ul><li><a href="https://www.flashinfo.top/">https://www.flashinfo.top/</a></li><li><a href="https://fm-us.xfjportal.com/">https://fm-us.xfjportal.com/</a></li></ul><h1 id="开卡工具链接">2 &nbsp&nbsp<a href="#开卡工具链接" class="headerlink" title="开卡工具链接"></a>开卡工具链接</h1><ul><li><a href="http://am.adianshi.com:6805/%E5%BC%80%E5%8D%A1%E8%BD%AF%E4%BB%B6/">http://am.adianshi.com:6805/%E5%BC%80%E5%8D%A1%E8%BD%AF%E4%BB%B6/</a></li><li><a href="https://www.ssdtool.cc/ma">https://www.ssdtool.cc/ma</a></li></ul><h1 id="关于开卡设定参数的帖子链接">3 &nbsp&nbsp<a href="#关于开卡设定参数的帖子链接" class="headerlink" title="关于开卡设定参数的帖子链接"></a>关于开卡设定参数的帖子链接</h1><ul><li><a href="https://www.mydigit.cn/thread-240834-1-1.html">[Toshiba] 东芝9DDK在sm2246xt上写入速度低的终极解决办法</a></li><li><a href="https://www.mydigit.cn/thread-153446-1-1.html">[慧荣] 发一个自己总结的SM3280、SM3281改参数的教程</a></li></ul><h1 id="IS903资料">4 &nbsp&nbsp<a href="#IS903资料" class="headerlink" title="IS903资料"></a>IS903资料</h1><ul><li><a href="https://www.cnblogs.com/DLHC-TECH/p/IS903_FLASH-DRIVE_D-P10.html">银灿IS903主控 + MT29F64G08CBAAA(NAND) 制作8GB闪存驱动器</a></li><li><a href="https://www.mydigit.cn/thread-336398-1-1.html">[银灿] 免费共享IS903测试架原理图+PCB资料，带04T跳线，电压跳线</a></li><li><a href="https://www.mydigit.cn/thread-219825-1-1.html">[银灿] ISD903-V6.0主控板上市，彻底解决了Win10系统下掉盘的问题</a></li><li><a href="https://github.com/prashant87/IS903">prashant87&#x2F;IS903</a></li></ul><h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;颗粒芯片资料查询链接&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#颗粒芯片资料查询链接&quot; class=&quot;headerlink&quot; title=&quot;颗粒芯片资料查询链接&quot;&gt;&lt;/a&gt;颗粒芯片资料查询链接&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
  </entry>
  
  <entry>
    <title>路由排障总结</title>
    <link href="https://mister-kin.github.io/troubleshooting/router-troubleshooting/"/>
    <id>https://mister-kin.github.io/troubleshooting/router-troubleshooting/</id>
    <published>2024-03-06T18:04:53.000Z</published>
    <updated>2024-03-06T19:37:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="联通光猫">1 &nbsp&nbsp<a href="#联通光猫" class="headerlink" title="联通光猫"></a>联通光猫</h1><h2 id="烽火HG6142A获取超级管理员密码">1.1 &nbsp&nbsp<a href="#烽火HG6142A获取超级管理员密码" class="headerlink" title="烽火HG6142A获取超级管理员密码"></a>烽火HG6142A获取超级管理员密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取光猫的mac地址，获取地址删除-就是实际mac信息</span></span><br><span class="line">arp -a 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋能telnet，成功使能后显示Open telnet success!</span></span><br><span class="line">http://192.168.1.1/telnet?<span class="built_in">enable</span>=1&amp;key=ACC4A9338800</span><br><span class="line"><span class="comment"># 部分型号使能命令：http://192.168.1.1/cgi-bin/telnetenable.cgi?telnetenable=1&amp;key=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录telnet</span></span><br><span class="line">telnet 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录帐号</span></span><br><span class="line">admin/root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录密码：Fh@mac后六位</span></span><br><span class="line">Fh@338800</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果显示有路径就是成功登录了</span></span><br><span class="line">/var <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入工厂模式</span></span><br><span class="line">load_cli factory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示管理员密码命令，admin_pwd=字段就是超级密码</span></span><br><span class="line">show admin_pwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录光猫，注意192.168.1.1页面只能登录普通账户，user：p752hj44</span></span><br><span class="line">192.168.1.1/cu.html</span><br></pre></td></tr></table></figure><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 烽火HG6142A 破解超级管理员密码 改桥接[EB&#x2F;OL]. <a href="http://blog.yunduanzhuji.com/archives/1317/">http://blog.yunduanzhuji.com/archives/1317/</a>.<br>[2] 烽火HG6142A 破解超级管理员密码 改桥接[EB&#x2F;OL]. <a href="https://www.right.com.cn/forum/thread-8252962-1-1.html">https://www.right.com.cn/forum/thread-8252962-1-1.html</a>.<br>[2] 移动光猫HG6142A1烽火改桥接[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/648892946">https://zhuanlan.zhihu.com/p/648892946</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;联通光猫&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#联通光猫&quot; class=&quot;headerlink&quot; title=&quot;联通光猫&quot;&gt;&lt;/a&gt;联通光猫&lt;/h1&gt;&lt;h2 id=&quot;烽火HG6142A获取超级管理员密码&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="troubleshooting" scheme="https://mister-kin.github.io/categories/troubleshooting/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo个人博客搭建踩坑记</title>
    <link href="https://mister-kin.github.io/code/hexo/"/>
    <id>https://mister-kin.github.io/code/hexo/</id>
    <published>2024-02-02T09:21:50.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发环境配置">1 &nbsp&nbsp<a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h1><h2 id="安装Node-js和启用Yarn">1.1 &nbsp&nbsp<a href="#安装Node-js和启用Yarn" class="headerlink" title="安装Node.js和启用Yarn"></a>安装Node.js和启用Yarn</h2><p>下载链接：</p><ul><li><a href="https://nodejs.org/en/download">Node.js</a>：推荐LTS长期版，不推荐用最新版，可能很多npm并未能适配新版。</li><li><a href="https://github.com/yarnpkg/yarn/releases">Yarn（&lt;&#x3D;v1.22.19才有编译好的安装包）</a>：若要使用新版Yarn，则不需要下载离线包安装，通过Node.js的corepack启用即可。</li></ul><p>启用Yarn：</p><div class="tabs" id="enable_yarn"><ul class="nav-tabs"><li class="tab active"><a href="#enable_yarn-1">通过Corepack启用Yarn（>v1.22.19，要求Node.js>=16.10）</a></li><li class="tab"><a href="#enable_yarn-2">通过离线包启用Yarn（≦ v1.22.19）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="enable_yarn-1"><ol><li>管理员终端运行命令启用：<code>corepack enable</code>，执行成功之后yarn命令即可系统全局正常调用。</li><li>终端运行命令：<code>yarn global bin</code>，复制路径添加到用户的PATH环境变量中。（这一步一定需要手动添加路径，因为程序没有自动添加PATH变量）</li></ol></div><div class="tab-pane" id="enable_yarn-2"><p>下载安装Yarn离线包即可，程序会自动添加PATH环境变量（Yarn程序路径和Package二进制程序路径）。</p></div></div></div><h2 id="yarn和npm部分对应命令">1.2 &nbsp&nbsp<a href="#yarn和npm部分对应命令" class="headerlink" title="yarn和npm部分对应命令"></a>yarn和npm部分对应命令</h2><table><thead><tr><th align="center">yarn命令</th><th align="center">npm命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>yarn init</code></td><td align="center"><code>npm init</code></td><td align="center">初始化</td></tr><tr><td align="center"><code>yarn / yarn install</code></td><td align="center"><code>npm install</code></td><td align="center">安装包</td></tr><tr><td align="center"><code>yarn add [package]</code></td><td align="center"><code>npm install [package] --save</code></td><td align="center">安装包</td></tr><tr><td align="center"><code>yarn add global [package]</code></td><td align="center"><code>npm install -g [package] --save</code></td><td align="center">全局安装包</td></tr><tr><td align="center"><code>yarn remove</code></td><td align="center"><code>npm uninstall</code></td><td align="center">卸载包</td></tr><tr><td align="center"><code>yarn upgrade</code></td><td align="center"><code>npm update</code></td><td align="center">更新包</td></tr><tr><td align="center"><code>yarn global dir</code></td><td align="center"><code>npm config get prefix</code></td><td align="center">查看安装目录</td></tr><tr><td align="center"><code>yarn global bin</code></td><td align="center"></td><td align="center">查看安装bin目录</td></tr><tr><td align="center"><code>yarn cache dir</code></td><td align="center"></td><td align="center">查看缓存目录</td></tr><tr><td align="center"><code>yarn cache clear</code></td><td align="center"><code>npm cache clean</code></td><td align="center">清除缓存目录</td></tr></tbody></table><h2 id="版本和包更新">1.3 &nbsp&nbsp<a href="#版本和包更新" class="headerlink" title="版本和包更新"></a>版本和包更新</h2><blockquote><p>站点配置文件<code>_config.yml</code>和主题配置文件<code>_config.next.yml</code>的更新改动项，通过查看Github仓库代码是否存在更新改动。</p></blockquote><blockquote><p>Next主题直接可通过package版本号更新即可。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn outdated <span class="comment"># 检查已过时的包，并修改 package 中 dependencies 中相关版本号</span></span><br><span class="line">yarn global outdated <span class="comment"># 全局检查已过时的包（hexo-cli若已过时，可以先remove再add）</span></span><br><span class="line"><span class="built_in">rm</span> -rf node_modules <span class="comment"># 删除包路径</span></span><br><span class="line">yarn <span class="comment"># 重新为项目安装包，实际等于yarn install（根据package.json安装）</span></span><br></pre></td></tr></table></figure><h2 id="npm源设定">1.4 &nbsp&nbsp<a href="#npm源设定" class="headerlink" title="npm源设定"></a>npm源设定</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn config get registry  // 查看当前npm源</span><br><span class="line">yarn config delete registry // 重置为官方源</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com  // 设置npm镜像源（原淘宝镜像源）</span><br></pre></td></tr></table></figure><p>当前有效镜像链接：<code>npm config set registry https://registry.npmmirror.com</code><br><del>已失效镜像链接：<code>npm config set registry http://registry.npm.taobao.org</code></del></p><h2 id="安装hexo和hexo-cli">1.5 &nbsp&nbsp<a href="#安装hexo和hexo-cli" class="headerlink" title="安装hexo和hexo-cli"></a>安装hexo和hexo-cli</h2><p>在想要安装hexo的位置建立文件夹「hexo」，打开命令行终端，以此路径作为终端工作路径。然后执行下面命令（推荐全局安装）。</p><div class="tabs" id="install_hexo"><ul class="nav-tabs"><li class="tab active"><a href="#install_hexo-1">全局安装hexo-cli</a></li><li class="tab"><a href="#install_hexo-2">本地安装hexo-cli</a></li></ul><div class="tab-content"><div class="tab-pane active" id="install_hexo-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-cli <span class="comment"># 全局安装hexo-cli脚手架</span></span><br><span class="line">hexo init <span class="comment"># 初始化hexo，克隆hexo-starter和默认landscape主题仓库</span></span><br><span class="line">hexo s <span class="comment"># hexo server，启用本地服务器，见：http://localhost:4000/</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="install_hexo-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-cli</span><br><span class="line">node_modules/.bin/hexo.cmd init blog <span class="comment"># init需要空文件夹，所以另外用文件夹「blog」来初始化hexo</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">yarn add <span class="comment"># 一般hexo init之后都会自动安装相关依赖。若没有自动安装时，则需要执行该条命令以手动安装依赖。</span></span><br><span class="line">node_modules/.bin/hexo.cmd s</span><br></pre></td></tr></table></figure></div></div></div><h1 id="hexo配置">2 &nbsp&nbsp<a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h1><h2 id="config-yml">2.1 &nbsp&nbsp<a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>注：language根据主题设置，注意新版Next主题已经没有zh-Hans语言配置文件，设置中文简体请用zh-CN参数。<br>注：新版Next主题主仓库已从 iissnan 名下迁移至 theme-next 组织。<br>注：现阶段新版Next支持Font Awesome 5.13.0，而5.1.4旧版Next版本只支持Font Awesome 4.7.0</p><h2 id="live2d的修正处理">2.2 &nbsp&nbsp<a href="#live2d的修正处理" class="headerlink" title="live2d的修正处理"></a>live2d的修正处理</h2><p>参考链接：<a href="https://github.com/xiazeyu/live2d-widget.js/issues/62">&quot;idle&quot; 设置多个动作时每次加载只会执行其中一个动作，不会随机到别的动作</a></p><p>关于适配自动构建的两个解决方法：</p><ul><li>Github Action自动构建需要相应修改命令（比较繁琐，因此放弃）</li><li>fork源码修改重新编译发布npm包（需要注册npmjs，发布全局包也需审核；使用个人仓库链接作为npm使用即可）</li></ul><p>详细修改：</p><ol><li>cModel.js line 369（注释掉原来的，再添加以下代码）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">motions</span>[motionName] == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadMotion</span>(motionName, <span class="variable language_">this</span>.<span class="property">modelHomeDir</span> + motionName, <span class="keyword">function</span>(<span class="params">mtn</span>) &#123;</span><br><span class="line">        motion = mtn;</span><br><span class="line"></span><br><span class="line">        thisRef.<span class="title function_">setFadeInFadeOut</span>(name, no, priority, motion);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    motion = <span class="variable language_">this</span>.<span class="property">motions</span>[motionName];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    thisRef.<span class="title function_">setFadeInFadeOut</span>(name, no, priority, motion);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>cManager.js line 89（注释掉原来的，再添加以下代码）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">models</span>[i].<span class="title function_">startRandomMotion</span>(cDefine.<span class="property">MOTION_GROUP_FLICK_HEAD</span>,</span><br><span class="line">        cDefine.<span class="property">PRIORITY_NORMAL</span>);</span><br></pre></td></tr></table></figure></li><li>修改两个文件的代码后，在live2d-widget路径下执行构建命令：<code>npm run inst:dev</code>和<code>npm run build:prod</code><div class="tabs" id="修正并构建live2d"><ul class="nav-tabs"><li class="tab active"><a href="#修正并构建live2d-1">yarn命令版本</a></li><li class="tab"><a href="#修正并构建live2d-2">npm命令版本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="修正并构建live2d-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn global add commitizen &amp;&amp; yarn global add conventional-changelog-cli &amp;&amp; yarn</span><br><span class="line">./node_modules/.bin/webpack --<span class="built_in">env</span> prod --progress --colors &amp;&amp; ./node_modules/.bin/webpack --<span class="built_in">env</span> prod --progress --colors --config webpack.config.common.js</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="修正并构建live2d-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run inst:dev</span><br><span class="line">npm run build:prod</span><br></pre></td></tr></table></figure></div></div></div></li></ol><blockquote><p>yarn版本详细命令可通过查看<code>node_modules/live2d-widget/package.json</code>包得知：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;inst:dev&quot;:</span> <span class="string">&quot;npm install -g commitizen &amp;&amp; npm install -g conventional-changelog-cli &amp;&amp; npm install&quot;</span></span><br><span class="line"><span class="attr">&quot;build:prod&quot;:</span> <span class="string">&quot;./node_modules/.bin/webpack --env prod --progress --colors &amp;&amp; npm run build:module&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;build:module&quot;:</span> <span class="string">&quot;./node_modules/.bin/webpack --env prod --progress --colors --config webpack.config.common.js&quot;</span><span class="string">,</span></span><br></pre></td></tr></table></figure><h1 id="Github-Action自动构建">3 &nbsp&nbsp<a href="#Github-Action自动构建" class="headerlink" title="Github Action自动构建"></a>Github Action自动构建</h1><h2 id="以往编写actions测试的一些命令">3.1 &nbsp&nbsp<a href="#以往编写actions测试的一些命令" class="headerlink" title="以往编写actions测试的一些命令"></a>以往编写actions测试的一些命令</h2><p>Bash版本（ubuntu runner）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="subst">$(yarn global bin)</span>&quot;</span></span><br><span class="line">sed -i <span class="string">&quot;s/GITHUB_ACCESS_TOKEN/<span class="variable">$TOKEN_VALUE</span>/g&quot;</span> ./_config.yml <span class="comment"># g在s模式下会替换每个匹配字符串</span></span><br><span class="line">sed -i <span class="string">&quot;s/GITHUB_ACCESS_TOKEN/<span class="variable">$TOKEN_VALUE</span>/&quot;</span> ./_config.yml <span class="comment"># 这个只会替换每行的第一个字符串</span></span><br></pre></td></tr></table></figure><p>Powershell版本（windows runner）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">get-content</span> _config.yml) <span class="operator">-replace</span> <span class="string">&quot;GITHUB_ACCESS_TOKEN&quot;</span>, <span class="string">&quot;<span class="variable">$TOKEN_VALUE</span>&quot;</span> | <span class="built_in">Set-content</span> _config.yml</span><br><span class="line"><span class="variable">$env:Path</span> += <span class="variable">$env:localappdata</span>/yarn/bin</span><br><span class="line"><span class="variable">$env:Path</span> +=<span class="string">&quot;;C:\Users\runneradmin\AppData\Local\Yarn\bin&quot;</span></span><br><span class="line">stix_2_math_font_path=<span class="variable">$</span>(find / <span class="literal">-name</span> STIXTwoMath<span class="literal">-Regular</span>.otf <span class="number">2</span>&gt;/dev/null)</span><br><span class="line"><span class="built_in">cp</span> <span class="literal">-a</span> <span class="variable">$stix_2_math_font_path</span> ./LaTeXFonts</span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-P</span> ./LaTeXFonts https://github.com/stipub/stixfonts/blob/master/fonts/static_otf/STIXTwoMath<span class="literal">-Regular</span>.otf</span><br></pre></td></tr></table></figure><h1 id="hexo部署报错排查">4 &nbsp&nbsp<a href="#hexo部署报错排查" class="headerlink" title="hexo部署报错排查"></a>hexo部署报错排查</h1><h2 id="postinstall-npm-run-build-highlight-failed">4.1 &nbsp&nbsp<a href="#postinstall-npm-run-build-highlight-failed" class="headerlink" title="postinstall: npm run build:highlight failed"></a>postinstall: npm run build:highlight failed</h2><p>问题现象：在操作更新hexo-renderer-marked，在使用yarn执行构建时候，出现报错：<code>hexo-util: command failed. Command: npm run build:highlight</code>。经过尝试全局单独安装<code>hexo-util</code>排查发现，<code>&quot;npm&#39;is not recognized as an internal or external command.</code>。</p><p>问题原因：安装<code>node.js</code>，由于未勾选启用<code>npm</code>模块，导致系统安装的<code>node.js</code>环境缺失<code>npm</code>，但由于新依赖包直接在包构建命令里面新增并写死了<code>npm</code>命令，导致无法正常构建。</p><p>解决方法：重新运行<code>node.js</code>安装包，选择「change」选项，启用<code>npm</code>模块。然后重新运行<code>yarn</code>构建。</p><h2 id="Stylus-for-Node-v14-Accessing-non-existent-property-errors">4.2 &nbsp&nbsp<a href="#Stylus-for-Node-v14-Accessing-non-existent-property-errors" class="headerlink" title="Stylus for Node v14 &#39;Accessing non-existent property&#39; errors"></a>Stylus for Node v14 &#39;Accessing non-existent property&#39; errors</h2><p><del>注 ：Node版本选择v12，避免Stylus for Node v14 &#39;Accessing non-existent property&#39; errors。</del></p><h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] npm 淘宝镜像最新官方指引（2023.08.31）[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/653480874">https://zhuanlan.zhihu.com/p/653480874</a>.<br>[2] postinstall: npm run build:highlight failes leaving full hexo install unusable...[EB&#x2F;OL]. <a href="https://github.com/hexojs/hexo%E2%80%91util/issues/9">https://github.com/hexojs/hexo‑util/issues/9</a>.<br>[3] Step-by-step[EB&#x2F;OL]. <a href="https://yarnpkg.com/migration/guide">https://yarnpkg.com/migration/guide</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;开发环境配置&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#开发环境配置&quot; class=&quot;headerlink&quot; title=&quot;开发环境配置&quot;&gt;&lt;/a&gt;开发环境配置&lt;/h1&gt;&lt;h2 id=&quot;安装Node-js和启用Yarn&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="hexo" scheme="https://mister-kin.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://mister-kin.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Qt6 C++开发指南：第二章「GUI程序设计基踹」习题答案</title>
    <link href="https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap2/"/>
    <id>https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap2/</id>
    <published>2023-10-14T19:46:15.000Z</published>
    <updated>2024-03-14T12:07:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二章：GUI程序设计基础">1 &nbsp&nbsp<a href="#第二章：GUI程序设计基础" class="headerlink" title="第二章：GUI程序设计基础"></a>第二章：GUI程序设计基础</h1><p>项目目录文件结构：</p><ul><li>CMakeLists.txt：cmake构建系统的项目配置文件，存储了各种项目设置</li><li>main.cpp：主程序入口文件，实现main函数</li><li>widget.ui：使用XML格式描述元件及布局的界面文件</li><li>widget.h：窗口类定义头文件，用到了.ui文件（Generate form）</li><li>widget.cpp：是实现文件</li><li>res.qrc：资源文件</li></ul><p>指针的命名空间换名。Ui_Widget没有父类，不是窗口类。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> Ui&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Widget</span>: <span class="keyword">public</span> Ui Widget &#123;&#125;;</span><br><span class="line">&#125; <span class="comment">// namespace Ui</span></span><br></pre></td></tr></table></figure><p>Qt项目构建过程基本原理：Qt C++头文件经过MOC（Meta-object Compiler），窗口UI文件通过UIC，资源文件通过RCC转换成标准C++程序，之后通过标准C++编译器生成可执行文件。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;第二章：GUI程序设计基础&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#第二章：GUI程序设计基础&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="code-training" scheme="https://mister-kin.github.io/categories/code-training/"/>
    
    <category term="qt6-cpp-development-guide" scheme="https://mister-kin.github.io/categories/code-training/qt6-cpp-development-guide/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="qt" scheme="https://mister-kin.github.io/tags/qt/"/>
    
    <category term="第一章" scheme="https://mister-kin.github.io/tags/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    
    <category term="qt6" scheme="https://mister-kin.github.io/tags/qt6/"/>
    
  </entry>
  
  <entry>
    <title>QT6 C++开发指南：习题答案</title>
    <link href="https://mister-kin.github.io/code-training/qt6-cpp-development-guide/qt6-cpp-development-guide/"/>
    <id>https://mister-kin.github.io/code-training/qt6-cpp-development-guide/qt6-cpp-development-guide/</id>
    <published>2023-10-14T19:31:49.000Z</published>
    <updated>2024-03-14T12:07:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>习题代码和总结笔记主要参照视频教程<a href="https://www.bilibili.com/video/BV1km4y1k7CW/">《Qt6 C++开发指南》2023（上册，完整版）</a></em></p><p>练习代码文件的仓库链接：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/qt6_cpp_development_guide/">点击跳转</a></p><ul><li><a href="/code-training/qt6-cpp-development-guide/chap1/">第一章「认识Qt」习题答案</a></li><li><a href="/code-training/qt6-cpp-development-guide/chap2/">第二章「GUI程序设计基础」习题答案</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;em&gt;习题代码和总结笔记主要参照视频教程&lt;a href=&quot;https://www.bilibili.com/video/BV1km4y1k7CW/&quot;&gt;《Qt6 C++开发指南》2023（上册，完整版）&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;练习代码文件的仓库链接：&lt;a</summary>
        
      
    
    
    
    <category term="code-training" scheme="https://mister-kin.github.io/categories/code-training/"/>
    
    <category term="qt6-cpp-development-guide" scheme="https://mister-kin.github.io/categories/code-training/qt6-cpp-development-guide/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="qt" scheme="https://mister-kin.github.io/tags/qt/"/>
    
    <category term="C++" scheme="https://mister-kin.github.io/tags/C/"/>
    
    <category term="qt6" scheme="https://mister-kin.github.io/tags/qt6/"/>
    
    <category term="开发" scheme="https://mister-kin.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
    <category term="第一版" scheme="https://mister-kin.github.io/tags/%E7%AC%AC%E4%B8%80%E7%89%88/"/>
    
  </entry>
  
  <entry>
    <title>Qt6 C++开发指南：第一章「认识Qt」习题答案</title>
    <link href="https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap1/"/>
    <id>https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap1/</id>
    <published>2023-10-14T19:21:37.000Z</published>
    <updated>2023-10-15T18:31:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章：认识Qt">1 &nbsp&nbsp<a href="#第一章：认识Qt" class="headerlink" title="第一章：认识Qt"></a>第一章：认识Qt</h1><h2 id="Qt简介">1.1 &nbsp&nbsp<a href="#Qt简介" class="headerlink" title="Qt简介"></a>Qt简介</h2><ul><li>跨平台应用程序开发框架</li><li>首次发布于1995年5月</li><li>qt官网：<a href="http://www.qt.io/">www.qt.io</a></li></ul><h3 id="跨平台开发能力">1.1.1 &nbsp&nbsp<a href="#跨平台开发能力" class="headerlink" title="跨平台开发能力"></a>跨平台开发能力</h3><table><thead><tr><th align="center">目标设备</th><th align="center">目标平台</th><th align="center">主机平台</th></tr></thead><tbody><tr><td align="center"></td><td align="center">桌面Linux</td><td align="center">桌面Linux</td></tr><tr><td align="center">计算机</td><td align="center">macOS</td><td align="center">macOS</td></tr><tr><td align="center"></td><td align="center">Windows</td><td align="center">Windows</td></tr><tr><td align="center"></td><td align="center">Android</td><td align="center">桌面Linux、 macOS、Windows</td></tr><tr><td align="center">移动设备</td><td align="center">iOS</td><td align="center">macOS</td></tr><tr><td align="center"></td><td align="center">手机Windows</td><td align="center">Windows</td></tr><tr><td align="center"></td><td align="center">嵌入式Linux</td><td align="center">桌面Linux</td></tr><tr><td align="center">嵌入式设备</td><td align="center">QNX</td><td align="center">桌面Linux、 Windows</td></tr><tr><td align="center"></td><td align="center">VxWorks</td><td align="center">桌面Linux、 Windows</td></tr><tr><td align="center"></td><td align="center">嵌入式Windows</td><td align="center">Windows</td></tr><tr><td align="center">单片机</td><td align="center">FreeRTOS或无操作系统</td><td align="center">Windows、 桌面Linux</td></tr></tbody></table><p>Qt 源代码编译后生成目标平台的原生二进制代码，不像Java那样需要虚拟机，运行效率更高。</p><h3 id="Qt许可的类型">1.1.2 &nbsp&nbsp<a href="#Qt许可的类型" class="headerlink" title="Qt许可的类型"></a>Qt许可的类型</h3><p>Qt 的许可类型</p><ul><li>商业许可：按年付费。模块更多，开发者可以不公开自己的源码。</li><li>开源许可：<ul><li>GPLv2 &#x2F; GPLv3 许可：使用了 GLP 许可的 Qt 代码允许销售，但必须开源。 GPLv3还要求公开相关硬件信息。</li><li>LGPLv3 许可：与 GPL 类似，但更宽松。若只是链接或调用 GPL 许可协议的 Qt 代码，可以不开源。</li></ul></li></ul><h3 id="安装包">1.1.3 &nbsp&nbsp<a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><p>Qt 安装包：根据目标设备不同，提供了不同的安装包。</p><h3 id="Qt支持的开发语言">1.1.4 &nbsp&nbsp<a href="#Qt支持的开发语言" class="headerlink" title="Qt支持的开发语言"></a>Qt支持的开发语言</h3><ol><li>C++ 和 QML<ul><li>Qt 对标准C++语言进行了扩展，引入了信号与槽等机制。</li><li>QML （ Qt Meta Language） 是一个用来描述应用程序界面的声明式脚本语言。</li><li>C++和QML可以混合使用。</li></ul></li><li>Python<ul><li>Qt C++可以被转换Python绑定，使用 Python 调用 Qt 类库进行GUI程序开发。</li><li>常用的 Qt 类库 Python 绑定有： PyQt （GPLv3 许可）和 PySide （LGPLv3 许可）</li></ul></li></ol><h3 id="Qt6新特性">1.1.5 &nbsp&nbsp<a href="#Qt6新特性" class="headerlink" title="Qt6新特性"></a>Qt6新特性</h3><p>2020 年 12 月正式发布了 Qt6.0 ，引入的主要新特性包括：</p><ul><li>支持 C++ 17 标准。</li><li>Qt 核心库的改动：新的属性和绑定系统；全面支持Unicode 字符串；修改了 QList 的实现方式，将 QVector 类和 QList 类统一为 QList 类； QMetaType 和 QVariant 几乎被重写。</li><li>新的图形架构： Qt5 中 3D 渲染依赖 0penGL。Qt6 中引入了新的技术 RHI （rendering hardware interface），它是一个抽象层，使得 Qt 可以使用平台本地化的 3D 图形 API（Linux：Vulkan 、Windows：Direct 3D、macOS：Metal）。</li><li>CMake 构建系统： Qt6 仍然支持 qmake，但建议使用 CMake。</li><li>其他（多媒体、网络、 Qt Quick 3D 等模块的改进）。</li></ul><h2 id="Qt的安装">1.2 &nbsp&nbsp<a href="#Qt的安装" class="headerlink" title="Qt的安装"></a>Qt的安装</h2><div class="note info no-icon"><p>个人推荐：手动选择组件编译安装Qt。详见<a href="/code/qt/#Qt%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91">Qt源码编译</a>。</p></div><p>自Qt5.1.5起，Qt官方只提供在线安装包。</p><p>官方下载链接：<a href="https://download.qt.io/official_releases/online_installers/">点击跳转</a>。<br>清华镜像下载链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/online_installers/">点击跳转</a></p><p>本人是从源码编译安装Qt，具体的在线安装步骤不再总结。</p><h2 id="编写一个Hello-World程序">1.3 &nbsp&nbsp<a href="#编写一个Hello-World程序" class="headerlink" title="编写一个Hello World程序"></a>编写一个Hello World程序</h2><p>Qt Creator 简介：</p><ul><li>Qt Creator 为应用程序开发人员提供了一个完整的跨平台、集成开发环境 (IDE) ，以便为桌面、嵌入式和移动设备平台（如 Android 和iOS）创建应用程序。</li><li>Qt Creator 提供了在整个应用程序开发生命周期所需的工具，从创建项目到将应用程序部署到目标平台。</li></ul><p>Qt Creator新建工程的一些总结：</p><ol><li>应用类型：<ul><li>Widgets：widget界面</li><li>Console：控制台程序</li><li>Quick：QML实现的界面</li></ul></li><li>base class基础类：<ul><li>QMainWindow：主窗口类，包括菜单栏、工具栏、状态栏</li><li>QWidget ：可以创建一个空白的窗口，是所有界面组件的基类</li><li>QDialog ：对话框类（比如创建工程弹出的窗口就是对话框类型，对话式窗口，比如下一步按钮继续执行）</li></ul></li><li>翻译文件：i18国际化语言</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;第一章：认识Qt&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#第一章：认识Qt&quot; class=&quot;headerlink&quot; title=&quot;第一章：认识Qt&quot;&gt;&lt;/a&gt;第一章：认识Qt&lt;/h1&gt;&lt;h2 id=&quot;Qt简介&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code-training" scheme="https://mister-kin.github.io/categories/code-training/"/>
    
    <category term="qt6-cpp-development-guide" scheme="https://mister-kin.github.io/categories/code-training/qt6-cpp-development-guide/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="qt" scheme="https://mister-kin.github.io/tags/qt/"/>
    
    <category term="第一章" scheme="https://mister-kin.github.io/tags/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    
    <category term="qt6" scheme="https://mister-kin.github.io/tags/qt6/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式总结笔记</title>
    <link href="https://mister-kin.github.io/code/regular-expressions/"/>
    <id>https://mister-kin.github.io/code/regular-expressions/</id>
    <published>2023-10-12T19:14:48.000Z</published>
    <updated>2023-10-12T19:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用的正则表达式">1 &nbsp&nbsp<a href="#常用的正则表达式" class="headerlink" title="常用的正则表达式"></a>常用的正则表达式</h1><h1 id="在编辑器中删除空行">2 &nbsp&nbsp<a href="#在编辑器中删除空行" class="headerlink" title="在编辑器中删除空行"></a>在编辑器中删除空行</h1><p>Ctrl+H键，输入<code>^(\s)*$\n</code>，替换为空即可。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;常用的正则表达式&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#常用的正则表达式&quot; class=&quot;headerlink&quot; title=&quot;常用的正则表达式&quot;&gt;&lt;/a&gt;常用的正则表达式&lt;/h1&gt;&lt;h1 id=&quot;在编辑器中删除空行&quot;&gt;2 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记" scheme="https://mister-kin.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="正则表达式" scheme="https://mister-kin.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="正则" scheme="https://mister-kin.github.io/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>C语言总结笔记</title>
    <link href="https://mister-kin.github.io/code/c/"/>
    <id>https://mister-kin.github.io/code/c/</id>
    <published>2023-10-12T19:10:03.000Z</published>
    <updated>2023-10-12T19:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="语言摘记">1 &nbsp&nbsp<a href="#语言摘记" class="headerlink" title="语言摘记"></a>语言摘记</h1><h2 id="结构体的定义和引用">1.1 &nbsp&nbsp<a href="#结构体的定义和引用" class="headerlink" title="结构体的定义和引用"></a>结构体的定义和引用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    <span class="type">float</span> value;</span><br><span class="line">&#125;adventure;</span><br><span class="line"><span class="comment">// 引用和访问结构体</span></span><br><span class="line">adventrue.value=<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体指针的定义和访问</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span> *<span class="title">book1</span></span></span><br><span class="line"><span class="class"><span class="title">book1</span>=</span>&amp;adventure</span><br><span class="line"><span class="comment">// 引用和访问结构体指针</span></span><br><span class="line">book1-&gt;value=<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h1 id="开发记录">2 &nbsp&nbsp<a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><h2 id="关于字节的一些记录">2.1 &nbsp&nbsp<a href="#关于字节的一些记录" class="headerlink" title="关于字节的一些记录"></a>关于字节的一些记录</h2><p>int在机器上占一个字长，而32位机器 一个字长就是4Byte，64位机器 一个字长就是8Byte。这里指的是在64位机器上的运行64位操作系统，计算的sizeof(int)。</p><p>这个说法不太正确，gcc编译64bit的程序，sizeof(int)输出为4，即4Byte，32bit。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;语言摘记&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#语言摘记&quot; class=&quot;headerlink&quot; title=&quot;语言摘记&quot;&gt;&lt;/a&gt;语言摘记&lt;/h1&gt;&lt;h2 id=&quot;结构体的定义和引用&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记" scheme="https://mister-kin.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="c" scheme="https://mister-kin.github.io/tags/c/"/>
    
    <category term="编程" scheme="https://mister-kin.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="语言" scheme="https://mister-kin.github.io/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>css总结笔记</title>
    <link href="https://mister-kin.github.io/code/css/"/>
    <id>https://mister-kin.github.io/code/css/</id>
    <published>2023-10-12T19:07:34.000Z</published>
    <updated>2024-03-31T20:12:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发记录">1 &nbsp&nbsp<a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><p>类名含有空格（浏览器F12检查元素）时，一般是包含多个类名，空格字符在类型中无效，实际上呈现出来的是分隔符，不是空格。CSS类名选择器一般选择第一个即可。</p><h2 id="伪类的content不能被选中">1.1 &nbsp&nbsp<a href="#伪类的content不能被选中" class="headerlink" title="伪类的content不能被选中"></a>伪类的content不能被选中</h2><p>伪类不是真正的DOM，无DOM相关的属性和方法。</p><p><code>::before</code>和<code>::after</code>伪类的说明：</p><ul><li>默认display: inline</li><li>必须设置content属性，否则一切都是无用功</li><li>默认user-select: none，就是::before和::after的内容无法被用户选中的</li></ul><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] CSS 魔法堂：一起玩透伪元素和 Content 属性[EB&#x2F;OL]. <a href="https://segmentfault.com/a/1190000016441049">https://segmentfault.com/a/1190000016441049</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;开发记录&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#开发记录&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记" scheme="https://mister-kin.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="css" scheme="https://mister-kin.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>PCB设计</title>
    <link href="https://mister-kin.github.io/cad/pcb/"/>
    <id>https://mister-kin.github.io/cad/pcb/</id>
    <published>2023-10-12T15:01:55.000Z</published>
    <updated>2024-03-09T03:37:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="嵌入式代码开发">1 &nbsp&nbsp<a href="#嵌入式代码开发" class="headerlink" title="嵌入式代码开发"></a>嵌入式代码开发</h1><h2 id="开发编译器">1.1 &nbsp&nbsp<a href="#开发编译器" class="headerlink" title="开发编译器"></a>开发编译器</h2><p>开源的sdcc编译器，一个优化的ansi-c交叉编译器。</p><h1 id="常见接口引脚定义">2 &nbsp&nbsp<a href="#常见接口引脚定义" class="headerlink" title="常见接口引脚定义"></a>常见接口引脚定义</h1><p>USB协议官网：<a href="https://www.usb.org/">https://www.usb.org/</a></p><p>USB接口种类：<a href="https://zhuanlan.zhihu.com/p/447595295">https://zhuanlan.zhihu.com/p/447595295</a></p><p>常见USB引脚定义：<a href="https://zhuanlan.zhihu.com/p/364748197">https://zhuanlan.zhihu.com/p/364748197</a></p><h2 id="Type-C接口">2.1 &nbsp&nbsp<a href="#Type-C接口" class="headerlink" title="Type-C接口"></a>Type-C接口</h2><p><a href="https://blog.csdn.net/qlexcel/article/details/117431413">https://blog.csdn.net/qlexcel/article/details/117431413</a></p><h2 id="mini-usb接口">2.2 &nbsp&nbsp<a href="#mini-usb接口" class="headerlink" title="mini usb接口"></a>mini usb接口</h2><p><a href="https://blog.csdn.net/eddy_liu/article/details/8316140">https://blog.csdn.net/eddy_liu/article/details/8316140</a></p><table><thead><tr><th>针脚</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>名称</td><td>VCC</td><td>D-</td><td>D+</td><td>id</td><td>GND</td></tr><tr><td>作用</td><td>+5V电压</td><td>数据线负极</td><td>数据线正极</td><td>OTG功能</td><td>接地</td></tr><tr><td>接线颜色</td><td>红色</td><td>白色</td><td>绿色</td><td>&#x2F;</td><td>黑色</td></tr></tbody></table><h2 id="充电DC圆孔">2.3 &nbsp&nbsp<a href="#充电DC圆孔" class="headerlink" title="充电DC圆孔"></a>充电DC圆孔</h2><p>无论是公口或者母口，一般都是内正外负，不仅是5.5大小的，4、3.5、2.5等等的。不过有些厂家是对着干的，比如当年卡西欧和雅马哈电子琴所配的电源。</p><div class="flex-column"><img data-src="/images/cad/dc_pin.webp">DC接口引脚定义</div><h1 id="华硕主板灯控开发">3 &nbsp&nbsp<a href="#华硕主板灯控开发" class="headerlink" title="华硕主板灯控开发"></a>华硕主板灯控开发</h1><ul><li><a href="https://github.com/ProgramAndPoem/AacHal">https://github.com/ProgramAndPoem/AacHal</a></li><li><a href="https://blog.csdn.net/weixin_42349978/article/details/112128924">https://blog.csdn.net/weixin_42349978/article/details/112128924</a></li></ul><h1 id="锂电池">4 &nbsp&nbsp<a href="#锂电池" class="headerlink" title="锂电池"></a>锂电池</h1><p>串并联符号：串联s，并联p。3s1p：三串一并，一并实际就是没有并联。比如1s1p就是单一电池。</p><p>串联增压，并联增容。</p><h1 id="FPC的断裂修复">5 &nbsp&nbsp<a href="#FPC的断裂修复" class="headerlink" title="FPC的断裂修复"></a>FPC的断裂修复</h1><p>刮表层，使用焊油连接金属触点。</p><h1 id="蓝牙耳机拆解">6 &nbsp&nbsp<a href="#蓝牙耳机拆解" class="headerlink" title="蓝牙耳机拆解"></a>蓝牙耳机拆解</h1><ul><li><a href="https://www.52audio.com/archives/107686.html">OPPO Enco Air2</a></li></ul><h1 id="参考文献">7 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;嵌入式代码开发&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#嵌入式代码开发&quot; class=&quot;headerlink&quot; title=&quot;嵌入式代码开发&quot;&gt;&lt;/a&gt;嵌入式代码开发&lt;/h1&gt;&lt;h2 id=&quot;开发编译器&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
    <category term="PCB" scheme="https://mister-kin.github.io/tags/PCB/"/>
    
    <category term="电路" scheme="https://mister-kin.github.io/tags/%E7%94%B5%E8%B7%AF/"/>
    
    <category term="设计" scheme="https://mister-kin.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>电路仿真设计</title>
    <link href="https://mister-kin.github.io/cad/simulation/"/>
    <id>https://mister-kin.github.io/cad/simulation/</id>
    <published>2023-10-12T15:01:29.000Z</published>
    <updated>2023-10-12T19:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Proteus仿真">1 &nbsp&nbsp<a href="#Proteus仿真" class="headerlink" title="Proteus仿真"></a>Proteus仿真</h1><h2 id="仿真时时间流动过慢">1.1 &nbsp&nbsp<a href="#仿真时时间流动过慢" class="headerlink" title="仿真时时间流动过慢"></a>仿真时时间流动过慢</h2><p>可能存在的原因：</p><ul><li>计算机性能不够，导致运行proteus仿真过慢</li><li>proteus内设置的晶振频率和keil源码编译时设置的晶振频率不同</li></ul><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] proteus 8 仿真时 时间流动过慢的解决方案[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_44176696/article/details/106875850">https://blog.csdn.net/weixin_44176696/article/details/106875850</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Proteus仿真&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#Proteus仿真&quot; class=&quot;headerlink&quot; title=&quot;Proteus仿真&quot;&gt;&lt;/a&gt;Proteus仿真&lt;/h1&gt;&lt;h2 id=&quot;仿真时时间流动过慢&quot;&gt;1.1</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
    <category term="电路" scheme="https://mister-kin.github.io/tags/%E7%94%B5%E8%B7%AF/"/>
    
    <category term="仿真" scheme="https://mister-kin.github.io/tags/%E4%BB%BF%E7%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>Perforce Helix Core版本控制</title>
    <link href="https://mister-kin.github.io/software/perforce/"/>
    <id>https://mister-kin.github.io/software/perforce/</id>
    <published>2023-10-12T14:41:58.000Z</published>
    <updated>2023-10-12T19:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介">1 &nbsp&nbsp<a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>git和svn适合管理文本类的代码文件，perforce更适合管理像游戏资产3D模型、psd图像文件等的大型文件。</p><h1 id="安装">2 &nbsp&nbsp<a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官网下载：<a href="https://www.perforce.com/products">点击跳转</a></p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟机总结</title>
    <link href="https://mister-kin.github.io/software/virtual-machine/"/>
    <id>https://mister-kin.github.io/software/virtual-machine/</id>
    <published>2023-09-26T06:48:05.000Z</published>
    <updated>2024-05-08T03:51:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VirtualBox">1 &nbsp&nbsp<a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h1><h2 id="VirtualBox-NAT网卡端口转发实现连接ssh">1.1 &nbsp&nbsp<a href="#VirtualBox-NAT网卡端口转发实现连接ssh" class="headerlink" title="VirtualBox NAT网卡端口转发实现连接ssh"></a>VirtualBox NAT网卡端口转发实现连接ssh</h2><p>打开vbox虚拟机的设置-&gt;网络-&gt;高级-&gt;端口转发-&gt;新建规则：名称ssh，协议TCP，主机IP127.0.0.1，主机端口9191，子系统IP留空不填，子系统端口22。</p><h2 id="VirtualBox安装ubuntu-18-04虚拟机打不开terminal终端">1.2 &nbsp&nbsp<a href="#VirtualBox安装ubuntu-18-04虚拟机打不开terminal终端" class="headerlink" title="VirtualBox安装ubuntu 18.04虚拟机打不开terminal终端"></a>VirtualBox安装ubuntu 18.04虚拟机打不开terminal终端</h2><p>故障情况：VirtualBox新安装ubuntu 18.04虚拟机无法打开Terminal，从应用列表中单击Terminal，左上角任务栏会出现Terminal，并且鼠标转圈，但是过一会左上角Terminal消失，就像闪退一样。</p><p>解决方法：CTRL + ALT + F3 进入命令行模式（需要返回桌面时CTRL + ALT + F1）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/default</span><br><span class="line">sudo nano locale</span><br><span class="line"><span class="comment"># 把文件中的 “en_US” 改成 “en_US.UTF-8”</span></span><br><span class="line">sudo locale-gen --purge</span><br><span class="line">reboot <span class="comment">#重启虚拟机</span></span><br></pre></td></tr></table></figure><h2 id="VirtualBox运行虚拟机系统卡顿-缓慢">1.3 &nbsp&nbsp<a href="#VirtualBox运行虚拟机系统卡顿-缓慢" class="headerlink" title="VirtualBox运行虚拟机系统卡顿&#x2F;缓慢"></a>VirtualBox运行虚拟机系统卡顿&#x2F;缓慢</h2><p>可以观察下是否VirtualBox虚拟机底下状态栏是否出现了一个绿色海龟的图标，那证明当前VirtualBox运行在软件虚拟化模式，这确实会是十分缓慢的。而硬件虚拟化模式图标应该是蓝色的V。</p><p>问题原因：其他虚拟化技术软件启动hyper-v或者虚拟机平台功能引起，比如<a href="/troubleshooting/windows-troubleshooting/#%E5%AE%89%E8%A3%85Docker-Desktop%E9%9C%80%E8%A6%81%E5%90%AF%E7%94%A8WSL2%E5%8A%9F%E8%83%BD">安装Docker Desktop开启wsl2功能</a>后导致VirtualBox运行缓慢。</p><p>解决方法：</p><ol><li>控制面板「程序和功能」中禁用Hyper-V和Windows hypervisor后重启系统（以下功能选项全部取消勾选）。如果仍然不行，cmd终端执行命令：<code>bcdedit /set hypervisorlaunchtype off</code>，执行完bcd命令后需要重启系统。<ul><li>Containers</li><li>Hyper-V</li><li>Virtual Machine Platform</li><li>Windows Hypervisor Platform</li><li>Windows Sandbox</li><li>Windows Subsystem for Linux（WSL2是基于hyper-V架构的，但不是hyper-V本身）</li></ul></li><li>移除并重装vbox增强工具包（VirtualBox Guest Additions）</li></ol><h2 id="VirtualBox无法删除备份">1.4 &nbsp&nbsp<a href="#VirtualBox无法删除备份" class="headerlink" title="VirtualBox无法删除备份"></a>VirtualBox无法删除备份</h2><p>故障情况：删除备份时报错提示hard disk xxxx has more than one child hard disk 2。</p><p>解决方式：打开虚拟介质管理器，定位到虚拟硬盘页面，找到对应的硬盘，双击展开可以查看有一个子项目是不存在，失效导致删除备份失败，删除即可。</p><h1 id="VMware">2 &nbsp&nbsp<a href="#VMware" class="headerlink" title="VMware"></a>VMware</h1><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] VirtualBox_Ubuntu22.04 Terminal 无法打开[EB&#x2F;OL]. <a href="https://www.cnblogs.com/lifuqiang/articles/17167367.html">https://www.cnblogs.com/lifuqiang/articles/17167367.html</a>.<br>[2] VirtualBox下SSH通过端口转发连接Linux方法[EB&#x2F;OL]. <a href="https://blog.csdn.net/chengqiuming/article/details/83239413">https://blog.csdn.net/chengqiuming/article/details/83239413</a>.<br>[3] [已解决] 为什么VBOX有些备份会删除失败？[EB&#x2F;OL]. <a href="https://bbs.kafan.cn/thread-939721-1-1.html">https://bbs.kafan.cn/thread-939721-1-1.html</a>.<br>[4] FIX: VirtualBox Running Very Slow in Windows 10&#x2F;11. (Solved)[EB&#x2F;OL]. <a href="https://www.wintips.org/fix-virtualbox-running-very-slow-in-windows-10-11/">https://www.wintips.org/fix-virtualbox-running-very-slow-in-windows-10-11/</a>.<br>[5] How to get VirtualBox 6.0 and WSL working at the same time [closed][EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/58031941/how%E2%80%91to%E2%80%91get%E2%80%91virtualbox%E2%80%916%E2%80%910%E2%80%91and%E2%80%91wsl%E2%80%91working%E2%80%91at%E2%80%91the%E2%80%91same%E2%80%91time">https://stackoverflow.com/questions/58031941/how‑to‑get‑virtualbox‑6‑0‑and‑wsl‑working‑at‑the‑same‑time</a>.<br>[6] WSL2 breaks VirtualBox 6.1[EB&#x2F;OL]. <a href="https://github.com/MicrosoftDocs/WSL/issues/798">https://github.com/MicrosoftDocs/WSL/issues/798</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;VirtualBox&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#VirtualBox&quot; class=&quot;headerlink&quot; title=&quot;VirtualBox&quot;&gt;&lt;/a&gt;VirtualBox&lt;/h1&gt;&lt;h2</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
  </entry>
  
  <entry>
    <title>服务器</title>
    <link href="https://mister-kin.github.io/software/server/"/>
    <id>https://mister-kin.github.io/software/server/</id>
    <published>2023-09-25T15:55:30.000Z</published>
    <updated>2023-10-02T07:41:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="云服务器">1 &nbsp&nbsp<a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h1><h2 id="取回过期未释放的阿里云服务器数据">1.1 &nbsp&nbsp<a href="#取回过期未释放的阿里云服务器数据" class="headerlink" title="取回过期未释放的阿里云服务器数据"></a>取回过期未释放的阿里云服务器数据</h2><p>取回方法：</p><ul><li>继续续费使用服务器</li><li>购买新的阿里云服务器或者转移到其他阿里云服务器</li><li>保存快照制作成镜像再上传到oss下载</li></ul><p>Linux云服务器可以通过制作镜像上传到oss下载。</p><ol><li>在轻量级应用服务器的管理页面创建一个快照。</li><li>创建自定义镜像：输入自定义的镜像描述和名称后点击确定。</li><li>创建好的镜像共享到ecs</li><li>阿里云控制台里进入ecs-&gt;选择镜像-&gt;选择共享镜像即可看见刚刚共享的轻量级服务器镜像。点击操作列上的复制镜像，填入信息后点击确定。</li><li>导出镜像：复制成功后就可以在自定义镜像列表看见镜像，选择操作列上的导出镜像，填入你的oss信息。oss创建过程大概就是开通oss服务再创建bucket，需注意创建bucket时地域需要和镜像所在地域一致。</li><li>下载镜像：在控制台进入oss-&gt;进入bucket列表，选择你刚刚导出镜像的bucket-&gt;进入文件管理页面即可看见导出的镜像，点击下载即可。这里会消耗oss流量，大约会花费几块钱费用。</li><li>本地虚拟机软件运行镜像。</li></ol><p>Windows云服务器：由于不支持导出Windows和来自镜像市场的镜像。因此无法导出上传到oss再下载。处理方法步骤是也和Linux云服务器一样，但在导出镜像步骤中，因为无法导出。可以选择操作列上的「创建实例」功能）——即按量付费购买一台esc。然后选按量付费，充值100块钱。快速备份好数据，再退订释放购买esc，等待退款（过程就看使用时长，越短时间花费越少，不到半个小时大概两三毛钱）。</p><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 取回过期未释放的阿里云服务器数据[EB&#x2F;OL]. <a href="https://www.lushihuan.com/archives/%E5%8F%96%E5%9B%9E%E8%BF%87%E6%9C%9F%E6%9C%AA%E9%87%8A%E6%94%BE%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE">https://www.lushihuan.com/archives/%E5%8F%96%E5%9B%9E%E8%BF%87%E6%9C%9F%E6%9C%AA%E9%87%8A%E6%94%BE%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE</a>.<br>[2] 取回阿里云过期未释放服务器数据 Windows 系统[EB&#x2F;OL]. <a href="https://www.bilibili.com/read/cv13853339/">https://www.bilibili.com/read/cv13853339/</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;云服务器&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#云服务器&quot; class=&quot;headerlink&quot; title=&quot;云服务器&quot;&gt;&lt;/a&gt;云服务器&lt;/h1&gt;&lt;h2 id=&quot;取回过期未释放的阿里云服务器数据&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
  </entry>
  
</feed>

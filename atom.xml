<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr. Kin&#39;s Blog</title>
  <icon>https://mister-kin.github.io/images_public/favicon/Logo.svg</icon>
  <subtitle>计算机知识分享/软件应用讲解</subtitle>
  <link href="https://mister-kin.github.io/atom.xml" rel="self"/>
  
  <link href="https://mister-kin.github.io/"/>
  <updated>2024-05-12T07:49:30.000Z</updated>
  <id>https://mister-kin.github.io/</id>
  
  <author>
    <name>Mr. Kin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>软件英文</title>
    <link href="https://mister-kin.github.io/english/software/"/>
    <id>https://mister-kin.github.io/english/software/</id>
    <published>2024-05-12T03:59:20.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CG术语">1 &nbsp&nbsp<a href="#CG术语" class="headerlink" title="CG术语"></a>CG术语</h1><ul><li>CG Computer Graphic 计算机图像</li><li>CGer 指使用计算机生成图像的用户</li><li>CGI Computer Graphic Image 计算机图像</li><li>DDC Digital Content Creation(Creating) 数字内容创作<ul><li>What is your favorite DCC tool?</li><li>What is the DCC tools you use?</li></ul></li><li>AOVs Arbitrary Output Variables 任意输出变量<ul><li>渲染分层：AO、渲染属性、灯光、速度、景深、法线、IDs、自定义的属性等（根据渲染和后期的实际需要）</li></ul></li></ul><h1 id="Blender-2-80-Fundamentals-Official-Video">2 &nbsp&nbsp<a href="#Blender-2-80-Fundamentals-Official-Video" class="headerlink" title="Blender 2.80 Fundamentals - Official Video"></a>Blender 2.80 Fundamentals - Official Video</h1><h2 id="第一集">2.1 &nbsp&nbsp<a href="#第一集" class="headerlink" title="第一集"></a>第一集</h2><ul><li>fantastic adj.出色的；极好的；很大的；怪诞的</li><li>be mostly known for sth. 以...而闻名；最出名的是...</li><li>modeling capabilities 建模能力</li><li>feature films 故事片</li><li>TV series 电视剧</li><li>a bunch of 一群；一束；一堆（许多）</li><li>as from... &#x2F;as of... 自...起（起始时间或日期）<ul><li>and as of recently 2d animation and real-time rendering（还有最近的2d动画和实时渲染）</li></ul></li><li>video series 视频系列</li><li>serve as 充当，担任<ul><li>serve as an encyclopedia of sorts for fundamentals of blender（作为一本blender各种基础知识的百科全书）</li></ul></li><li>veteran &#x2F;ˈvetərən&#x2F;　adj.老手，经验丰富的</li><li>centain adj.某事，某种，某人（不提及细节）<ul><li>I&#39;ll be going over cetain topics that should be helpful for both beginners and veteran blener users, especially with the recent update.（我将会仔细研究某些话题，应该会对新手和经验丰富的blender用户有所帮助，特别是在最近的更新下。）</li></ul></li></ul><h2 id="第二集">2.2 &nbsp&nbsp<a href="#第二集" class="headerlink" title="第二集"></a>第二集</h2><ul><li>intimidating adj.吓人的，令人胆怯的<ul><li>seem intimidating</li></ul></li><li>arguably adv.按理，可论证地</li><li>handy adj.易使用的；便利的 n.显示，显像（计算机屏幕）</li><li>gizmo n.小装置，小玩意儿（个人理解为控件widget）</li><li>axis n.轴，坐标轴，对称中心轴</li><li>respond to 响应，作出反应<ul><li>notice how it responds to our cursor floating above each axis（注意它是如何对鼠标浮动在每个坐标上面作出反应）</li></ul></li><li>indicator n.指针，指示器；指示信号，标志</li><li>perspective adj.透视的 n.视角，景观；透视法；态度；客观判断力</li><li>orthographic adj.正交的</li><li>snap v.移到某位置，打开，关上 exclamation 真巧（对于两件相同事物惊讶）</li><li>corresponding adj.符合的，相关的</li><li>achieve v.达到；完成<ul><li>achieve the same effect 达到相同效果</li><li>accomplish the same task</li></ul></li><li>cursor n.光标，游标（计算机屏幕）</li><li>pivot n.中心点，核心 v.使在枢轴上旋转</li><li>around adv. 围绕，环绕；周围，四周；出现；大约</li><li>particular adj.特指的；特别的</li><li>point n. 某地方，地点 v.指，指向<ul><li>point out 指出</li></ul></li><li>center&#x2F;centre v. 把...放在中央</li><li>frame v. 给...做框；给...镶边<ul><li>reframe your perspective to focus on the object or objects you have selected（重新构建视角以专注于选择的一个或多个物体）</li></ul></li><li>period n. 句点；周期；一段时间<ul><li>period key 句点键</li></ul></li><li>number pad&#x2F;numpad 数字键</li><li>self-explanatory adj.无须解释的；一目了然的</li><li>magnifying glass 放大镜</li><li>scroll n.卷轴 v.滚动<ul><li>scroll wheel 滑轮，滚轮</li></ul></li><li>plus n.加号；优势 adj.多，余；好的；零度以上 prep.加 conj.此外，况且</li><li>minus n.减号 adj.负的 prep.减去；零下，欠缺</li><li>bring you into the eyes of your camera 带你进入摄像机视角</li><li>eventually adv.最后，终于</li><li>alternatively adv.或者</li><li>go ahead 发生，进行；先走，走在前面<ul><li>I went ahead and setup up a scene here to maka it more obvious to you（在这里我提前设置好了一个场景，让你更容易理解）</li></ul></li><li>take sth. into account&#x2F;take account of sth. 考虑到...，顾及...</li><li>flatten v.变平，把...弄平</li><li>angle v.斜置，斜移</li><li>immensely adv. 极端地，非常，极大地</li><li>accurate adj. 准确的</li><li>in relation to (事物间)关系，关联（翻译常为「关于...」「在...方面」）<ul><li>say v. 比方说，假设</li><li>this is an unrealistic view but helps immensely with making models accurate especially in relation to say a 2d concept sketch（这不是一个真实视图，但对于制作精确模型有很大帮助，尤其是在2d概念草图方面）</li></ul></li></ul><h2 id="第三集">2.3 &nbsp&nbsp<a href="#第三集" class="headerlink" title="第三集"></a>第三集</h2><ul><li>flexible adj.灵活的，可变动的，柔韧的<ul><li>can be flexible enough to fit the workflow you need</li></ul></li><li>go over sth. 反复研究，仔细琢磨；仔细检查...</li><li>interpret v.领会；说明；口译；演绎（角色&#x2F;音乐）</li><li>interact v.相互作用，相互影响；交流，沟通，合作<ul><li>interact with sth. 与...互动</li></ul></li><li>let&#39;s go over some of the basics on how to interpret and interact with blender&#39;s UI. （让我们一起仔细研究一些关于如何领会及与blender UI交互的基础）</li><li>informative adj.提供有用信息的</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;CG术语&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#CG术语&quot; class=&quot;headerlink&quot; title=&quot;CG术语&quot;&gt;&lt;/a&gt;CG术语&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CG Computer Graphic 计算机图像&lt;/li&gt;
&lt;li&gt;CGer</summary>
        
      
    
    
    
    <category term="english" scheme="https://mister-kin.github.io/categories/english/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="英文" scheme="https://mister-kin.github.io/tags/%E8%8B%B1%E6%96%87/"/>
    
    <category term="软件" scheme="https://mister-kin.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>IELTS雅思词汇圣经：6分词汇</title>
    <link href="https://mister-kin.github.io/english/IELTS/score6/"/>
    <id>https://mister-kin.github.io/english/IELTS/score6/</id>
    <published>2024-05-12T03:59:10.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="list1"><a href="#list1" class="headerlink" title="list1"></a>list1</h1><ul><li>abstract adj.抽象的 n.摘要，概要<ul><li>thinking in abstract terms 抽象思维</li><li>同 theoretical 反 concrete</li></ul></li><li>abundance n.大量,充足<ul><li>an abundance of sth. 大量的……</li><li>同 sufficiency 反lack</li></ul></li><li>abuse v.滥用，妄用；虐待（尤指性）n.滥用[U,sing.]，虐待[U,pl.]<ul><li>abuse sb.&#x2F;sth. 虐待……&#x2F;滥用……</li><li>abuse of power 滥用职权</li><li>child abuse 儿童虐待</li><li>同 misapply, make ill use of; ill-treat</li></ul></li><li>baggage n.(AmE)行李<ul><li>同 luggage</li></ul></li><li>candidate n.候选人，申请人（竞选&#x2F;求职）<ul><li>candidate for sth. ……的候选人</li><li>同 applicant, seeker</li></ul></li><li>canteen n.食堂，餐厅</li><li>capable adj.有能力的，有才能的<ul><li>be capable of doing 有能力做……</li><li>同 able,competent 反 incapable</li></ul></li><li>capacity n.容量；能力<ul><li>a capacity of num+单位 有……的容量</li><li>同 ability</li></ul></li><li>capital n.资本，资金；首都；大写字母</li><li>data n.资料，数据</li><li>date n.日期，日子；年份 v.存在，追溯<ul><li>date back to medieval times 始于中世纪</li><li>date back hundreds of years 追溯到几百年前</li><li>date from the 17th century 自17世纪起</li></ul></li><li>economy n.经济</li><li>edition n.版本（出版）<ul><li>同 version</li></ul></li><li>facilitate v.促进，促使，使便利<ul><li>同 ease</li></ul></li><li>facilities n.设施，设备<ul><li>sporting facilities 运动设施</li></ul></li><li>gamble v.赌博（用钱）<ul><li>gamble sth away 赌掉xx</li><li>gamble on sth.&#x2F;on doing sth. 冒……的风险&#x2F;碰……的运气</li><li>同 bet, try one&#39;s luck</li></ul></li><li>gang n.一群，一伙（闹事青少年）</li><li>hairdresser n.理发师</li><li>identification n.身份证明<ul><li>同 recognition</li></ul></li><li>identify v.确认、证明<ul><li>identify sb.&#x2F;sth. 鉴别出……</li><li>identify sb. with sth. 把某人视为……</li><li>同 determine</li></ul></li><li>idiom n.习语，成语，惯用语</li><li>idle adj.闲散的，无工作的 v.无所事事；闲荡<ul><li>idle sb.&#x2F;sth. (暂时性)关闭工厂，使工人闲着</li><li>近 inactive,lazy 反 busy（adj.&#x2F;n.）</li><li>idle和busy&#x2F;load也常用于计算机</li></ul></li><li>jar n.广口瓶</li><li>jealous adj.嫉羡的，羡慕的<ul><li>be jealous of sb.&#x2F;sth. 妒忌……</li><li>近 envious</li></ul></li><li>labour n.劳动，劳力 v.努力做（困难的事）；干苦力活<ul><li>labour to do sth. 努力做……</li><li>近 work</li></ul></li><li>lack v.没有（某事物），缺乏，缺少，不足<ul><li>近 need（provide assistance in need 提供帮助）（need指缺乏，食物、钱、生活来源）</li></ul></li><li>magnify v.放大；夸张，夸大<ul><li>同 enlarge 反 minify</li></ul></li><li>naive adj.缺乏经验的，幼稚无知的；天真的<ul><li>同 innocent, simple</li></ul></li><li>overview n.(fml.)综览，概观，概述</li><li>pension n.养老金，抚恤金，退休金 v.发送养老金<ul><li>pension sb. off 准许&#x2F;强迫某人退休(并发送养老金)</li></ul></li><li>perceive v.理解，认为；意识到，注意到<ul><li>sb.&#x2F;sth. be perceived to be&#x2F;have sth.人们认为某人某物……（常用被动）</li><li>同 detect</li></ul></li><li>percent n.百分之…… adj.每一百中</li><li>percentage n.百分比；利润的分成，提成</li><li>responsible adj.有责任的，承担义务的，负责<ul><li>be responsible for doing&#x2F;sb.&#x2F;sth. 对……有责任</li><li>be responsible to sb.&#x2F;sth. （向上级）负责，承担责任</li><li>同 accountable</li></ul></li><li>restore v.回复（某种情况&#x2F;感受）<ul><li>restore sb.&#x2F;sth. to sth. 使……复原……</li><li>同 recover</li></ul></li><li>restrain v.制止，管制（武力）；约束，控制<ul><li>restrain yourself from doing&#x2F;sth. 约束自己不做……</li><li>同 inhibit</li></ul></li><li>setback n.挫折，阻碍</li><li>severe adj.严格的，苛刻的，纪律严明的；十分严重的；艰难的；过于简朴的<ul><li>be severe with sb. 对……严格</li></ul></li><li>shabby adj.因使用过久或管理不善而破旧；不公正的，不合理的</li><li>shallow adj.浅的；肤浅的，浅薄的<ul><li>同 superficial 反 deep</li></ul></li><li>yield v.出产（作物），产生（效益）；屈服，让步；放弃，缴出；变形，弯曲；给……让路 n.产量，产出，利润<ul><li>yield to sb.&#x2F;sth. 屈服于……（不情愿同意）</li><li>yield to the demands 不情愿同意要求</li><li>yield sb.&#x2F;sth. (up)(to sb) 放弃&#x2F;缴出……</li><li>yield up the gun 缴枪</li><li>yield to oncoming traffic 会车让行</li></ul></li><li>youngster n.(infml.)年轻人，少年，儿童<ul><li>同 juvenile</li></ul></li></ul><h1 id="list2"><a href="#list2" class="headerlink" title="list2"></a>list2</h1><ul><li>abandon v.离弃，舍弃<ul><li>同 desert,forsake 反reclaim</li></ul></li><li>abnormal adj.反常的，变态的<ul><li>反normal</li></ul></li><li>absorb v.吸收<ul><li>同give out</li></ul></li><li>bacteria n.(pl.)细菌<ul><li>sing. bacterium</li></ul></li><li>badminton n.羽毛球运动</li><li>cafeteria n.自助餐厅，自助食堂<ul><li>同 coffee shop, lunchroom</li></ul></li><li>calculate v.计算，推算<ul><li>同 compute, estimate</li></ul></li><li>calendar n.日历，挂历<ul><li>同 programme</li></ul></li><li>campus n.校园，校区（大学、学院的）</li><li>cancel v.取消，撤销<ul><li>同 drop, call off</li></ul></li><li>damage n.&#x2F;v.损失，损害，损毁<ul><li>同 ingury&#x2F;ingure</li></ul></li><li>damp n.不完全干燥的，潮湿的<ul><li>反 dry</li></ul></li><li>dash v.猛冲，突进<ul><li>同 rush</li></ul></li><li>ease n.容易，不费劲<ul><li>反 burden</li></ul></li><li>ecology n.生态关系，生态学</li><li>fabric n.织物，布料<ul><li>同 material</li></ul></li><li>fabulous adj.极好的，绝妙的<ul><li>同 wonderful</li></ul></li><li>gallery n.走廊，柱廊</li><li>habitat n.自然环境（动&#x2F;植物的），栖息地</li><li>ideal adj.理想的，完美的；最合适的 n.完美的人或事物<ul><li>同 flawless,perfect</li></ul></li><li>idealism n.理想主义者，唯心论</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;list1&quot;&gt;&lt;a href=&quot;#list1&quot; class=&quot;headerlink&quot; title=&quot;list1&quot;&gt;&lt;/a&gt;list1&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;abstract adj.抽象的 n.摘要，概要&lt;ul&gt;
&lt;li&gt;thinking in</summary>
        
      
    
    
    
    <category term="english" scheme="https://mister-kin.github.io/categories/english/"/>
    
    <category term="IELTS" scheme="https://mister-kin.github.io/categories/english/IELTS/"/>
    
    
    <category term="英文" scheme="https://mister-kin.github.io/tags/%E8%8B%B1%E6%96%87/"/>
    
    <category term="雅思" scheme="https://mister-kin.github.io/tags/%E9%9B%85%E6%80%9D/"/>
    
    <category term="IELTS" scheme="https://mister-kin.github.io/tags/IELTS/"/>
    
    <category term="词汇" scheme="https://mister-kin.github.io/tags/%E8%AF%8D%E6%B1%87/"/>
    
  </entry>
  
  <entry>
    <title>电力专业英文术语</title>
    <link href="https://mister-kin.github.io/english/electrical-pro/"/>
    <id>https://mister-kin.github.io/english/electrical-pro/</id>
    <published>2024-05-12T03:59:02.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="电路基础（Fundamentals-of-Electronic-Circuits）">1 &nbsp&nbsp<a href="#电路基础（Fundamentals-of-Electronic-Circuits）" class="headerlink" title="电路基础（Fundamentals of Electronic Circuits）"></a>电路基础（Fundamentals of Electronic Circuits）</h1><h2 id="电路原理（Circuit-Theory）">1.1 &nbsp&nbsp<a href="#电路原理（Circuit-Theory）" class="headerlink" title="电路原理（Circuit Theory）"></a>电路原理（Circuit Theory）</h2><ul><li>element n.成分，元件</li><li>interconnect vt.使互相连接</li><li>node n.节点</li><li>branch n.树枝，分枝，分部，支流，支脉 v.出现分岐</li><li>loop n.环，循环，线圈（绳），弯曲部分，回路，回线 vt.使成环，使成圈，以环相连 vi.打环，翻筋斗</li><li>topology n.拓扑，布局，拓扑学</li><li>configuration n.构造，结构，配置，外形</li><li>terminal n.终点站，终端，接线端</li><li>resistor n.[电]电阻器</li><li>independent n.独立自主者，无党派者 adj.独立自主的，不受约束的</li><li>series n.连续，系列，级数，串联</li><li>parallel adj.平行的，相同的，类似的，并联的 n.平行线，平行面，相似物 v.相应，平行</li><li>impedance n.[电&#x2F;物]阻抗，[物]全电阻</li><li>theorem n.定理，法则（数）</li></ul><h2 id="模电和数电（Analog-and-Digital-Circuits）">1.2 &nbsp&nbsp<a href="#模电和数电（Analog-and-Digital-Circuits）" class="headerlink" title="模电和数电（Analog and Digital Circuits）"></a>模电和数电（Analog and Digital Circuits）</h2><ul><li>analog n.(AmE)类似物；模拟 adj.(AmE)模拟的，指针式的<ul><li>analogue n.&#x2F;adj.(BrE)同上</li></ul></li><li>digital n.数字，数字式 adj.数字的，数位的</li><li>thermometer n.温度计，体温计</li><li>Fahrenheit n.华氏温度计 adj.华氏温度计的</li><li>drum n.鼓，鼓声，鼓形圆筒 vt.打鼓奏 vi.击鼓，做鼓声</li><li>discrete adj.不连续的，离散的</li><li>original adj.最初的，原始的，独创的，新颖的 n.原物，原作</li><li>remote adj.遥远的，偏僻的，细微的</li><li>bulb n.鳞茎，球形物</li><li>Morse code 莫尔斯电码</li><li>pulse n.脉搏，脉冲</li><li>buzzer n.蜂鸣器，信号手，嗡嗡作声的东西</li><li>manipulate vt.(熟练地)操作，使用（机器），操纵（人或市场、市场），利用，应付</li><li>destination n.目的地，[计]目的文件，目的单元格</li><li>humidity n.湿气，潮湿，湿度</li><li>comparator n.比较仪</li><li>trigger vt.引发，引起，触发 vi.转义，换车 n.扳机</li><li>sequence n.次序，顺序，序列</li><li>parallel n.平行的，相同的，类似的，并联的 n.平行线，平行面，相似物 v.相应，平行</li><li>serial adj.连续的，串行的，顺次</li><li>decoder n.解码器</li><li>reassemble vt.重新召集 vi.重新集合</li></ul><h2 id="三相电（Three-Phase-Circuits）">1.3 &nbsp&nbsp<a href="#三相电（Three-Phase-Circuits）" class="headerlink" title="三相电（Three-Phase Circuits）"></a>三相电（Three-Phase Circuits）</h2><ul><li>transformer n.变压器</li><li>single-phase 单相</li><li>pulsate vi.脉动</li><li>three-phase power 三相电源</li><li>three-phase circiut 三相电路</li><li>the parallelogram method 平行四边形法则</li><li>wye connection 星形连接</li><li>delta connection 三角形连接</li><li>phase voltage 相电压</li><li>line voltage 线电压</li><li>confuse vt.使混乱，使更难于理解，使困窘，使困惑 vi.使糊涂</li><li>voltmeter n.电压表</li><li>ammeter n.电流表</li><li>clamp-on ammeter 钳式安培表</li></ul><h1 id="电力电子（Power-Electronics）">2 &nbsp&nbsp<a href="#电力电子（Power-Electronics）" class="headerlink" title="电力电子（Power Electronics）"></a>电力电子（Power Electronics）</h1><ul><li>solid-state adj.固态的</li><li>computation n.计算，估计</li><li>integration n.结合，整合，一体化</li><li>dynamic adj.动态的，充满活力的，不断变化的 n.动态，动力学，活力</li><li>mercury-arc [医]汞弧<ul><li>Mercury n.水星</li></ul></li><li>valve n.阀，真空管，活栓 vt.装阀（于），以活门调节</li><li>semiconductor n.[物理]半导体</li><li>switching n.开关，转换，交换，配电 v.转换</li><li>diode n.二极管</li><li>inverter n.逆变器（反用换流器），变极器</li><li>thyristor n.半导体闸流管，硅可控整流器</li><li>inverter thyristor 晶体管逆变器，可控硅环流器，可控硅逆变器</li><li>transistor n.晶体管，晶体管收音机，半导体收音机</li><li>transmission n.播送，传送，信息，传动装置</li><li>substantial adj.结实的，牢固的，重大的 n.本质，重要材料</li><li>fluorescent lamp ballast 荧光灯镇流器</li><li>mercury n.水银，汞</li><li>therminoic adj.[物]热电子的，热离子的</li><li>HVDC transmission system 高压直流输电系统</li><li>induction motor 感应电动机</li><li>vacuum n.真空，空间 adj.真空的 vt.用真空吸尘器打扫</li><li>dissipate v.驱散，使（云&#x2F;雾&#x2F;疑虑）消散</li><li>rectifier n.纠正者，整顿者，整流器</li><li>triggered adj.触发的</li><li>thyratron n.[电]闸流管</li><li>ignitron n.引燃管，放电管</li><li>cycloconverter n.周波变换器，循环换流器，双向离子变频器</li><li>traic n.[电]三端双向可控硅开关元件</li><li>a scope of 一个范围</li><li>spectrum n.谱，光谱，范围，系列，幅度</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;电路基础（Fundamentals-of-Electronic-Circuits）&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#电路基础（Fundamentals-of-Electronic-Circuits）&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="english" scheme="https://mister-kin.github.io/categories/english/"/>
    
    
    <category term="英文" scheme="https://mister-kin.github.io/tags/%E8%8B%B1%E6%96%87/"/>
    
    <category term="术语" scheme="https://mister-kin.github.io/tags/%E6%9C%AF%E8%AF%AD/"/>
    
    <category term="电力" scheme="https://mister-kin.github.io/tags/%E7%94%B5%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>英文词汇日常总结</title>
    <link href="https://mister-kin.github.io/english/daily/"/>
    <id>https://mister-kin.github.io/english/daily/</id>
    <published>2024-05-12T03:57:27.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>anode &#x2F;ˈænəʊd&#x2F;　n.阳极，（电解池）正极</li><li>cathode &#x2F;ˈkæθəʊd&#x2F;　n.阴极，（电解池）负极<ul><li>同kathode</li></ul></li><li>recursive adj.递归的，循环</li><li>melancholy &#x2F;ˈmelənkəli&#x2F;　n.忧郁，伤悲 adj.（令人）悲哀的，沮丧的</li><li>melody n.旋律；曲调；（尤指）主旋律</li><li>remark n.注意 v.察觉</li><li>introspection n.内省；反省</li><li>one..., the other...（总数量两个）<ul><li>one..., another...（总数量两个以上，another在此处自身代指的事物就表明超过一个）</li></ul></li><li>sugar buns infml.(主要美国和加拿大) 感情用语，同sweatheart</li><li>get it 明白了一些之前不明白的事情</li><li>got it 明白了某件事情的表达（事情的传达）</li><li>get wasted 喝醉了，烂醉如泥的<ul><li>形容微醺：tipsy buzzed</li><li>形容大醉：hammered blasted get plastered shit-faced（语气较重，看场合用）</li></ul></li><li>make yourself useful 让对方别闲着，干点事情</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;anode &amp;#x2F;ˈænəʊd&amp;#x2F;　n.阳极，（电解池）正极&lt;/li&gt;
&lt;li&gt;cathode</summary>
        
      
    
    
    
    <category term="english" scheme="https://mister-kin.github.io/categories/english/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="英文" scheme="https://mister-kin.github.io/tags/%E8%8B%B1%E6%96%87/"/>
    
    <category term="日常" scheme="https://mister-kin.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>编程英文术语</title>
    <link href="https://mister-kin.github.io/english/code/"/>
    <id>https://mister-kin.github.io/english/code/</id>
    <published>2024-05-12T03:32:35.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>crud 增删改查（create&#x2F;retrieve&#x2F;update&#x2F;delete）</li><li>功能特性相关<ul><li>feature 特性，指事物有鲜明特征方面的属性，对应到产品或解决方案所具有的特征<ul><li>feature-&gt;what&#39;s the difference?</li></ul></li><li>function 功能，强调产品的目的和用途<ul><li>目前许多数字产品的特点也正好是其所包含的多种功能，传统产品中则较容易区分这二者。介绍一个全新开发的且无人认识的产品时，应该先介绍function。</li><li>以手机为例，手机的function是用来打电话，不同手机的feature在于系统或者硬件配置上的差别。</li><li>function-&gt;what&#39;s this?</li></ul></li></ul></li><li>密码相关<ul><li>passphrase: a string that is formed a memorable phrase, by selecting certain characters.<ul><li>比如: 密码是IAtEaBurger@2pm. I ate a burger at 2 pm.</li><li>方便人们记忆，也保证了密码的复杂度.</li></ul></li><li>password: a sequence of characters that the user knows.<ul><li>密码泛指人们所知道的一系列的由字符组成的. 比如普通的密码.</li></ul></li><li>passcode: a sequence of numbers.<ul><li>比如four-digit PIN.</li></ul></li></ul></li><li>改动&#x2F;重构相关<ul><li>这三个指改动，希望改动能够达到最好的效果（一般是在已存在的软件中发现一些问题时做出改动），但不保证其能改善任何东西。<ul><li>architecture 指软件项目规模很大<ul><li>rearchitecturing 大规模代码改动修复严重问题</li></ul></li><li>design 指软件架构，规模较小，通常用于指APIs和UI组件<ul><li>redesigning API改动和用户交互层的改动</li></ul></li><li>rewriting 通常也指小规模的改动<ul><li>例如rewrite一个函数，用更好的代码替换它</li></ul></li></ul></li><li>refactoring 更加具体，快速开发中，这些改动覆盖于单元测试refactoring不改动程序的行为（不破坏任何单元测试），但从维护的观点上看，改动的代码改善了软件。</li><li>refactoring用于改写还行，但不建议用rearchitecturing、redesigning、rewriting（red flags），可能User Ineterface用redesign算个例外。</li></ul></li><li>数据单位相关<ul><li>1 kB(kilobyte) &#x3D; 1000 bytes</li><li>1 KiB(kibibyte, kilo binary byte) &#x3D; 1024 bytes</li></ul></li><li>undifined behavior 未定义行为，编程语言标准中没有定义它，编译器爱怎么做都行，执行的结果就是不可预料的。</li><li>进制相关<ul><li>binary</li><li>octal &#x2F;ˈɒkt(ə)l&#x2F;　adj.八进制的</li><li>decimal adj. 十进制的</li><li>hexadecimal adj. 十六进制的</li></ul></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;crud 增删改查（create&amp;#x2F;retrieve&amp;#x2F;update&amp;#x2F;delete）&lt;/li&gt;
&lt;li&gt;功能特性相关&lt;ul&gt;
&lt;li&gt;feature</summary>
        
      
    
    
    
    <category term="english" scheme="https://mister-kin.github.io/categories/english/"/>
    
    
    <category term="编程" scheme="https://mister-kin.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="英文" scheme="https://mister-kin.github.io/tags/%E8%8B%B1%E6%96%87/"/>
    
    <category term="术语" scheme="https://mister-kin.github.io/tags/%E6%9C%AF%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>英文词典常用缩写</title>
    <link href="https://mister-kin.github.io/english/abbr/"/>
    <id>https://mister-kin.github.io/english/abbr/</id>
    <published>2024-05-11T19:38:46.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>abbr. abbreviations 缩写</li><li>v. verb 动词</li><li>vt. transitive verb 及物动词</li><li>vi. intransitive verb 不及物动词</li><li>n. noun 名词</li><li>adj. adjective 形容词</li><li>adv. adverb 副词</li><li>prep. preposition 介词</li><li>pron. pronoun 代词</li><li>conj. conjunction 连词</li><li>abbr. abbreviation 缩写</li><li>det. determiner 限定词</li><li>sing. singular 单数</li><li>pl. plural 复数</li><li>exclamation 感叹词</li><li>symb. symbol 符号</li><li>opp. opposite 反义词</li><li>syn. synonym 同义词</li><li>fig. figurative 比喻的</li><li>derog. derogatie 贬义的</li><li>fml. formal 用于正式文体</li><li>infml. informal 用于非正式文体</li><li>BrE 英国英语</li><li>AmE 美国英语</li><li>C countable 可数名词</li><li>U uncountable 不可数名词</li><li>sb. somebody 某人</li><li>sth. something 某事物</li><li>pt past tense 过去时</li><li>pp past participle 过去分词</li><li>[计] 计算机</li><li>[物] 物理</li><li>[电] 电路</li><li>[医] 医学</li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;abbr. abbreviations 缩写&lt;/li&gt;
&lt;li&gt;v. verb 动词&lt;/li&gt;
&lt;li&gt;vt. transitive verb 及物动词&lt;/li&gt;
&lt;li&gt;vi. intransitive verb 不及物动词&lt;/li&gt;
&lt;li&gt;n. noun</summary>
        
      
    
    
    
    <category term="english" scheme="https://mister-kin.github.io/categories/english/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="英文" scheme="https://mister-kin.github.io/tags/%E8%8B%B1%E6%96%87/"/>
    
    <category term="词典" scheme="https://mister-kin.github.io/tags/%E8%AF%8D%E5%85%B8/"/>
    
    <category term="缩写" scheme="https://mister-kin.github.io/tags/%E7%BC%A9%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>笔记本硬件基础</title>
    <link href="https://mister-kin.github.io/cad/laptop-fundamental/"/>
    <id>https://mister-kin.github.io/cad/laptop-fundamental/</id>
    <published>2024-05-11T19:15:43.000Z</published>
    <updated>2024-05-12T07:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本外型介绍">1 &nbsp&nbsp<a href="#基本外型介绍" class="headerlink" title="基本外型介绍"></a>基本外型介绍</h1><table><thead><tr><th align="center">外型</th><th align="center">A壳</th><th align="center">B壳</th><th align="center">C壳</th><th align="center">D壳</th></tr></thead><tbody><tr><td align="center">位置</td><td align="center">顶面的壳</td><td align="center">屏幕面的外框</td><td align="center">键盘面的壳</td><td align="center">底面的壳</td></tr></tbody></table><h1 id="部件介绍">2 &nbsp&nbsp<a href="#部件介绍" class="headerlink" title="部件介绍"></a>部件介绍</h1><h2 id="PCB（印刷电路板）">2.1 &nbsp&nbsp<a href="#PCB（印刷电路板）" class="headerlink" title="PCB（印刷电路板）"></a>PCB（印刷电路板）</h2><p>笔记本PCB集成度高，一般6层以上，比如6(较少)，8，10...，不像1或2层板，无法跑线。板层数越多，EMI性能越好，成本也越高。</p><p>PCBA是指PCB上装配按照设定规则指定元件的成品功能板。（元件：电阻，电容，芯片，接口...）</p><div class="note default no-icon"><p>注：PCB, Printed Circuit Board; PCBA, Printed Circuit Board Assembly; EMI, Electromagnetic Interference</p></div><h2 id="Chipset（芯片组）">2.2 &nbsp&nbsp<a href="#Chipset（芯片组）" class="headerlink" title="Chipset（芯片组）"></a>Chipset（芯片组）</h2><p>一般指南北桥。（目前北桥已逐渐淘汰）</p><p>常见厂商有：AMD，INTEL，NVDIA，VIA，SIS。</p><p>南桥：North Bridge Chipset，INTEL的为输出&#x2F;输入控制器中心（Input&#x2F;Output Controller Hub，ICH），NVIDIA的为MCP，ATI的称为IXP&#x2F;SB，AMD的为FCH。</p><p>北桥：North Bridge Chipset，INTEL的为GMCH，Graphics &amp; Memory controller hub，带G有集显，无G的无集显。</p><h2 id="CPU（中央处理器）">2.3 &nbsp&nbsp<a href="#CPU（中央处理器）" class="headerlink" title="CPU（中央处理器）"></a>CPU（中央处理器）</h2><p>常见厂商：AMD，INTEL。龙芯，VIA，IBM，Transmeta。</p><p>不同芯片组对应不同的Intel CPU座（针脚不同）</p><p>注：CPU, Center Processor Unit</p><h2 id="Battery（电池）">2.4 &nbsp&nbsp<a href="#Battery（电池）" class="headerlink" title="Battery（电池）"></a>Battery（电池）</h2><ul><li>组成：外壳+控制板+电芯。</li><li>类型：圆柱型、方型、聚合物</li><li>电芯：常见18650型锂离子电芯。单个电压3.7V，充电电压4.2V，电容量为2400mAH。三串两并：电压为3*3.7V，容量为2*2400mAH。</li></ul><h2 id="Adapter（适配器）">2.5 &nbsp&nbsp<a href="#Adapter（适配器）" class="headerlink" title="Adapter（适配器）"></a>Adapter（适配器）</h2><p>输入100~240V的AC（50&#x2F;60Hz），输出16~20V居多。（华硕EPC有9.5V和12V的输出）</p><h1 id="笔记本和台式机的区别">3 &nbsp&nbsp<a href="#笔记本和台式机的区别" class="headerlink" title="笔记本和台式机的区别"></a>笔记本和台式机的区别</h1><ul><li>笔记本自带显示系统（LCD&#x2F;LED，专用屏线接口，自带高压板，灯管）</li><li>笔记本电源统一只由一个电压转出，常见16~20。台式主板由ATX电源提供12V、5V、3.3V等电压。\这个是最大区别，笔记本的工作电压是由板子转换完成（16-20V主供电输入，经PWM电路降压处理，提供待机电压等工作电压），台式主板电源完成（多种方式，不只PWM）。</li><li>笔记本有充放电的电路，可用电池做替代电源。</li><li>为保证笔记本移动性和续航，CPU低功率、节能设计。</li><li>笔记本的保护电路多，过热保护，过电压保护。</li><li>笔记本内置鼠标设备，如指点杆，触摸板。</li><li>笔记本元件集成度高，MOS管多为8脚贴片。专用IC也多。（芯片功能作用原理类似，供电不是太复杂。）</li><li>笔记本6-8层板，夹层中也有信号线。台式主板4层，一般只在正反面有信号线。</li><li>笔记本引入EC（多功能芯片）概念，类似台式主板的IO，但功能更多，因为处理键盘的各种信号（亮度调节，声音调节等快捷键）。部分EC里会带有程序，其脚位功能由程序决定。</li><li>笔记本的时序概念很重要，电压和功能的实现，都由时序控制。环环相扣，前面条件未完成，后面动作就不会执行。</li><li>笔记本维修对电路图依赖很强，需要电路图分析陌生元件，且需要点位图对照。无这些的话，只能维修一些通病。（信号复杂，板子小，整合度高）</li></ul><h1 id="笔记本板号">4 &nbsp&nbsp<a href="#笔记本板号" class="headerlink" title="笔记本板号"></a>笔记本板号</h1><p>板号：板子型号。即工程代号，Project Code</p><p>笔记本大规模的代工厂：广达（quanta），仁宝（compal），纬创（wistron），英业达（inventec），和硕联合（pegatron）。<br>二线代工厂：神达（mitac），蓝天（clevo），大众（fic），微星（msi），精英（ecs）</p><p>OEM代工：品牌商设计，代工厂生产。如苹果，联想（thinkpad）。成本高<br>ODM代工：设计和生产都是代工厂。</p><p>广达：DAO+板号+mb，一般为3个字，如ch3，zq5<br>仁宝：la-xxxxp<br>纬创：板号+mb（有白框）<br>华硕（asus）： 板号+main board（没有位置号，PCB丝印层无标记，若无点位图无法分析）<br>英业达：板号（很长）+mb，一般给hp做得多<br>微星：ms-板号<br>富士康：代工索尼</p><h1 id="主板板子元件">5 &nbsp&nbsp<a href="#主板板子元件" class="headerlink" title="主板板子元件"></a>主板板子元件</h1><p>CPU座，北桥，南桥，内存插槽，独立显卡，显存，SPI BIOS，pice，电池接口，适配器插头，时钟芯片，ec，LCD接口，硬盘接口，键盘接口，光驱接口，读卡器槽。</p><h1 id="笔记本主板架构">6 &nbsp&nbsp<a href="#笔记本主板架构" class="headerlink" title="笔记本主板架构"></a>笔记本主板架构</h1><p>修接口。供电维修看架构没用。</p><p>intel双桥架构：</p><ul><li>CPU管理北桥。</li><li>北桥管内存，独显，显示接口，与cpu的连接的总线---FSB前端总线。北桥与南桥的总线---DMI+CLINK</li><li>南桥管理周边设备，网卡，迷你卡，USB，摄像头，EC，光驱，硬盘等，南桥和EC连接的总线--LPC总线，7根重要信号：LAD0，LAD1，LAD2，LAD3，LFRAME#，LCLK，LRESET#。（诊断卡接9根，外加VCC、GND）</li><li>EC管理键盘，触控板，鼠标，部分挂BIOS（SPI ROM）</li></ul><p>intel单桥架构（无北桥）：</p><ul><li>CPU管理显卡，内存。CPU不管显示接口，通过PCH桥到显示接口（cpu里有集成显卡，通过FDI总线输出）</li><li>pch（管理原来南桥的功能）相比原南桥，增加了显示接口（VGA，LVDS，HDMI等）管理，可能也直接管理SPI rom（BIOS）</li><li>EC管理键盘，温控芯片，触摸板，挂BIOS</li></ul><p>AMD（ATI）双桥架构：</p><ul><li>CPU管内存</li><li>北桥管理所有PCIE，显示接口。网卡（1000M，走PCIE）</li><li>南桥管理USB，网卡（100M，走PCI。），硬盘光驱等</li></ul><p>AMD单桥架构：</p><ul><li>CPU管理内存，显卡，显示接口（这个是与intel的区别）</li><li>桥（fch）管理网卡，mini-pcie，硬盘光驱，USB，EC，声卡等</li><li>EC管键盘，鼠标</li></ul><p>intel和AMD单桥架构无时钟芯片，集成在桥。nvidia的双桥和amd相同。nvidia单桥：CPU管内存，桥管其他。</p><h1 id="名词解释">7 &nbsp&nbsp<a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><p>复位和PG都是测电压，时钟是测频率（无示波器时，可测电压，33MHz大概1.6V，100MHz大概0.4V）。</p><h2 id="供电和信号">7.1 &nbsp&nbsp<a href="#供电和信号" class="headerlink" title="供电和信号"></a>供电和信号</h2><p>供电一个可以输出电流的电压，电流较大。工作过程中，这个电压不能置高或拉低。供电被拉低，就是短路。一般，也不许置高。（动力来源）。</p><p>常见有19，12，5（往上大电压给接口），3.3（给芯片），2.5，1.8，1.5，1.25，1.05，1.2，1.1，0.9，0.75V。CPU供电0.7-1.5V</p><p>名称一般为：VCC，VDD，VCC3，VDDQ，VTT，VBAT，5VALW，+3VO等（有V字）。苹果的供电特殊，例如PP0V75_s3_mem</p><p>符号为一个圆圈，T型，三角形。表示固定的电压，不允许置高和拉低。信号电压（例如19V）与1.5V（供电）碰在一起会变为1.5V。</p><h2 id="接地">7.2 &nbsp&nbsp<a href="#接地" class="headerlink" title="接地"></a>接地</h2><p>接地是给供电构成回路。有接地，才会有电流流过设备。</p><p>名称一般为：VSS、GND。</p><p>符号：三角形（数字地）；倒三角形多横线（模拟地）。避免数字和模拟连在一起相互干扰。例子：数字地和模拟地通过一个0欧姆电阻PR170(值0_6)，实际测量是通路，但信号不一样。如果这个0欧姆电阻坏了，可能导致烧元件。压差相对值不一样。</p><h2 id="信号">7.3 &nbsp&nbsp<a href="#信号" class="headerlink" title="信号"></a>信号</h2><p>理论上，电压信号值考虑电压变化，电流很小。在工作过程中，可根据需要置高或者拉低。电路图中的信号的箭头不完全代表信号的流向，因为画图人员的随意性。<br>信号方向考经验判断：例如PWRBTN#给南桥的；slp_s3#南桥出来的；therm_stp#温控信号看情况：过温时，温控芯片吧温控信号拉低。</p><h2 id="高低电平">7.4 &nbsp&nbsp<a href="#高低电平" class="headerlink" title="高低电平"></a>高低电平</h2><p>数字逻辑电路中，高电平表示1，低电平表示0。一般规定：低电平为0-0.25V，高电平为3.5-5V。</p><p>主板中，1V以上为高电平，0.7以下为低电平。</p><p>结论：根据电路判断高低电平，非限定特定值。有些电路0.5就是高，有的电路1.1还是低。但0肯定是地，3.3肯定是高。</p><h2 id="脉冲和跳变">7.5 &nbsp&nbsp<a href="#脉冲和跳变" class="headerlink" title="脉冲和跳变"></a>脉冲和跳变</h2><p>上升沿，下降沿。</p><p>类型：高电平跳变为低电平；低电平跳变为高电平；高跳变为低再跳变为高。</p><h2 id="时钟信号">7.6 &nbsp&nbsp<a href="#时钟信号" class="headerlink" title="时钟信号"></a>时钟信号</h2><p>时钟信号CLK（Clock的简写）。为数字电路工作提供一个基准，使各个相连设备统一步调工作。单位Hz。南桥晶振323.768KHz。</p><p>主板上都有一个主时钟产生电路，给所有设备提供时钟，送出到cpu的频率为100MHz以上，送给PCI的是33MHz，送给PCIE的是100MHz，送给USB控制器（集成在南桥内部）的为48MHz。</p><p>相连的两个设备需要相同的时钟频率和电压才能通信，如内存和北桥。</p><p>时钟信号需要在主板正常通电后且时钟芯片工作正常才能测量到，用示波器和万用表（测电压?）测。100M的示波器一般测不了CPU的频率。</p><h2 id="复位信号">7.7 &nbsp&nbsp<a href="#复位信号" class="headerlink" title="复位信号"></a>复位信号</h2><p>复位信号RST（RESET的简写）。复位都是从高电平向低电平跳变再回到高电平，如PCI的复位是从3.3V向0V跳变再回到3.3V就是一个正常的复位跳变。</p><p>名称一般为：xxxRST#，如PCIRST#、CPURST#、IDERST#等。复位只能是瞬间低电平，主板正常工作时复位都是高电平。但不是恒高电平，不能直接接到供电上。如台式机reset键，复位开关弹不起来就一直为低电平，就不行。</p><p>平常说没复位，通常指没复位电压，即复位信号测量点电压为0V。维修一般都是把复位电压修出来。</p><p>所有设备的复位信号，如EC，北桥等，都是由南桥发出。开机的瞬间，便会对设备清零，使其重新工作。</p><h2 id="PG信号">7.8 &nbsp&nbsp<a href="#PG信号" class="headerlink" title="PG信号"></a>PG信号</h2><p>电源好信号PG（powergood的缩写），用来描述供电正常的信号。一般高电平有效。如cpu供电芯片，只有在正常发出cpu电压后，才会发出PG信号。</p><p>名称一般为：PG、PWRGD、PWROK、POK、PWRG、VTTPWRGD、CPUPWRGD等。</p><h2 id="开启信号">7.9 &nbsp&nbsp<a href="#开启信号" class="headerlink" title="开启信号"></a>开启信号</h2><p>开启信号。有的芯片叫EN（enable），使能，高电平时表示开启信号。有的芯片叫SHDN#（shutdown），#表示低电平有效。综合名称和#来看，意思是低电平时关闭芯片，高电平开启。所以一般shutdown信号一般要维持高电平。</p><p>注：信号带#时（低电平有效），一定要结合信号的英文全程去理解。有的带#，为低电平时主板可以正常工作。例如：VT_PWRGD_CK410#信号是cpu供电正常后发出低电平开启时钟信号。1999_SHDN#信号是低电平关闭MAX1999的控制信号，即为高电平时，主板才能正常工作。</p><h1 id="参考文献">8 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;基本外型介绍&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#基本外型介绍&quot; class=&quot;headerlink&quot; title=&quot;基本外型介绍&quot;&gt;&lt;/a&gt;基本外型介绍&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
    <category term="硬件" scheme="https://mister-kin.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="笔记本" scheme="https://mister-kin.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>维修工具</title>
    <link href="https://mister-kin.github.io/cad/repair-tools/"/>
    <id>https://mister-kin.github.io/cad/repair-tools/</id>
    <published>2024-05-11T17:15:23.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>可调电源：检测电流，电压。接入机器才会显示电流。可剪断电源正极的通用口线，自己做一个开关。（防止弄坏电源机械开关，有些机器待机电流也偏大，不宜频繁开关？）通用口可接特定的接口，可接不同厂商的机器。</li><li>烙铁</li><li>热风枪</li><li>万用表，打值卡，假负载，诊断卡</li><li>示波器：主要是供电和信号，不是频率</li><li>BGA返修台</li></ul><h1 id="参考文献">1 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;可调电源：检测电流，电压。接入机器才会显示电流。可剪断电源正极的通用口线，自己做一个开关。（防止弄坏电源机械开关，有些机器待机电流也偏大，不宜频繁开关？）通用口可接特定的接口，可接不同厂商的机器。&lt;/li&gt;
&lt;li&gt;烙铁&lt;/li&gt;
&lt;li&gt;热风枪&lt;/li&gt;
&lt;l</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="维修" scheme="https://mister-kin.github.io/tags/%E7%BB%B4%E4%BF%AE/"/>
    
    <category term="工具" scheme="https://mister-kin.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>计算机安全</title>
    <link href="https://mister-kin.github.io/code/computer-security/"/>
    <id>https://mister-kin.github.io/code/computer-security/</id>
    <published>2024-05-11T16:56:41.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络安全">1 &nbsp&nbsp<a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h1><h2 id="无线网络的加密形式">1.1 &nbsp&nbsp<a href="#无线网络的加密形式" class="headerlink" title="无线网络的加密形式"></a>无线网络的加密形式</h2><ul><li>wep：几乎都能破解，注入包一分钟即可</li><li>wpa&#x2F;wpa2、混合、pin：暴力破解</li></ul><h1 id="关于代理服务器和跳板攻击">2 &nbsp&nbsp<a href="#关于代理服务器和跳板攻击" class="headerlink" title="关于代理服务器和跳板攻击"></a>关于代理服务器和跳板攻击</h1><p>通过代理跳板，跳板越多，主机链越长（若有路由器或者交换机，可删除保存在flash内的登录日志，消除痕迹），可做到防止被攻击（隐藏IP），突破一些网址的限制访问（墙或者请求次数），隐藏身份进行攻击。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;网络安全&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#网络安全&quot; class=&quot;headerlink&quot; title=&quot;网络安全&quot;&gt;&lt;/a&gt;网络安全&lt;/h1&gt;&lt;h2 id=&quot;无线网络的加密形式&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="计算机安全" scheme="https://mister-kin.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8/"/>
    
    <category term="信息安全" scheme="https://mister-kin.github.io/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Powershell总结</title>
    <link href="https://mister-kin.github.io/code/powershell/"/>
    <id>https://mister-kin.github.io/code/powershell/</id>
    <published>2024-05-11T15:07:18.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ps脚本无法运行">1 &nbsp&nbsp<a href="#ps脚本无法运行" class="headerlink" title="ps脚本无法运行"></a>ps脚本无法运行</h1><p>出于安全考虑，默认的 Windows PowerShell 策略不允许执行脚本。</p><p>设置运行策略：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> unrestricted</span><br><span class="line"><span class="comment"># Restricted：默认设置，不允许运行任何脚本</span></span><br><span class="line"><span class="comment"># AllSigned：仅运行受信任脚本</span></span><br><span class="line"><span class="comment"># RemoteSigned：运行本地脚本，不管这些脚本是否受信任</span></span><br><span class="line"><span class="comment"># Unrestricted：允许运行所有脚本，甚至是不受信任的</span></span><br></pre></td></tr></table></figure><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;ps脚本无法运行&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#ps脚本无法运行&quot; class=&quot;headerlink&quot; title=&quot;ps脚本无法运行&quot;&gt;&lt;/a&gt;ps脚本无法运行&lt;/h1&gt;&lt;p&gt;出于安全考虑，默认的 Windows PowerShell</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="运维" scheme="https://mister-kin.github.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="powershell" scheme="https://mister-kin.github.io/tags/powershell/"/>
    
    <category term="脚本" scheme="https://mister-kin.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Audacity总结</title>
    <link href="https://mister-kin.github.io/software/audacity/"/>
    <id>https://mister-kin.github.io/software/audacity/</id>
    <published>2024-04-28T02:34:08.000Z</published>
    <updated>2024-04-28T04:42:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装openvino-plugins-ai-audacity找不到组件">1 &nbsp&nbsp<a href="#安装openvino-plugins-ai-audacity找不到组件" class="headerlink" title="安装openvino-plugins-ai-audacity找不到组件"></a>安装openvino-plugins-ai-audacity找不到组件</h1><p>运行openvino-plugins-ai-audacity安装程序后，默认是没有启用组件的。</p><p>解决方法：编辑-&gt;偏好设置-&gt;模块-&gt;mod-openvino-&gt;已启用</p><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Installed in Program Files&#x2F;Audacity but does not show up in Audacity[EB&#x2F;OL]. <a href="https://github.com/intel/openvino%E2%80%91plugins%E2%80%91ai%E2%80%91audacity/issues/132">https://github.com/intel/openvino‑plugins‑ai‑audacity/issues/132</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;安装openvino-plugins-ai-audacity找不到组件&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#安装openvino-plugins-ai-audacity找不到组件&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
    <category term="audacity" scheme="https://mister-kin.github.io/tags/audacity/"/>
    
    <category term="音频" scheme="https://mister-kin.github.io/tags/%E9%9F%B3%E9%A2%91/"/>
    
    <category term="后期处理" scheme="https://mister-kin.github.io/tags/%E5%90%8E%E6%9C%9F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Stable Diffusion</title>
    <link href="https://mister-kin.github.io/software/stable-diffusion/"/>
    <id>https://mister-kin.github.io/software/stable-diffusion/</id>
    <published>2024-04-20T16:54:27.000Z</published>
    <updated>2024-04-20T19:27:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Stable-Diffusion-Webui局域网多人共享">1 &nbsp&nbsp<a href="#Stable-Diffusion-Webui局域网多人共享" class="headerlink" title="Stable Diffusion Webui局域网多人共享"></a>Stable Diffusion Webui局域网多人共享</h1><p>默认情况下，Stable Diffusion Webui实现的局域网共享，无法实现多人队列提交，并且SD模型和VAE模型是全局设置，一人改变会导致后台改变，而网页端显示的值并未变化更新。</p><p>队列提交&#x2F;多人共享使用的一些插件实现：</p><ul><li><a href="https://github.com/ArtVentureX/sd-webui-agent-scheduler">sd-webui-agent-scheduler</a></li><li><a href="https://github.com/wolverinn/stable-diffusion-multi-user">stable-diffusion-multi-user</a></li></ul><p>多人共享使用的一些问题讨论：</p><ul><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/11531">multiple users use it at the same time</a></li></ul><h1 id="Stable-Diffusion-Webui多卡算力">2 &nbsp&nbsp<a href="#Stable-Diffusion-Webui多卡算力" class="headerlink" title="Stable Diffusion Webui多卡算力"></a>Stable Diffusion Webui多卡算力</h1><p>当前Webui并未支持多卡同时加速计算，通过共享实例进程实现多人使用（队列提交）均衡多卡负载倒是可以实现。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Accelerate doesn&#39;t use multi GPU with automatic1111[EB&#x2F;OL]. <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/13942">https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/13942</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Stable-Diffusion-Webui局域网多人共享&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#Stable-Diffusion-Webui局域网多人共享&quot; class=&quot;headerlink&quot; title=&quot;Stable Diffusion</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="SD" scheme="https://mister-kin.github.io/tags/SD/"/>
    
    <category term="stable diffusion" scheme="https://mister-kin.github.io/tags/stable-diffusion/"/>
    
    <category term="stable diffusion webui" scheme="https://mister-kin.github.io/tags/stable-diffusion-webui/"/>
    
    <category term="AIGC" scheme="https://mister-kin.github.io/tags/AIGC/"/>
    
    <category term="AI" scheme="https://mister-kin.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>yolo目标检测框架总结</title>
    <link href="https://mister-kin.github.io/software/yolo/"/>
    <id>https://mister-kin.github.io/software/yolo/</id>
    <published>2024-03-09T21:12:01.000Z</published>
    <updated>2024-03-09T21:19:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实践项目">1 &nbsp&nbsp<a href="#实践项目" class="headerlink" title="实践项目"></a>实践项目</h1><h2 id="毛囊检测">1.1 &nbsp&nbsp<a href="#毛囊检测" class="headerlink" title="毛囊检测"></a>毛囊检测</h2><ul><li>数据集：<ul><li><a href="https://universe.roboflow.com/project-0iwdt/hair-tootr/dataset/3">hair Image Dataset</a></li><li><a href="https://drive.google.com/file/d/1rMw8OzgxuTOSqKD8EBPN_BYXW18q9d3H/view">FDU_HairFollicleDataset.zip</a></li></ul></li><li>论文资料<ul><li><a href="https://dl.acm.org/doi/abs/10.1007/978-3-031-44207-0_4">A New Dataset for Hair Follicle Recognition and Classification in Robot-Aided Hair Transplantation</a></li><li>上一篇论文镜像链接（附有数据集下载链接，已明写在上一小节）<a href="https://link.springer.com/chapter/10.1007/978-3-031-44207-0_4">A New Dataset for Hair Follicle Recognition and Classification in Robot-Aided Hair Transplantation</a></li></ul></li></ul><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;实践项目&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#实践项目&quot; class=&quot;headerlink&quot; title=&quot;实践项目&quot;&gt;&lt;/a&gt;实践项目&lt;/h1&gt;&lt;h2 id=&quot;毛囊检测&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#毛囊检测&quot;</summary>
        
      
    
    
    
    <category term="software" scheme="https://mister-kin.github.io/categories/software/"/>
    
    
  </entry>
  
  <entry>
    <title>闪存驱动器设计</title>
    <link href="https://mister-kin.github.io/cad/flash-disk/"/>
    <id>https://mister-kin.github.io/cad/flash-disk/</id>
    <published>2024-03-07T11:50:45.000Z</published>
    <updated>2024-03-09T03:37:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="颗粒芯片资料查询链接">1 &nbsp&nbsp<a href="#颗粒芯片资料查询链接" class="headerlink" title="颗粒芯片资料查询链接"></a>颗粒芯片资料查询链接</h1><ul><li><a href="https://www.flashinfo.top/">https://www.flashinfo.top/</a></li><li><a href="https://fm-us.xfjportal.com/">https://fm-us.xfjportal.com/</a></li></ul><h1 id="开卡工具链接">2 &nbsp&nbsp<a href="#开卡工具链接" class="headerlink" title="开卡工具链接"></a>开卡工具链接</h1><ul><li><a href="http://am.adianshi.com:6805/%E5%BC%80%E5%8D%A1%E8%BD%AF%E4%BB%B6/">http://am.adianshi.com:6805/%E5%BC%80%E5%8D%A1%E8%BD%AF%E4%BB%B6/</a></li><li><a href="https://www.ssdtool.cc/ma">https://www.ssdtool.cc/ma</a></li></ul><h1 id="关于开卡设定参数的帖子链接">3 &nbsp&nbsp<a href="#关于开卡设定参数的帖子链接" class="headerlink" title="关于开卡设定参数的帖子链接"></a>关于开卡设定参数的帖子链接</h1><ul><li><a href="https://www.mydigit.cn/thread-240834-1-1.html">[Toshiba] 东芝9DDK在sm2246xt上写入速度低的终极解决办法</a></li><li><a href="https://www.mydigit.cn/thread-153446-1-1.html">[慧荣] 发一个自己总结的SM3280、SM3281改参数的教程</a></li></ul><h1 id="IS903资料">4 &nbsp&nbsp<a href="#IS903资料" class="headerlink" title="IS903资料"></a>IS903资料</h1><ul><li><a href="https://www.cnblogs.com/DLHC-TECH/p/IS903_FLASH-DRIVE_D-P10.html">银灿IS903主控 + MT29F64G08CBAAA(NAND) 制作8GB闪存驱动器</a></li><li><a href="https://www.mydigit.cn/thread-336398-1-1.html">[银灿] 免费共享IS903测试架原理图+PCB资料，带04T跳线，电压跳线</a></li><li><a href="https://www.mydigit.cn/thread-219825-1-1.html">[银灿] ISD903-V6.0主控板上市，彻底解决了Win10系统下掉盘的问题</a></li><li><a href="https://github.com/prashant87/IS903">prashant87&#x2F;IS903</a></li></ul><h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;颗粒芯片资料查询链接&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#颗粒芯片资料查询链接&quot; class=&quot;headerlink&quot; title=&quot;颗粒芯片资料查询链接&quot;&gt;&lt;/a&gt;颗粒芯片资料查询链接&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a</summary>
        
      
    
    
    
    <category term="cad" scheme="https://mister-kin.github.io/categories/cad/"/>
    
    
  </entry>
  
  <entry>
    <title>路由排障总结</title>
    <link href="https://mister-kin.github.io/troubleshooting/router-troubleshooting/"/>
    <id>https://mister-kin.github.io/troubleshooting/router-troubleshooting/</id>
    <published>2024-03-06T18:04:53.000Z</published>
    <updated>2024-03-06T19:37:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="联通光猫">1 &nbsp&nbsp<a href="#联通光猫" class="headerlink" title="联通光猫"></a>联通光猫</h1><h2 id="烽火HG6142A获取超级管理员密码">1.1 &nbsp&nbsp<a href="#烽火HG6142A获取超级管理员密码" class="headerlink" title="烽火HG6142A获取超级管理员密码"></a>烽火HG6142A获取超级管理员密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取光猫的mac地址，获取地址删除-就是实际mac信息</span></span><br><span class="line">arp -a 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋能telnet，成功使能后显示Open telnet success!</span></span><br><span class="line">http://192.168.1.1/telnet?<span class="built_in">enable</span>=1&amp;key=ACC4A9338800</span><br><span class="line"><span class="comment"># 部分型号使能命令：http://192.168.1.1/cgi-bin/telnetenable.cgi?telnetenable=1&amp;key=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录telnet</span></span><br><span class="line">telnet 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录帐号</span></span><br><span class="line">admin/root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录密码：Fh@mac后六位</span></span><br><span class="line">Fh@338800</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果显示有路径就是成功登录了</span></span><br><span class="line">/var <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入工厂模式</span></span><br><span class="line">load_cli factory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示管理员密码命令，admin_pwd=字段就是超级密码</span></span><br><span class="line">show admin_pwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录光猫，注意192.168.1.1页面只能登录普通账户，user：p752hj44</span></span><br><span class="line">192.168.1.1/cu.html</span><br></pre></td></tr></table></figure><h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 烽火HG6142A 破解超级管理员密码 改桥接[EB&#x2F;OL]. <a href="http://blog.yunduanzhuji.com/archives/1317/">http://blog.yunduanzhuji.com/archives/1317/</a>.<br>[2] 烽火HG6142A 破解超级管理员密码 改桥接[EB&#x2F;OL]. <a href="https://www.right.com.cn/forum/thread-8252962-1-1.html">https://www.right.com.cn/forum/thread-8252962-1-1.html</a>.<br>[2] 移动光猫HG6142A1烽火改桥接[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/648892946">https://zhuanlan.zhihu.com/p/648892946</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;联通光猫&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#联通光猫&quot; class=&quot;headerlink&quot; title=&quot;联通光猫&quot;&gt;&lt;/a&gt;联通光猫&lt;/h1&gt;&lt;h2 id=&quot;烽火HG6142A获取超级管理员密码&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="troubleshooting" scheme="https://mister-kin.github.io/categories/troubleshooting/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo个人博客搭建踩坑记</title>
    <link href="https://mister-kin.github.io/code/hexo/"/>
    <id>https://mister-kin.github.io/code/hexo/</id>
    <published>2024-02-02T09:21:50.000Z</published>
    <updated>2024-05-11T17:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发环境配置">1 &nbsp&nbsp<a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h1><h2 id="安装Node-js和启用Yarn">1.1 &nbsp&nbsp<a href="#安装Node-js和启用Yarn" class="headerlink" title="安装Node.js和启用Yarn"></a>安装Node.js和启用Yarn</h2><p>下载链接：</p><ul><li><a href="https://nodejs.org/en/download">Node.js</a>：推荐LTS长期版，不推荐用最新版，可能很多npm并未能适配新版。</li><li><a href="https://github.com/yarnpkg/yarn/releases">Yarn（&lt;&#x3D;v1.22.19才有编译好的安装包）</a>：若要使用新版Yarn，则不需要下载离线包安装，通过Node.js的corepack启用即可。</li></ul><p>启用Yarn：</p><div class="tabs" id="enable_yarn"><ul class="nav-tabs"><li class="tab active"><a href="#enable_yarn-1">通过Corepack启用Yarn（>v1.22.19，要求Node.js>=16.10）</a></li><li class="tab"><a href="#enable_yarn-2">通过离线包启用Yarn（≦ v1.22.19）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="enable_yarn-1"><ol><li>管理员终端运行命令启用：<code>corepack enable</code>，执行成功之后yarn命令即可系统全局正常调用。</li><li>终端运行命令：<code>yarn global bin</code>，复制路径添加到用户的PATH环境变量中。（这一步一定需要手动添加路径，因为程序没有自动添加PATH变量）</li></ol></div><div class="tab-pane" id="enable_yarn-2"><p>下载安装Yarn离线包即可，程序会自动添加PATH环境变量（Yarn程序路径和Package二进制程序路径）。</p></div></div></div><h2 id="yarn和npm部分对应命令">1.2 &nbsp&nbsp<a href="#yarn和npm部分对应命令" class="headerlink" title="yarn和npm部分对应命令"></a>yarn和npm部分对应命令</h2><table><thead><tr><th align="center">yarn命令</th><th align="center">npm命令</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>yarn init</code></td><td align="center"><code>npm init</code></td><td align="center">初始化</td></tr><tr><td align="center"><code>yarn / yarn install</code></td><td align="center"><code>npm install</code></td><td align="center">安装包</td></tr><tr><td align="center"><code>yarn add [package]</code></td><td align="center"><code>npm install [package] --save</code></td><td align="center">安装包</td></tr><tr><td align="center"><code>yarn add global [package]</code></td><td align="center"><code>npm install -g [package] --save</code></td><td align="center">全局安装包</td></tr><tr><td align="center"><code>yarn remove</code></td><td align="center"><code>npm uninstall</code></td><td align="center">卸载包</td></tr><tr><td align="center"><code>yarn upgrade</code></td><td align="center"><code>npm update</code></td><td align="center">更新包</td></tr><tr><td align="center"><code>yarn global dir</code></td><td align="center"><code>npm config get prefix</code></td><td align="center">查看安装目录</td></tr><tr><td align="center"><code>yarn global bin</code></td><td align="center"></td><td align="center">查看安装bin目录</td></tr><tr><td align="center"><code>yarn cache dir</code></td><td align="center"></td><td align="center">查看缓存目录</td></tr><tr><td align="center"><code>yarn cache clear</code></td><td align="center"><code>npm cache clean</code></td><td align="center">清除缓存目录</td></tr></tbody></table><h2 id="版本和包更新">1.3 &nbsp&nbsp<a href="#版本和包更新" class="headerlink" title="版本和包更新"></a>版本和包更新</h2><blockquote><p>站点配置文件<code>_config.yml</code>和主题配置文件<code>_config.next.yml</code>的更新改动项，通过查看Github仓库代码是否存在更新改动。</p></blockquote><blockquote><p>Next主题直接可通过package版本号更新即可。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn outdated <span class="comment"># 检查已过时的包，并修改 package 中 dependencies 中相关版本号</span></span><br><span class="line">yarn global outdated <span class="comment"># 全局检查已过时的包（hexo-cli若已过时，可以先remove再add）</span></span><br><span class="line"><span class="built_in">rm</span> -rf node_modules <span class="comment"># 删除包路径</span></span><br><span class="line">yarn <span class="comment"># 重新为项目安装包，实际等于yarn install（根据package.json安装）</span></span><br></pre></td></tr></table></figure><h2 id="npm源设定">1.4 &nbsp&nbsp<a href="#npm源设定" class="headerlink" title="npm源设定"></a>npm源设定</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn config get registry  // 查看当前npm源</span><br><span class="line">yarn config delete registry // 重置为官方源</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com  // 设置npm镜像源（原淘宝镜像源）</span><br></pre></td></tr></table></figure><p>当前有效镜像链接：<code>npm config set registry https://registry.npmmirror.com</code><br><del>已失效镜像链接：<code>npm config set registry http://registry.npm.taobao.org</code></del></p><h2 id="安装hexo和hexo-cli">1.5 &nbsp&nbsp<a href="#安装hexo和hexo-cli" class="headerlink" title="安装hexo和hexo-cli"></a>安装hexo和hexo-cli</h2><p>在想要安装hexo的位置建立文件夹「hexo」，打开命令行终端，以此路径作为终端工作路径。然后执行下面命令（推荐全局安装）。</p><div class="tabs" id="install_hexo"><ul class="nav-tabs"><li class="tab active"><a href="#install_hexo-1">全局安装hexo-cli</a></li><li class="tab"><a href="#install_hexo-2">本地安装hexo-cli</a></li></ul><div class="tab-content"><div class="tab-pane active" id="install_hexo-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-cli <span class="comment"># 全局安装hexo-cli脚手架</span></span><br><span class="line">hexo init <span class="comment"># 初始化hexo，克隆hexo-starter和默认landscape主题仓库</span></span><br><span class="line">hexo s <span class="comment"># hexo server，启用本地服务器，见：http://localhost:4000/</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="install_hexo-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-cli</span><br><span class="line">node_modules/.bin/hexo.cmd init blog <span class="comment"># init需要空文件夹，所以另外用文件夹「blog」来初始化hexo</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">yarn add <span class="comment"># 一般hexo init之后都会自动安装相关依赖。若没有自动安装时，则需要执行该条命令以手动安装依赖。</span></span><br><span class="line">node_modules/.bin/hexo.cmd s</span><br></pre></td></tr></table></figure></div></div></div><h1 id="hexo配置">2 &nbsp&nbsp<a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h1><h2 id="config-yml">2.1 &nbsp&nbsp<a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>注：language根据主题设置，注意新版Next主题已经没有zh-Hans语言配置文件，设置中文简体请用zh-CN参数。<br>注：新版Next主题主仓库已从 iissnan 名下迁移至 theme-next 组织。<br>注：现阶段新版Next支持Font Awesome 5.13.0，而5.1.4旧版Next版本只支持Font Awesome 4.7.0</p><h2 id="live2d的修正处理">2.2 &nbsp&nbsp<a href="#live2d的修正处理" class="headerlink" title="live2d的修正处理"></a>live2d的修正处理</h2><p>参考链接：<a href="https://github.com/xiazeyu/live2d-widget.js/issues/62">&quot;idle&quot; 设置多个动作时每次加载只会执行其中一个动作，不会随机到别的动作</a></p><p>关于适配自动构建的两个解决方法：</p><ul><li>Github Action自动构建需要相应修改命令（比较繁琐，因此放弃）</li><li>fork源码修改重新编译发布npm包（需要注册npmjs，发布全局包也需审核；使用个人仓库链接作为npm使用即可）</li></ul><p>详细修改：</p><ol><li>cModel.js line 369（注释掉原来的，再添加以下代码）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">motions</span>[motionName] == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadMotion</span>(motionName, <span class="variable language_">this</span>.<span class="property">modelHomeDir</span> + motionName, <span class="keyword">function</span>(<span class="params">mtn</span>) &#123;</span><br><span class="line">        motion = mtn;</span><br><span class="line"></span><br><span class="line">        thisRef.<span class="title function_">setFadeInFadeOut</span>(name, no, priority, motion);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    motion = <span class="variable language_">this</span>.<span class="property">motions</span>[motionName];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    thisRef.<span class="title function_">setFadeInFadeOut</span>(name, no, priority, motion);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>cManager.js line 89（注释掉原来的，再添加以下代码）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">models</span>[i].<span class="title function_">startRandomMotion</span>(cDefine.<span class="property">MOTION_GROUP_FLICK_HEAD</span>,</span><br><span class="line">        cDefine.<span class="property">PRIORITY_NORMAL</span>);</span><br></pre></td></tr></table></figure></li><li>修改两个文件的代码后，在live2d-widget路径下执行构建命令：<code>npm run inst:dev</code>和<code>npm run build:prod</code><div class="tabs" id="修正并构建live2d"><ul class="nav-tabs"><li class="tab active"><a href="#修正并构建live2d-1">yarn命令版本</a></li><li class="tab"><a href="#修正并构建live2d-2">npm命令版本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="修正并构建live2d-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn global add commitizen &amp;&amp; yarn global add conventional-changelog-cli &amp;&amp; yarn</span><br><span class="line">./node_modules/.bin/webpack --<span class="built_in">env</span> prod --progress --colors &amp;&amp; ./node_modules/.bin/webpack --<span class="built_in">env</span> prod --progress --colors --config webpack.config.common.js</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="修正并构建live2d-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run inst:dev</span><br><span class="line">npm run build:prod</span><br></pre></td></tr></table></figure></div></div></div></li></ol><blockquote><p>yarn版本详细命令可通过查看<code>node_modules/live2d-widget/package.json</code>包得知：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;inst:dev&quot;:</span> <span class="string">&quot;npm install -g commitizen &amp;&amp; npm install -g conventional-changelog-cli &amp;&amp; npm install&quot;</span></span><br><span class="line"><span class="attr">&quot;build:prod&quot;:</span> <span class="string">&quot;./node_modules/.bin/webpack --env prod --progress --colors &amp;&amp; npm run build:module&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;build:module&quot;:</span> <span class="string">&quot;./node_modules/.bin/webpack --env prod --progress --colors --config webpack.config.common.js&quot;</span><span class="string">,</span></span><br></pre></td></tr></table></figure><h1 id="Github-Action自动构建">3 &nbsp&nbsp<a href="#Github-Action自动构建" class="headerlink" title="Github Action自动构建"></a>Github Action自动构建</h1><h2 id="以往编写actions测试的一些命令">3.1 &nbsp&nbsp<a href="#以往编写actions测试的一些命令" class="headerlink" title="以往编写actions测试的一些命令"></a>以往编写actions测试的一些命令</h2><p>Bash版本（ubuntu runner）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="subst">$(yarn global bin)</span>&quot;</span></span><br><span class="line">sed -i <span class="string">&quot;s/GITHUB_ACCESS_TOKEN/<span class="variable">$TOKEN_VALUE</span>/g&quot;</span> ./_config.yml <span class="comment"># g在s模式下会替换每个匹配字符串</span></span><br><span class="line">sed -i <span class="string">&quot;s/GITHUB_ACCESS_TOKEN/<span class="variable">$TOKEN_VALUE</span>/&quot;</span> ./_config.yml <span class="comment"># 这个只会替换每行的第一个字符串</span></span><br></pre></td></tr></table></figure><p>Powershell版本（windows runner）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">get-content</span> _config.yml) <span class="operator">-replace</span> <span class="string">&quot;GITHUB_ACCESS_TOKEN&quot;</span>, <span class="string">&quot;<span class="variable">$TOKEN_VALUE</span>&quot;</span> | <span class="built_in">Set-content</span> _config.yml</span><br><span class="line"><span class="variable">$env:Path</span> += <span class="variable">$env:localappdata</span>/yarn/bin</span><br><span class="line"><span class="variable">$env:Path</span> +=<span class="string">&quot;;C:\Users\runneradmin\AppData\Local\Yarn\bin&quot;</span></span><br><span class="line">stix_2_math_font_path=<span class="variable">$</span>(find / <span class="literal">-name</span> STIXTwoMath<span class="literal">-Regular</span>.otf <span class="number">2</span>&gt;/dev/null)</span><br><span class="line"><span class="built_in">cp</span> <span class="literal">-a</span> <span class="variable">$stix_2_math_font_path</span> ./LaTeXFonts</span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-P</span> ./LaTeXFonts https://github.com/stipub/stixfonts/blob/master/fonts/static_otf/STIXTwoMath<span class="literal">-Regular</span>.otf</span><br></pre></td></tr></table></figure><h1 id="hexo部署报错排查">4 &nbsp&nbsp<a href="#hexo部署报错排查" class="headerlink" title="hexo部署报错排查"></a>hexo部署报错排查</h1><h2 id="postinstall-npm-run-build-highlight-failed">4.1 &nbsp&nbsp<a href="#postinstall-npm-run-build-highlight-failed" class="headerlink" title="postinstall: npm run build:highlight failed"></a>postinstall: npm run build:highlight failed</h2><p>问题现象：在操作更新hexo-renderer-marked，在使用yarn执行构建时候，出现报错：<code>hexo-util: command failed. Command: npm run build:highlight</code>。经过尝试全局单独安装<code>hexo-util</code>排查发现，<code>&quot;npm&#39;is not recognized as an internal or external command.</code>。</p><p>问题原因：安装<code>node.js</code>，由于未勾选启用<code>npm</code>模块，导致系统安装的<code>node.js</code>环境缺失<code>npm</code>，但由于新依赖包直接在包构建命令里面新增并写死了<code>npm</code>命令，导致无法正常构建。</p><p>解决方法：重新运行<code>node.js</code>安装包，选择「change」选项，启用<code>npm</code>模块。然后重新运行<code>yarn</code>构建。</p><h2 id="Stylus-for-Node-v14-Accessing-non-existent-property-errors">4.2 &nbsp&nbsp<a href="#Stylus-for-Node-v14-Accessing-non-existent-property-errors" class="headerlink" title="Stylus for Node v14 &#39;Accessing non-existent property&#39; errors"></a>Stylus for Node v14 &#39;Accessing non-existent property&#39; errors</h2><p><del>注 ：Node版本选择v12，避免Stylus for Node v14 &#39;Accessing non-existent property&#39; errors。</del></p><h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] npm 淘宝镜像最新官方指引（2023.08.31）[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/653480874">https://zhuanlan.zhihu.com/p/653480874</a>.<br>[2] postinstall: npm run build:highlight failes leaving full hexo install unusable...[EB&#x2F;OL]. <a href="https://github.com/hexojs/hexo%E2%80%91util/issues/9">https://github.com/hexojs/hexo‑util/issues/9</a>.<br>[3] Step-by-step[EB&#x2F;OL]. <a href="https://yarnpkg.com/migration/guide">https://yarnpkg.com/migration/guide</a>.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;开发环境配置&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#开发环境配置&quot; class=&quot;headerlink&quot; title=&quot;开发环境配置&quot;&gt;&lt;/a&gt;开发环境配置&lt;/h1&gt;&lt;h2 id=&quot;安装Node-js和启用Yarn&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="hexo" scheme="https://mister-kin.github.io/tags/hexo/"/>
    
    <category term="blog" scheme="https://mister-kin.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Qt6 C++开发指南：第二章「GUI程序设计基踹」习题答案</title>
    <link href="https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap2/"/>
    <id>https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap2/</id>
    <published>2023-10-14T19:46:15.000Z</published>
    <updated>2024-03-14T12:07:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二章：GUI程序设计基础">1 &nbsp&nbsp<a href="#第二章：GUI程序设计基础" class="headerlink" title="第二章：GUI程序设计基础"></a>第二章：GUI程序设计基础</h1><p>项目目录文件结构：</p><ul><li>CMakeLists.txt：cmake构建系统的项目配置文件，存储了各种项目设置</li><li>main.cpp：主程序入口文件，实现main函数</li><li>widget.ui：使用XML格式描述元件及布局的界面文件</li><li>widget.h：窗口类定义头文件，用到了.ui文件（Generate form）</li><li>widget.cpp：是实现文件</li><li>res.qrc：资源文件</li></ul><p>指针的命名空间换名。Ui_Widget没有父类，不是窗口类。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> Ui&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Widget</span>: <span class="keyword">public</span> Ui Widget &#123;&#125;;</span><br><span class="line">&#125; <span class="comment">// namespace Ui</span></span><br></pre></td></tr></table></figure><p>Qt项目构建过程基本原理：Qt C++头文件经过MOC（Meta-object Compiler），窗口UI文件通过UIC，资源文件通过RCC转换成标准C++程序，之后通过标准C++编译器生成可执行文件。</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;第二章：GUI程序设计基础&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#第二章：GUI程序设计基础&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="code-training" scheme="https://mister-kin.github.io/categories/code-training/"/>
    
    <category term="qt6-cpp-development-guide" scheme="https://mister-kin.github.io/categories/code-training/qt6-cpp-development-guide/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="qt" scheme="https://mister-kin.github.io/tags/qt/"/>
    
    <category term="第一章" scheme="https://mister-kin.github.io/tags/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    
    <category term="qt6" scheme="https://mister-kin.github.io/tags/qt6/"/>
    
  </entry>
  
  <entry>
    <title>QT6 C++开发指南：习题答案</title>
    <link href="https://mister-kin.github.io/code-training/qt6-cpp-development-guide/qt6-cpp-development-guide/"/>
    <id>https://mister-kin.github.io/code-training/qt6-cpp-development-guide/qt6-cpp-development-guide/</id>
    <published>2023-10-14T19:31:49.000Z</published>
    <updated>2024-03-14T12:07:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>习题代码和总结笔记主要参照视频教程<a href="https://www.bilibili.com/video/BV1km4y1k7CW/">《Qt6 C++开发指南》2023（上册，完整版）</a></em></p><p>练习代码文件的仓库链接：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/qt6_cpp_development_guide/">点击跳转</a></p><ul><li><a href="/code-training/qt6-cpp-development-guide/chap1/">第一章「认识Qt」习题答案</a></li><li><a href="/code-training/qt6-cpp-development-guide/chap2/">第二章「GUI程序设计基础」习题答案</a></li></ul>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;em&gt;习题代码和总结笔记主要参照视频教程&lt;a href=&quot;https://www.bilibili.com/video/BV1km4y1k7CW/&quot;&gt;《Qt6 C++开发指南》2023（上册，完整版）&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;练习代码文件的仓库链接：&lt;a</summary>
        
      
    
    
    
    <category term="code-training" scheme="https://mister-kin.github.io/categories/code-training/"/>
    
    <category term="qt6-cpp-development-guide" scheme="https://mister-kin.github.io/categories/code-training/qt6-cpp-development-guide/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="qt" scheme="https://mister-kin.github.io/tags/qt/"/>
    
    <category term="C++" scheme="https://mister-kin.github.io/tags/C/"/>
    
    <category term="qt6" scheme="https://mister-kin.github.io/tags/qt6/"/>
    
    <category term="开发" scheme="https://mister-kin.github.io/tags/%E5%BC%80%E5%8F%91/"/>
    
    <category term="第一版" scheme="https://mister-kin.github.io/tags/%E7%AC%AC%E4%B8%80%E7%89%88/"/>
    
  </entry>
  
  <entry>
    <title>Qt6 C++开发指南：第一章「认识Qt」习题答案</title>
    <link href="https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap1/"/>
    <id>https://mister-kin.github.io/code-training/qt6-cpp-development-guide/chap1/</id>
    <published>2023-10-14T19:21:37.000Z</published>
    <updated>2023-10-15T18:31:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章：认识Qt">1 &nbsp&nbsp<a href="#第一章：认识Qt" class="headerlink" title="第一章：认识Qt"></a>第一章：认识Qt</h1><h2 id="Qt简介">1.1 &nbsp&nbsp<a href="#Qt简介" class="headerlink" title="Qt简介"></a>Qt简介</h2><ul><li>跨平台应用程序开发框架</li><li>首次发布于1995年5月</li><li>qt官网：<a href="http://www.qt.io/">www.qt.io</a></li></ul><h3 id="跨平台开发能力">1.1.1 &nbsp&nbsp<a href="#跨平台开发能力" class="headerlink" title="跨平台开发能力"></a>跨平台开发能力</h3><table><thead><tr><th align="center">目标设备</th><th align="center">目标平台</th><th align="center">主机平台</th></tr></thead><tbody><tr><td align="center"></td><td align="center">桌面Linux</td><td align="center">桌面Linux</td></tr><tr><td align="center">计算机</td><td align="center">macOS</td><td align="center">macOS</td></tr><tr><td align="center"></td><td align="center">Windows</td><td align="center">Windows</td></tr><tr><td align="center"></td><td align="center">Android</td><td align="center">桌面Linux、 macOS、Windows</td></tr><tr><td align="center">移动设备</td><td align="center">iOS</td><td align="center">macOS</td></tr><tr><td align="center"></td><td align="center">手机Windows</td><td align="center">Windows</td></tr><tr><td align="center"></td><td align="center">嵌入式Linux</td><td align="center">桌面Linux</td></tr><tr><td align="center">嵌入式设备</td><td align="center">QNX</td><td align="center">桌面Linux、 Windows</td></tr><tr><td align="center"></td><td align="center">VxWorks</td><td align="center">桌面Linux、 Windows</td></tr><tr><td align="center"></td><td align="center">嵌入式Windows</td><td align="center">Windows</td></tr><tr><td align="center">单片机</td><td align="center">FreeRTOS或无操作系统</td><td align="center">Windows、 桌面Linux</td></tr></tbody></table><p>Qt 源代码编译后生成目标平台的原生二进制代码，不像Java那样需要虚拟机，运行效率更高。</p><h3 id="Qt许可的类型">1.1.2 &nbsp&nbsp<a href="#Qt许可的类型" class="headerlink" title="Qt许可的类型"></a>Qt许可的类型</h3><p>Qt 的许可类型</p><ul><li>商业许可：按年付费。模块更多，开发者可以不公开自己的源码。</li><li>开源许可：<ul><li>GPLv2 &#x2F; GPLv3 许可：使用了 GLP 许可的 Qt 代码允许销售，但必须开源。 GPLv3还要求公开相关硬件信息。</li><li>LGPLv3 许可：与 GPL 类似，但更宽松。若只是链接或调用 GPL 许可协议的 Qt 代码，可以不开源。</li></ul></li></ul><h3 id="安装包">1.1.3 &nbsp&nbsp<a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><p>Qt 安装包：根据目标设备不同，提供了不同的安装包。</p><h3 id="Qt支持的开发语言">1.1.4 &nbsp&nbsp<a href="#Qt支持的开发语言" class="headerlink" title="Qt支持的开发语言"></a>Qt支持的开发语言</h3><ol><li>C++ 和 QML<ul><li>Qt 对标准C++语言进行了扩展，引入了信号与槽等机制。</li><li>QML （ Qt Meta Language） 是一个用来描述应用程序界面的声明式脚本语言。</li><li>C++和QML可以混合使用。</li></ul></li><li>Python<ul><li>Qt C++可以被转换Python绑定，使用 Python 调用 Qt 类库进行GUI程序开发。</li><li>常用的 Qt 类库 Python 绑定有： PyQt （GPLv3 许可）和 PySide （LGPLv3 许可）</li></ul></li></ol><h3 id="Qt6新特性">1.1.5 &nbsp&nbsp<a href="#Qt6新特性" class="headerlink" title="Qt6新特性"></a>Qt6新特性</h3><p>2020 年 12 月正式发布了 Qt6.0 ，引入的主要新特性包括：</p><ul><li>支持 C++ 17 标准。</li><li>Qt 核心库的改动：新的属性和绑定系统；全面支持Unicode 字符串；修改了 QList 的实现方式，将 QVector 类和 QList 类统一为 QList 类； QMetaType 和 QVariant 几乎被重写。</li><li>新的图形架构： Qt5 中 3D 渲染依赖 0penGL。Qt6 中引入了新的技术 RHI （rendering hardware interface），它是一个抽象层，使得 Qt 可以使用平台本地化的 3D 图形 API（Linux：Vulkan 、Windows：Direct 3D、macOS：Metal）。</li><li>CMake 构建系统： Qt6 仍然支持 qmake，但建议使用 CMake。</li><li>其他（多媒体、网络、 Qt Quick 3D 等模块的改进）。</li></ul><h2 id="Qt的安装">1.2 &nbsp&nbsp<a href="#Qt的安装" class="headerlink" title="Qt的安装"></a>Qt的安装</h2><div class="note info no-icon"><p>个人推荐：手动选择组件编译安装Qt。详见<a href="/code/qt/#Qt%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91">Qt源码编译</a>。</p></div><p>自Qt5.1.5起，Qt官方只提供在线安装包。</p><p>官方下载链接：<a href="https://download.qt.io/official_releases/online_installers/">点击跳转</a>。<br>清华镜像下载链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/online_installers/">点击跳转</a></p><p>本人是从源码编译安装Qt，具体的在线安装步骤不再总结。</p><h2 id="编写一个Hello-World程序">1.3 &nbsp&nbsp<a href="#编写一个Hello-World程序" class="headerlink" title="编写一个Hello World程序"></a>编写一个Hello World程序</h2><p>Qt Creator 简介：</p><ul><li>Qt Creator 为应用程序开发人员提供了一个完整的跨平台、集成开发环境 (IDE) ，以便为桌面、嵌入式和移动设备平台（如 Android 和iOS）创建应用程序。</li><li>Qt Creator 提供了在整个应用程序开发生命周期所需的工具，从创建项目到将应用程序部署到目标平台。</li></ul><p>Qt Creator新建工程的一些总结：</p><ol><li>应用类型：<ul><li>Widgets：widget界面</li><li>Console：控制台程序</li><li>Quick：QML实现的界面</li></ul></li><li>base class基础类：<ul><li>QMainWindow：主窗口类，包括菜单栏、工具栏、状态栏</li><li>QWidget ：可以创建一个空白的窗口，是所有界面组件的基类</li><li>QDialog ：对话框类（比如创建工程弹出的窗口就是对话框类型，对话式窗口，比如下一步按钮继续执行）</li></ul></li><li>翻译文件：i18国际化语言</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;第一章：认识Qt&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#第一章：认识Qt&quot; class=&quot;headerlink&quot; title=&quot;第一章：认识Qt&quot;&gt;&lt;/a&gt;第一章：认识Qt&lt;/h1&gt;&lt;h2 id=&quot;Qt简介&quot;&gt;1.1 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code-training" scheme="https://mister-kin.github.io/categories/code-training/"/>
    
    <category term="qt6-cpp-development-guide" scheme="https://mister-kin.github.io/categories/code-training/qt6-cpp-development-guide/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="qt" scheme="https://mister-kin.github.io/tags/qt/"/>
    
    <category term="第一章" scheme="https://mister-kin.github.io/tags/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    
    <category term="qt6" scheme="https://mister-kin.github.io/tags/qt6/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式总结笔记</title>
    <link href="https://mister-kin.github.io/code/regular-expressions/"/>
    <id>https://mister-kin.github.io/code/regular-expressions/</id>
    <published>2023-10-12T19:14:48.000Z</published>
    <updated>2023-10-12T19:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用的正则表达式">1 &nbsp&nbsp<a href="#常用的正则表达式" class="headerlink" title="常用的正则表达式"></a>常用的正则表达式</h1><h1 id="在编辑器中删除空行">2 &nbsp&nbsp<a href="#在编辑器中删除空行" class="headerlink" title="在编辑器中删除空行"></a>在编辑器中删除空行</h1><p>Ctrl+H键，输入<code>^(\s)*$\n</code>，替换为空即可。</p><h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;常用的正则表达式&quot;&gt;1 &amp;nbsp&amp;nbsp&lt;a href=&quot;#常用的正则表达式&quot; class=&quot;headerlink&quot; title=&quot;常用的正则表达式&quot;&gt;&lt;/a&gt;常用的正则表达式&lt;/h1&gt;&lt;h1 id=&quot;在编辑器中删除空行&quot;&gt;2 &amp;nbsp&amp;nbsp&lt;a</summary>
        
      
    
    
    
    <category term="code" scheme="https://mister-kin.github.io/categories/code/"/>
    
    
    <category term="总结" scheme="https://mister-kin.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="笔记" scheme="https://mister-kin.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="正则表达式" scheme="https://mister-kin.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="正则" scheme="https://mister-kin.github.io/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Blender自学资料向（干货整理）</title>
    <url>/blender-learning-resources/</url>
    <content><![CDATA[<img data-src="/images/blender_learning_resources/cover.jpg" style="width: 580px">

<p>本文主要介绍自学资料的获取途径。</p>
<h2 id="官方资料【强烈推荐】">0.1 <a href="#官方资料【强烈推荐】" class="headerlink" title="官方资料【强烈推荐】"></a>官方资料【强烈推荐】</h2><h3 id="Blender官方用户手册（User-Manual）【强烈推荐】">0.1.1 <a href="#Blender官方用户手册（User-Manual）【强烈推荐】" class="headerlink" title="Blender官方用户手册（User Manual）【强烈推荐】"></a>Blender官方用户手册（User Manual）<strong>【强烈推荐】</strong></h3><p>获取条件：不需翻墙。</p>
<p>描述：手册是一个十分重要的学习资源，其中包含着大量的关于Blender的基本知识及基础操作，不懂操作时，多翻翻手册。我推荐各位是去看英文文档的，因为这领域不少术语都没有很好的中文翻译。并且目前手册还有不少模块并没有中文化翻译，这也属正常，因为文档的翻译总是落后于源文档的更新，但文档翻译参与者数量不多也是一大原因。本人目前参与Krita文档的中文化翻译，对此感触颇深，这领域的翻译者着实太少了，像Krita的文档翻译者，用手指头就能数过来了。目前本人暂无过多精力，可能未来会有计划参与Blender的文档中文化翻译。</p>
<p>入口：<a href="https://docs.blender.org/manual/en/dev/">官方手册链接</a></p>
<span id="more"></span>

<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/manual-279.jpg">2.79版本用户手册页面部分截图</div>
<div class="flex-column">
<img data-src="/images/blender_learning_resources/manual-280.jpg">2.80版本用户手册页面部分截图</div>
</div>

<p><strong>注：2.8手册刚刚开写，所以内容跟2.79基本一样。(目前网站上已可以正常切换中文版手册)<del>且现在官网上也无法正常切换到中文版的手册，估计是官方忙着写新手册吧。</del></strong></p>
<h3 id="Blender官方完整文档（Blender-WiKi）【推荐】">0.1.2 <a href="#Blender官方完整文档（Blender-WiKi）【推荐】" class="headerlink" title="Blender官方完整文档（Blender WiKi）【推荐】"></a>Blender官方完整文档（Blender WiKi）<strong>【推荐】</strong></h3><p>条件：不需翻墙。</p>
<p>描述：WiKi上记录着很多Blender的资料，包括各版本的发布记录，记录详情可在Reference&#x2F;Release Notes条目中找到，在这你能了解到Blender各模块发展情况。此外，WiKi上还有FAQ等内容，这些就不多介绍了。</p>
<p>入口：<a href="https://wiki.blender.org/">Wiki网站链接</a></p>
<div class="flex-column">
<img data-src="/images/blender_learning_resources/developer-wiki.png">WiKi网站部分截图
</div>

<h3 id="Blender官网网站支持页面（Support）【推荐】">0.1.3 <a href="#Blender官网网站支持页面（Support）【推荐】" class="headerlink" title="Blender官网网站支持页面（Support）【推荐】"></a>Blender官网网站支持页面（Support）<strong>【推荐】</strong></h3><p>条件：不需翻墙。</p>
<p>描述：该页面包含许多链接。如下图，文档类、教程类，社区支持等。用户手册地址都可以从这访问。教程类列出很多链接，其中含有Blender Cloud，经济条件允许的朋友可以选择支持下，注册为云成员。云上面有很多录制的视频教程，它也包含着开源电影的相关资源。云上面有一个《Blender Inside Out》系列视频，这个十分适合从其他三维平台转到Blender上的朋友去学习，讲得很细致。但因为里面有着很多硬基础知识，因此不适合完全零基础的人。（这个系列我也搬运到B站上，目前完成了第一章翻译，其余暂时都还是油管的机翻字幕，视频请戳<a href="https://www.bilibili.com/video/av21352168">这里</a>）</p>
<p>入口：<a href="https://www.blender.org/support/">Support页面链接</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/support.png">Support页面部分截图</div>
</div>

<h3 id="Blender官方教程（Blender-Old-WiKi）【旧址】【不推荐】">0.1.4 <a href="#Blender官方教程（Blender-Old-WiKi）【旧址】【不推荐】" class="headerlink" title="Blender官方教程（Blender Old WiKi）【旧址】【不推荐】"></a><del>Blender官方教程（Blender Old WiKi）</del><strong>【旧址】【不推荐】</strong></h3><p>条件：不需翻墙。注：可能部分外部教程链接需要翻墙或者失效了。</p>
<p>描述：其实就是旧WiKi，但该旧WiKi已全部迁至新WiKi地址了，且该网站已经停止更新。大部分内容都是文字。</p>
<p>入口：<a href="https://en.blender.org/">教程网站新链接</a></p>
<p>旧址：<del><a href="https://wiki.blender.org/index.php/Doc:2.6/Tutorials">https://wiki.blender.org/index.php/Doc:2.6/Tutorials</a></del> 【已失效，新入口在上方】</p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/wiki2.6.png">旧WiKi部分截图</div>
</div>

<h2 id="站点推荐">0.2 <a href="#站点推荐" class="headerlink" title="站点推荐"></a>站点推荐</h2><h3 id="国外篇">0.2.1 <a href="#国外篇" class="headerlink" title="国外篇"></a>国外篇</h3><h4 id="Blender-Guru-【强烈推荐】">0.2.1.1 <a href="#Blender-Guru-【强烈推荐】" class="headerlink" title="Blender Guru 【强烈推荐】"></a>Blender Guru 【强烈推荐】</h4><p>条件：无需翻墙。但实际上该站点的视频是存放于油管上的，所以想看视频是需要搭梯子翻出去的。</p>
<p>描述：Guru站点我不必多言了，相信很多朋友都看过Guru站点的教程，教程都是免费的。Guru站点有个一个初学者的系列视频，十分适合完全三维零基础的朋友去学习，就是下方右图的“甜甜圈&quot;视频系列。（视频请戳<a href="https://www.blenderguru.com/tutorials/blender-beginner-tutorial-series">这里</a>）。站长Andrew Price是个十分帅气幽默的小伙。想了解Guru网站的成立由来可以戳这个：<a href="https://www.blenderguru.com/about/">Guru站点由来</a></p>
<p>入口：<a href="https://www.blenderguru.com/">Guru站点链接</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/andrew-price.png" style="width: 611px">Andrew Price 本人</div>
<div class="flex-column"><img data-src="/images/blender_learning_resources/blender-guru.png">Guru站点部分截图</div>
</div>


<p><strong>注：后面国外篇的站点，本人不经常访问，不太了解详情，所以有些就不作描述了</strong></p>
<h4 id="Blender-Community-【推荐】">0.2.1.2 <a href="#Blender-Community-【推荐】" class="headerlink" title="Blender Community 【推荐】"></a>Blender Community 【推荐】</h4><p>入口：<a href="https://blender.community/c/">Blender Community站点</a></p>
<h4 id="Creative-Shrimp-【推荐】">0.2.1.3 <a href="#Creative-Shrimp-【推荐】" class="headerlink" title="Creative Shrimp 【推荐】"></a>Creative Shrimp 【推荐】</h4><p>描述：没怎么具体了解过，我猜应该是Gleb Alexandrov搭建的。最初是通过Gleb的一个加速渲染的视频了解到他的，视频详情请戳<a href="https://www.bilibili.com/video/av22416165/"><strong>这里</strong></a>。</p>
<p>入口：<a href="http://www.creativeshrimp.com/">Creative Shrimp站点链接</a></p>
<h4 id="CG-Geek">0.2.1.4 <a href="#CG-Geek" class="headerlink" title="CG Geek"></a>CG Geek</h4><p>入口：<a href="https://www.deviantart.com/cg-geek">CG Geek站点链接</a></p>
<h4 id="CG-Masters">0.2.1.5 <a href="#CG-Masters" class="headerlink" title="CG Masters"></a>CG Masters</h4><p>入口：<a href="https://cgmasters.net/">CG Masters站点链接</a></p>
<h4 id="Blender-Cookie">0.2.1.6 <a href="#Blender-Cookie" class="headerlink" title="Blender Cookie"></a>Blender Cookie</h4><p>入口：<a href="https://cgcookie.com/">Blender Cookie站点链接</a></p>
<h4 id="BlenderDiplom">0.2.1.7 <a href="#BlenderDiplom" class="headerlink" title="BlenderDiplom"></a>BlenderDiplom</h4><p>描述：Blender官方云上有一本关于Cycles引擎教程的电子书——《The Cycles Encylopedia v1.4》，该书的两位作者都活跃于该站点上。</p>
<p>入口：<a href="http://www.blenderdiplom.com/en/">BlenderDiplom站点链接</a></p>
<h4 id="Blender-Nation">0.2.1.8 <a href="#Blender-Nation" class="headerlink" title="Blender Nation"></a>Blender Nation</h4><p>入口：<a href="https://www.blendernation.com/">Blender Nation站点链接</a></p>
<h4 id="Blender-Artists">0.2.1.9 <a href="#Blender-Artists" class="headerlink" title="Blender Artists"></a>Blender Artists</h4><p>入口：<a href="https://blenderartists.org/">Blender Artists站点链接</a></p>
<h4 id="Blender-Nerd【不推荐】">0.2.1.10 <a href="#Blender-Nerd【不推荐】" class="headerlink" title="Blender Nerd【不推荐】"></a><del>Blender Nerd</del>【不推荐】</h4><p>描述：该站点目前改成了Richard Harby，不清楚该站点什么规划。以前不怎么上这站点，所以我不做跟进了解。</p>
<p>入口：<a href="http://www.blendernerd.com/">Blender Nerd站点链接</a></p>
<h3 id="国内篇">0.2.2 <a href="#国内篇" class="headerlink" title="国内篇"></a>国内篇</h3><h4 id="Blender中国社区（斑斓中国）【推荐】">0.2.2.1 <a href="#Blender中国社区（斑斓中国）【推荐】" class="headerlink" title="Blender中国社区（斑斓中国）【推荐】"></a>Blender中国社区（斑斓中国）【推荐】</h4><p>入口：<a href="http://www.blendercn.org/">斑斓中国站点链接</a></p>
<h4 id="Blender-Get-【推荐】">0.2.2.2 <a href="#Blender-Get-【推荐】" class="headerlink" title="Blender Get 【推荐】"></a>Blender Get 【推荐】</h4><p>描述：Blender Get是罗聪翼先生搭建的站点，罗先生著有全球首本中文著作《Blender权威指南》。</p>
<p>入口：<a href="http://www.blenderget.com/">Blender Get站点链接</a></p>
<h2 id="B站篇UP推荐">0.3 <a href="#B站篇UP推荐" class="headerlink" title="B站篇UP推荐"></a>B站篇UP推荐</h2><h3 id="翻译UP">0.3.1 <a href="#翻译UP" class="headerlink" title="翻译UP"></a>翻译UP</h3><h4 id="Mr-Kin-【强烈推荐】">0.3.1.1 <a href="#Mr-Kin-【强烈推荐】" class="headerlink" title="Mr. Kin 【强烈推荐】"></a>Mr. Kin 【强烈推荐】</h4><div class="flex-row-left-start">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/comical-face.png" style="width: 200px">没错，就是我，滑稽护体。
</div>
</div>

<p><a href="https://space.bilibili.com/17025250/#/">空间入口请戳</a>。<strong>（明示支持三连，滑稽.jpg）</strong></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/my-bili-zone.png">我的Bilibili空间截图
</div>
</div>

<h4 id="随波远流">0.3.1.2 <a href="#随波远流" class="headerlink" title="随波远流"></a>随波远流</h4><p><a href="https://space.bilibili.com/24808665/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/suibozhuliu-zone.png">随波远流的Bilibili空间截图
</div>
</div>

<h4 id="CGGAP">0.3.1.3 <a href="#CGGAP" class="headerlink" title="CGGAP"></a>CGGAP</h4><p><a href="https://space.bilibili.com/50678221/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/cggap-zone.png">CGGA的Bilibili空间截图
</div>
</div>

<p><strong>注：其他不作介绍了，大家自己去寻找吧！</strong></p>
<h3 id="原创UP">0.3.2 <a href="#原创UP" class="headerlink" title="原创UP"></a>原创UP</h3><h4 id="blenderCN-黑马赛克-【推荐】">0.3.2.1 <a href="#blenderCN-黑马赛克-【推荐】" class="headerlink" title="blenderCN-黑马赛克 【推荐】"></a>blenderCN-黑马赛克 【推荐】</h4><p><a href="https://space.bilibili.com/7549097/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/blendercn-zone.png">blenderCN-黑马赛克的Bilibili空间截图
</div>
</div>

<h4 id="顺子老师">0.3.2.2 <a href="#顺子老师" class="headerlink" title="顺子老师"></a>顺子老师</h4><p><a href="https://space.bilibili.com/38988725/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/shunzi-zone.png">顺子老师的Bilibili空间截图
</div>
</div>

<h4 id="我是栗子菌">0.3.2.3 <a href="#我是栗子菌" class="headerlink" title="我是栗子菌"></a>我是栗子菌</h4><p><a href="https://space.bilibili.com/20444678/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/shunzi-zone.png">我是栗子菌的Bilibili空间截图
</div>
</div>

<p><strong>注：其他不作介绍了，大家自己去寻找吧！</strong></p>
<h2 id="Youtube专讲【强烈推荐】">0.4 <a href="#Youtube专讲【强烈推荐】" class="headerlink" title="Youtube专讲【强烈推荐】"></a>Youtube专讲【强烈推荐】</h2><h3 id="概述">0.4.1 <a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>条件：翻墙。也可通过镜像链接来访问，即不需翻墙，但肯定不如原网站链接好使，且油管的镜像链接经常失效。<strong>推荐搭梯子翻墙</strong>，不推荐使用镜像链接直翻。</p>
<p>作为全球最大的视频网站，油管有着许多优质的教程，以上有些站点的视频教程便是放在油管上的，例如Guru。建议朋友们上油管搜索教程，搜索也是有不少技巧的，以下列出一些关键字：</p>
<ul>
<li>搜索Blender，关键字【blender】</li>
<li>搜索教程时，关键字【tutorial】或【training】</li>
<li>具体搜索某个模块时，比如建模，关键字【modeling】；角色建模，关键字【character modeling】</li>
<li>纹理贴图，关键字【texture】</li>
<li>材质，关键字【material】</li>
<li>渲染，关键字【rendering】</li>
<li>灯光，关键字【lighting】</li>
<li>动画，关键字【animate】【animation】</li>
<li>其余以此类推</li>
</ul>
<p>关于油管的使用，对于英文不太好的朋友来说，如果视频没有自带中文字幕，可以选择观看油管的自动翻译字幕。如果原视频带有其他语言的字幕，此时自动翻译的质量还是不错的。但如果原视频没有自带任何字幕，只能看机器是否能够识别出来语言来了，例如视频开头若有很长一段背景音乐就无法识别了。使用选项如下图：<br><img data-src="/images/blender_learning_resources/youtube.png"></p>
<h3 id="Youtuber推荐">0.4.2 <a href="#Youtuber推荐" class="headerlink" title="Youtuber推荐"></a>Youtuber推荐</h3><ul>
<li>Blender Developers</li>
<li>Blender</li>
<li>Blender Guru</li>
<li>Daniel Kreuter</li>
<li>CG Master</li>
<li>CG Geek</li>
<li>Gleb Alexandrov</li>
<li>CG Cookie - Blender Training</li>
</ul>
<p><strong>注：其他靠大家寻找了，不过多列举了。</strong></p>
<h2 id="结语">0.5 <a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>关于英语资料的阅读技巧：</p>
<ul>
<li>提高英语水平 —— 应对所有状况</li>
<li>给浏览器装上页面翻译的拓展插件 —— 应对网站上文字类资料</li>
<li>Youtube的自动翻译选项 —— 应对视频（前提：油管上有该视频且满足自动翻译的条件）</li>
</ul>
<p>以上很多资料都是英文居多，非以英语为母语的我们，观看时难免会有阅读障碍。拿我自己举个例子吧，虽然我能看懂听译这些教程，但其实速度上远远不及阅读中文的速度，相比于看英文，看中文的速度就像是开挂加速的。而这对于想要快速通过教程资料上手BL的朋友们来说，中文无疑是成为了一个很重要的因素。所以，这也是我做翻译的一个原因，同时也是为了方便自个看吧。但由于个人精力有限，因此我此前搬运的大部分视频教程的中文字幕是油管上的机翻字幕，所以也同时贴出英文字幕（油管上英文字幕准确率还是可以的）。至于有些没字幕的，才会去听译，但听译极其耗费时间和精力。</p>
<p>目前本人已暂停搬运教程，正在编写一个字幕处理程序，以此加快我翻译的速度。程序完成后，会重新开始译制教程，并在过往的投稿选择我认为较为重要的机翻教程教程进行精翻。</p>
<p>Anyways, 其实掌握了基础的语法和音标，把词汇量提上去，英语学习基本上是没有障碍的了。汉语是语义型语言，注重内容的意会性；英语是语法型语言，表现形式完整、严谨。这一点认识对于英语的学习来说也是很重要的，意识到这个，要有针对性地学习，我们就不能用汉语的思维去学习英语。而关于词汇量的提高方法，不赘述了，仅告诫大家一点，切忌死记硬背，放在语境中去理解来记更好，比如多去阅读英文资料。更多时候英文资料看不看得下去，其实是<strong>心态问题</strong>。</p>
<p>Alright! Hope you guys could enjoy learning Blender! Adios!</p>
<p><em><strong>注：最后呼吁喜欢这领域且英语不错的朋友能够参与该领域的翻译，无论是文档或是程序本体亦或是教程视频。十分感谢！欢迎和我交流！</strong></em></p>
<p><a href="https://www.bilibili.com/read/cv553195">本文B站链接</a></p>
]]></content>
      <tags>
        <tag>开源软件</tag>
        <tag>blender</tag>
        <tag>资料整理</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">0.1 <a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post">0.1.1 <a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">0.1.2 <a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">0.1.3 <a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">0.1.4 <a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>站点导航和公告</title>
    <url>/navigation-announcement/</url>
    <content><![CDATA[<center>
<div style="margin-top: -35px; margin-bottom: 25px">

<div class="dropdown-menu">
    <button class="dropdown-menu-btn">镜像网站</button>
    <div class="dropdown-menu-content">
        <a href="https://mister-kin.gitee.io/">GiteePages</a>
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">软件作品</button>
    <div class="dropdown-menu-content">
        <a href="/manuals/toggle-language/">切换语言</a>
        <a href="/manuals/batch-tools/">批处理工具</a>
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">蓝图规划</button>
    <div class="dropdown-menu-content">
        <a href="/roadmap/#切换语言-Blender-插件">切换语言</a>
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">关于我</button>
    <div class="dropdown-menu-content">
        <a href="/about">关于我</a>
        <a href="/about/#联系方式">联系我</a>
        <a href="/about/#关注我">关注我</a>
        <a href="/about/#免费支持我">支持我</a>
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">关于本站</button>
    <div class="dropdown-menu-content">
        <a href="/about/about-site">关于本站</a>
        <a href="/about/about-site/#本站许可协议">许可说明</a>
        <a href="/about/logs">更新日志</a>
        <a href="/about/third-party-declaration/">第三方声明</a>
        <a href="/about/post-offline-download/">离线下载</a>
    </div>
</div>

</div>

<div class="note info no-icon"><p><strong>置顶公告1：点击访问本站的「<a href="https://mister-kin.gitee.io/">基于 Gitee Pages 的镜像网站</a>」，以解决国内访问 Github Pages 时网络不畅的问题。</strong></p>
</div>

<div class="note info no-icon"><p><strong>置顶公告2：本站一些重要的博文会有对应的PDF及LaTeX源码，可以下载用以离线查看，具体详看「<a href="/about/post-offline-download/">博文离线下载</a>」。</strong></p>
</div>

<div class="note danger no-icon"><p><strong>当前公告：随缘更新</strong></p>
</div>

</center>

<style type="text/css">
.dropdown-menu {
    position: relative;
    display: inline-block;
}
.dropdown-menu-btn {
    background: var(--btn-default-bg);
    border: 5px solid var(--btn-default-border-color);
    border-radius: 5px;
    color: var(--btn-default-color);
    display: inline-block;
    font-weight: bold;
    font-size: 25px;
    line-height: 2;
    padding: 0 12px;
    text-decoration: none;
    transition-property: background-color;
    transition-delay: 0s;
    transition-duration: .2s;
    transition-timing-function: ease-in-out;
    margin-right: -5px;
}
.dropdown-menu:hover .dropdown-menu-btn {
    background: var(--btn-default-hover-bg);
    border-color: var(--btn-default-hover-border-color);
    color: var(--btn-default-hover-color);
    cursor: pointer;
}
.dropdown-menu-content {
    display: none;
    position: absolute;
    z-index: 9999;
    border: 3px solid var(--btn-default-border-color);
    border-radius: 3px;
    width: 100%;
}
.dropdown-menu:hover .dropdown-menu-content {
    display: block;
    border-color: var(--btn-default-hover-border-color);
}
.dropdown-menu-content a {
    display: block;
    font-size: 22px;
    color: var(--btn-default-color);
    background-color: var(--btn-default-bg);
    padding:  5px 5px;
}
.dropdown-menu-content a:hover {
    color: var(--btn-default-hover-color);
    background: var(--btn-default-hover-bg);
    cursor: pointer;
}
</style>
]]></content>
  </entry>
  <entry>
    <title>火狐浏览器拓展推荐</title>
    <url>/recommended-firefox-addons/</url>
    <content><![CDATA[<h2 id="火狐浏览器的几点说明">0.1 <a href="#火狐浏览器的几点说明" class="headerlink" title="火狐浏览器的几点说明"></a>火狐浏览器的几点说明</h2><p><strong>注：火狐浏览器国内版离线安装包：<a href="http://www.firefox.com.cn/download/">下载链接</a></strong></p>
<div class="flex-column">
<img data-src="/images/recommended_firefox_addons/firefox-offline-installer.png">国内版离线安装包下载示意
</div>
<span id="more"></span>

<h2 id="拓展插件推荐">0.2 <a href="#拓展插件推荐" class="headerlink" title="拓展插件推荐"></a>拓展插件推荐</h2><h3 id="标签页优化">0.2.1 <a href="#标签页优化" class="headerlink" title="标签页优化"></a>标签页优化</h3><h3 id="附件组件管理器">0.2.2 <a href="#附件组件管理器" class="headerlink" title="附件组件管理器"></a>附件组件管理器</h3><h3 id="云盘万能钥匙">0.2.3 <a href="#云盘万能钥匙" class="headerlink" title="云盘万能钥匙"></a>云盘万能钥匙</h3><h3 id="Dark-Night-Mode">0.2.4 <a href="#Dark-Night-Mode" class="headerlink" title="Dark Night Mode"></a>Dark Night Mode</h3><h3 id="Gesturefy">0.2.5 <a href="#Gesturefy" class="headerlink" title="Gesturefy"></a>Gesturefy</h3><h3 id="QiuReader">0.2.6 <a href="#QiuReader" class="headerlink" title="QiuReader"></a>QiuReader</h3><h3 id="Tampermonkey">0.2.7 <a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a>Tampermonkey</h3><h3 id="uBlock-Origin">0.2.8 <a href="#uBlock-Origin" class="headerlink" title="uBlock Origin"></a>uBlock Origin</h3>]]></content>
      <tags>
        <tag>开源软件</tag>
        <tag>资料整理</tag>
        <tag>火狐浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>致首次使用RIME的你 -- 小狼毫输入法详细配置</title>
    <url>/rime-input-method/</url>
    <content><![CDATA[<div class="note danger no-icon"><p><strong>注：本文撰写进度：5%</strong></p>
</div>

<p>TODO<br>前段时间，搜狗输入法被曝后台手脚不干净，强制推送618活动啥的。</p>
<h2 id="前言：我与RIME的相遇">0.1 <a href="#前言：我与RIME的相遇" class="headerlink" title="前言：我与RIME的相遇"></a>前言：我与RIME的相遇</h2><p>在受不了原版的搜狗输入法的广告弹窗和响应速度后，我开始折腾起输入法。</p>
<p>为了解决搜狗的弹窗问题，我使用了火绒安全软件的扩展工具 --- 弹窗拦截（强推一波<a href="https://www.huorong.cn/"><strong>火绒安全软件</strong></a>）。然后，弹窗是解决了。但由于本人最初安装搜狗输入法于机械盘，加上个人词库越来越庞大，搜狗的输入法的响应速度已经严重影响我的输入效率。</p>
<p>于是，我便开始搜寻精简版的搜狗输入法。所幸的是，网络上已有大神在做这个，例如<strong>大水牛去广告精简优化版</strong> --- <a href="https://pan.baidu.com/s/1RAWTp6d6eZnCtDvC6RsEmQ"><strong>百度云链接</strong></a>（提取码：ffqz）。</p>
<p>如此一来，响应速度的确是有所提升，可惜这种做法始终是治标不治本（其实响应速度问题也可通过安装程序于固态盘来解决）。后来在一次搜索相关开源的输入法时，我遇到了RIME。</p>
<span id="more"></span>

<p>对RIME进行简单的了解后，我便被它吸引住了。无奈的是，RIME的配置并没有图形交互界面。这对新用户来说，极为不友好。我估计这也是很多人放弃使用RIME的原因。</p>
<p>在遍寻各途径的资料后（官网、贴吧、博客等），我发现没有一篇文章完整并系统地介绍所有配置流程。因此，我决定收集目前网上的已存资料，并将其系统化整理。望能对新入坑的朋友有所帮助，也希望更多的朋友能够使用到基于RIME框架的输入法。</p>
<h2 id="软件简介">0.2 <a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><h2 id="软件配置">0.3 <a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><h3 id="安装">0.3.1 <a href="#安装" class="headerlink" title="安装"></a>安装</h3><h3 id="繁简转换">0.3.2 <a href="#繁简转换" class="headerlink" title="繁简转换"></a>繁简转换</h3><h3 id="weasel-yaml设置">0.3.3 <a href="#weasel-yaml设置" class="headerlink" title="weasel.yaml设置"></a>weasel.yaml设置</h3><h4 id>0.3.3.1 <a href="#" class="headerlink" title></a></h4>]]></content>
      <tags>
        <tag>开源软件</tag>
        <tag>RIME输入法</tag>
        <tag>软件配置</tag>
      </tags>
  </entry>
  <entry>
    <title>飞助远程服务店（作废）</title>
    <url>/service-shop/</url>
    <content><![CDATA[<h1 id="店铺介绍">1 <a href="#店铺介绍" class="headerlink" title="店铺介绍"></a>店铺介绍</h1><p>本人开的一个小店，旨在通过远程操作帮助客户解决电脑系统问题。</p>
<img data-src="/images/service_shop/shop_logo.webp" style="width: 500px">

<h2 id="为何诞生">1.1 <a href="#为何诞生" class="headerlink" title="为何诞生?"></a>为何诞生?</h2><p>许多朋友系统卡顿或者出现无法解决的毛病，想要维修或重装系统，但究于实体维修店太远或是实体店过于昂贵的收费，自己爱机的问题迟迟得不到解决。是的，50块一次的收费甚至更高，确实是贵了。因此，飞助诞生了。</p>
<span id="more"></span>

<h2 id="本店优势">1.2 <a href="#本店优势" class="headerlink" title="本店优势"></a>本店优势</h2><p>“远程”二字就已经很好说明了本店的一个特色。飞助远程，提供一个方便的平台，远程控制，无需到店。注意是<strong>远程！远程！！！</strong></p>
<p>无论客户身处何处，只要能提供一个良好的网络通信条件，保证机子能够访问互联网，本店就能为你服务。</p>
<p><strong>联系飞助远程，远程帮助系统优化&#x2F;维修&#x2F;重装，价格合理。</strong></p>
<h1 id="服务内容">2 <a href="#服务内容" class="headerlink" title="服务内容"></a>服务内容</h1><h2 id="系统优化-x2F-维修-x2F-重装">2.1 <a href="#系统优化-x2F-维修-x2F-重装" class="headerlink" title="系统优化&#x2F;维修&#x2F;重装"></a>系统优化&#x2F;维修&#x2F;重装</h2><p>曾经，您是否曾苦恼于系统卡顿或者出现无法解决的毛病，想要维修或重装系统，但却无从下手。</p>
<p>联系飞助远程，远程帮助<strong>系统优化&#x2F;维修&#x2F;重装</strong>，物美价廉。</p>
<div class="note danger no-icon"><p><em>注：关于系统，本店默认以最新的<strong>64</strong>位的<strong>WIN10</strong>系统镜像为源（有其他需求的请另外告知店长）。系统完全纯净，不带任何多余的第三方软件。另提供<strong>虚拟机</strong>的安装，可在其上安装<strong>Mac</strong>或<strong>Linux</strong>系统。</em></p>
</div>

<img data-src="/images/service_shop/win10.webp" style="width: 400px">

<h2 id="硬盘分区">2.2 <a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h2><p>曾经，您是否因为为刚买机的时候装机人员只把您的每个硬盘做一个分区而苦恼。是的，500g或1t甚至是更大容量的机械硬盘却只能做一个分区，在管理文件上确实是十分不方便。</p>
<p>联系飞助远程，远程<strong>帮助硬盘分区</strong>。例如，原有分区的基础上无损调整分区，包括新增分区以及调整原有分区大小。</p>
<div class="flex-row">
<div class="flex-column">
分区前<img data-src="/images/service_shop/hard_disk_origin.webp"></div>
<div class="flex-column">
分区后<img data-src="/images/service_shop/hard_disk_split.webp"></div>
</div>

<h2 id="软件直装">2.3 <a href="#软件直装" class="headerlink" title="软件直装"></a>软件直装</h2><p>曾经，您是否苦恼于不会装某些软件，例如办公软件套件，或者安装后但却困于激活这一步。而对于编程初学者们来说，最为头疼不过于编程环境搭建了，明明代码是正确的，却总是无法正确编译，这再痛苦不过了。</p>
<p>联系飞助远程，远程<strong>安装软件</strong>。需要直装<strong>office</strong>套件或者<strong>Adobe</strong>系列等其他软件的，请将软件名详细告知本店。此外，本店可提供编程初学者头疼的编程环境搭建及一些常见的环境搭建服务，例如，搭建以文本编辑软件和编译套件为基础的C和C++等语言编程环境，完成后只需几个快捷键便可在文本编辑软件上完成编译和链接。</p>
<div class="flex-column">
<div class="flex-row">
<img data-src="/images/service_shop/adobe.webp">
<img data-src="/images/service_shop/office.webp"></div>
<img data-src="/images/service_shop/compile_c.webp">
</div>

<h1 id="服务价格单">3 <a href="#服务价格单" class="headerlink" title="服务价格单"></a>服务价格单</h1><table>
<thead>
<tr>
<th align="center">服务项</th>
<th align="center">价格</th>
</tr>
</thead>
<tbody><tr>
<td align="center">系统维修优化</td>
<td align="center">￥15</td>
</tr>
<tr>
<td align="center">系统重装（只含驱动+VC环境）</td>
<td align="center">￥25</td>
</tr>
<tr>
<td align="center">系统重装（驱动+VC环境+MS office）</td>
<td align="center">￥35</td>
</tr>
<tr>
<td align="center">分区相关</td>
<td align="center">￥5</td>
</tr>
<tr>
<td align="center">直装软件</td>
<td align="center">￥15</td>
</tr>
</tbody></table>
<div class="note danger no-icon"><p><strong>注：价格单上的服务价格为<em>基本价格</em>，但收费是视实际操作的复杂度来决定。换句话说，最终收费是在基本价格<em>上下浮动</em>。</strong></p>
</div>
<div class="note danger no-icon"><p>特别说明：本店所有服务都是通过<strong>远程</strong>完成，某些操作可能需要远程语音指导客户自己动手操作完成，但请放心，不会涉及到复杂的操作。本店的系统维修和软件直装服务是基于<strong>Windows OS</strong>的平台，目前不接受Linux以及Mac系统的维修需求和软件直装服务。</p>
</div>

<h1 id="知识科普">4 <a href="#知识科普" class="headerlink" title="知识科普"></a>知识科普</h1><h2 id="电脑使用期限">4.1 <a href="#电脑使用期限" class="headerlink" title="电脑使用期限"></a>电脑使用期限</h2><p>事实上，一台电脑设备，无论是台式的或是笔记本，只要正常使用，其硬件没有损坏，电脑设备都可以一直运行使用。当然，运行的体验结果如果又是另外一回事了。你总不能拿十几年前的超低配置电脑来装现在最新的系统和大型软件，对吧？而且，兼不兼容都不好说呢！</p>
<p>电脑最好的<strong>保养方式</strong>，其实是<strong>自己的使用方式</strong>。你使用不佳，再好的设备给你也折腾不了几年。本人维修时遇到过的大多数设备卡顿多是由于个人使用方式导致的，例如机械键盘长期读写却从未整理过磁盘碎片，导致硬盘读取越来越慢，从而导致一些卡顿问题，等等诸如此类的问题。</p>
<p>只要养成一些好的使用习惯，设备在手中就如同一把利器，工作效率或许都能提高呢。至于有哪些好的使用习惯，这里就不展开阐述，以后有机会专门写一篇来讲讲。</p>
<h2 id="加速球的认识误区">4.2 <a href="#加速球的认识误区" class="headerlink" title="加速球的认识误区"></a>加速球的认识误区</h2><p>现在电脑系统上装管家、杀软之类的软件已经是很常见，甚至不少是装了全家桶。而在使用电脑时，不少朋友就喜欢时不时点一下加速球。看着它清理完程序后的提示甚是满意。</p>
<img data-src="/images/service_shop/accelerate_ball.webp" style="width: 200px">

<p>且先不谈加速球的效果，我们来了解下它背后的原理。来看看加速球在这背后都做了什么？</p>
<ol>
<li>整理内存</li>
<li>关掉无用程序</li>
</ol>
<p>首先来了解下进程的概念。</p>
<blockquote>
<p>用户下达运行程序的命令后，就会产生进程。同一程序可产生多个进程（一对多关系），以允许同时有多位用户运行同一程序，却不会相冲突。进程需要一些资源才能完成工作，如CPU使用时间、存储器、文件以及I&#x2F;O设备，且为依序逐一进行，也就是每个CPU核心任何时间内仅能运行一项进程。程序本身只是指令、数据及其组织形式的描述，进程才是程序（那些指令和数据）的真正运行实例。  ---  <a href="https://zh.wikipedia.org/wiki/%E8%BF%9B%E7%A8%8B">维基百科</a></p>
</blockquote>
<p>也就是说<strong>关掉无用程序，即是关闭相关进程</strong>。</p>
<p>众所周知，计算机程序的运行是在内存中进行的。加速球所做的就是关闭进程，将它认为内存中不常用的数据调回到硬盘上。而实际上，当程序又被运行时，系统又会将相关数据加载进内存中。加速球的做法，其实是拖慢了该程序的运行速度。这种腾出内存的做法在某些使用场景中，对于低内存配置的电脑有所帮助，但本质上这是<strong>治标不治本</strong>。</p>
<p>其实系统本身是有内存管理的，将常用的数据加载到内存中，将不常用的数据释放到硬盘中。<strong>系统不需要额外的内存优化</strong>。如果时常使用加速球，强行介入系统本身的优化机制，反而会导致更多的系统卡死的新问题。（别问我怎么知道的。。。）</p>
<p>那内存小怎么办？别在加速球上折腾了，要么换合适的系统，要么就升级内存。</p>
<h1 id="联系我">5 <a href="#联系我" class="headerlink" title="联系我"></a>联系我</h1><p>有意者请咨询店长。<del>现在分享链接到朋友圈，下单还能享受免费系统优化（需截图）。</del></p>
<div class="note danger no-icon"><p><strong>此外，再次强调，本店视服务要求的复杂度和操作性来确定最终收费。</strong></p>
</div>

<h2 id="联系方式">5.1 <a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><ul>
<li>店长昵称：Mr. Kin</li>
<li>QQ：2312463626</li>
</ul>
<div class="flex-row-left-start">
<div class="flex-column" style="align: left;">
QQ二维码<img data-src="/images_public/qq_qr_code2.webp" style="width: 200px"></div>
</div>
]]></content>
      <tags>
        <tag>电脑维修</tag>
        <tag>个人店铺</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux总结</title>
    <url>/code/linux/</url>
    <content><![CDATA[<h1 id="终端符号输入">1 <a href="#终端符号输入" class="headerlink" title="终端符号输入"></a>终端符号输入</h1><ul>
<li>ctrl+c：停止</li>
<li>ctrl+z：停止输入</li>
</ul>
<h1 id="包管理器">2 <a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h1><h2 id="apt">2.1 <a href="#apt" class="headerlink" title="apt"></a>apt</h2><h3 id="apt-update证书验证错误">2.1.1 <a href="#apt-update证书验证错误" class="headerlink" title="apt update证书验证错误"></a>apt update证书验证错误</h3><p>错误信息：Certificate verification failed: The certificate is NOT trusted.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install --reinstall ca-certificates</span><br></pre></td></tr></table></figure>

<h1 id="硬盘和分区管理">3 <a href="#硬盘和分区管理" class="headerlink" title="硬盘和分区管理"></a>硬盘和分区管理</h1><h2 id="将-x2F-home目录挂载到新分区（或新硬盘）">3.1 <a href="#将-x2F-home目录挂载到新分区（或新硬盘）" class="headerlink" title="将&#x2F;home目录挂载到新分区（或新硬盘）"></a>将&#x2F;home目录挂载到新分区（或新硬盘）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过包管理器安装 gparted，进行新建分区或者格式化硬盘等操作。</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> /mnt/home</span><br><span class="line">sudo mount /dev/新分区 /mnt/home <span class="comment"># 挂载新分区到/mnt/home</span></span><br><span class="line">sudo rsync -aXS /home/ /mnt/home <span class="comment"># a归档模式（递归传输并保持文件属性），X保持扩展属性</span></span><br><span class="line">sudo <span class="built_in">mv</span> /home /home_old</span><br><span class="line">sudo <span class="built_in">mkdir</span> /home</span><br><span class="line">sudo umount /dev/新分区</span><br><span class="line">sudo mount /dev/新分区 /home</span><br><span class="line">blkid|grep /dev/新分区 <span class="comment"># 查看新分区的uuid</span></span><br><span class="line">sudo gedit /etc/fstab <span class="comment"># 将新分区的uuid填入fstab</span></span><br><span class="line">sudo <span class="built_in">rm</span> -rf /home_old <span class="comment"># 重启无异常，即可删除旧home目录</span></span><br></pre></td></tr></table></figure>

<h1 id="编译问题">4 <a href="#编译问题" class="headerlink" title="编译问题"></a>编译问题</h1><h2 id="普通用户导致的编译问题">4.1 <a href="#普通用户导致的编译问题" class="headerlink" title="普通用户导致的编译问题"></a>普通用户导致的编译问题</h2><p>普通用户中如果在系统关键目录中，如<code>/opt</code>，执行<code>sudo make</code>可能会出现<code>xxx command not found</code>，这是因为有些命令在<code>sudo</code>下是不可见的，但如果不用<code>sudo</code>，<code>make</code>又无法在这些路径生成文件。</p>
<p>解决方式：使用<code>make -f</code>参数指定<code>makefile</code>文件，让它在有权限的路径中工作。例如，将工作路径切到<code>home</code>目录中，<code>make -f /opt/xxx/xxx/makefile</code>，<code>make</code>可在<code>home</code>路径中生成文件。</p>
<h1 id="账户管理">5 <a href="#账户管理" class="headerlink" title="账户管理"></a>账户管理</h1><h2 id="删除账户">5.1 <a href="#删除账户" class="headerlink" title="删除账户"></a>删除账户</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">userdel [-r] [user_account] <span class="comment"># 切换到其他账户再执行，建议是root账户</span></span><br><span class="line">userdel -r kin <span class="comment"># 删除账户kin，-r参数是移除该账户的home目录和用户邮箱（mail spool）</span></span><br></pre></td></tr></table></figure>

<h2 id="自动root登录">5.2 <a href="#自动root登录" class="headerlink" title="自动root登录"></a>自动root登录</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">gedit /etc/gdm/custom.conf</span><br><span class="line"># 在daemon下添加</span><br><span class="line">AutomaticLoginEnable=True</span><br><span class="line">AutomaticLogin=root</span><br></pre></td></tr></table></figure>

<h1 id="参考文献">6 <a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Ubuntu 18.04 apt update failed for https repository[EB&#x2F;OL]. <a href="https://askubuntu.com/questions/1229122/ubuntu%E2%80%9118%E2%80%9104%E2%80%91apt%E2%80%91update%E2%80%91failed%E2%80%91for%E2%80%91https%E2%80%91repository">https://askubuntu.com/questions/1229122/ubuntu‑18‑04‑apt‑update‑failed‑for‑https‑repository</a>.<br>[2] 将&#x2F;home 目录挂载到新分区（或新硬盘）[EB&#x2F;OL]. <a href="https://blog.51cto.com/runixcn/4605838">https://blog.51cto.com/runixcn/4605838</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>给联想z500安装deepin linux（深度系统）</title>
    <url>/os/install-deepin-on-lenovo-z500/</url>
    <content><![CDATA[<h1 id="起因">1 <a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>前几日，老父亲向我反应：手提电脑在使用过程中，偶尔会出现不响应的状态。我一想，多半是机子的老配置跟不上win10了，于是回应说抽空我给换装另一个系统。</p>
<p>这个手提电脑是联想在2012年推出的erazer z500系列机型，大概是2013年或是2014年买的吧。用到现在，这个老本子大修过好几次，换过屏幕，换过电源适配器，换过电池……总之是遇到过不少大大小小的毛病。</p>
<p>印象中，这本子最初的系统是win7，后来换过win8和win8.1，现在用的是win10。不过整体配置确实是不太适合新版win10了，毕竟CPU是3代的i5，频率也不高，系统空载时占用的内存也不少。</p>
<h1 id="解决方案">2 <a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>既然是系统不太合适，那就更换系统呗！我凭借自身的知识储备，大致想出了如下的系统更换方案：</p>
<ol>
<li>老版的win10</li>
<li>精简版win10</li>
<li>win8.1</li>
<li>win7</li>
<li>linux</li>
</ol>
<p>方案1的老版win10换汤不换药，感觉很大机率还是会出现卡顿的现象，不作考虑。</p>
<p>方案2，网上论坛流传的精简版镜像基本都会添加私货（各种乱七八糟的预装软件，同时可能也会有后门软件，不安全），自己动手制作精简版镜像倒也行，不过现在都没啥精力折腾这些东西了，这个方案也pass。</p>
<p>方案3，网卡驱动会有问题，以前这本子用win8.1的时候就遇到过无法连接某些wifi信号，pass。</p>
<p>方案4的win7系统太老了，直接pass。</p>
<p>最后也就只剩方案5——linux系统。linux确实很适合老配置的机子，系统本身就不会消耗过多的硬件资源。不过，linux的软件生态和驱动远不如windows平台，并且发行版众多。现在暂且不考虑软件生态和驱动问题，如何选择linux的发行版呢？</p>
<span id="more"></span>

<p>arch？不行！没啥精力折腾了。</p>
<p>ubuntu？嗯，倒还行，不过有点臃肿，而且不太适合国内的使用习惯。</p>
<p>这个时候，deepin出现在我的脑海中。deepin和ubuntu都是基于debian，而且deepin的桌面gui比较符合国内使用习惯，虽然对硬件要求比ubuntu高，但我认为z500的配置应该足够了。</p>
<p>至于linux的软件生态问题，毕竟现在这老本子是家里长辈在使用，老父亲平时也就只用酷狗听一下歌。酷狗好像没有linux客户端，不过没关系，大不了用安卓版或是wine（应该能解决吧？(＞﹏＜)）。</p>
<p>至于驱动，应该是双显卡驱动和网卡驱动可能会有点问题。</p>
<p>多思无益，先安装再说吧，走一步，看一步！</p>
<h1 id="deepin的安装步骤">3 <a href="#deepin的安装步骤" class="headerlink" title="deepin的安装步骤"></a>deepin的安装步骤</h1><h2 id="备份数据">3.1 <a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h2><p>安装系统前，第一步当然是备份数据。数据无价，可别因为懒而导致丢失宝贵的数据。</p>
<h2 id="制作启动盘">3.2 <a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><ol>
<li>下载系统镜像和启动盘制作工具：<a href="https://www.deepin.org/zh/download/">点击跳转下载地址</a>。</li>
<li>准备一个大于2G的U盘，备份U盘数据。</li>
<li>利用启动盘制作工具，制作深度系统启动盘（格式化U盘制作）。</li>
</ol>
<h2 id="安装deepin">3.3 <a href="#安装deepin" class="headerlink" title="安装deepin"></a>安装deepin</h2><ol>
<li>插入U盘，开机，摁Fn+F12进入快速启动项（本机的BIOS开启了Fn功能键），选择U盘启动项。</li>
<li>按照提示进行安装，这里不一一列出。</li>
<li>安装时，勾选集成的闭源显卡驱动。</li>
<li>我是手动分区的（分区方案如下），不懂的朋友可以选择全盘安装。</li>
<li>完成安装，重启系统，拔出U盘。</li>
</ol>
<p><strong>分区方案（120G的固态硬盘，列表顺序就是实际的分区顺序）</strong></p>
<ul>
<li><code>/boot/efi</code> 300M</li>
<li><code>/boot</code> 1G</li>
<li><code>swap</code> 12G（8G×1.5）</li>
<li><code>/</code> 剩余的空间</li>
<li><code>/home</code> 40G</li>
</ul>
<h2 id="驱动安装">3.4 <a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><p><strong>安装显卡驱动</strong></p>
<ol>
<li>打开商店，搜索并安装「显卡驱动管理器」。</li>
<li>选择prime显卡方案。</li>
<li>按照提示重启系统。</li>
</ol>
<p><strong>安装蓝牙管理器</strong></p>
<ol>
<li>打开终端</li>
<li>输入命令：<code>sudo apt-get install blueman</code></li>
</ol>
<p>安装完显卡驱动和蓝牙管理器之后，驱动这方面基本没啥问题。</p>
<h2 id="几个值得注意的地方">3.5 <a href="#几个值得注意的地方" class="headerlink" title="几个值得注意的地方"></a>几个值得注意的地方</h2><ul>
<li><strong>不需要关闭BIOS的安全启动</strong>：deepin v20.2.2及之后的版本都能较好的支持安全启动，因此安装deepin不需要专门关闭BIOS的安全启动。</li>
<li><strong>未安装蓝牙管理器之前，不要使用无线鼠标</strong>：deepin默认状态下没有蓝牙管理器，因此，使用无线鼠标会出现一些莫名其妙的bug（例如，若不关闭安全启动，安装过程中则无法点击；即使关闭安全启动后安装系统时，点击操作也会导致UI变成外文语言；安装系统后初次启动时，无线鼠标使用正常，但重启后就会出现异常卡顿现象，甚至无法点击）。这些bug当时困扰了我许久，后来我想起无线鼠标的原理，才准确地定位出问题所在。只有安装蓝牙管理器之后，才能正常使用无线鼠标。</li>
</ul>
<h1 id="常规软件的安装和使用">4 <a href="#常规软件的安装和使用" class="headerlink" title="常规软件的安装和使用"></a>常规软件的安装和使用</h1><p>目前深度商店的软件应用数量已经比以前增加了很多，在商店中搜索并安装自己想用的软件即可。</p>
<p>让我最为惊喜的是，商店竟然有酷狗，而且不是网页版或者安卓版。这点不错，也省去了我手动折腾wine的麻烦。</p>
<p>至此，z500算是获得了新生。</p>
<h1 id="参考文献">5 <a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 如何安装[EB&#x2F;OL]. <a href="https://www.deepin.org/zh/installation/">https://www.deepin.org/zh/installation/</a>.<br>[2] 蓝牙[EB&#x2F;OL]. <a href="https://wiki.deepin.org/wiki/%E8%93%9D%E7%89%99">https://wiki.deepin.org/wiki/%E8%93%9D%E7%89%99</a>.<br>[3] Recommended Partitioning Scheme[EB&#x2F;OL]. <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-x86">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-x86</a>.</p>
]]></content>
      <categories>
        <category>os</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>deepin</tag>
        <tag>系统</tag>
        <tag>深度系统</tag>
        <tag>联想</tag>
        <tag>lenovo</tag>
        <tag>z500</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows平台的运行库修复</title>
    <url>/os/runtime-library-repair-on-windows/</url>
    <content><![CDATA[<div class="note info no-icon"><p>请注意：本教程适用平台为Windows OS。</p>
</div>

<h1 id="什么是运行库">1 <a href="#什么是运行库" class="headerlink" title="什么是运行库"></a>什么是运行库</h1><h1 id="安装软件或运行软件时提示dll缺失等现象产生的原因">2 <a href="#安装软件或运行软件时提示dll缺失等现象产生的原因" class="headerlink" title="安装软件或运行软件时提示dll缺失等现象产生的原因"></a>安装软件或运行软件时提示dll缺失等现象产生的原因</h1><p>使用不同框架环境来开发的程序需要相对应的运行库才能正常工作，例如VC的程序需要VC运行库，VB的程序需要VB运行库，java程序需要Java Runtime一样，而使用 .Net 开发的程序需要在 .NET Framework下才能运行。</p>
<p>而纯净的windows系统是不自带有以上这些库或者内置一个版本的库。比如windows系统不自带VC库和java runtime；win10自带的.net框架一般为4.7（老版本的win10可能为4.6或者更早）；win10自带的dx则为dx12。当系统无法提供程序所需的库时，例如没有该库，或者内置库与程序所需的版本不一致，又或者相应库文件已损坏，那么便会弹出dll缺失等运行库问题的错误提示窗口。</p>
<h1 id="解决方法">3 <a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>请根据错误提示窗口的信息找对应的工具，「.dll缺失」一般用方法1即可解决，「.net framework缺失」请用方法2。</p>
<h2 id="DX库和VC库修复：">3.1 <a href="#DX库和VC库修复：" class="headerlink" title="DX库和VC库修复："></a>DX库和VC库修复：</h2><p>使用VBcom大佬开发的dx修复工具：<a href="https://blog.csdn.net/vbcom/article/details/7245186">https://blog.csdn.net/vbcom/article/details/7245186</a></p>
<p>注：请注意要下载增强版，增强版才含有VC库（上述链接便是增强版的）。</p>
<h2 id="vc库无限报错弹窗">3.2 <a href="#vc库无限报错弹窗" class="headerlink" title="vc库无限报错弹窗"></a>vc库无限报错弹窗</h2><p>安装和卸载vc2017库出现弹窗，标题为Microsoft Visual C++ 2017 x64 Minimum Runtime - 14.10.25008，内容提示为 vc_runtimeAdditional_x64.msi is not a valid installtino package for product Microsoft Visual C++ 2017 x64 Minimum Runtime - 14.10.25008。</p>
<p>解决方式：使用官方的<a href="https://support.microsoft.com/en-us/topic/fix-problems-that-block-programs-from-being-installed-or-removed-cca7d1b6-65a9-3d98-426b-e9f927e1eb4d">troubleshooter</a>先卸载掉已存在的残留安装信息。</p>
<h2 id="NET框架">3.3 <a href="#NET框架" class="headerlink" title="NET框架"></a>NET框架</h2><p>net框架微软官方下载地址：<a href="https://dotnet.microsoft.com/download/dotnet-framework">https://dotnet.microsoft.com/download/dotnet-framework</a><br>net框架修复工具微软官方下载地址：<a href="https://support.microsoft.com/zh-cn/help/2698555/microsoft-net-framework-repair-tool-is-available">https://support.microsoft.com/zh-cn/help/2698555/microsoft-net-framework-repair-tool-is-available</a></p>
<p>注：请自己选择需要的版本下载并进行安装。建议安装或修复运行库后请重启系统。关于版本选择，请看以下说明！！！</p>
<p>注意！！！Net Framework版本关系：<br>.Net版本并非完全独立，但也不支持向下兼容。目前为止微软推出了3个版本的CLR，分别是 1.1、2.0 、4.0。 .Net 4是基于CLR4的，而.Net 2.0 3.0 3.5都是基于 CLR2.0， 3.0 3.5其实只是在2.0的基础上增加了新的功能，并没有改变CLR。<br>换而言之，你的程序需要2.0&#x2F;3.0&#x2F;3.5之中的任意一个版本时，安装.Net 3.5 SP1就可以了。<br>所以，如果只是想扩展系统的运行库的话，以win10 OS为例，那么只需要选择安装.Net 3.5 SP1和.Net 4.8（最新的.Net 4.X的就行，4.8是我写该教程时最新的版本）</p>
<p>Mr. Kin<br>2020.6.16</p>
<h1 id="参考文献">4 <a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] The Visual C++ missing error PLAGUE! Here’s how to fix that pesky missing .MSI file<br>in 5 easy steps![EB&#x2F;OL]. <a href="https://www.youtube.com/watch?v=ybr5ExVOlqI">https://www.youtube.com/watch?v=ybr5ExVOlqI</a>.</p>
]]></content>
      <categories>
        <category>os</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>运行库</tag>
        <tag>修复</tag>
        <tag>DirectX</tag>
        <tag>NET Framework</tag>
        <tag>Microsoft Visual C++ Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title>翻译计划</title>
    <url>/translations/translation-plan/</url>
    <content><![CDATA[<h1 id="计划重启缘由">1 <a href="#计划重启缘由" class="headerlink" title="计划重启缘由"></a>计划重启缘由</h1><p>2018年末之际，我发布了一篇博文<a href="/translations/translation-roadmap/">「翻译规划（作废）」</a>，计划着翻译一些视频教程和文档等，但因诸多原因，一直未能有效按计划进行，后来也就不了了之，将此篇博文就此作废。现在看来，这个计划完成的进度可能都不及5%，真的是个巨难填补的巨坑啊，哈哈哈……</p>
<p>翻译本身就是无偿行为，毕竟原作品不是自己创作的，平台投稿时又无法投原创自制。一想到这个，就没啥了驱动力，毕竟没法总是为爱发电。</p>
<p>由于编写<a href="https://github.com/Mister-Kin/BatchTools">批处理工具</a>时需要进行测试，因此又接触到了视频压制和字幕处理。在测试的过程中，又有想法要重新开启翻译计划。</p>
<p>不过本次的计划重启，与上次那样庞大的目标的不同，这次的翻译目标仅限于自己的看过并感兴趣的视频。</p>
<h1 id="翻译计划表">2 <a href="#翻译计划表" class="headerlink" title="翻译计划表"></a>翻译计划表</h1><p><strong>注：点击列表中的英文视频名即可访问相应的视频链接。</strong></p>
<h2 id="Blender开放动画电影">2.1 <a href="#Blender开放动画电影" class="headerlink" title="Blender开放动画电影"></a>Blender开放动画电影</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">完成进度</th>
<th align="center">字幕下载</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/BV1eS4y1j7ay/">Sprite Fright</a></td>
<td align="center">惊悚小精灵</td>
<td align="center">已翻译</td>
<td align="center"><a href="https://github.com/Mister-Kin/OpenDocs/tree/master/translations/subtitles/blender_animation">点击跳转</a></td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/BV1iW4113786?p=4">The Daily Dweebs</a></td>
<td align="center">每日蠢事</td>
<td align="center">已翻译</td>
<td align="center"><a href="https://github.com/Mister-Kin/OpenDocs/tree/master/translations/subtitles/blender_animation">点击跳转</a></td>
</tr>
</tbody></table>
<h2 id="Blender-fundamental-教程">2.2 <a href="#Blender-fundamental-教程" class="headerlink" title="Blender fundamental 教程"></a>Blender fundamental 教程</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">完成进度</th>
<th align="center">字幕下载</th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>translations</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>计划</tag>
        <tag>字幕</tag>
      </tags>
  </entry>
  <entry>
    <title>翻译规划（作废）</title>
    <url>/translations/translation-roadmap/</url>
    <content><![CDATA[<div class="note danger no-icon"><p><strong>注：本文撰写进度：90%</strong></p>
</div>

<h1 id="计划声明">1 <a href="#计划声明" class="headerlink" title="计划声明"></a>计划声明</h1><p>开个大坑，期望自己能够一直坚持做下去吧！在此开个页面算是打卡吧，也方便大家了解进度及访问相应的链接。</p>
<h2 id="B站视频教程翻译">1.1 <a href="#B站视频教程翻译" class="headerlink" title="B站视频教程翻译"></a>B站视频教程翻译</h2><p>目前本人已暂停搬运教程，正在编写一个字幕处理程序，以此加快我翻译的速度。程序完成后，会重新开始译制教程，并在过往的投稿中选择我认为较为重要的机翻教程教程进行精翻。</p>
<div class="note info no-icon"><p><strong>程序完成进度：10%。</strong>啊，无奈，缓慢的编写进度！ (ಥ﹏ಥ)</p>
</div>

<h2 id="文档翻译">1.2 <a href="#文档翻译" class="headerlink" title="文档翻译"></a>文档翻译</h2><span id="more"></span>

<h1 id="B站翻译计划表">2 <a href="#B站翻译计划表" class="headerlink" title="B站翻译计划表"></a>B站翻译计划表</h1><p><strong>注：点击列表中的英文视频名即可访问相应的B站链接。</strong></p>
<h2 id="未完成（已搬运）">2.1 <a href="#未完成（已搬运）" class="headerlink" title="未完成（已搬运）"></a>未完成（已搬运）</h2><h2 id="精翻熟肉">2.2 <a href="#精翻熟肉" class="headerlink" title="精翻熟肉"></a>精翻熟肉</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
<th align="center">待完成</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av22248395/">Too Busy to Learn Blender</a></td>
<td align="center">没时间学Blender？</td>
<td align="center">1P</td>
<td align="center">应评论第六楼朋友的要求，细调06：36左右的字幕</td>
</tr>
</tbody></table>
<h2 id="机翻（即未完成精翻）">2.3 <a href="#机翻（即未完成精翻）" class="headerlink" title="机翻（即未完成精翻）"></a>机翻（即未完成精翻）</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
<th align="center">完成进度</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av21352168/">Blender Inside Out</a></td>
<td align="center">从里到外学习Blender</td>
<td align="center">56P</td>
<td align="center">已精翻共7P（P1-P6），剩余机翻共48P（P7-P56）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23309388/">The Cycles Node Editor</a></td>
<td align="center">Blender Cycles节点编辑器教程</td>
<td align="center">3P</td>
<td align="center">已精翻共P1（P1），剩余机翻共2P（P2-P3）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22416165/">Lighting and Baking Workflow- Blender Tutorial</a></td>
<td align="center">照明和烘培的工作流 - Blender教程</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22437199/">18 Ways to Speed Up Blender Cycles Rendering</a></td>
<td align="center">18种加速 Blender Cycles 渲染的方法</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22518346/">Blender Tutorial Quick Water Animation</a></td>
<td align="center">Blender教程-快速流体动画</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22533845/">Smoke Simulation Tutorial - Blender Cycles</a></td>
<td align="center">Blender Cycles烟雾模拟教程</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22675108/">Introduction to Modeling in Blender</a></td>
<td align="center">Blender建模介绍</td>
<td align="center">24P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22696450/">Blender Blend&amp;Paint</a></td>
<td align="center">Blender贴图绘制</td>
<td align="center">22P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22732936/">Money doesn&#39;t interest me - Creator of Blender talks about its future</a></td>
<td align="center">我对钱不感兴趣 - Blender创造者谈及它的未来</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22800138/">How I learned to draw&#39; with RossDraws</a></td>
<td align="center">如何跟RossDraws学画画？【Ross Tran采访】</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22903574/">Official Blender Open Movies</a></td>
<td align="center">官方Blender开源电影</td>
<td align="center">9P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22909325/">Comic book tutorial - Krita</a></td>
<td align="center">漫画教程 - Krita</td>
<td align="center">7P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22915300/">A comicpage creator for Krita</a></td>
<td align="center">krita漫画模板生成工具</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22668940/">Auto-Flatting Comic with Krita (+Gmic plugin)</a></td>
<td align="center">Krita漫画自动上色 - Gmic插件</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23002211/">Natron for Beginners - Intro _ Overview</a></td>
<td align="center">Natron新手教程-介绍概述</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22529905/">A New FREE Render Engine!</a></td>
<td align="center">一个新的免费渲染引擎（Radeon Pro Render）</td>
<td align="center">1P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23636374/">AMD Radeon™ ProRender</a></td>
<td align="center">AMD Radeon™ ProRender 官方教程 - 无字幕</td>
<td align="center">17P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23634562/">Real-Time Ray Tracing with Radeon ProRender</a></td>
<td align="center">Radeon ProRender 实时光线追踪</td>
<td align="center">1P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23635797/">Radeon™ ProRender Real Time Ray Tracing Explained</a></td>
<td align="center">Radeon™ ProRender 实时光线追踪解释</td>
<td align="center">1P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
</tbody></table>
<h2 id="未搬运">2.4 <a href="#未搬运" class="headerlink" title="未搬运"></a>未搬运</h2><ul>
<li>暂无</li>
</ul>
<h2 id="已完成">2.5 <a href="#已完成" class="headerlink" title="已完成"></a>已完成</h2><p><strong><center>Blender 教程</center></strong></p>
<table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av22327776">Is Blender Actually Hard to Learn</a></td>
<td align="center">Blender真的很难学吗？</td>
<td align="center">1P</td>
</tr>
</tbody></table>
<p><strong><center>Blender 插件教程</center></strong></p>
<table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av21226233">VSE Quick Functions Demo 0.91</a></td>
<td align="center">Blender VSE快速功能演示</td>
<td align="center">1P</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22523468/">Radeon Pro Render</a></td>
<td align="center">Radeon Pro Render 官方宣传视频</td>
<td align="center">1P</td>
</tr>
</tbody></table>
<h1 id="文档翻译计划表">3 <a href="#文档翻译计划表" class="headerlink" title="文档翻译计划表"></a>文档翻译计划表</h1><h2 id="开源软件的参考文档翻译">3.1 <a href="#开源软件的参考文档翻译" class="headerlink" title="开源软件的参考文档翻译"></a>开源软件的参考文档翻译</h2><h2 id="已参与">3.2 <a href="#已参与" class="headerlink" title="已参与"></a>已参与</h2><ul>
<li><a href="https://docs.krita.org/en/">Krita文档翻译</a></li>
</ul>
<h2 id="未参与（计划）">3.3 <a href="#未参与（计划）" class="headerlink" title="未参与（计划）"></a>未参与（计划）</h2><ul>
<li><a href="https://docs.blender.org/manual/en/dev/">Blender文档</a></li>
<li><a href="https://docs.gimp.org/2.10/zh_CN/">GIMP文档</a></li>
</ul>
<h2 id="渲染器的参考文档翻译（未实施）">3.4 <a href="#渲染器的参考文档翻译（未实施）" class="headerlink" title="渲染器的参考文档翻译（未实施）"></a>渲染器的参考文档翻译（未实施）</h2><p>这些文档在官网上没有提供在线文档浏览，因此我有想法在Github上开个公共 Repo 来建立翻译的储存库，也方便文档有新内容时可以实时更新吧！有想法的朋友可以共同参与！</p>
<p>目前暂定两个文档：</p>
<ul>
<li><a href="https://www.amd.com/en/technologies/radeon-prorender-downloads">Redoen Pro Render 的文档</a></li>
<li><a href="http://www.mitsuba-renderer.org/docs.html">Mitsuba Render 的文档</a></li>
</ul>
]]></content>
      <categories>
        <category>translations</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第一章「开始」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap1/</url>
    <content><![CDATA[<h1 id="第一章：开始"><a href="#第一章：开始" class="headerlink" title="第一章：开始"></a>第一章：开始</h1><h2 id="练习1-1"><a href="#练习1-1" class="headerlink" title="练习1.1"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_1.cpp">练习1.1</a></h2><blockquote>
<p>查阅你使用的编译器文档，确定它所使用的文件命名约定。编译并运行第2页的main程序。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-2"><a href="#练习1-2" class="headerlink" title="练习1.2"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_2.cpp">练习1.2</a></h2><blockquote>
<p>改写程序，让它返回-1。返回值-1通常被当作程序错误的标识。重新编译并运行你的程序，观察你的系统如何处理main返回的错误标识。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译后在命令行运行程序，之后通过<code>echo</code>查看。</p>
<p>cmd: <code>echo %ERRORLEVEL%</code>，输出-1</p>
<p>bash: <code>echo $?</code>，输出127</p>
<h2 id="练习1-3"><a href="#练习1-3" class="headerlink" title="练习1.3"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_3.cpp">练习1.3</a></h2><blockquote>
<p>编写程序，在标准输出上打印 Hello, World。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello, World&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-4"><a href="#练习1-4" class="headerlink" title="练习1.4"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_4.cpp">练习1.4</a></h2><blockquote>
<p>我们的程序使用加法运算符+来将两个数相加。编写程序使用乘法运算符*，来打印两个数的积。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Enter two numbers:&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="type">int</span> v1 = <span class="number">0</span>, v2 = <span class="number">0</span>;</span><br><span class="line">    std::cin &gt;&gt; v1 &gt;&gt; v2;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;The product of &quot;</span> &lt;&lt; v1 &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v2</span><br><span class="line">              &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; v1 * v2 &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-5"><a href="#练习1-5" class="headerlink" title="练习1.5"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_5.cpp">练习1.5</a></h2><blockquote>
<p>我们将所有输出操作放在一条很长的语句中。重写程序，将每个运算对象的打印操作放在一条独立的语句中。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Enter two numbers:&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="type">int</span> v1 = <span class="number">0</span>, v2 = <span class="number">0</span>;</span><br><span class="line">    std::cin &gt;&gt; v1 &gt;&gt; v2;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;The product of &quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; v1;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot; and &quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; v2;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot; is &quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; v1 * v2;</span><br><span class="line">    std::cout &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="练习1-6"><a href="#练习1-6" class="headerlink" title="练习1.6"></a>练习1.6</h2><blockquote>
<p>解释下面程序片段是否合法。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; &quot;The sum of &quot; &lt;&lt; v1;</span><br><span class="line">          &lt;&lt; &quot; and &quot; &lt;&lt; v2;</span><br><span class="line">          &lt;&lt; &quot; is &quot; &lt;&lt; v1 + v2 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果程序是合法的，它的输出是什么？如果程序不合法，原因何在？应该如何修正？</p>
</blockquote>
<p>不合法。<br><strong>分号「;」之间会被编译器处理成一条语句，所有第二、第三行没有cout对象（&lt;&lt;运算符要求左侧的运算对象必须是一个ostream对象），所以不合法。</strong></p>
<p>修正方式1：二三行添加cout对象</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;The sum of &quot;</span> &lt;&lt; v1;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v2;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; v1 + v2 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>修正方式2：删除一二行多余的分号</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;The sum of &quot;</span> &lt;&lt; v1</span><br><span class="line">          &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v2</span><br><span class="line">          &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; v1 + v2 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-7"><a href="#练习1-7" class="headerlink" title="练习1.7"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_7.cpp">练习1.7</a></h2><blockquote>
<p>编译一个包含不正确的嵌套注释的程序，观察编译器返回的错误信息。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* /* 内层注释 */</span> 外层注释 */</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-8"><a href="#练习1-8" class="headerlink" title="练习1.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_8.cpp">练习1.8</a></h2><blockquote>
<p>指出下列哪些输出语句是合法的(如果有的话)：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;/*&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;*/&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="comment">/* &quot;*/</span><span class="string">&quot; */;</span></span><br><span class="line"><span class="string">std::cout &lt;&lt; /* &quot;</span>*/<span class="string">&quot; /* &quot;</span><span class="comment">/*&quot; */</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>预测编译这些语句会产生什么样的结果，实际编译这些语句来验证你的答案（编写一个小程序，每次将上述一条语句作为其主体），改正每个编译错误。</p>
</blockquote>
<p>第三行不合法，编译出错，修正：增加一个双引号。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="comment">/* &quot;*/</span><span class="string">&quot; */&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**/ */ /*</span><br></pre></td></tr></table></figure>

<h2 id="练习1-9"><a href="#练习1-9" class="headerlink" title="练习1.9"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_9.cpp">练习1.9</a></h2><blockquote>
<p>编写程序，使用while循环将50到100的整数相加。</p>
</blockquote>
<h2 id="练习1-10"><a href="#练习1-10" class="headerlink" title="练习1.10"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_10.cpp">练习1.10</a></h2><blockquote>
<p>除了++运算符将运算对象的值增加1之外，还有一个递减运算符（--）实现将值减少1。编写程序，使用递减运算符在循环中按递减顺序打印出10到0之间的整数。</p>
</blockquote>
<h2 id="练习1-11"><a href="#练习1-11" class="headerlink" title="练习1.11"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_11.cpp">练习1.11</a></h2><blockquote>
<p>编写程序，提示用户输入两个整数，打印出这两个整数所指定的范围内的所有整数。</p>
</blockquote>
<h2 id="练习1-12"><a href="#练习1-12" class="headerlink" title="练习1.12"></a>练习1.12</h2><blockquote>
<p>下面的for循环完成了什么功能？sum的终值是多少？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int sum = 0;</span><br><span class="line">for (int i = -100; i &lt;= 100; ++i)</span><br><span class="line">    sum += i;</span><br></pre></td></tr></table></figure>

<p>从-100加到100，sum的终值为0。</p>
<h2 id="练习1-13"><a href="#练习1-13" class="headerlink" title="练习1.13"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_13.cpp">练习1.13</a></h2><blockquote>
<p>使用for循环重做1.4.1节中的所有练习（第11页）。</p>
</blockquote>
<h2 id="练习1-14"><a href="#练习1-14" class="headerlink" title="练习1.14"></a>练习1.14</h2><blockquote>
<p>对比for循环和while循环，两种形式的优缺点各是什么？</p>
</blockquote>
<p>对比 for 循环和 while 循环的优缺点：for 循环的变量可以在语句中定义，而 while 语句中直接就是判断循环的条件，无法在语句中定义变量。如此看来，for 语句中定义的变量所占用的内存可以在循环结束后回收，减少了内存的占用。</p>
<p><a href="http://stackoverflow.com/questions/2950931/for-vs-while-in-c-programming">在Stack Overflow上面有与这个相似的问题</a></p>
<h2 id="练习1-15"><a href="#练习1-15" class="headerlink" title="练习1.15"></a>练习1.15</h2><blockquote>
<p>编写程序，包含第14页“再探编译”中讨论的常见错误。熟悉编译器生成的错误信息。</p>
</blockquote>
<p>编译器可检查的错误：</p>
<ol>
<li>语法错误（syntax error）：比如main参数列表漏掉括号；语句结束之处用冒号而非分号；字符串字面值常量两侧漏掉引号。</li>
<li>类型错误（type error）：比如向一个期望参数为int的函数传递一个字符串字面值常量。</li>
<li>声明错误（declaration error）：比如对来自标准库的名字忘记使用std::以及标识符名字拼写错误。</li>
</ol>
<h2 id="练习1-16"><a href="#练习1-16" class="headerlink" title="练习1.16"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_16.cpp">练习1.16</a></h2><blockquote>
<p>编写程序，从cin读取一组数，输出其和。</p>
</blockquote>
<p><code>&lt;&lt;</code>输入运算符返回其左侧运算对象，而istream对象遇到文件结束符（end-of-file）或无效输入（类型不同）时就会变得无效，即条件变为假。</p>
<p>从键盘向程序输入数据时，如何输入文件结束符：</p>
<ul>
<li>Windows：ctrl+z</li>
<li>UNIX（包括Mac OS X）：ctrl+d</li>
</ul>
<h2 id="练习1-17"><a href="#练习1-17" class="headerlink" title="练习1.17"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_18.cpp">练习1.17</a></h2><blockquote>
<p>如果输入的所有值都是相等的，本节的程序会输出什么？如果没有重复值，输出又会是怎样的？</p>
</blockquote>
<ol>
<li>输入全部相等的值：程序只会打印出一个数字及它出现的次数。</li>
<li>输入没有重复的值：程序会打印每个数值，次数都为1。</li>
</ol>
<h2 id="练习1-18"><a href="#练习1-18" class="headerlink" title="练习1.18"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_18.cpp">练习1.18</a></h2><blockquote>
<p>编译并运行本节的程序，给它输入全都相等的值。再次运行程序，输入没有重复的值。</p>
</blockquote>
<h2 id="练习1-19"><a href="#练习1-19" class="headerlink" title="练习1.19"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_11.cpp">练习1.19</a></h2><blockquote>
<p>修改你为1.4.1节练习1.11（第11页）所编写的程序（打印一个范围内的数），使其能处理用户输入的第一个数比第二个数小的情况。</p>
</blockquote>
<h2 id="练习1-20"><a href="#练习1-20" class="headerlink" title="练习1.20"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_20.cpp">练习1.20</a></h2><blockquote>
<p>在网站<a href="http://www.informit.com/title/032174113">http://www.informit.com/title/032174113</a> 上，第1章的代码目录包含了头文件Sales_item.h。将它拷贝到你自己的工作目录中。用它编写一个程序，读取一组书籍销售记录，将每条记录打印到标准输出上。</p>
</blockquote>
<h2 id="练习1-21"><a href="#练习1-21" class="headerlink" title="练习1.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_21.cpp">练习1.21</a></h2><blockquote>
<p>编写程序，读取两个ISBN相同的Sales_item对象，输出他们的和。</p>
</blockquote>
<h2 id="练习1-22"><a href="#练习1-22" class="headerlink" title="练习1.22"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_22.cpp">练习1.22</a></h2><blockquote>
<p>编写程序，读取多个具有相同ISBN的销售记录，输出所有记录的和。</p>
</blockquote>
<h2 id="练习1-23"><a href="#练习1-23" class="headerlink" title="练习1.23"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_23.cpp">练习1.23</a></h2><blockquote>
<p>编写程序，读取多条销售记录，并统计每个ISBN（每本书）有几条销售记录。</p>
</blockquote>
<h2 id="练习1-24"><a href="#练习1-24" class="headerlink" title="练习1.24"></a>练习1.24</h2><blockquote>
<p>输入表示多个ISBN的多条销售记录来测试上一个程序，每个ISBN的记录应该聚在一起。</p>
</blockquote>
<h2 id="练习1-25"><a href="#练习1-25" class="headerlink" title="练习1.25"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_25.cpp">练习1.25</a></h2><blockquote>
<p>借助网站上的Sales_item.h头文件，编译并运行本节给出的书店程序。</p>
</blockquote>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>第一章</tag>
        <tag>习题答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第二章「变量和基本类型」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap2/</url>
    <content><![CDATA[<h1 id="第二章：变量和基本类型"><a href="#第二章：变量和基本类型" class="headerlink" title="第二章：变量和基本类型"></a>第二章：变量和基本类型</h1><h2 id="练习2-1"><a href="#练习2-1" class="headerlink" title="练习2.1"></a>练习2.1</h2><blockquote>
<p>类型 int、long、long long 和 short 的区别是什么？无符号类型和带符号类型的区别是什么？float 和 double的区别是什么？</p>
</blockquote>
<p>C++ 规定 <code>short</code> 和 <code>int</code> 至少16位，<code>long</code> 至少32位，<code>long long</code> 至少64位。<br>带符号类型能够表示正数、负数和 0 ，而无符号类型只能够表示 0 和正整数。<br>通常，单精度<code>float</code>用1个字表示（4个字节，32bit），双精度<code>double</code>用2个字表示（8个字节，64bit）。</p>
<p>用法（类型的选择）：</p>
<ul>
<li>如果确认数据是非负的，那么就使用 <code>unsigned</code> 无符号类型。</li>
<li>一般使用 <code>int</code> 做整数运算，<code>short</code> 因为太小在实际中用的少，<code>long</code> 通常和 <code>int</code> 有着相同的大小。如果数据非常大，可以使用 <code>long long</code> 。</li>
<li>算术表达式不用 <code>char</code> 或 <code>bool</code> ，这二者只建议用于存放字符或布尔值。因为<code>char</code>在某些机器上是有符号的，在另一些机器上是无符号型的，则使用 <code>char</code> 进行运算容易出问题。如果需要较小的整数，就明确指定 <code>signed char</code> 或者 <code>unsigned char</code>。</li>
<li>执行浮点运算时用 <code>double</code> ，因为 <code>float</code> 通常精度不够而且双精度浮点数和单精度浮点数的计算代价相差无几。</li>
</ul>
<p>参考：</p>
<ul>
<li><a href="https://isocpp.org/wiki/faq/newbie#choosing-int-size">What are the criteria for choosing between short &#x2F; int &#x2F; long data types?</a></li>
<li><a href="http://stackoverflow.com/questions/2386772/difference-between-float-and-double">Difference between float and double</a></li>
</ul>
<h3 id="float有效位理解"><a href="#float有效位理解" class="headerlink" title="float有效位理解"></a>float有效位理解</h3><p>IEEE规定<code>float</code>为32bit，尾数用23位存储，加上隐含的小数点前的1位1，2^(23+1) &#x3D; 16777216。因为 10^7 &lt; 16777216 &lt; 10^8，所以说单精度浮点数的有效位数是7位（能保证7位有效数字，当然，并非说第8位一定是非有效数字，它也有可能是准确的）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> i = <span class="number">12345678.76348</span>;</span><br><span class="line">    <span class="type">float</span> j = <span class="number">46857.9874</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n%f\n%.3f\n%.8f&quot;</span>, i, j, j, j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12345679.000000</span><br><span class="line">46857.988281</span><br><span class="line">46857.988</span><br><span class="line">46857.98828125</span><br></pre></td></tr></table></figure>

<p>从以上数据可以看出，第八个数字之后就不精确了。另外，要注意，有效数字的位数与指定输出的小数位数（%.7f，保留7位有效数字）是两码事，如第三第四个输出，这个是程序指定的输出格式，和类型本身能够存储的精度不是一回事。</p>
<h2 id="练习2-2"><a href="#练习2-2" class="headerlink" title="练习2.2"></a>练习2.2</h2><blockquote>
<p>计算按揭贷款时，对于利率、本金和付款分别应选择何种数据类型？说明你的理由。</p>
</blockquote>
<p>使用 <code>double</code> 或 <code>float</code> 。</p>
<h2 id="练习2-3"><a href="#练习2-3" class="headerlink" title="练习2.3"></a>练习2.3</h2><blockquote>
<p>读程序写结果。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> u = <span class="number">10</span>, u2 = <span class="number">42</span>;</span><br><span class="line">std::cout &lt;&lt; u2 - u &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; u - u2 &lt;&lt; std::endl;</span><br><span class="line"><span class="type">int</span> i = <span class="number">10</span>, i2 = <span class="number">42</span>;</span><br><span class="line">std::cout &lt;&lt; i2 - i &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; i - i2 &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; i - u &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; u - i &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">32</span><br><span class="line">4294967264 // -32=(-1)×2^32+4294967264</span><br><span class="line">32</span><br><span class="line">-32</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h3 id="类型转换的总结"><a href="#类型转换的总结" class="headerlink" title="类型转换的总结"></a>类型转换的总结</h3><ul>
<li>非布尔类型转换布尔类型时，0转换成false，非0则true（包括负数）。</li>
<li>布尔值转换非布尔类型时，false转换为0，true则1。</li>
<li>浮点数转换整数时，仅保留小数点之前的部分（即整数部分，小数部分直接截断），这是精度损失；当浮点数表示的值大过整型值，会发生溢出。</li>
<li>整数转浮点数时，小数部分记为0。不会发生溢出，但当整数值数据较大时，转换浮点数可能会发生精度丢失。例如，<code>int</code> 有31bit用来拓展精度，<code>float</code> 只有24bit，即当int值大于2^24或者小于-2^24时，转换<code>float</code>就会精度丢失。</li>
<li>给无符号类型赋值超过其表示范围时，实际值是初始值对无符号类型表示数值总数取模后的余数。8bit的<code>unsigned char</code>表示0-255，赋值超出范围时，实际值为该值对256取模后的余数。因此将-1赋给8bit的<code>unsigned char</code>时，结果值为255。</li>
<li>赋给带符号类型一个超出范围的值时，结果是未定义的。此时，程序可能工作、可能崩溃、也可能生成垃圾数据。</li>
</ul>
<p><strong>无符号类型和有符号类型计算，结果为负数时，结果值的计算方法</strong></p>
<p>给定一个正整数p，任意一个整数n，一定存在等式n&#x3D;kp+r</p>
<p>其中k、r是整数，且0&lt;&#x3D;r&lt;p，称k为n除以p的商，r为n除以p的余数。</p>
<p>定义取模运算：a % p（或a mod p），表示a除以p的余数。</p>
<p><strong>实际运用场景</strong>：将-1赋给8bit的<code>unsigned char</code>时，结果值为255。<br>计算过程：-1&#x3D;(-1)×256+255</p>
<p>二进制表示的本质：用补码表示，先看原码（符号位为1，数值位只有一个1）对原码取反加1（符号位不变），转换成补码后，所有位都是1。</p>
<h3 id="类型转换的使用场景总结"><a href="#类型转换的使用场景总结" class="headerlink" title="类型转换的使用场景总结"></a>类型转换的使用场景总结</h3><ul>
<li>不要混用带符号类型和无符号类型：表达式中含有这两种类型时，带符号数会自动转换成无符号数（此时，一个负数转换成无符号数后，真值将很大）。</li>
<li>循环中的判断条件慎用无符号数：无符号数表示范围为正整数，不会小于0，尤其是当循环的临界条件是0时。如以下代码，就是死循环，当u&#x3D;0时，循环条件依然满足，继续执行，--u就是-1，但无符号数只能表示整数，-1被自动地转换成一个合法的无符号数，即正整数。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> u = <span class="number">10</span>; u &gt;= <span class="number">0</span>; --u)</span><br><span class="line">    std::cout &lt;&lt; u &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>解决方式：</p>
<ol>
<li>用有符号类型</li>
<li>用while语句，代码如下。</li>
<li>类似while语句，将for语句的--u置于cout语句中。</li>
<li>2和3本质上就是保证u不会变为-1。</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> u = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">while</span> (u &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    --u;</span><br><span class="line">    std::cout &lt;&lt; u &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-4"><a href="#练习2-4" class="headerlink" title="练习2.4"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_4.cpp">练习2.4</a></h2><blockquote>
<p>编写程序检查你的估计是否正确，如果不正确，请仔细研读本节直到弄明白问题所在。</p>
</blockquote>
<span id="more"></span>

<h2 id="练习2-5"><a href="#练习2-5" class="headerlink" title="练习2.5"></a>练习2.5</h2><blockquote>
<p>指出下述字面值的数据类型并说明每一组内几种字面值的区别：</p>
</blockquote>
<ul>
<li>(a) &#39;a&#39;, L&#39;a&#39;, &quot;a&quot;, L&quot;a&quot;</li>
<li>(b) 10, 10u, 10L, 10uL, 012, 0xC</li>
<li>(c) 3.14, 3.14f, 3.14L</li>
<li>(d) 10, 10u, 10., 10e-2</li>
</ul>
<p>(a): 字符字面值，宽字符字面值，字符串字面值，宽字符串字面值。</p>
<p>(b): 十进制整型，十进制无符号整型，十进制长整型，十进制无符号长整型，八进制整型，十六进制整型。</p>
<p>(c): double, float, long double</p>
<p>(d): 十进制整型，十进制无符号整型，double, double</p>
<p>P.S. 要注意&#39;a&#39;和&quot;a&quot;不一样，&quot;a&quot;包含两个字符，字母和空字符（字符串字面值是由常量字符构成的数组，编译器会在字符串结尾处添加一个空字符&#39;\0&#39;）。</p>
<h2 id="练习2-6"><a href="#练习2-6" class="headerlink" title="练习2.6"></a>练习2.6</h2><blockquote>
<p>下面两组定义是否有区别，如果有，请叙述之：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> month = <span class="number">9</span>, day = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> month = <span class="number">09</span>, day = <span class="number">07</span>;</span><br></pre></td></tr></table></figure>

<p>第一行定义的是十进制整型。<br>第二行定义的是八进制整型，但是 month 变量无效，因为八进制没有 9 。</p>
<h2 id="练习2-7"><a href="#练习2-7" class="headerlink" title="练习2.7"></a>练习2.7</h2><blockquote>
<p>下述字面值表示何种含义？它们各自的数据类型是什么？</p>
</blockquote>
<ul>
<li>(a) &quot;Who goes with F\145rgus?\012&quot;</li>
<li>(b) 3.14e1L</li>
<li>(c) 1024f</li>
<li>(d) 3.14L</li>
</ul>
<p>(a): Who goes with Fergus?(换行)，string 类型：\145转为二进制001100101，ASCII表查询为e；\012转为二进制000001010，ASCII表查询为转义字符\n，即换行。</p>
<p>(b): long double</p>
<p>(c): 无效，因为后缀 f 只能用于浮点字面量，而 1024 是整型。</p>
<p>(d): long double</p>
<p>参考：</p>
<ul>
<li><a href="https://www.ascii-code.com/">ASCII Code</a></li>
<li><a href="http://www.asciitable.com/">ASCII Table</a></li>
</ul>
<p>转义序列的格式：</p>
<ul>
<li>反斜杠\后面跟着八进制的数字超过3个时，只有前三个与\构成转义序列。例如&quot;\1234&quot;表示两个字符，字符\123和字符4</li>
<li>\x会用到后面所有数字，例如&quot;\x1234&quot;表示一个16bit的字符，这种16bit字符一般都是与扩展字符集使用（用前缀表示，如u8啥的）。</li>
</ul>
<h2 id="练习2-8"><a href="#练习2-8" class="headerlink" title="练习2.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_8.cpp">练习2.8</a></h2><blockquote>
<p>请利用转义序列编写一段程序，要求先输出 2M，然后转到新一行。修改程序使其先输出 2，然后输出制表符，再输出 M，最后转到新一行。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\062\115\012&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\062\t\115\012&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-9"><a href="#练习2-9" class="headerlink" title="练习2.9"></a>练习2.9</h2><blockquote>
<p>解释下列定义的含义，对于非法的定义，请说明错在何处并将其改正。</p>
</blockquote>
<ul>
<li>(a) std::cin &gt;&gt; int input_value;</li>
<li>(b) int i &#x3D; { 3.14 };</li>
<li>(c) double salary &#x3D; wage &#x3D; 9999.99;</li>
<li>(d) int i &#x3D; 3.14;</li>
</ul>
<p>(a): 应该先定义再使用。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> input_value = <span class="number">0</span>;</span><br><span class="line">std::cin &gt;&gt; input_value;</span><br></pre></td></tr></table></figure>

<p>(b): 用列表初始化内置类型的变量时，如果存在丢失信息的风险，则编译器将报错。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> i = &#123; <span class="number">3.14</span> &#125;;</span><br></pre></td></tr></table></figure>

<p>(c): 在这里 wage 是未定义的，应该在此之前将其定义。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> wage;</span><br><span class="line"><span class="type">double</span> salary = wage = <span class="number">9999.99</span>;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> wage, salary = wage = <span class="number">9999.99</span>;</span><br></pre></td></tr></table></figure>

<p>(d): 不报错，但是小数部分会被截断。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> i = <span class="number">3.14</span>;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-10"><a href="#练习2-10" class="headerlink" title="练习2.10"></a>练习2.10</h2><blockquote>
<p>下列变量的初值分别是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::string global_str;</span><br><span class="line"><span class="type">int</span> global_int;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> local_int;</span><br><span class="line">    std::string local_str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>global_int</code> 是全局变量，所以初值为 0 。<br><code>local_int</code> 是局部变量并且没有初始化，它的初值是未定义的。<br><code>global_str</code> 和 <code>local_str</code> 是 string 类的对象，该对象定义了默认的初始化方式，即初始化为空字符串。</p>
<p><strong>P.S. 要养成良好习惯，初始化每个内置类型的变量，避免这种未定义造成程序运行故障（无法预计的故障）。</strong></p>
<h2 id="练习2-11"><a href="#练习2-11" class="headerlink" title="练习2.11"></a>练习2.11</h2><blockquote>
<p>指出下面的语句是声明还是定义：</p>
</blockquote>
<ul>
<li>(a) extern int ix &#x3D; 1024;</li>
<li>(b) int iy;</li>
<li>(c) extern int iz;</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): 定义</span><br><span class="line">(b): 定义</span><br><span class="line">(c): 声明</span><br></pre></td></tr></table></figure>

<h2 id="练习2-12"><a href="#练习2-12" class="headerlink" title="练习2.12"></a>练习2.12</h2><blockquote>
<p>请指出下面的名字中哪些是非法的？</p>
</blockquote>
<ul>
<li>(a) int double &#x3D; 3.14;</li>
<li>(b) int _;</li>
<li>(c) int catch-22;</li>
<li>(d) int 1_or_2 &#x3D; 1;</li>
<li>(e) double Double &#x3D; 3.14;</li>
</ul>
<p><code>(a)</code>, <code>(c)</code>, <code>(d)</code> 非法。</p>
<p>标识符由<strong>字母、数字和下划线</strong>组成。开头必须是<strong>字母或下划线</strong>。（C++中用户自定义的标识符，<strong>不能连续出现两个下划线，不能以下划线紧连大写字母开头</strong>）</p>
<h2 id="练习2-13"><a href="#练习2-13" class="headerlink" title="练习2.13"></a>练习2.13</h2><blockquote>
<p>下面程序中 j 的值是多少？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> j = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>j</code> 的值是 <code>100</code> ，局部变量 <code>i</code> 覆盖了全局变量 <code>i</code> 。</p>
<h2 id="练习2-14"><a href="#练习2-14" class="headerlink" title="练习2.14"></a>练习2.14</h2><blockquote>
<p>下面的程序合法吗？如果合法，它将输出什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">100</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i != <span class="number">10</span>; ++i)</span><br><span class="line">    sum += i;</span><br><span class="line">std::cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; sum &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>合法。输出是 <code>100 45</code> 。</p>
<h2 id="练习2-15"><a href="#练习2-15" class="headerlink" title="练习2.15"></a>练习2.15</h2><blockquote>
<p>下面的哪个定义是不合法的？为什么？</p>
</blockquote>
<ul>
<li>(a) int ival &#x3D; 1.01;</li>
<li>(b) int &amp;rval1 &#x3D; 1.01;</li>
<li>(c) int &amp;rval2 &#x3D; ival;</li>
<li>(d) int &amp;rval3;</li>
</ul>
<p><code>(b)</code> 和 <code>(d)</code> 不合法，<code>(b)</code> 引用必须绑定在对象上，<code>(d)</code> 引用必须初始化。</p>
<p><strong>引用（左值引用）只能绑定在对象上，而且必须初始化。</strong></p>
<h2 id="练习2-16"><a href="#练习2-16" class="headerlink" title="练习2.16"></a>练习2.16</h2><blockquote>
<p>考察下面的所有赋值然后回答：哪些赋值是不合法的？为什么？哪些赋值是合法的？它们执行了哪些操作？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int i = 0, &amp;r1 = i; double d = 0, &amp;r2 = d;</span><br><span class="line">- (a) r2 = 3.14159;</span><br><span class="line">- (b) r2 = r1;</span><br><span class="line">- (c) i = r2;</span><br><span class="line">- (d) r1 = d;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): 合法。给 d 赋值为 3.14159。</span><br><span class="line">(b): 合法。会执行自动转换（这里的自动转换不是指改变原有类型，int-&gt;double，先转换再赋值）。</span><br><span class="line">(c): 合法。会发生小数截断。</span><br><span class="line">(d): 合法。会发生小数截断。</span><br></pre></td></tr></table></figure>

<h2 id="练习2-17"><a href="#练习2-17" class="headerlink" title="练习2.17"></a>练习2.17</h2><blockquote>
<p>执行下面的代码段将输出什么结果？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i, &amp;ri = i;</span><br><span class="line">i = <span class="number">5</span>; ri = <span class="number">10</span>;</span><br><span class="line">std::cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ri &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 10</span><br></pre></td></tr></table></figure>

<h2 id="练习2-18"><a href="#练习2-18" class="headerlink" title="练习2.18"></a>练习2.18</h2><blockquote>
<p>编写代码分别改变指针的值以及指针所指对象的值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;a, *p2 = p1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// change the value of a pointer.</span></span><br><span class="line">p1 = &amp;b;</span><br><span class="line"><span class="comment">// change the value to which the pointer points</span></span><br><span class="line">*p2 = b;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-19"><a href="#练习2-19" class="headerlink" title="练习2.19"></a>练习2.19</h2><blockquote>
<p>说明指针和引用的主要区别</p>
</blockquote>
<ol>
<li>引用是另一个对象的别名（但不是对象），而指针本身就是一个对象。</li>
<li>引用必须初始化，并且一旦定义了引用就无法再绑定到其他对象。而指针无须在定义时赋初值，也可以重新赋值让其指向其他对象。</li>
</ol>
<h2 id="练习2-20"><a href="#练习2-20" class="headerlink" title="练习2.20"></a>练习2.20</h2><blockquote>
<p>请叙述下面这段代码的作用。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;i;</span><br><span class="line">*p1 = *p1 * *p1;</span><br></pre></td></tr></table></figure>

<p>让指针 <code>pi</code> 指向 <code>i</code>，然后将 <code>i</code> 的值重新赋值为 42 * 42 (1764)。</p>
<h2 id="练习2-21"><a href="#练习2-21" class="headerlink" title="练习2.21"></a>练习2.21</h2><blockquote>
<p>请解释下述定义。在这些定义中有非法的吗？如果有，为什么？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int i = 0;</span><br><span class="line">(a) double* dp = &amp;i;</span><br><span class="line">(b) int *ip = i;</span><br><span class="line">(c) int *p = &amp;i;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): 非法。不能将一个指向 `double` 的指针指向 `int` 。</span><br><span class="line">(b): 非法。不能将 `int` 变量赋给指针。</span><br><span class="line">(c): 合法。</span><br></pre></td></tr></table></figure>

<h2 id="练习2-22"><a href="#练习2-22" class="headerlink" title="练习2.22"></a>练习2.22</h2><blockquote>
<p>假设 p 是一个 int 型指针，请说明下述代码的含义。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (p) <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">if</span> (*p) <span class="comment">// ...</span></span><br></pre></td></tr></table></figure>
<p><code>if (p) // ...</code>  判断 p 是不是一个空指针,<br><code>if (*p) // ...</code> 判断 p 所指向的对象的值是不是为 0</p>
<h2 id="练习2-23"><a href="#练习2-23" class="headerlink" title="练习2.23"></a>练习2.23</h2><blockquote>
<p>给定指针 p，你能知道它是否指向了一个合法的对象吗？如果能，叙述判断的思路；如果不能，也请说明原因。</p>
</blockquote>
<p>不能，因为首先要确定这个指针是不是合法的，才能判断它所指向的对象是不是合法的。</p>
<p>书本P47，指针具有4种状态，指向对象只是状态之一。</p>
<h2 id="练习2-24"><a href="#练习2-24" class="headerlink" title="练习2.24"></a>练习2.24</h2><blockquote>
<p>在下面这段代码中为什么 p 合法而 lp 非法？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="type">void</span> *p = &amp;i;</span><br><span class="line"><span class="type">long</span> *lp = &amp;i;</span><br></pre></td></tr></table></figure>

<p><code>void *</code> 是（从C语言那里继承过来的，这句话存疑，暂未查证），可以指向任何类型的对象（即可以存放任意对象的地址）。而其他指针类型必须要与所指对象严格匹配。</p>
<p>注意，<code>void *</code>不是空指针，空指针是null pointer，不指向任何对象，字面值常用<code>nullptr</code>。</p>
<h2 id="练习2-25"><a href="#练习2-25" class="headerlink" title="练习2.25"></a>练习2.25</h2><blockquote>
<p>说明下列变量的类型和值。</p>
</blockquote>
<ul>
<li>(a) int* ip, i, &amp;r &#x3D; i;</li>
<li>(b) int i, *ip &#x3D; 0;</li>
<li>(c) int* ip, ip2;</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): ip是一个指向int的指针（块作用域内不赋初值），i是一个int（块作用域内不赋初值）, r是i的引用（同上）。</span><br><span class="line">(b): i是int（块作用域内不赋初值），ip是一个空指针（不指向任何对象）。</span><br><span class="line">(c): ip是一个指向int的指针（块作用域内不赋初值）, ip2是一个 int（块作用域内不赋初值）。</span><br></pre></td></tr></table></figure>

<p>作用域：全局作用域（global scope）和块作用域（block scope），一般块作用域习惯称为局部作用域。</p>
<p>面对一条复杂的指针或引用的声明语句时，从右往左阅读：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> ival = <span class="number">1024</span>;</span><br><span class="line"><span class="type">int</span> *pi = &amp;ival;</span><br><span class="line"><span class="type">int</span> **ppi = &amp;pi; <span class="comment">// ppi是指向指针的指针</span></span><br><span class="line"><span class="type">int</span> **ppi = <span class="number">0</span><span class="comment">// 为访问最原始的对象，需要两次解引用 **ppi</span></span><br><span class="line"><span class="type">int</span> *&amp;r = pi <span class="comment">// 从右往左阅读，&amp;r是一个引用，*说明r引用的是指针，int类型则具体说明了r引用的是int指针。</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-26"><a href="#练习2-26" class="headerlink" title="练习2.26"></a>练习2.26</h2><blockquote>
<p>下面哪些语句是合法的？如果不合法，请说明为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> buf;      <span class="comment">// 不合法, const 对象必须初始化</span></span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;        <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> sz = cnt; <span class="comment">// 合法</span></span><br><span class="line">++cnt; ++sz;        <span class="comment">// ++sz不合法, const 对象不能被改变</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-27"><a href="#练习2-27" class="headerlink" title="练习2.27"></a>练习2.27</h2><blockquote>
<p>下面的哪些初始化是合法的？请说明原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">-1</span>, &amp;r = <span class="number">0</span>;         <span class="comment">// 不合法, r必须引用一个对象（非常量引用的初始值必须是一个对象）</span></span><br><span class="line"><span class="type">int</span> *<span class="type">const</span> p2 = &amp;i2;        <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> i = <span class="number">-1</span>, &amp;r = <span class="number">0</span>;   <span class="comment">// 合法，常量引用可以非常量的对象、绑定字面值、一般表达式</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p3 = &amp;i2;  <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p1 = &amp;i2;        <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> &amp;<span class="type">const</span> r2;        <span class="comment">// 不合法, r2是引用，引用没有顶层 const（引用只是对象的别名）</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> i2 = i, &amp;r = i;   <span class="comment">// 合法</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-28"><a href="#练习2-28" class="headerlink" title="练习2.28"></a>练习2.28</h2><blockquote>
<p>说明下面的这些定义是什么意思，挑出其中不合法的。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i, *<span class="type">const</span> cp;       <span class="comment">// 不合法，cp未初始化，const指针必须初始化（指针常量要初始化）</span></span><br><span class="line"><span class="type">int</span> *p1, *<span class="type">const</span> p2;     <span class="comment">// 不合法，p2未初始化，const指针必须初始化</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ic, &amp;r = ic;  <span class="comment">// 不合法，ic未初始化，const int必须初始化</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p3;    <span class="comment">// 不合法，p3未初始化，const指针必须初始化</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p;           <span class="comment">// 合法。一个指针，指向 const int（常量指针）</span></span><br></pre></td></tr></table></figure>

<p><strong>一个常量对象必须初始化，一旦初始化其值就不能再改变。</strong></p>
<h2 id="练习2-29"><a href="#练习2-29" class="headerlink" title="练习2.29"></a>练习2.29</h2><blockquote>
<p>假设已有上一个练习中定义的那些变量，则下面的哪些语句是合法的？请说明原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">i = ic;     <span class="comment">// 合法, 常量赋值给普通变量</span></span><br><span class="line">p1 = p3;    <span class="comment">// 不合法, p3是一个指向int常量的常量指针常量，p1是指向int变量的指针。指向const的指针，不能给普通指针赋值。</span></span><br><span class="line">p1 = &amp;ic;   <span class="comment">// 不合法, 普通指针不能指向常量</span></span><br><span class="line">p3 = &amp;ic;   <span class="comment">// 不合法, p3是常量指针常量，是一个常量，无法改变常量的值。</span></span><br><span class="line">p2 = p1;    <span class="comment">// 不合法，p2是指针常量，无法改变常量的值。</span></span><br><span class="line">ic = *p3;   <span class="comment">// 不合法, 虽然对p3解引用是一个int常量，但ic本身就是一个int常量，无法改变常量的值。</span></span><br></pre></td></tr></table></figure>

<p>常量指针不能赋值给普通指针，因为它是指向常量（存储着常量的地址），如果允许赋值给普通指针，就意味着可以通过其他指针修改那个常量。不过可以赋值给另一个常量指针，因为它们都是指向常量，都是底层const。</p>
<p>而指针常量（const指针）是可以给普通指针赋值的。</p>
<p>引用的类型必须与其所引用的对象的类型一致，指针的类型必须与其所指对象的类型一致。但有例外情况（例如允许一个指向常量的指针指向一个非常量对象，当然，仅限于常量和非常量的区别，不是指int和double这种类型区别）。</p>
<p><strong>例外情况的解释：</strong><br>指向常量的指针或引用，并未规定所指的对象必须是一个常量。所谓的「指向常量」，只是规定不能通过指针或引用来改变对象的值（并未规定那个对象的值不能改变，这个值可以通过其他渠道改变）。通俗点讲：就是指针或引用“自以为是”，觉得自己指向了常量，所以会自觉地不去改变所指对象的值。</p>
<h2 id="练习2-30"><a href="#练习2-30" class="headerlink" title="练习2.30"></a>练习2.30</h2><blockquote>
<p>对于下面的这些语句，请说明对象被声明成了顶层const还是底层const？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> v2 = <span class="number">0</span>; <span class="type">int</span> v1 = v2;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;v1, &amp;r1 = v1;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p2 = &amp;v2, *<span class="type">const</span> p3 = &amp;i, &amp;r2 = v2;</span><br></pre></td></tr></table></figure>

<p>v2是顶层const，v1是普通int；p1是普通指针，r1是对v1的引用；p2是底层const，p3既是顶层const也是底层const，r2是底层const。</p>
<ul>
<li>顶层const：表示任意对象是常量，对任意数据类型都适用。顶层const指本身就是常量，常量只能初始化，不能被赋值。</li>
<li>底层const：表示所指或所引用对象是常量，只与指针、引用等复合类型的基本类型部分有关。（用于声明引用的const都是底层const）。拷贝时，要求两个对象具有相同的底层const或者两个对象之间的数据类型可以转换（非常量可以转常量）。</li>
</ul>
<p>常量表达式是指值不会改变，在编译过程中就能得到计算结果的表达式。</p>
<p>constexpr类型声明的变量是由编译器验证变量的值是否是一个常量表达式。用constexpr声明的对象会把它置为顶层const，比如constexpr int *q &#x3D; nullptr就相当于int *const q &#x3D; nullptr。</p>
<h2 id="练习2-31"><a href="#练习2-31" class="headerlink" title="练习2.31"></a>练习2.31</h2><blockquote>
<p>假设已有上一个练习中所做的那些声明，则下面的哪些语句是合法的？请说明顶层const和底层const在每个例子中有何体现。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">r1 = v2; <span class="comment">// 合法，顶层const在拷贝时不受影响</span></span><br><span class="line">p1 = p2; <span class="comment">// 不合法，p2是底层const，如果要拷贝必须要求p1也是底层const</span></span><br><span class="line">p2 = p1; <span class="comment">// 合法，int* 可以转换成const int*</span></span><br><span class="line">p1 = p3; <span class="comment">// 不合法，p3是一个底层const，p1不是</span></span><br><span class="line">p2 = p3; <span class="comment">// 合法，p2和p3都是底层const，拷贝时忽略掉顶层const</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-32"><a href="#练习2-32" class="headerlink" title="练习2.32"></a>练习2.32</h2><blockquote>
<p>下面的代码是否合法？如果非法，请设法将其修改正确。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int null = 0, *p = null;</span><br></pre></td></tr></table></figure>
<p>非法。（书本P49）把int变量直接赋给指针是错误的操作，即使int变量的值恰好等于0也不行。<br>修正方式1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int null = 0, *p = 0;</span><br></pre></td></tr></table></figure>
<p>修正方式2：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> null = <span class="number">0</span>, *p = &amp;null;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-33"><a href="#练习2-33" class="headerlink" title="练习2.33"></a>练习2.33</h2><blockquote>
<p>利用本节定义的变量，判断下列语句的运行结果。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">a=<span class="number">42</span>; <span class="comment">// a 是 int</span></span><br><span class="line">b=<span class="number">42</span>; <span class="comment">// b 是一个 int,(ci的顶层const在拷贝时被忽略掉了)</span></span><br><span class="line">c=<span class="number">42</span>; <span class="comment">// c 也是一个int</span></span><br><span class="line">d=<span class="number">42</span>; <span class="comment">// d 是一个 int *，所以语句非法</span></span><br><span class="line">e=<span class="number">42</span>; <span class="comment">// e 是一个 const int *，所以语句非法</span></span><br><span class="line">g=<span class="number">42</span>; <span class="comment">// g 是一个 const int 的引用，引用都是底层const，所以不能被赋值</span></span><br></pre></td></tr></table></figure>

<p><strong>类型别名（typedef和using）</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> wages</span><br><span class="line"><span class="keyword">using</span> wages=<span class="type">double</span></span><br><span class="line"><span class="comment">// 注意指针和类型别名的应用</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *pstring;</span><br><span class="line"><span class="type">const</span> pstring cstr = <span class="number">0</span>; <span class="comment">// cstr是指向char的指针常量。注意不要理解成 cosnt char *cstr = 0，这是错误的，const在这里是修饰整个类型，应该是顶层const。</span></span><br><span class="line"><span class="type">const</span> pstring *ps; <span class="comment">// ps是一个指针（实际就是指针的指针），它的对象是指向char的指针常量。</span></span><br></pre></td></tr></table></figure>

<p><strong>auto关键字（让编译器通过初始值推断类型）</strong></p>
<ul>
<li>auto定义的变量必须有初值。</li>
<li>auto一般会忽略掉顶层const，同时底层const会保留下来（若希望推断出的auto类型一个顶层const，明确指出const auto）。</li>
<li>引用的类型也可以设为auto，例如<code>auto &amp;a=i</code>，但注意顶层const依然是会被忽略，<code>auto &amp;b=42</code>是错误的，<code>const auto &amp;b=42</code>才是正确的。</li>
</ul>
<h2 id="练习2-34"><a href="#练习2-34" class="headerlink" title="练习2.34"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_34.cpp">练习2.34</a></h2><blockquote>
<p>基于上一个练习中的变量和语句编写一段程序，输出赋值前后变量的内容，你刚才的推断正确吗？如果不对，请反复研读本节的示例直到你明白错在何处为止。</p>
</blockquote>
<h2 id="练习2-35"><a href="#练习2-35" class="headerlink" title="练习2.35"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_35.cpp">练习2.35</a></h2><blockquote>
<p>判断下列定义推断出的类型是什么，然后编写程序进行验证。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">auto</span> j = i; <span class="type">const</span> <span class="keyword">auto</span> &amp;k = i; <span class="keyword">auto</span> *p = &amp;i;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> j2 = i, &amp;k2 = i;</span><br></pre></td></tr></table></figure>

<p>j 是 int，k 是 const int的引用，p 是const int *，j2 是const int，k2 是 const int 的引用。</p>
<p>验证依靠hint即可（鼠标悬停在变量上），无需编译。</p>
<h2 id="练习2-36"><a href="#练习2-36" class="headerlink" title="练习2.36"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_36.cpp">练习2.36</a></h2><blockquote>
<p>关于下面的代码，请指出每一个变量的类型以及程序结束时它们各自的值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">decltype</span>(a) c = a;</span><br><span class="line"><span class="keyword">decltype</span>((b)) d = a;</span><br><span class="line">++c;</span><br><span class="line">++d;</span><br></pre></td></tr></table></figure>
<p>a、b、c都是int类型，d是int &amp;类型，即引用，绑定到a。<br>程序结束时的值：a、b、c、d都为4。</p>
<p><strong>decltype关键字（让编译器分析表达式来得到类型，不计算表达式的值）</strong></p>
<ul>
<li>变量是否需要赋初值，看类型，如int可以不赋初值，引用必须要初值。</li>
<li>decltype使用的表达式是一个变量时，则返回该变量的类型（包括顶层const和引用）。</li>
<li>decltype使用的表达式不是一个变量时，则返回表达式结果的类型。</li>
</ul>
<p><strong>decltype返回引用类型的情况：</strong></p>
<ol>
<li>decltype(variable)时，variable本身是一个引用，返回引用类型。</li>
<li>双层括号decltype((variable))返回的结果永远是引用类型。</li>
<li>decltype(表达式为解引用操作，如*p)，返回引用类型（解引用指针操作，得到指针所指的对象，还能给这个对象赋值）。</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>, *p = &amp;i, &amp;r = i;</span><br><span class="line"><span class="keyword">decltype</span>(r) a = i;   <span class="comment">// a是引用，绑定到变量i</span></span><br><span class="line"><span class="keyword">decltype</span>(r + <span class="number">0</span>) b;   <span class="comment">// b是int，b是一个未初始化的int</span></span><br><span class="line"><span class="keyword">decltype</span>((i)) c = i; <span class="comment">// c是引用，绑定到变量i</span></span><br><span class="line"><span class="keyword">decltype</span>(*p) d = i;  <span class="comment">// d是引用，绑定到变量i</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-37"><a href="#练习2-37" class="headerlink" title="练习2.37"></a>练习2.37</h2><blockquote>
<p>赋值是会产生引用的一类典型表达式，引用的类型就是左值的类型。也就是说，如果 i 是 int，则表达式 i&#x3D;x 的类型是 int&amp;。根据这一特点，请指出下面的代码中每一个变量的类型和值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">decltype</span>(a) c = a;</span><br><span class="line"><span class="keyword">decltype</span>(a = b) d = a;</span><br></pre></td></tr></table></figure>
<p>a、b、c都是int类型，d是int &amp;类型，即引用，绑定到a。<br>a的值为3，b的值为4，c的值为3，d的值为3。</p>
<h2 id="练习2-38"><a href="#练习2-38" class="headerlink" title="练习2.38"></a>练习2.38</h2><blockquote>
<p>说明由decltype 指定类型和由auto指定类型有何区别。请举一个例子，decltype指定的类型与auto指定的类型一样；再举一个例子，decltype指定的类型与auto指定的类型不一样。</p>
</blockquote>
<ul>
<li>decltype依据类型决定是否需要赋初值，auto必须要有初值。</li>
<li>decltype处理顶层const方式与auto不同，decltype会将顶层const保留起来，auto会忽略掉顶层const。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">0</span>, &amp;r = i;</span><br><span class="line"><span class="comment">// 相同 都是int</span></span><br><span class="line"><span class="keyword">auto</span> a = i;</span><br><span class="line"><span class="keyword">decltype</span>(i) b = i;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不同 d 是一个 int&amp;</span></span><br><span class="line"><span class="keyword">auto</span> c = r;</span><br><span class="line"><span class="keyword">decltype</span>(r) d = r;</span><br></pre></td></tr></table></figure>

<p>stackoverflow的<a href="http://stackoverflow.com/questions/21369113/what-is-the-difference-between-auto-and-decltypeauto-when-returning-from-a-fun">参考1</a>和<a href="http://stackoverflow.com/questions/12084040/decltype-vs-auto">参考2</a>有更多的讨论。</p>
<h2 id="练习2-39"><a href="#练习2-39" class="headerlink" title="练习2.39"></a>练习2.39</h2><blockquote>
<p>编译下面的程序观察其运行结果，注意，如果忘记写类定义体后面的分号会发生什么情况？记录下相关的信息，以后可能会有用。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Foo</span> &#123; <span class="comment">/* 此处为空  */</span> &#125; <span class="comment">// 注意：没有分号</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>提示应输入分号。</p>
<p><strong>关键字<code>class</code>和<code>struct</code>都可以用来定义数据类型（类）。</strong></p>
<h2 id="练习2-40"><a href="#练习2-40" class="headerlink" title="练习2.40"></a>练习2.40</h2><blockquote>
<p>根据自己的理解写出 Sales_data 类，最好与书中的例子有所区别。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    std::string bookName;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">    <span class="type">double</span> price = <span class="number">0.0</span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-41"><a href="#练习2-41" class="headerlink" title="练习2.41"></a>练习2.41</h2><blockquote>
<p>使用你自己的Sale_data类重写1.5.1节（第20页）、1.5.2节（第21页）和1.6节（第22页）的练习。眼下先把Sales_data类的定义和main函数放在一个文件里。</p>
</blockquote>
<h3 id="1-5-1节"><a href="#1-5-1节" class="headerlink" title="1.5.1节"></a>1.5.1节</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sale_data book;</span><br><span class="line">    <span class="type">double</span> price;</span><br><span class="line">    std::cin &gt;&gt; book.bookNo &gt;&gt; book.units_sold &gt;&gt; price;</span><br><span class="line">    book.revenue = book.units_sold * price;</span><br><span class="line">    std::cout &lt;&lt; book.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; book.units_sold &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; book.revenue &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-2节"><a href="#1-5-2节" class="headerlink" title="1.5.2节"></a>1.5.2节</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sale_data book1, book2;</span><br><span class="line">    <span class="type">double</span> price1, price2;</span><br><span class="line">    std::cin &gt;&gt; book1.bookNo &gt;&gt; book1.units_sold &gt;&gt; price1;</span><br><span class="line">    std::cin &gt;&gt; book2.bookNo &gt;&gt; book2.units_sold &gt;&gt; price2;</span><br><span class="line">    book1.revenue = book1.units_sold * price1;</span><br><span class="line">    book2.revenue = book2.units_sold * price2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (book1.bookNo == book2.bookNo)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">unsigned</span> totalCnt = book1.units_sold + book2.units_sold;</span><br><span class="line">        <span class="type">double</span> totalRevenue = book1.revenue + book2.revenue;</span><br><span class="line">        std::cout &lt;&lt; book1.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; totalCnt &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; totalRevenue &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (totalCnt != <span class="number">0</span>)</span><br><span class="line">            std::cout &lt;&lt; totalRevenue / totalCnt &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            std::cout &lt;&lt; <span class="string">&quot;(no sales)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;Data must refer to same ISBN&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// indicate failure</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-6节"><a href="#1-6节" class="headerlink" title="1.6节"></a>1.6节</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sale_data total;</span><br><span class="line">    <span class="type">double</span> totalPrice;</span><br><span class="line">    <span class="keyword">if</span> (std::cin &gt;&gt; total.bookNo &gt;&gt; total.units_sold &gt;&gt; totalPrice)</span><br><span class="line">    &#123;</span><br><span class="line">        total.revenue = total.units_sold * totalPrice;</span><br><span class="line"></span><br><span class="line">        Sale_data trans;</span><br><span class="line">        <span class="type">double</span> transPrice;</span><br><span class="line">        <span class="keyword">while</span> (std::cin &gt;&gt; trans.bookNo &gt;&gt; trans.units_sold &gt;&gt; transPrice)</span><br><span class="line">        &#123;</span><br><span class="line">            trans.revenue = trans.units_sold * transPrice;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (total.bookNo == trans.bookNo)</span><br><span class="line">            &#123;</span><br><span class="line">                total.units_sold += trans.units_sold;</span><br><span class="line">                total.revenue += trans.revenue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                std::cout &lt;&lt; total.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.units_sold &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.revenue &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (total.units_sold != <span class="number">0</span>)</span><br><span class="line">                    std::cout &lt;&lt; total.revenue / total.units_sold &lt;&lt; std::endl;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;(no sales)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">                total.bookNo = trans.bookNo;</span><br><span class="line">                total.units_sold = trans.units_sold;</span><br><span class="line">                total.revenue = trans.revenue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        std::cout &lt;&lt; total.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.units_sold &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.revenue &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (total.units_sold != <span class="number">0</span>)</span><br><span class="line">            std::cout &lt;&lt; total.revenue / total.units_sold &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            std::cout &lt;&lt; <span class="string">&quot;(no sales)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;No data?!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// indicate failure</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-42"><a href="#练习2-42" class="headerlink" title="练习2.42"></a>练习2.42</h2><blockquote>
<p>根据你自己的理解重写一个Sales_data.h头文件，并以此为基础重做2.6.2节（第67页）的练习。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_42_1.cpp">1.5.1节</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_42_2.cpp">1.5.2节</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_42_3.cpp">1.6节</a></li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>第二章</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第三章「字符串、向量和数组」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap3/</url>
    <content><![CDATA[<h1 id="第三章：字符串、向量和数组"><a href="#第三章：字符串、向量和数组" class="headerlink" title="第三章：字符串、向量和数组"></a>第三章：字符串、向量和数组</h1><h2 id="练习3-1"><a href="#练习3-1" class="headerlink" title="练习3.1"></a>练习3.1</h2><blockquote>
<p>使用恰当的using声明重做1.4.1节（第11页）和2.6.2节（第67页）的练习。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_1_1.cpp">1.4.1</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_1_2.cpp">2.6.2</a></li>
</ul>
<p>因为较为简单，每个小节就只写一个练习了。</p>
<p>using声明易造成名字冲突：</p>
<ul>
<li>使用using声明，一般建议为每个名字做独立的using声明，例如<code>using std::cin</code>，不太建议使用整个命名空间，例如<code>using namespace std</code>，易造成名字冲突。</li>
<li>头文件不应包含using声明：易造成名字冲突。</li>
</ul>
<h2 id="练习3-2"><a href="#练习3-2" class="headerlink" title="练习3.2"></a>练习3.2</h2><blockquote>
<p>编写一段程序从标准输入中一次读入一行，然后修改该程序使其一次读入一个词。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_2_1.cpp">一次读入一行</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_2_2.cpp">一次读入一个词</a></li>
</ul>
<h2 id="练习3-3"><a href="#练习3-3" class="headerlink" title="练习3.3"></a>练习3.3</h2><blockquote>
<p>请说明string类的输入运算符和getline函数分别是如何处理空白字符的。</p>
</blockquote>
<ul>
<li>类似 cin &gt;&gt; str 的读取，string对象会忽略开头的空白（空格符、换行符、制表符等）并从第一个真正的字符开始读起，直到遇见下一处空白为止。</li>
<li>类似 getline(cin, str) 的读取，string对象会从给定的输入流中读取内容，直到遇到换行符为止（换行符被读进来，但不会存放进对象）。</li>
</ul>
<h2 id="练习3-4"><a href="#练习3-4" class="headerlink" title="练习3.4"></a>练习3.4</h2><blockquote>
<p>编写一段程序读取两个字符串，比较其是否相等并输出结果。如果不相等，输出较大的那个字符串。改写上述程序，比较输入的两个字符串是否等长，如果不等长，输出长度较大的那个字符串。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_4_1.cpp">比较大的</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_4_2.cpp">长度大的</a></li>
</ul>
<h2 id="练习3-5"><a href="#练习3-5" class="headerlink" title="练习3.5"></a>练习3.5</h2><blockquote>
<p>编写一段程序从标准输入中读入多个字符串并将它们连接在一起，输出连接成的大字符串。然后修改上述程序，用空格把输入的多个字符串分隔开来。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_5_1.cpp">无空格分隔</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_5_2.cpp">空格分隔</a></li>
</ul>
<p>string对象操作的一些总结：</p>
<ul>
<li><strong>定义、初始化和基本操作看下面代码（书本见P76和P77）。</strong></li>
<li>关系运算符&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;比较规则：依次比较每个位置上的字符大小，若都一样时，则长度更长的字符串就更大。</li>
<li><code>string</code>和字符字面值和字符串字面值混在一条语句中，必须确保加法运算符「+」两侧至少有一个<code>string</code>对象（因为标准库可以将字面值转换为<code>string</code>对象，但不允许两个字面值直接相加）</li>
<li><code>size()</code>函数返回的是<code>string::size_type</code>类型的值，是无符号数。表达式中如果有<code>size()</code>，切记不要再使用<code>int</code>。如果需要定义变量存储<code>size()</code>函数，使用<code>auto</code>或<code>decltype</code>，例如<code>auto len = str.size()</code></li>
<li><strong>注意字符串字面值不是<code>string</code>对象，和<code>string</code>是不同的类型（因为需要兼容C）。</strong></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义和初始化（等号是拷贝初始化，圆括号是直接初始化）</span></span><br><span class="line">string s1;     <span class="comment">//默认初始化为空串</span></span><br><span class="line"><span class="function">string <span class="title">s2</span><span class="params">(s1)</span></span>; <span class="comment">// s2是s1的副本</span></span><br><span class="line">string s2 = s1; <span class="comment">// 同上，不过是拷贝初始化</span></span><br><span class="line">string s3 = (<span class="string">&quot;hello&quot;</span>); <span class="comment">// s3是字面值&quot;hello&quot;的副本（不包括字面值中的空字符）</span></span><br><span class="line">string s3 = <span class="string">&quot;hello&quot;</span>; <span class="comment">// 同上</span></span><br><span class="line"><span class="function">string <span class="title">s4</span><span class="params">(n, <span class="string">&#x27;c&#x27;</span>)</span></span>; <span class="comment">// s4初始化为由n个字符c组成的串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本操作</span></span><br><span class="line">os &lt;&lt; s; <span class="comment">// 将s写到输出流os，返回os</span></span><br><span class="line">is &gt;&gt; s; <span class="comment">// 将输入流is读取字符串赋值给s，字符串以空白分割，返回is</span></span><br><span class="line"><span class="built_in">getline</span>(is, s); <span class="comment">// 从输入流is读取一行赋值给s，返回is</span></span><br><span class="line">s.<span class="built_in">empty</span>(); <span class="comment">// s为空返回true，否则返回false</span></span><br><span class="line">s.<span class="built_in">size</span>(); <span class="comment">// 返回s中字符的个数</span></span><br><span class="line">s[n]; <span class="comment">// 返回s中第n个字符的引用，下标从0计起。</span></span><br><span class="line">s1 + s2; <span class="comment">// 返回s1和s2连接后的结果</span></span><br><span class="line">s1 = s2; <span class="comment">// 用s2的副本代替s1中原来的字符</span></span><br><span class="line">s1 == s2; <span class="comment">// 判断两个string对象是否相等，对字母大小写敏感</span></span><br><span class="line">s1 != s2;</span><br><span class="line">&lt;, &lt;=, &gt;, &gt;= ; <span class="comment">// 利用字符在字典中的顺序进行比较，对字母大小写敏感</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="练习3-6"><a href="#练习3-6" class="headerlink" title="练习3.6"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_6.cpp">练习3.6</a></h2><blockquote>
<p>编写一段程序，使用范围for语句将字符串内的所有字符用X代替。</p>
</blockquote>
<p><strong>for范围语句中引用的理解：</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;c : s)</span><br><span class="line">    c = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> itr = s.<span class="built_in">begin</span>(); itr != s.<span class="built_in">end</span>(); ++itr) &#123;</span><br><span class="line">    <span class="keyword">auto</span> &amp;c = *itr; <span class="comment">// 每个迭代中用一个新引用绑定一个元素</span></span><br><span class="line">    c = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习3-7"><a href="#练习3-7" class="headerlink" title="练习3.7"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_7.cpp">练习3.7</a></h2><blockquote>
<p>就上一题完成的程序而言，如果将循环控制变量的类型设为char将发生什么？先估计一下结果，然后实际编程进行验证。</p>
</blockquote>
<p>字符串没有变化（因为c只是拷贝，即char，而非引用，即char &amp;，所以无法改变字符串的）。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">string <span class="title">str</span><span class="params">(<span class="string">&quot;hello, world!&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> c : str)</span><br><span class="line">    c = <span class="string">&#x27;X&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="练习3-8"><a href="#练习3-8" class="headerlink" title="练习3.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_8.cpp">练习3.8</a></h2><blockquote>
<p>分别用while循环和传统for循环重写第一题的程序，你觉得哪种形式更好呢？为什么？</p>
</blockquote>
<p>范围for语句更好，因为不需要直接操作索引，更简洁。</p>
<h2 id="练习3-9"><a href="#练习3-9" class="headerlink" title="练习3.9"></a>练习3.9</h2><blockquote>
<p>下面的程序有何作用？它合法吗？如果不合法，为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line">cout &lt;&lt; s[<span class="number">0</span>] &lt;&lt; endl;</span><br></pre></td></tr></table></figure>

<p>不合法。使用下标访问空字符串是非法的行为（通过下标访问不存在元素的行为会导致缓冲区错误buffer overflow，本质上就是下标越界，试图访问非法内存区域）。</p>
<p><strong>只能对确知已存在的元素执行下标操作：建议设下标类型为<code>decltype(str.size())</code>，这样可以确保下标不会小于0。写程序逻辑时，自己确保下标小于<code>str.size()</code>即可（或者使用范围for语句遍历更方便，能有效地确保下标合法，不会出现下标越界）。</strong></p>
<h2 id="练习3-10"><a href="#练习3-10" class="headerlink" title="练习3.10"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_10.cpp">练习3.10</a></h2><blockquote>
<p>编写一段程序，读入一个包含标点符号的字符串，将标点符号去除后输出字符串剩余的部分。</p>
</blockquote>
<p><strong>C++标准库兼容C标准库</strong><br>C标准库头文件形如ctype.h，而在C++中，则是命名为cctype，即前面加一个c并且去除后缀.h。使用方式，标准库的名字可以在命名空间std找到。</p>
<h2 id="练习3-11"><a href="#练习3-11" class="headerlink" title="练习3.11"></a>练习3.11</h2><blockquote>
<p>下面的范围for语句合法吗？如果合法，c的类型是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> string s = <span class="string">&quot;Keep out!&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;c : s)&#123; <span class="comment">/* ... */</span> &#125;</span><br></pre></td></tr></table></figure>

<p>要根据for循环体中的代码来看是否合法，s是常量，c是string对象中字符的引用（const char &amp;）。因此如果for循环体中的代码重新给c赋值就会非法，如果不改变c的值，那么合法。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cout &lt;&lt; c;  <span class="comment">// 合法</span></span><br><span class="line">c = <span class="string">&#x27;X&#x27;</span>;    <span class="comment">// 不合法</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-12"><a href="#练习3-12" class="headerlink" title="练习3.12"></a>练习3.12</h2><blockquote>
<p>下列vector对象的定义有不正确的吗？如果有，请指出来。对于正确的，描述其执行结果；对于不正确的，说明其错误的原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ivec;         <span class="comment">// 在C++11当中合法，ivec的元素是vector对象</span></span><br><span class="line">vector&lt;string&gt; svec = ivec;       <span class="comment">// 不合法，类型不一样，ivec的元素是vector int，svec的元素是string</span></span><br><span class="line"><span class="function">vector&lt;string&gt; <span class="title">svec</span><span class="params">(<span class="number">10</span>, <span class="string">&quot;null&quot;</span>)</span></span>;  <span class="comment">// 合法，svec有10个字符串：&quot;null&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-13"><a href="#练习3-13" class="headerlink" title="练习3.13"></a>练习3.13</h2><blockquote>
<p>下列的vector对象各包含多少个元素？这些元素的值分别是多少？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; v1;         <span class="comment">// 0个，无值</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v2</span><span class="params">(<span class="number">10</span>)</span></span>;     <span class="comment">// 10个，都是0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v3</span><span class="params">(<span class="number">10</span>, <span class="number">42</span>)</span></span>; <span class="comment">// 10个，都是42</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v4&#123; <span class="number">10</span> &#125;;     <span class="comment">// 1个，10</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v5&#123; <span class="number">10</span>, <span class="number">42</span> &#125;; <span class="comment">// 2个，10和42</span></span><br><span class="line">vector&lt;string&gt; v6&#123; <span class="number">10</span> &#125;;  <span class="comment">// 10个，空串</span></span><br><span class="line">vector&lt;string&gt; v7&#123; <span class="number">10</span>, <span class="string">&quot;hi&quot;</span> &#125;;  <span class="comment">// 10个，都是&quot;hi&quot;</span></span><br></pre></td></tr></table></figure>

<p>初始化的括号区别：</p>
<ul>
<li>圆括号：构造vector对象，即圆括号声明容量和初值。</li>
<li>花括号：列表初始化，用花括号的值作为元素初始值。（当提供的值不能用来列表初始化时，就会用来构造对象。如<code>vector&lt;string&gt; v1&#123;10, &quot;hi&quot;&#125;;</code>，因为类型不同，所以构造成10个&quot;hi&quot;）</li>
</ul>
<h2 id="练习3-14"><a href="#练习3-14" class="headerlink" title="练习3.14"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_14.cpp">练习3.14</a></h2><blockquote>
<p>编写一段程序，用cin读入一组整数并把它们存入一个vector对象。</p>
</blockquote>
<p><strong>vctror对象能高效增长，在定义时设定其大小意义不大。开始时创建空vector，运行时再动态添加元素。</strong></p>
<h2 id="练习3-15"><a href="#练习3-15" class="headerlink" title="练习3.15"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_15.cpp">练习3.15</a></h2><blockquote>
<p>改写上题的程序，不过这次读入的是字符串。</p>
</blockquote>
<h2 id="练习3-16"><a href="#练习3-16" class="headerlink" title="练习3.16"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_16.cpp">练习3.16</a></h2><blockquote>
<p>编写一段程序，把练习3.13中vector对象的容量和具体内容输出出来。检验你之前的回答是否正确，如果不对，回过头重新学习3.3.1节（第87页）知道弄明白错在何处为止。</p>
</blockquote>
<h2 id="练习3-17"><a href="#练习3-17" class="headerlink" title="练习3.17"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_17.cpp">练习3.17</a></h2><blockquote>
<p>从cin读入一组词并把它们存入一个vector对象，然后设法把所有词都改写为大写形式。输出改变后的结果，每个词占一行。</p>
</blockquote>
<h2 id="练习3-18"><a href="#练习3-18" class="headerlink" title="练习3.18"></a>练习3.18</h2><blockquote>
<p>下面的程序合法吗？如果不合法，你准备如何修改？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; ivec;</span><br><span class="line">ivec[<span class="number">0</span>] = <span class="number">42</span>;</span><br></pre></td></tr></table></figure>

<p>不合法（ivec是空vector对象，对其执行下标操作是非法行为）。修正方式：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ivec.<span class="built_in">push_back</span>(<span class="number">42</span>);</span><br></pre></td></tr></table></figure>

<h2 id="练习3-19"><a href="#练习3-19" class="headerlink" title="练习3.19"></a>练习3.19</h2><blockquote>
<p>如果想定义一个含有10个元素的vector对象，所有元素的值都是42，请列举出三种不同的实现方法，哪种方式更好呢？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ivec1</span><span class="params">(<span class="number">10</span>, <span class="number">42</span>)</span></span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ivec2&#123; <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span> &#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ivec3;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">    ivec3.<span class="built_in">push_back</span>(<span class="number">42</span>);</span><br></pre></td></tr></table></figure>
<p>第一种方式最好。写法简洁。</p>
<h2 id="练习3-20"><a href="#练习3-20" class="headerlink" title="练习3.20"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_20.cpp">练习3.20</a></h2><blockquote>
<p>读入一组整数并把它们存入一个vector对象，将每对相邻整数的和输出出来。改写你的程序，这次要求先输出第1个和最后1个元素的和，接着输出第2个和倒数第2个元素的和，以此类推。</p>
</blockquote>
<h2 id="练习3-21"><a href="#练习3-21" class="headerlink" title="练习3.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_21.cpp">练习3.21</a></h2><blockquote>
<p>请使用迭代器重做3.3.3节（第94页）的第一个练习。</p>
</blockquote>
<p>迭代器的总结（本质上就是指针）：</p>
<ul>
<li>使用迭代器的循环体是用<code>!=</code>作为判断条件（像c或者java使用下标，多是用<code>&lt;</code>）。因为C++中标准库容器的迭代器都定义了<code>==</code>和<code>!=</code>，而只有string和vector某些库才有下标运算符。</li>
<li>容器为空时，begin和end返回的是同一个迭代器（尾后迭代器）。</li>
<li>尾后迭代器指示的是不存在的“尾后”元素，实际并不指示某个元素，因此不能进行递增或者解引用操作。</li>
<li>只需读操作时，可用cbegin和cend函数。</li>
<li>箭头运算符是结合解引用和成员访问两个操作，即<code>it-&gt;men</code>等同于<code>(*it).men</code>。</li>
<li>使用了迭代器的循环体，不要向其所属的容器添加元素。例如，在循环体中向vector对象push_back，这会导致迭代器失效。（类似的，也不能在范围for循环中向vector对象添加元素）</li>
</ul>
<h2 id="练习3-22"><a href="#练习3-22" class="headerlink" title="练习3.22"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_22.cpp">练习3.22</a></h2><blockquote>
<p>修改之前那个输出text第一段的程序，首先把text的第一段全都改成大写形式，然后输出它。</p>
</blockquote>
<h2 id="练习3-23"><a href="#练习3-23" class="headerlink" title="练习3.23"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_23.cpp">练习3.23</a></h2><blockquote>
<p>编写一段程序，创建一个含有10个整数的vector对象，然后使用迭代器将所有元素的值都变成原来的两倍。输出vector对象的内容，检验程序是否正确。</p>
</blockquote>
<h2 id="练习3-24"><a href="#练习3-24" class="headerlink" title="练习3.24"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_24.cpp">练习3.24</a></h2><blockquote>
<p>请使用迭代器重做3.3.3节（第94页）的最后一个练习。</p>
</blockquote>
<h2 id="练习3-25"><a href="#练习3-25" class="headerlink" title="练习3.25"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_25.cpp">练习3.25</a></h2><blockquote>
<p>3.3.3节（第93页）划分分数段的程序是使用下标运算符实现的，请利用迭代器改写该程序并实现完全相同的功能。</p>
</blockquote>
<h2 id="练习3-26"><a href="#练习3-26" class="headerlink" title="练习3.26"></a>练习3.26</h2><blockquote>
<p>在100页的二分搜索程序中，为什么用的是 mid &#x3D; beg + (end - beg) &#x2F; 2，而非 mid &#x3D; (beg + end) &#x2F; 2 ; ?</p>
</blockquote>
<p>因为两个迭代器之间支持的运算符只有<code>-</code>和<code>&gt;、&gt;=、&lt;、&lt;=</code>，而没有<code>+</code> 。<code>end - beg</code> 相减的结果是之间的距离，将之除以2然后与beg相加，表示将beg移动到一半的位置。</p>
<p>迭代器运算的理解：迭代器可以加减一个数（包括加减复合赋值运算符），但两个迭代器之间的运算符只有<code>-</code>和<code>&gt;、&gt;=、&lt;、&lt;=</code>关系运算符。</p>
<h2 id="练习3-27"><a href="#练习3-27" class="headerlink" title="练习3.27"></a>练习3.27</h2><blockquote>
<p>假设txt_size是一个无参数的函数，它的返回值是int。请回答下列哪个定义是非法的？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> buf_size = <span class="number">1024</span>;</span><br><span class="line">(a) <span class="type">int</span> ia[buf_size];</span><br><span class="line">(b) <span class="type">int</span> ia[<span class="number">4</span> * <span class="number">7</span> - <span class="number">14</span>];</span><br><span class="line">(c) <span class="type">int</span> ia[<span class="built_in">txt_size</span>()];</span><br><span class="line">(d) <span class="type">char</span> st[<span class="number">11</span>] = <span class="string">&quot;fundamental&quot;</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 非法。纬度必须是一个常量表达式。</li>
<li>(b) 合法。</li>
<li>(c) 非法。txt_size返回的是int，不是constexpr int。</li>
<li>(d) 非法。数组的大小应该是12，字符串字面值末尾还有个空字符&#39;\0&#39;。</li>
</ul>
<h2 id="练习3-28"><a href="#练习3-28" class="headerlink" title="练习3.28"></a>练习3.28</h2><blockquote>
<p>下列数组中元素的值是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string sa[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> ia[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string sa2[<span class="number">10</span>];</span><br><span class="line">	<span class="type">int</span> ia2[<span class="number">10</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>sa的元素值全部为空字符串，ia的元素值全部为0。sa2的元素值全部为空字符串，ia2的元素没有被初始化，初值全部未定义。</p>
<h2 id="练习3-29"><a href="#练习3-29" class="headerlink" title="练习3.29"></a>练习3.29</h2><blockquote>
<p>相比于vector来说，数组有哪些缺点，请列举一些。</p>
</blockquote>
<ul>
<li>数组的大小是固定的，不能随意增加元素</li>
<li>不允许拷贝和赋值</li>
<li>没有像vector那样的API</li>
</ul>
<h2 id="练习3-30"><a href="#练习3-30" class="headerlink" title="练习3.30"></a>练习3.30</h2><blockquote>
<p>指出下面代码中的索引错误。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> <span class="type">size_t</span> array_size = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> ia[array_size];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> ix = <span class="number">1</span>; ix &lt;= array_size; ++ix)</span><br><span class="line">	ia[ix] = ix;</span><br></pre></td></tr></table></figure>

<p>当ix等于10时，表达式ia[ix]属于未定义行为（UB），下标越界。</p>
<p><strong>通常将数组下标类型定义size_t，size_t定义在cstddef头文件，是一种机器相关的无符号类型，可以表示内存中任意对象的大小（因为被设计得足够大）。</strong></p>
<h2 id="练习3-31"><a href="#练习3-31" class="headerlink" title="练习3.31"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_31.cpp">练习3.31</a></h2><blockquote>
<p>编写一段程序，定义一个含有10个int的数组，令每个元素的值就是其下标值。</p>
</blockquote>
<h2 id="练习3-32"><a href="#练习3-32" class="headerlink" title="练习3.32"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_32.cpp">练习3.32</a></h2><blockquote>
<p>将上一题刚刚创建的数组拷贝给另外一个数组。利用vector重写程序，实现类似的功能。</p>
</blockquote>
<h2 id="练习3-33"><a href="#练习3-33" class="headerlink" title="练习3.33"></a>练习3.33</h2><blockquote>
<p>对于104页的程序来说，如果不初始化scores将会发生什么？</p>
</blockquote>
<p>数组中所有元素的值将会未定义（有可能不是0，会有脏数据存在）。</p>
<h2 id="练习3-34"><a href="#练习3-34" class="headerlink" title="练习3.34"></a>练习3.34</h2><blockquote>
<p>假定p1和p2都指向同一个数组中的元素，则下面程序的功能是什么？什么情况下该程序是非法的？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">p1 += p2 - p1;</span><br></pre></td></tr></table></figure>

<p>将p1移动到p2的位置，即指向同一个地址。只要p1、p2值合法，该程序任何情况下都合法。</p>
<h2 id="练习3-35"><a href="#练习3-35" class="headerlink" title="练习3.35"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_35.cpp">练习3.35</a></h2><blockquote>
<p>编写一段程序，利用指针将数组中的元素置为0。</p>
</blockquote>
<p><strong>数组与指针的总结：</strong></p>
<ul>
<li>数组名是首指针（编译器会自动将其转换成一个指向数组首元素的指针）</li>
<li>类似迭代器，也可以获取数组的首尾指针（假设数组int array[10]&#x3D;{xxx}。<strong>类似尾迭代器，注意尾指针不指向具体元素，不能对其进行解引用或递增操作</strong>）<ul>
<li><code>int *begin = array; int *end = &amp;array[10];</code></li>
<li><code>int *begin = begin(array); int *end = end(array);</code> <strong>begin和end函数定义在iterator头文件（数组不是类类型，没有类似vector迭代器那种成员函数）</strong></li>
</ul>
</li>
<li>两个指针相减的结果类型是ptrdiff_t，是一种带符号类型，和size_t一样也定义在cstddef头文件。</li>
<li><strong>只要指针指向数组元素（或者尾元素的下一位置，即尾指针），都可以执行下标运算（当然，需要保证运算后的指针也是指向同一数组或者尾指针）。像数组这种C++语言内置的下标运算允许处理负值，但像标准库类型string和vector则限定下标是无符号类型。</strong></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> *p = &amp;array[<span class="number">2</span>]; <span class="comment">// p指向索引为2的元素</span></span><br><span class="line"><span class="type">int</span> j = p[<span class="number">1</span>];       <span class="comment">// p[1]等价于*(p+1)，即array[3]</span></span><br><span class="line"><span class="type">int</span> k = p[<span class="number">-2</span>];      <span class="comment">// 即array[0]</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-36"><a href="#练习3-36" class="headerlink" title="练习3.36"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_36.cpp">练习3.36</a></h2><blockquote>
<p>编写一段程序，比较两个数组是否相等。再写一段程序，比较两个vector对象是否相等。</p>
</blockquote>
<h2 id="练习3-37"><a href="#练习3-37" class="headerlink" title="练习3.37"></a>练习3.37</h2><blockquote>
<p>下面的程序是何含义，程序的输出结果是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> ca[] = &#123; <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span> &#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *cp = ca;</span><br><span class="line"><span class="keyword">while</span> (*cp) &#123;</span><br><span class="line">    cout &lt;&lt; *cp &lt;&lt; endl;</span><br><span class="line">    ++cp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>会将ca字符数组中的元素打印出来，但是因为没有空字符&#39;\0&#39;的存在，循环不会终止，会打印出来很多无意义脏数据。</p>
<h2 id="练习3-38"><a href="#练习3-38" class="headerlink" title="练习3.38"></a>练习3.38</h2><blockquote>
<p>在本节中我们提到，将两个指针相加不但是非法的，而且也没什么意义。请问为什么两个指针相加没什么意义？</p>
</blockquote>
<p><strong>指针本质就是地址</strong>，将两个指针相减可以表示两个指针(在同一数组中)的距离，将指针加上一个整数也可以表示移动这个指针到某一位置。<strong>但是两个指针相加后的地址并没有逻辑上的意义。</strong></p>
<p><a href="https://stackoverflow.com/questions/2935038/why-cant-i-add-pointers">参考资料</a></p>
<h2 id="练习3-39"><a href="#练习3-39" class="headerlink" title="练习3.39"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_39.cpp">练习3.39</a></h2><blockquote>
<p>编写一段程序，比较两个string对象。再编写一段程序，比较两个C风格字符串的内容。</p>
</blockquote>
<p><strong>C标准库string函数（头文件cstring）</strong></p>
<ul>
<li>strlen(p) 返回p的长度，不计算空字符</li>
<li>strcmp(p1,p2) 比较p1和p2，<code>p1==p2</code>则返回0；<code>p1&gt;p2</code>则返回正值；<code>p1&lt;p2</code>则返回负值</li>
<li>strcat(p1,p2) p2附加到p1后，再返回p1</li>
<li>strcpy(p1,p2) p2拷贝给p1，再返回p1</li>
</ul>
<p><strong>注意这些函数的指针必须指向以空字符作为结束的数组</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> ca[] = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>&#125; <span class="comment">// 没有以空字符结束。</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">strlen</span>(ca) &lt;&lt; endl; <span class="comment">// 严重错误，没有空字符，该函数有可能在内存中不断向前寻找，直至找到空字符。</span></span><br><span class="line"><span class="comment">// 修正方式：用字符串字面值给ca赋初值&quot;ab&quot;。</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-40"><a href="#练习3-40" class="headerlink" title="练习3.40"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_40.cpp">练习3.40</a></h2><blockquote>
<p>编写一段程序，定义两个字符数组并用字符串字面值初始化它们；接着再定义一个字符数组存放前面两个数组连接后的结果。使用strcpy和strcat把前两个数组的内容拷贝到第三个数组当中。</p>
</blockquote>
<h2 id="练习3-41"><a href="#练习3-41" class="headerlink" title="练习3.41"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_41.cpp">练习3.41</a></h2><blockquote>
<p>编写一段程序，用整型数组初始化一个vector对象。</p>
</blockquote>
<h2 id="练习3-42"><a href="#练习3-42" class="headerlink" title="练习3.42"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_42.cpp">练习3.42</a></h2><blockquote>
<p>编写一段程序，将含有整数元素的vector对象拷贝给一个整型数组。</p>
</blockquote>
<p><strong>使用数组初始化vector对象（不能用数组初始化数组；不能用vector对象初始化数组）</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> array[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(begin(array), end(array))</span></span>; <span class="comment">// 使用首尾指针</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">subv</span><span class="params">(array + <span class="number">1</span>, array + <span class="number">3</span>)</span></span>; <span class="comment">// 数组中的部分也可用来初始化</span></span><br></pre></td></tr></table></figure>

<p><strong>混用string对象和C风格字符串</strong></p>
<ul>
<li>允许使用以空字符结束的字符数组来初始化或赋值给string对象</li>
<li>string对象的加法运算允许以空字符结束的字符数组作为其中一个运算对象（加法运算符「+」两侧至少有一个string对象）</li>
<li>string复合赋值运算中允许以空字符结束的字符数组作为右侧运算对象</li>
<li>string对象不能直接初始化指向字符的指针，需要使用成员函数<code>c_str</code>返回指针，如<code>const char *str = s.c_str();</code></li>
</ul>
<h2 id="练习3-43"><a href="#练习3-43" class="headerlink" title="练习3.43"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_43.cpp">练习3.43</a></h2><blockquote>
<p>编写3个不同版本的程序，令其均能输出ia的元素。版本1使用范围for语句管理迭代过程；版本2和版本3都使用普通for语句，其中版本2要求使用下标运算符，版本3要求使用指针。此外，在所有3个版本的程序中都要直接写出数据类型，而不能使用类型别名、auto关键字和decltype关键字。</p>
</blockquote>
<h2 id="练习3-44"><a href="#练习3-44" class="headerlink" title="练习3.44"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_44.cpp">练习3.44</a></h2><blockquote>
<p>改写上一个练习中的程序，使用类型别名来代替循环控制变量的类型。</p>
</blockquote>
<h2 id="练习3-45"><a href="#练习3-45" class="headerlink" title="练习3.45"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_45.cpp">练习3.45</a></h2><blockquote>
<p>再一次改写程序，这次使用auto关键字。</p>
</blockquote>
<p><strong>多维数组和指针的总结</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 多维数组本质上是数组的数组，初始化时内层嵌套的花括号也可去掉</span></span><br><span class="line"><span class="type">int</span> ia[<span class="number">2</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">                &#123;<span class="number">1</span>, <span class="number">3</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用范围for语句处理多维数组时，要将控制变量声明为引用类型（为避免编译器将其转换成指针）</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;row : ia)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;col : row)</span><br><span class="line">        ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义指向多维数组的指针注意写法（手动写较易写错，建议使用auto或者decltype）</span></span><br><span class="line"><span class="type">int</span> *ip[<span class="number">2</span>];          <span class="comment">// 整型指针的数组</span></span><br><span class="line"><span class="built_in">int</span>(*ip)[<span class="number">2</span>];         <span class="comment">// 指针，指向含有2个整数的数组</span></span><br><span class="line"><span class="built_in">int</span>(&amp;ip)[<span class="number">2</span>] = ia[<span class="number">0</span>]; <span class="comment">// 引用，指向含有2个整数的数组</span></span><br><span class="line"><span class="comment">// 类型别名简化写法，下面两行等同于int(*ip)[2];</span></span><br><span class="line"><span class="keyword">using</span> int_array = <span class="type">int</span>[<span class="number">2</span>];</span><br><span class="line">int_array *ip;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>第三章</tag>
        <tag>字符串</tag>
        <tag>向量</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>看翻译学英语 —— blender开放动画电影《Sprite Fright》</title>
    <url>/translations/blender-animation/sprite-fright/</url>
    <content><![CDATA[<h1 id="翻译的感想">1 <a href="#翻译的感想" class="headerlink" title="翻译的感想"></a>翻译的感想</h1><p>抽空翻译了blender的开放动画电影《Sprite Fright》，该动画电影是一部恐怖喜剧，台词有部分俚语，总体的翻译难度比一般的教学类视频要高一点。</p>
<h1 id="观看动画电影">2 <a href="#观看动画电影" class="headerlink" title="观看动画电影"></a>观看动画电影</h1><style>.bbplayer{width: 100%; max-width: auto; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-vMJOZDXHzqXozfpJ" src="https://player.bilibili.com/player.html?bvid=1eS4y1j7ay&page=1&high_quality=1&danmaku=false" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-vMJOZDXHzqXozfpJ").style.height=document.getElementById("mmedia-vMJOZDXHzqXozfpJ").scrollWidth*0.76+"px";
    window.onresize = function(){
      document.getElementById("mmedia-vMJOZDXHzqXozfpJ").style.height=document.getElementById("mmedia-vMJOZDXHzqXozfpJ").scrollWidth*0.76+"px";
    }; </script>

<h1 id="下载字幕">3 <a href="#下载字幕" class="headerlink" title="下载字幕"></a>下载字幕</h1><p>字幕采用aegisub软件制作，已同步分享至Github仓库「<a href="https://github.com/Mister-Kin/OpenDocs/tree/master/translations/subtitles/blender_animation">OpenDocs</a>」，有需要的朋友可下载学习或者观看。</p>
<h1 id="本期翻译的英语词汇总结">4 <a href="#本期翻译的英语词汇总结" class="headerlink" title="本期翻译的英语词汇总结"></a>本期翻译的英语词汇总结</h1><ul>
<li>tree hugger 抱树者（意指给环保主义者贴上过于情绪化和不理性的标签）</li>
<li>sugar buns&#x2F;sweet cakes&#x2F;love muffin 这三个都是用作爱称，意思同sweetheart</li>
<li>get wasted 喝醉，形容大醉</li>
<li>way ahead of you 形容比别人更早地完成或者解决某事</li>
<li>dilly-dally v. 犹豫，磨蹭</li>
<li>fungis n. 真菌（这个用法有问题，fungi本身就是复数，加s应该只是为了配合台词fun guys）</li>
<li>dorkwad n. 傻瓜，呆子（俚语，意思同dork）</li>
<li>be supposed to do&#x2F;be sth. 应当……</li>
<li>piss break 指上厕所的休息过程（例如在听一个无聊的讲座时，可以说piss break，然后离场去休息）</li>
<li>make yourself useful 让对方别闲着，干点事情（差不多就是get off your ass and do something）</li>
<li>innit 表示强调，用于陈述句后代替附加疑问句（tag question）<ul>
<li>She&#39;s a real weenie that one, innit? 她是一个真正的窝囊废，不是吗？（innit相当于isn’t she）</li>
</ul>
</li>
<li>gnome n. 守护精灵（童话故事中的地下宝藏守护神，外形像戴着尖顶帽的小人）</li>
<li>shag v. 和……性交（该词我根据上下文来翻译了）<ul>
<li>It&#39;s like a gnome shagged a mushroom. 这就像一个守护精灵头顶一只蘑菇</li>
</ul>
</li>
<li>peppermint n. （常用于糖果的）薄荷</li>
<li>sprite n. 小精灵（该词本身只是名词，但动画中原创了动词用法，因此我根据上下文来翻译动词意思了）<ul>
<li>We sprite balance to the forest. 我们让森林保持平衡</li>
<li>Sprite them! 净化他们</li>
</ul>
</li>
<li>son of a spriteberry 狗娘养的（意思同son of a bitch，不过动画中小精灵用的是spriteberry）</li>
<li>treat sth. as sth. 把……视为……，把……看作……</li>
</ul>
<h1 id="参考文献">5 <a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] BRIDGERS B. What it Means to be Called a Tree Hugger[EB&#x2F;OL]. <a href="https://www.newamerica.org/millennials/dm/what-it-means-be-called-tree-hugger/">https://www.newamerica.org/millennials/dm/what-it-means-be-called-tree-hugger/</a>.<br>[2] What does Way ahead of you. mean?[EB&#x2F;OL]. <a href="https://hinative.com/en-US/questions/166902">https://hinative.com/en-US/questions/166902</a>.<br>[3] What is the difference between get lit and get wasted and get hammered?[EB&#x2F;OL]. <a href="https://hinative.com/en-US/questions/17881208">https://hinative.com/en-US/questions/17881208</a>.<br>[4] What does Make yourself useful. mean?[EB&#x2F;OL]. <a href="https://hinative.com/en-US/questions/15910440">https://hinative.com/en-US/questions/15910440</a>.</p>
]]></content>
      <categories>
        <category>translations</category>
        <category>blender-animation</category>
      </categories>
      <tags>
        <tag>blender</tag>
        <tag>翻译</tag>
        <tag>字幕</tag>
        <tag>英语</tag>
        <tag>开放动画</tag>
        <tag>动画</tag>
        <tag>动画电影</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>404 Not Found：该页无法显示</title>
    <url>//404.html</url>
    <content><![CDATA[<p class="center-bold" style="font-size: 35px;">很抱歉，阁下所访问的地址并不存在!</p>

<div class="navigation-border">
<center>
<a href="/navigation-announcement">
<button class="navigation-button-box">站点导航和公告</button></a>
<a href="/">
<button class="navigation-button-box">回主页</button></a>
</center></div>

<div class="navigation-border">
<center>
<a href="/archives">
<button class="navigation-button-box">所有文章</button></a>
<a href="/roadmap">
<button class="navigation-button-box">蓝图规划</button></a>
<a href="/about#联系方式">
<button class="navigation-button-box">联系我</button></a>
<a href="/about">
<button class="navigation-button-box">关于我</button></a>
<a href="/about/about-site/">
<button class="navigation-button-box">关于本站</button></a>
</center></div>

<p class="center-bold">可利用侧边栏的搜索框对本站进行检索，以获取相关信息。</p>

<center>
<div style="text-align: center; width: 50%;">
以下是鄙人常听的一些歌曲，可以听听，稍作休息~
<div style="text-align: left">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"></script><meting-js metin="meting" id="2857648889" server="netease" type="playlist" listmaxheight="340px" preload="auto" theme="#ad7a86"></meting-js>
</div></div>
</center>
]]></content>
  </entry>
  <entry>
    <title>关于我</title>
    <url>/about/index.html</url>
    <content><![CDATA[<h1 id="本人">1 <a href="#本人" class="headerlink" title="本人"></a>本人</h1><div class="flex-row">
    <img data-src="/images_public/avatar.webp" style="width: 35%; margin:0%;"><p style="margin-left: -18%; text-indent:3.5ch;"><b>Mr. Kin</b>，广东客家仁，CG和游戏爱好者，翻译UP主，个人UP主。目标是做一个有趣的极客。随缘发布一些博文、文档翻译、视频翻译、视频教程等。(ง •_•)ง <a href="#关注我" }>点击关注我！</a></p>
</div>

<div class="text-border">
    <p id="text" style="position: relative;  margin-top: 2%; text-align: center; font-weight: bold;"></p>
    <div class="line-dashed"></div>
    <p style="position: relative; margin-top: 2%; text-align: center; font-weight: bold;">Talk is cheap, show me the code.</p>
    <div class="line-dashed"></div>
    <div class="flex-row-top-start" style="position: relative; margin-top: 2%; justify-content: center; font-weight: bold;">
    <div class="flex-column" style="text-align: left;">
    你可不可以<br>
    成为我的main函数<br>
    做我此生必须有<br>
    且只能有一个的入口</div>
    <div class="flex-column" style="position: relative; margin-left: 10%; text-align: left;">
    我愿为自己加上private<br>
    在你的class中只有<br>
    你能调用<br>
    <p style="text-align: right;">—— 代码如诗 </p></div>
    </div>
</div>

<img data-src="/images_public/single_dog.webp">

<h1 id="技能点">2 <a href="#技能点" class="headerlink" title="技能点"></a>技能点</h1><div class="tabs" id="skill"><ul class="nav-tabs"><li class="tab active"><a href="#skill-1"><i class="fa fa-laptop-code"></i>编程</a></li><li class="tab"><a href="#skill-2"><i class="fa fa-video"></i>后期处理</a></li><li class="tab"><a href="#skill-3"><i class="fa fa-pen-nib"></i>文档办公</a></li><li class="tab"><a href="#skill-4"><i class="fa fa-tools"></i>计算机维修</a></li><li class="tab"><a href="#skill-5"><i class="fa fa-graduation-cap"></i>专业</a></li></ul><div class="tab-content"><div class="tab-pane active" id="skill-1"><ul>
<li>C&#x2F;C++</li>
<li>Assembly</li>
<li>Python</li>
<li>Html&#x2F;CSS&#x2F;JavaScript</li>
<li>Batch</li>
<li>Linux</li>
</ul></div><div class="tab-pane" id="skill-2"><div class="tabs" id="post_process"><ul class="nav-tabs"><li class="tab active"><a href="#post_process-1"><i class="fa fa-code-branch"></i>开源类</a></li><li class="tab"><a href="#post_process-2"><i class="fa fa-user-secret"></i>闭源类</a></li></ul><div class="tab-content"><div class="tab-pane active" id="post_process-1"><ul>
<li>Blender</li>
<li>FFmpeg</li>
<li>Aegisub</li>
<li>Audacity</li>
<li>Krita</li>
<li>Inkscape</li>
</ul></div><div class="tab-pane" id="post_process-2"><ul>
<li>Adobe<ul>
<li>Photoshop</li>
<li>Premiere</li>
<li>Audition</li>
</ul>
</li>
<li>Maya</li>
</ul></div></div></div></div><div class="tab-pane" id="skill-3"><ul>
<li>LaTeX</li>
<li>MS Office</li>
</ul></div><div class="tab-pane" id="skill-4"><ul>
<li>WinOS维护</li>
<li>计算机拆机</li>
<li>计算机硬件故障排查</li>
</ul></div><div class="tab-pane" id="skill-5"><div class="tabs" id="major"><ul class="nav-tabs"><li class="tab active"><a href="#major-1"><i class="fa fa-code-branch"></i>开源类</a></li><li class="tab"><a href="#major-2"><i class="fa fa-user-secret"></i>闭源类</a></li></ul><div class="tab-content"><div class="tab-pane active" id="major-1"><ul>
<li>KiCad</li>
<li>Libre CAD</li>
</ul></div><div class="tab-pane" id="major-2"><ul>
<li>Matlab</li>
<li>Altium Designer</li>
<li>NI Multisim</li>
<li>Keil μVision</li>
<li>Proteus</li>
<li>Quartus</li>
<li>AutoCAD</li>
</ul></div></div></div></div></div></div>

<h1 id="教育经历">3 <a href="#教育经历" class="headerlink" title="教育经历"></a>教育经历</h1><ul>
<li>南华大学电力专业毕业</li>
<li>茂名市第一中学毕业</li>
</ul>
<h1 id="开源建设（中文化翻译）">4 <a href="#开源建设（中文化翻译）" class="headerlink" title="开源建设（中文化翻译）"></a>开源建设（中文化翻译）</h1><ul>
<li><a href="https://docs.krita.org/zh_CN/">Krita 手册</a>：2018.8.5 - <a href="https://crowdin.com/project/kdeorg">2019.4.23</a></li>
<li><a href="https://docs.blender.org/manual/zh-hans/latest/">Blender 手册</a>：2019.7.20 - <a href="https://www.blendercn.org/5812.html?tdsourcetag=s_pctim_aiomsg">2019.9.4</a> - 至今（<a href="https://developer.blender.org/p/Mr_Kin/">翻译维护</a>）</li>
</ul>
<h1 id="作品">5 <a href="#作品" class="headerlink" title="作品"></a>作品</h1><table>
<thead>
<tr>
<th align="center"><a href="/manuals">软件作品</a></th>
<th align="center">艺术作品（待补充）</th>
</tr>
</thead>
</table>
<h1 id="目前">6 <a href="#目前" class="headerlink" title="目前"></a>目前</h1><ul>
<li>努力学习转型中</li>
<li>B 站 - 翻译 UP、个人 UP：2017.11.8 - 至今</li>
</ul>
<h1 id="联系方式">7 <a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><div class="note danger no-icon"><p>注：联系时请注明身份，谢谢！</p>
</div>
<ul>
<li>邮箱：<a href="mailto:&#x69;&#x6d;&#x2e;&#109;&#105;&#x73;&#x74;&#101;&#114;&#x6b;&#x69;&#110;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#x6d;">&#x69;&#x6d;&#x2e;&#109;&#105;&#x73;&#x74;&#101;&#114;&#x6b;&#x69;&#110;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a></li>
<li>QQ：<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2312463626&website=www.oicqzone.com">2312463626</a><strong>（点击号码即加好友）</strong></li>
</ul>
<div class="flex-row-left-start">
<div class="flex-column">
QQ 二维码<img data-src="/images_public/qq_qr_code2.webp" style="width: 200px;"></div>
</div>

<h1 id="关注我">8 <a href="#关注我" class="headerlink" title="关注我"></a>关注我</h1><div class="note info no-icon"><p>注：<strong>点击</strong> <em><strong>下列图标文字</strong></em> 或主页侧边栏的 <em><strong>社交图标</strong></em> 即可跳转关注我。</p>
</div>

<center><i class="fa fa-rss-square" aria-hidden="true"></i> RSS: https://mister-kin.github.io/atom.xml</center>

<img data-src="/images_public/follow_me/wechat_official_accounts.webp">

<div class="flex-row">
    <div class="flex-column">
    <a href="/"><i class="fa fa-book"></i> 博客 - Blog</a><img data-src="/images_public/follow_me/blog.webp"></div>
    <div class="flex-column">
    <a href="https://github.com/mister-kin"><i class="fab fa-github"></i> GitHub</a><img data-src="/images_public/follow_me/github.webp"></div>
    <div class="flex-column">
    <a href="https://weibo.com/6270111192/profile?topnav=1&wvr=6&is_all=1"><i class="fab fa-weibo"></i> 微博 - Weibo</a><img data-src="/images_public/follow_me/weibo.webp"></div>
    <div class="flex-column">
    <a href="https://www.zhihu.com/people/drwu-94"><i class="fab fa-zhihu"></i> 知乎 - Zhihu</a><img data-src="/images_public/follow_me/zhihu.webp"></div>
</div>
<div class="flex-row">
    <div class="flex-column">
    <a href="http://space.bilibili.com/17025250?"><i class="fa fa-tv"></i> B站 - Bilibili</a><img data-src="/images_public/follow_me/bilibili.webp"></div>
    <div class="flex-column">
    <a href="http://i.youku.com/i/UNjA3MTk5Mjgw?spm=a2hzp.8253869.0.0"><i class="fa fa-chevron-circle-right"></i> 优酷 - Youku</a><img data-src="/images_public/follow_me/youku.webp"></div>
    <div class="flex-column">
    <a href="https://www.toutiao.com/c/user/835254071079053/#mid=1663279303982091"><i class="far fa-newspaper"></i> 头条 - Headline</a><img data-src="/images_public/follow_me/headline.webp"></div>
    <div class="flex-column">
    <a href="https://www.youtube.com/channel/UCXqjfWLzMlRKxGC8syWj17Q?view_as=public"><i class="fab fa-youtube"></i> 油管 - YouTube</a><img data-src="/images_public/follow_me/youtube.webp"></div>
</div>

<h1 id="免费支持我">9 <a href="#免费支持我" class="headerlink" title="免费支持我"></a>免费支持我</h1><p>如果手头拮据的话，可以扫码领取支付宝红包来免费支持我！</p>
<div class="flex-row-left-start">
    <div class="flex-column">
    <img data-src="/images_public/pay_qr_code/alipay_red_packet.webp">支付宝红包</div>
    <div class="flex-column">
    <img data-src="/images_public/pay_qr_code/alipay.webp" style="width: 360px;">支付宝收款码</div>
</div>

<p>扫码得到的红包，可以正常使用，向商家付款。当然，如果你不用的话，也可以通过上面的支付宝收款码直接捐赠给我，无需花一分钱即可支持我！</p>
<p>不差钱的朋友，可以通过<a href="#%E6%94%AF%E6%8C%81%E6%88%91">以下方式</a>支持我！</p>
<h1 id="支持我">10 <a href="#支持我" class="headerlink" title="支持我"></a>支持我</h1><div class="note primary no-icon"><p>靓仔&#x2F;美女，不考虑请我喝杯饮料，吃份外卖吗？<strong>谢谢支持与鼓励！(๑•̀ㅂ•́)و✧</strong></p>
</div>

<div class="tabs" id="support_me"><ul class="nav-tabs"><li class="tab active"><a href="#support_me-1"><i class="fa fa-bars"></i>一包薯片</a></li><li class="tab"><a href="#support_me-2"><i class="fa fa-mug-hot"></i>一杯饮料</a></li><li class="tab"><a href="#support_me-3"><i class="fa fa-concierge-bell"></i>一份外卖</a></li><li class="tab"><a href="#support_me-4"><i class="fa fa-gifts"></i>富豪大吉大利</a></li><li class="tab"><a href="#support_me-5"><i class="fa fa-yen-sign"></i>任意金额</a></li></ul><div class="tab-content"><div class="tab-pane active" id="support_me-1"><div class="tabs" id="a_bag_of_chips"><ul class="nav-tabs"><li class="tab active"><a href="#a_bag_of_chips-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#a_bag_of_chips-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="a_bag_of_chips-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/alipay7.webp" style="width: 50%;"></div></div><div class="tab-pane" id="a_bag_of_chips-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/wechatpay7.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-2"><div class="tabs" id="a_cup_of_beverage"><ul class="nav-tabs"><li class="tab active"><a href="#a_cup_of_beverage-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#a_cup_of_beverage-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="a_cup_of_beverage-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/alipay14.webp" style="width: 50%;"></div></div><div class="tab-pane" id="a_cup_of_beverage-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/wechatpay14.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-3"><div class="tabs" id="a_take-away"><ul class="nav-tabs"><li class="tab active"><a href="#a_take-away-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#a_take-away-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="a_take-away-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/alipay28.webp" style="width: 50%;"></div></div><div class="tab-pane" id="a_take-away-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/wechatpay28.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-4"><div class="tabs" id="rich_gifts"><ul class="nav-tabs"><li class="tab active"><a href="#rich_gifts-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#rich_gifts-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="rich_gifts-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
富豪大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/alipay88.webp" style="width: 50%;"></div></div><div class="tab-pane" id="rich_gifts-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
富豪大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/wechatpay88.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-5"><div class="tabs" id="any_amount"><ul class="nav-tabs"><li class="tab active"><a href="#any_amount-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#any_amount-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="any_amount-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
任意金额 | RMB￥0 ~ ∞<img data-src="/images_public/pay_qr_code/alipay.webp" style="width: 50%;"></div></div><div class="tab-pane" id="any_amount-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
任意金额 | RMB￥0 ~ ∞<img data-src="/images_public/pay_qr_code/wechatpay.webp" style="width: 50%;"></div></div></div></div></div></div></div>

<!--
## 支付宝
<div class="flex-row">
<div class="flex-column">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/alipay7.webp"></div>
<div class="flex-column">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/alipay14.webp"></div>
<div class="flex-column">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/alipay28.webp"></div>
<div class="flex-column">
大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/alipay88.webp"></div>
<div class="flex-column">
任意额 | RMB￥0~∞<img data-src="/images_public/pay_qr_code/alipay.webp"></div>
</div>

## 微信
<div class="flex-row">
<div class="flex-column">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/wechatpay7.webp"></div>
<div class="flex-column">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/wechatpay14.webp"></div>
<div class="flex-column">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/wechatpay28.webp"></div>
<div class="flex-column">
大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/wechatpay88.webp"></div>
<div class="flex-column">
任意额 | RMB￥0~∞<img data-src="/images_public/pay_qr_code/wechatpay.webp"></div>
</div>
-->

<h1 id="关于-Mr-Kin-的名称说明">11 <a href="#关于-Mr-Kin-的名称说明" class="headerlink" title="关于 Mr. Kin 的名称说明"></a>关于 Mr. Kin 的名称说明</h1><p>取名「健先生」，英文写法 Mr. Kin 中的 Kin 是采用 Wade-Giles（威妥玛－翟理斯式）拼法取的。部分网站账户名称有格式限制，故部分媒体帐号名称写作 MisterKin（虽然使用 Mister 称呼人名时一般写缩写「Mr.」）。</p>
<style type="text/css">
.flex-row-top-start{
    display: flex;
    flex-direction: row;
}
.line-dashed{
    border-top-style: dashed;
    border-width: 3px;
}
.text-border{
    border: solid;
    border-width: 4px;
    margin-bottom: 40px;
}
</style>

<script type="text/javascript"> var text = function(r) { function t() { return b[Math.floor(Math.random() * b.length)] } function e() { return String.fromCharCode(94 * Math.random() + 33) } function n(r) { for (var n = document.createDocumentFragment(), i = 0; r > i; i++) { var l = document.createElement("span"); l.textContent = e(), l.style.color = t(), n.appendChild(l) } return n } function i() { var t = o[c.skillI]; c.step ? c.step--:(c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay--:(c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d) } var l = "I Love ", o = ["Andriod", "iOS", "iPadOS", "Linux", "UNIX", "Windows", "macOS"].map(function(r) { return r + "." }), a = 2, g = 1, s = 5, d = 75, b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"], c = { text: "", prefixP: -s, skillI: 0, skillP: 0, direction: "forward", delay: a, step: g }; i() }; text(document.getElementById('text')); </script>
]]></content>
  </entry>
  <entry>
    <title>分类</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>软件使用手册</title>
    <url>/manuals/index.html</url>
    <content><![CDATA[<div class="navigation-border">
<center>
<a href="/manuals/toggle-language">
<button class="navigation-button-box">切换语言</button></a>
<a href="/manuals/batch-tools">
<button class="navigation-button-box">批处理工具</button></a>
</center></div>
]]></content>
  </entry>
  <entry>
    <title>蓝图规划</title>
    <url>/roadmap/index.html</url>
    <content><![CDATA[<div class="tabs" id="roadmap"><ul class="nav-tabs"><li class="tab active"><a href="#roadmap-1"><i class="fa fa-bug"></i>软件开发</a></li><li class="tab"><a href="#roadmap-2"><i class="fa fa-film"></i>自媒体创作</a></li><li class="tab"><a href="#roadmap-3"><i class="fa fa-server"></i>网站建设</a></li></ul><div class="tab-content"><div class="tab-pane active" id="roadmap-1"><h1 id="切换语言-Blender-插件">1 <a href="#切换语言-Blender-插件" class="headerlink" title="切换语言 - Blender 插件"></a>切换语言 - Blender 插件</h1><ul>
<li><input disabled type="checkbox"> GUI界面支持生成自定义的设定文件（插件读取并设置）</li>
<li><input disabled type="checkbox"> <strong>（取消开发）</strong> 支持注销 F6 键（查询功能，增设的快捷键）</li>
<li><input checked disabled type="checkbox"> 「加载我的设置」支持 win 以外的系统。</li>
<li><input checked disabled type="checkbox"> 「加载我的设置」支持任意路径安装的blender。</li>
<li><input checked disabled type="checkbox"> 支持任意两种语言之间切换（导入模块 lang，lang 文件定义 dict 字典）</li>
<li><input checked disabled type="checkbox"> 模块化开发，并建立翻译模块以支持切换其他国际化语言（使用 blender API 完成翻译流程）</li>
<li><input checked disabled type="checkbox"> （使用下拉菜单独选实现）工具提示自动勾选（针对开发者 &#x2F; 翻译者及学习者等启用不同提示）<ul>
<li><input disabled type="checkbox"> <strong>（废弃）</strong>大神模式：仅启用「UI（翻译）」</li>
<li><input checked disabled type="checkbox"> CG 爱好者模式：启用「工具提示（显示）」「UI（翻译）」「工具提示（翻译）」「新建数据（翻译）」</li>
<li><input checked disabled type="checkbox"> 开发者模式，启用「工具提示（显示）」「python 工具提示（显示）」「开发者选项（显示）」「UI（翻译）」「工具提示（翻译）」「新建数据（翻译）」</li>
</ul>
</li>
<li><input checked disabled type="checkbox"> 相关 UI 翻译</li>
<li><input checked disabled type="checkbox"> 快捷键支持</li>
<li><input checked disabled type="checkbox"> 右键菜单添加用户偏好设置入口</li>
<li><input checked disabled type="checkbox"> 更新至 2.83 api：bl_info.wiki_url 更换为 bl_info.doc_url</li>
<li><input checked disabled type="checkbox"> <strong>项目更名为 ToggleLanguage，中译语言切换键，按钮英文更换为Toggle Chinese</strong></li>
<li><input checked disabled type="checkbox"> 在 Scene 菜单左边固定显示切换按钮（解决 Layout 过多时处于最右侧被隐藏起来的情况）</li>
<li><input disabled type="checkbox"> <strong>（废弃）</strong> 启用插件即自动开启翻译（2.83 已去除该功能，默认翻译状态；请 2.82 及以下版本的自行启用该功能）</li>
<li><input checked disabled type="checkbox"> 将最低支持版本更改为 2.83</li>
</ul>
<h1 id="系统小工具">2 <a href="#系统小工具" class="headerlink" title="系统小工具"></a>系统小工具</h1><ul>
<li><input disabled type="checkbox"> 定点报时闹钟</li>
<li><input disabled type="checkbox"> 定时删除系统垃圾文件</li>
<li><input disabled type="checkbox"> 定时整理机械磁盘碎片</li>
<li><input checked disabled type="checkbox"> 定时清空回收站</li>
</ul>
<h1 id="日常开发">3 <a href="#日常开发" class="headerlink" title="日常开发"></a>日常开发</h1><ul>
<li><input disabled type="checkbox"> QT Makefile with vscode 编写</li>
</ul></div><div class="tab-pane" id="roadmap-2"><ul>
<li><input disabled type="checkbox"> 自媒体基本模板创作</li>
<li><input disabled type="checkbox"> TODO</li>
</ul></div><div class="tab-pane" id="roadmap-3"><blockquote class="blockquote-center">
<p><strong>未来目标</strong></p>

</blockquote>

<ul>
<li><input disabled type="checkbox"> 页面常驻一个音乐播放器</li>
<li><input disabled type="checkbox"> 实现鼠标尾部拖动粒子特效</li>
<li>特殊节日特效<ul>
<li><input disabled type="checkbox"> 改进特殊节日的烟花特效</li>
<li><input disabled type="checkbox"> 支持农历节日（1&#x2F;1 1&#x2F;15 8&#x2F;15  7&#x2F;7 12&#x2F;30（12&#x2F;29） ）</li>
<li><input disabled type="checkbox"> 七夕等节日特定的特效</li>
<li><input disabled type="checkbox"> 补充公历节日的特效（2&#x2F;14 3&#x2F;14 情人节效果）</li>
<li><input disabled type="checkbox"> ribbon 等图标文件提供是否在移动端显示</li>
</ul>
</li>
<li><input disabled type="checkbox"> 樱花动效改进 - 鼠标互动效果</li>
<li>站点导航菜单细化<ul>
<li><input disabled type="checkbox"> 每个联系方式</li>
<li><input disabled type="checkbox"> 每个关注渠道</li>
</ul>
</li>
</ul>
<blockquote class="blockquote-center">
<p><strong>9月 &#x2F; 2021年</strong></p>

</blockquote>

<ul>
<li><input checked disabled type="checkbox"> 支持部署 gitee</li>
<li><input checked disabled type="checkbox"> 使用npm包安装next主题</li>
</ul>
<blockquote class="blockquote-center">
<p><strong>8月 &#x2F; 2021年</strong></p>

</blockquote>

<ul>
<li><input checked disabled type="checkbox"> 添加特殊日子网站效果：纪念日、公祭日、哀悼日。</li>
<li><input checked disabled type="checkbox"> 改进超链接文本样式：适配多种父标签</li>
<li><input checked disabled type="checkbox"> 改进头像效果：支持鼠标悬停变色；添加环阴影效果</li>
</ul>
<blockquote class="blockquote-center">
<p><strong>6月 &#x2F; 2021年</strong></p>

</blockquote>

<ul>
<li><input checked disabled type="checkbox"> live2d模型更换 - 小埋</li>
<li><input checked disabled type="checkbox"> 鼠标指针样式修改为箭头+滑稽表情等（一一适配各种图标）</li>
<li><input checked disabled type="checkbox"> 超链接样式优化改进</li>
<li><input checked disabled type="checkbox"> 樱花动效背景</li>
</ul>
<blockquote class="blockquote-center">
<p><strong>2月 &#x2F; 2021年</strong></p>

</blockquote>

<ul>
<li>自动化部署<ul>
<li><input disabled type="checkbox"> （废弃）本地自动化检测部署</li>
<li><input checked disabled type="checkbox"> Github Action 部署</li>
</ul>
</li>
</ul>
<blockquote class="blockquote-center">
<p><strong>6 月 &#x2F; 2020年</strong></p>

</blockquote>

<ul>
<li><input checked disabled type="checkbox"> 谷歌相关设置由帐号 moyu1355 迁至新帐号 im.misterkin</li>
<li><input checked disabled type="checkbox"> 侧边栏底下添加标签云特效</li>
<li>UI 修改<ul>
<li><input disabled type="checkbox"> <strong>（废弃）</strong> 取消深色模式</li>
<li><input checked disabled type="checkbox"> 替换网站透明图标和页面 “关于” 的透明头像</li>
<li><input checked disabled type="checkbox"> 深色模式启用下也给头像添加阴影</li>
</ul>
</li>
<li><input checked disabled type="checkbox"> 新增页面 “<a href="/about/third-party-declaration/">第三方声明</a>”</li>
<li>文章尾部自动插入信息<ul>
<li><input checked disabled type="checkbox"> Aidos 标记</li>
</ul>
</li>
<li>功能复现：基于升级的博客主题 Next8.0.0rc.2 版本（跟进上月未完成的目标）<ul>
<li><input checked disabled type="checkbox"> 页面框架阴影效果</li>
<li><input checked disabled type="checkbox"> 超链接文本样式（darkmode 模式下关闭这个效果）</li>
<li>文章尾部自动插入信息<ul>
<li><input checked disabled type="checkbox"> 本文结束标记</li>
<li><input checked disabled type="checkbox"> 许可注意</li>
<li><input checked disabled type="checkbox"> 勘误声明</li>
<li><input checked disabled type="checkbox"> 侵权声明</li>
</ul>
</li>
<li><input checked disabled type="checkbox"> 添加谷歌自动广告 script 标签</li>
<li><input checked disabled type="checkbox"> 鼠标点击特效 - 社会主义核心价值观</li>
</ul>
</li>
</ul>
<blockquote class="blockquote-center">
<p><strong>5 月（25-31）&#x2F;2020年</strong></p>

</blockquote>

<ul>
<li>功能复现：基于升级的博客主题 Next8.0.0rc.2 版本<ul>
<li>按钮菜单 (取消悬浮框形式，改为在侧边栏底部显示)<ul>
<li><input checked disabled type="checkbox"> 联系我</li>
<li><input checked disabled type="checkbox"> 关注我</li>
<li><input checked disabled type="checkbox"> 挺挺我</li>
</ul>
</li>
<li><input checked disabled type="checkbox"> 站点运行时间</li>
<li>自定义侧边栏头像（以下列举比主题自带样式多增加的效果）<ul>
<li><input checked disabled type="checkbox"> 圆形化：圆形边框增加黑色阴影（darkmode 模式下关闭这个效果）</li>
<li><input checked disabled type="checkbox"> 旋转：旋转动画时长改为 2 秒</li>
</ul>
</li>
</ul>
</li>
</ul></div></div></div>
]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>关于本站</title>
    <url>/about/about-site/index.html</url>
    <content><![CDATA[<h1 id="初衷">1 <a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>最初只是想建立用来记录自己的一些学习及心得杂记。网络给予我一个便捷的方式去获取知识，让我学习到了很多东西，从博客搭建到电脑维修、从程序编写到影视后期、从……到……，大多技能都实现了自学。</p>
<p>取之于网，返之于网，通过本站记录下来。一来，锻炼了写作思维能力；二来，分享了知识，帮助那些想在网络上获取知识的朋友；再者，也记录自身点点滴滴的成长。</p>
<div class="note primary no-icon"><p>若觉得本站的文章不错，靓仔&#x2F;美女们，不考虑打个赏，挺挺我吗？谢谢支持！(๑•̀ㅂ•́)و✧ <a href="/about/#%E6%8C%BA%E6%88%91">点击挺我！</a></p>
</div>

<h1 id="本站许可协议">2 <a href="#本站许可协议" class="headerlink" title="本站许可协议"></a>本站许可协议</h1><p>许可协议：本作品的所有内容，除个人设计创作的图像（如 logo 等）和相关的视频创作及其他特别声明外，均采用<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">知识共享 署名‐非商业性使用‐相同方式共享 4.0 国际许可协议</a>进行发布。版权 © Mr. Kin，保留所有权利。</p>
<table>
<thead>
<tr>
<th align="left">允许</th>
<th align="left">限制</th>
<th align="left">条件</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><font style="color: green;">√</font> 修改</td>
<td align="left"><font style="color: red;">×</font> 商标使用</td>
<td align="left"><font style="color: blue;">⊙</font> 保留原署名</td>
</tr>
<tr>
<td align="left"><font style="color: green;">√</font> 分发</td>
<td align="left"><font style="color: red;">×</font> 专利使用</td>
<td align="left"><font style="color: blue;">⊙</font> 状态变更说明</td>
</tr>
<tr>
<td align="left"><font style="color: green;">√</font> 个人使用</td>
<td align="left"><font style="color: red;">×</font> 商业使用</td>
<td align="left"><font style="color: blue;">⊙</font> 相同的许可和版权声明</td>
</tr>
</tbody></table>
<p><em>注：若想对本作品进行转载、引用亦或是进行二次创作时，请详细阅读上述相关协议内容（若不理解，请点击链接跳转阅读）。为保障本人权利，对于违反者，本人将依法予以处理！望周知！——Mr. Kin</em></p>
<h1 id="关于本站博文的几点声明">3 <a href="#关于本站博文的几点声明" class="headerlink" title="关于本站博文的几点声明"></a>关于本站博文的几点声明</h1><div class="note info"><p><strong>本站一些重要的博文（例如软件手册或者系列文章汇总）会有对应的 PDF 及 LaTeX 源码，可以下载用以离线查看，具体详看「<a href="/about/post-offline-download/">博文离线下载</a>」。</strong></p>
</div>

<h1 id="网站浏览适配性问题">4 <a href="#网站浏览适配性问题" class="headerlink" title="网站浏览适配性问题"></a>网站浏览适配性问题</h1><p>本网站基于以下条件进行 debug 测试：</p>
<ul>
<li>1920×1080 分辨率的笔记本屏幕</li>
<li>火狐浏览器</li>
<li>Win10 OS</li>
</ul>
<p>本站存在的问题：</p>
<ul>
<li>若浏览器页面缩放程度或浏览设备屏幕分辨率不同时，部分网页内容设计的位置和样式可能会与我设想中的效果不同，例如“关于我”页面中「本人」那一小节内容的图片和文字在移动端上的排版效果就很糟糕。</li>
<li>特殊日子网站效果中的哀悼效果对 html 标签应用 filter 会破坏火狐中的 fixed 元素，而在 chrome 内核的浏览器中解析正常。<br><em>（本人不是科班出身，网站中各种问题计划会在日后的实力增长中陆续解决。）</em></li>
</ul>
<p><del><strong>注：网站的图标是白色Alpha透明底的图像，只有在深色模式下才能看到。（“关于我”页面「本人」小节用的头像也是白色Alpha透明底图像）</strong></del></p>
<div class="note info"><p>网站默认启用了“深色模式”（Dark Mode），但只有在启用了深色模式的操作系统中使用支持 prefers-color-scheme 属性的浏览器才能浏览“深色模式”。</p>
</div>

<p><em><strong>关于“深色模式”问题的自我诊断：若系统启用了深色模式，而浏览器未见效时，请先排查当前使用的浏览器是否支持 prefers-color-scheme 属性。若是支持性无问题，则浏览器应该有独自设置来确定其主题。以Edge为例：版本 83.0.478.44的新版Edge（Chromium核心）中的「设置&gt;外观&gt;自定义浏览器&gt;默认主题」，该选项支持切换主题颜色「浅色」「深色」「系统默认」。</strong></em></p>
<div class="note danger no-icon"><p><strong>正式决定：所有开发环境取消“深色模式”。本想也取消网站的，但系统不启用深色模式时便不会影响，所以就保留了网站默认启用“深色模式”，以方便那些习惯了“深色模式”的朋友。</strong></p>
<p>近日研究 PWM 调光技术，在查询相关资料时无意中了解到有关深色模式和浅色模式的研究。</p>
<blockquote class="blockquote-center">
<p>多数研究表明深色字体&#x2F;浅色背景要优于浅色字体&#x2F;深色背景，<br>Bauer and Cavonius (1980) 的实验中，人们阅读前者的文字比后者准确率高 26%。</p>

</blockquote>

<blockquote class="blockquote-center">
<p>在使用白色背景时，人眼的瞳孔会收缩（进入眼球的光线就减少了），使得视线更易聚焦；<br>而使用深色背景时，瞳孔放大，进入眼球的光线变多，但眼睛更容易眼花。</p>

</blockquote>

<blockquote class="blockquote-center">
<p>正确的习惯是，不管白天黑色，都把室内的环境灯打开；<br>同时，选择和环境反差小的浅色背景。</p>
<p style="text-align: right;">以上引用均来自知乎用户「<a href="https://www.zhihu.com/people/fanegenstein">右璵</a>」</p>
</blockquote>

<p>使用“深色模式”已将近两年多，自己确实感觉到不舒适和不方便。且有一点特别明显，“深色模式”下，我需要花费更多的注意力在聚焦上，总感觉自己看不清字。目前在切换到浅色模式（Light Mode）后，虽有些许不适应（毕竟使用了很长时间的深色模式），但总体还是往好的方向发展。</p>
<p style="text-align: right;"> —— Mr. Kin, 2020/6/16</p></div>
]]></content>
  </entry>
  <entry>
    <title>更新日志</title>
    <url>/about/logs/index.html</url>
    <content><![CDATA[<div class="note info"><p>注：本页面用来记录本博客的建设日志。（从2021&#x2F;11&#x2F;11起，只记录博客功能的变化，如dependence更新、新功能等，但不再记录博客文档内容变化。）</p>
</div>


<h1 id="2022"><a href="#2022" class="headerlink" title="2022"></a><center>2022</center></h1><div class="hang-retract">

<p>2022&#x2F;11&#x2F;14 - hexo-word-counter从v0.0.3升级至0.1.0（移除新版中不再支持的awl选项）；精简action部署脚本的触发条件，不再细写repo分支名。</p>
<p>2022&#x2F;11&#x2F;04 - hexo-theme-next从v8.13.1升级至v8.13.2。</p>
<p>2022&#x2F;10&#x2F;30 - hexo-generator-searchdb从v1.4.0升级至v1.4.1。</p>
<p>2022&#x2F;10&#x2F;26 - 「更新日志」页面增加悬挂缩进量（日期统一写法：xxxx&#x2F;xx&#x2F;xx）；hexo-generator-archive从v1.0.0升级至v2.0.0；hexo-generator-category从v1.0.0升级至v2.0.0；hexo-generator-index从v2.0.0升级至v3.0.0；hexo-generator-tag从v1.0.0升级至v2.0.0；本地开发环境：Node.js从v18.8.0更新至v19.0.0。</p>
<p>2022&#x2F;10&#x2F;22 - 移除hexo-cake-moon-menu插件；启用next主题中的back2top功能（回到顶部），并启动其scrollpercent选项；禁用next主题中的pace功能（页面加载样式）。</p>
<p>2022&#x2F;10&#x2F;10 - hexo-renderer-marked从v5.0.0升级至v6.0.0。</p>
<p>2022&#x2F;10&#x2F;04 - hexo-theme-next从v8.13.0升级至v8.13.1。</p>
<p>2022&#x2F;9&#x2F;28 - Github action自动部署脚本中恢复支持刷新Gitee页面（改用<a href="https://github.com/yanglbme/gitee-pages-action">yanglbme&#x2F;gitee-pages-action</a>，弃用<a href="https://github.com/mizuka-wu/gitee-pages-action">mizuka-wu&#x2F;gitee-pages-action</a>）。</p>
<p>2022&#x2F;9&#x2F;10 - Github action自动部署脚本中暂时停用刷新Gitee页面（Error: Max redirects exceeded.）。</p>
<p>2022&#x2F;9&#x2F;9 - hexo从v6.0.0升级至v6.3.0（通过<code>yarn add js-yaml@latest</code>安装最新的js-yaml依赖，已解决<a href="https://github.com/hexojs/hexo/issues/4917">YAMLException错误</a>）；js-yaml首次安装v4.1.0；hexo-theme-next从v8.12.3升级至v8.13.0。</p>
<p>2022&#x2F;8&#x2F;12 - hexo-theme-next从v8.11.2升级至v8.12.3。</p>
<p>2022&#x2F;7&#x2F;23 - hexo-theme-next从v8.11.1升级至v8.12.2；stylus从v0.57.0更新至v0.58.1。</p>
<p>2022&#x2F;5&#x2F;21 - hexo-theme-next从v8.11.0升级至v8.11.1。</p>
<p>2022&#x2F;4&#x2F;3 - hexo-theme-next从v8.10.1升级至v8.11.0。</p>
<p>2022&#x2F;3&#x2F;28 - hexo强制安装v6.0.0（升级至v6.1.0有bug，会导致YAMLException错误）；hexo-generator-sitemap从v2.2.0更新至v3.0.1；hexo-theme-next从v8.10.0升级至v8.10.1；stylus从v0.56.0更新至v0.57.0。</p>
<p>2022&#x2F;2&#x2F;9 - 不再使用next主题的centerquote标签来作为居中强调用途，使用自定义的center-bold样式；完善部分样式名称，避免过于简略导致样式重名。</p>
<p>2022&#x2F;2&#x2F;7 - hexo-theme-next从v8.9.0升级至v8.10.0（解决了highlight.js版本导致的问题，新版中tomorrow-night被移除。折腾了两天的问题终于得到了解决。<em>highlight.js v11.0版本后发布的css经过了压缩，导致next主题原有的正则表达式失效，传递了空值给stylus引擎。NexT为了支持highlight.js提供的近百个代码高亮主题，使用正则表达式从css中提取代码块的前景、背景色。虽然健壮性不好，但对现有的绝大多数highlight.js主题都适用。——引用自主题维护者</em>）。</p>
<p>2022&#x2F;2&#x2F;4 - hexo-renderer-marked从v4.1.0升级至v5.0.0。</p>
<p>2022&#x2F;2&#x2F;3 - 关闭next主题的bookmark选项。</p>
<p>2022&#x2F;1&#x2F;19 - hexo-heading-index从v1.0.4升级至v1.0.6（昨日向插件作者反应，<a href="https://github.com/r12f/hexo-heading-index/issues/5">该插件无法保留超链接</a>，作者于今日提交了两个版本以解决这个问题，目前插件可以保留原标题的html的样式）。</p>
<p>2022&#x2F;1&#x2F;18 - 超链接样式适配markdown标题链接；修复样式重名bug：post-body-end.njk中line样式和next主题的codeblock样式中line重名（现已将line和text样式重新命名为dividing-line和tag-text样式，并移除add-vertical-space样式，将其写进标签中的style属性）；关闭hexo默认渲染器marked（hexo-renderer-marked）的smartypants选项，避免英文引号被替换成中文引号。</p>
<p>2022&#x2F;1&#x2F;14 - 调整参考文献的小节文字的css样式：左对齐；依赖升级：hexo-heading-index从v1.0.2升级至v1.0.4，hexo-server从v2.0.0升级至v3.0.0。</p>
<p>2022&#x2F;1&#x2F;2 - hexo从v5.4.0更新至v6.0.0；hexo-generator-sitemap从v2.1.0更新至v2.2.0；hexo-renderer-ejs从v1.0.0更新至v2.0.0；hexo-theme-next从v8.8.1更新至v8.9.0；stylus从v0.55.0更新至v0.56.0。本地开发环境：Node.js从v16.13.0更新至v17.3.0，yarn从v1.22.5更新至v1.22.15。<del>移除yarn的v1.22.5版本，使用Node.js的v16.10版本起自带的corepack工具，<code>corepack enable</code>命令启用corepack工具即可正常使用yarn（目前是v1.22.15，暂不考虑迁移到yarn的高版本）。</del></p>
</div>

<h1 id="2021"><a href="#2021" class="headerlink" title="2021"></a><center>2021</center></h1><div class="hang-retract">

<p>2021&#x2F;11&#x2F;7 - Next theme更新至v8.8.1。</p>
<p>2021&#x2F;10&#x2F;29 - 本地开发环境：Node.js 从 v16.8.0 更新至 v16.13.0。</p>
<p>2021&#x2F;10&#x2F;28 - 更新手册「切换语言」。</p>
<p>2021&#x2F;10&#x2F;21 - 规范化HTML的style和script标签的写法（补充type&#x3D;&quot;text&#x2F;css&quot;和type&#x3D;&quot;text&#x2F;javascript&quot;）；调整flexbox布局的部分间距以改善排版效果；移除flexbox布局内img等标签自动生成的底部外边距（margin-bottom）；移除 fancybox生成的图像父标签（即a标签）的下划线；增加“免费支持我”内容和按钮。</p>
<p>2021&#x2F;10&#x2F;20 - Next theme更新至v8.8.0；修改赞赏内容的描述。</p>
<p>2021&#x2F;10&#x2F;19 - 更新「关于我」页面的QQ二维码。</p>
<p>2021&#x2F;10&#x2F;18 - 特殊日子网站效果-纪念日：国庆节由1号改至1-7号。</p>
<p>2021&#x2F;10&#x2F;4 - 樱花动效的z-index属性设置为-1：避免在浏览文章时遮挡视线。</p>
<p>2021&#x2F;9&#x2F;29 - 添加hexo-footnotes插件（同时用styles.styl强制覆盖原有样式）；移除每个文件内的flex样式，改由styles.styl文件实现；添加适配超链接样式的父标签：文章顶部的 meta 信息。</p>
<p>2021&#x2F;9&#x2F;22 - 添加hexo-directory-category插件：根据文章目录自动生成文章的category；hexo-generator-searchdb插件从v1.3.4更新至1.4.0。</p>
<p>2021&#x2F;9&#x2F;9 - 移除适配超链接文本样式：文章的span行内元素标签（效果不佳）。</p>
<p>2021&#x2F;9&#x2F;7 - 使用variables.styl定义超链接文本样式颜色的变量；启用一些主题设置：links（友情链接）+pangu（自动添加中英文字符间的空格）+pace（页面加载进度）；hexo-renderer-marked从v4.0.0更新至v4.1.0；stylus从v0.54.8更新至v0.55.0；自定义主题设置选项从button更改为sidebar_button。</p>
<p>2021&#x2F;9&#x2F;6 - 修改 Github Action 并支持部署到 gitee；部分文件名中的 Wechat 修正为 WeChat。</p>
<p>2021&#x2F;9&#x2F;5 - 添加适配超链接文本样式的父标签：文章的 span 行内元素标签；使用 npm 包安装 next 主题，同时利用 _config.next.yml 配置主题（弃用以往手动更新主题相关文件的繁琐流程）。</p>
<p>2021&#x2F;8&#x2F;24 - 添加特殊日子网站效果：纪念日（烟花特效和庆祝语）、公祭日及哀悼日（全站灰色效果+R.I.P标语+黑色丝带图标）；「关于本站」页面添加“本站存在的问题”的描述。</p>
<p>2021&#x2F;8&#x2F;22 - 添加适配超链接文本样式的父标签：页面文章底部的面包屑导航按钮。</p>
<p>2021&#x2F;8&#x2F;17 - 改进头像效果：支持鼠标悬停变色。</p>
<p>2021&#x2F;8&#x2F;14 - 改进头像效果：添加环阴影效果，禁用旋转效果。</p>
<p>2021&#x2F;8&#x2F;13 - 启用 next 主题的 pjax 功能：提供更快的页面加载速度。</p>
<p>2021&#x2F;8&#x2F;5 - 修正「站点导航」下拉菜单内容的鼠标悬停样式为 pointer。</p>
<p>2021&#x2F;8&#x2F;2 - 添加 hexo-heading-index 插件，实现文章标题自动编号；关闭文章侧边栏目录的自动编号功能；改进文章末尾添加 “本文结束” 标记：添加顶部间距 + 加深颜色，从 #bbb 改为 darkgrey；改进超链接文本样式：合并部分功能选项设置 + 自适应博文中的多种父标签。</p>
<p>2021&#x2F;8&#x2F;1 - Next theme 从 v8.5.0 更新至 v8.7.0；本地开发环境：Node 从 v16.5.0 更新至 v16.6.0；更新「博文离线下载 - PDF 及 LaTeX 源码」页面。</p>
<p>2021&#x2F;7&#x2F;31 - 更新「「切换语言」使用手册 - Blender 插件」页面中的链接。</p>
<p>2021&#x2F;7&#x2F;27 - 本地开发环境：Node 从 v16.3.0 更新至 v16.5.0。</p>
<p>2021&#x2F;6&#x2F;22 - 本地开发环境：hexo-cli 依赖从 v4.2.0 更新到 v4.3.0；优化改进「live2d 模型更换 - 小埋」：分别 fork 仓库 <a href="https://github.com/EYHN/hexo-helper-live2d"> EYHN&#x2F;hexo-helper-live2d </a> 和仓库 <a href="https://github.com/xiazeyu/live2d-widget.js"> xiazeyu&#x2F;live2d-widget.js </a> 后再进行修改代码及重新编译（为 umaru 模型修正 motion 的读取），以便适配 Github Action 的自动构建流程（无需增加 action 流程，例如写相关命令来自动修改文件代码和自动编译）。</p>
<p>2021&#x2F;6&#x2F;21 - 实现「蓝图规划」页面中「网站建设」的「live2d 模型更换 - 小埋」；移除 hibiki 模型依赖：live2d-widget-model-hibiki；hexo-generator-searchdb 插件从 v1.3.3 更新到 v1.3.4。</p>
<p>2021&#x2F;6&#x2F;20 - 格式化 source&#x2F;_data&#x2F;body-end.njk 部分注释内容的代码（优化排版）。</p>
<p>2021&#x2F;6&#x2F;19 - 修改 Next 主题侧边栏超链接的文本样式，以适配 postbody 类的超链接样式，同时合并两种超链接文本样式的设置选项到父设置选项 theme_color_custom。</p>
<p>2021&#x2F;6&#x2F;18 - 实现「蓝图规划」页面中「网站建设」的「鼠标指针样式修改」。</p>
<p>2021&#x2F;6&#x2F;17 - 实现「蓝图规划」页面中「网站建设」的「超链接样式优化改进」。</p>
<p>2021&#x2F;6&#x2F;15 - 实现「蓝图规划」页面中「网站建设」的「樱花动效背景」。</p>
<p>2021&#x2F;6&#x2F;2 - Next theme 更新至 v8.5.0，hexo-tag-mmedia 插件从 v1.1.6 更新到 v1.1.7。</p>
<p>2021&#x2F;5&#x2F;30 - 本地开发环境的 Node 从 v15.11.0 升级至 v16.2.0。</p>
<p>2021&#x2F;5&#x2F;1 - 创建页面「博文离线下载」；站点导航增加按钮「离线下载」；添加置顶公告1；纠正「关于我」页面中的 flex 布局错乱；Next theme 更新至 v8.4.0。</p>
<p>2021&#x2F;4&#x2F;30 - 优化 flex 布局的 CSS 样式（添加图片并排的间隔；针对图片大小不一，统一横向底端对齐；针对小图的横向并排居中显示）。</p>
<p>2021&#x2F;4&#x2F;26 - Next theme 更新至 2021&#x2F;4&#x2F;26 仓库版本；hexo-cake-moon-menu 插件从 2.4.1 更新至 2.5.0 版本；新建页面「软件使用手册」；将文章「Blender 插件 - 切换语言」内容作为手册内容移植到页面「软件使用手册」；依照新页面「软件使用手册」更新相应链接和菜单。</p>
<p>2021&#x2F;3&#x2F;11 - Next theme 更新至 v8.2.2；Hexo 更新至 v5.4.0；改用_data&#x2F;languages.yml 文件实现语言修改，取代直接修改语言配置文件；升级插件的过时包依赖（订正新版本 hexo-tag-mmedia 标签写法）；除主题外，全部更新均使用 package 中 dependencies 版本号修改更新完成。</p>
<p>2021&#x2F;2&#x2F;11 - 完成 Github Actions 编写，成功部署博客。</p>
<p>2021&#x2F;2&#x2F;10 - 取消 Next Theme 中 back2top 的设置，改换 hexo-cake-moon-menu 插件实现；修改 站点配置文件中 url 块的设置，修复 RSS 中原文链接错误的问题；修改 hexo-generator-feed 的设置，在 RSS 展示文章所有内容，同时修复 icon 路径问题。</p>
<p>2021&#x2F;2&#x2F;8 - Next theme 更新至仓库最新；Hexo 更新至 5.3.0；hexo-cli 重装 4.2.0（目前默认主题 landscape 已经改为 npm 安装，clone hexo-cli 就很快速简便了）；关闭 motion 动画（加载过慢）；<s> 图片查看方法由 fancybox 更改为 mediumzoom</s>（mediumzoom 只支持查看单张图片，即无法在浏览时切换其他图片，并且会使 「关于我」中头像排版混乱，因为以前的 html 代码是在 fancybox 下调试编写的）。</p>
</div>

<h1 id="2020"><a href="#2020" class="headerlink" title="2020"></a><center>2020</center></h1><div class="hang-retract">

<p>2020&#x2F;12&#x2F;18 - 「关于我」页面添加「关于 Mr. Kin 的名称说明」小节内容。</p>
<p>2020&#x2F;12&#x2F;10 - Next theme 更新至仓库最新；开启 hexo-neat 插件中移除 LineBreaks 的选项（主题作者已修复该问题，不会因此导致 sticky icon 和文章标题之间缺失空白）。</p>
<p>2020&#x2F;9&#x2F;30 - Node 从 12.8.3 升级至 12.8.4；Hexo 从 v5.1.1 升级至 5.2.0；Next theme 更新至最新仓库；去除 Sticky 功能的依赖插件 hexo-generator-indexed，未安装时无影响。</p>
<p>2020&#x2F;9&#x2F;22 - 更新文章「Blender 插件 - 切换语言 」。</p>
<p>2020&#x2F;9&#x2F;20 - 更新页面「第三方开源许可声明」；更新文章「Blender 插件 - 切换语言」。</p>
<p>2020&#x2F;9&#x2F;19 - 「关于我」页面更新专业技能点。</p>
<p>2020&#x2F;9&#x2F;18 - 「关于本站」页面添加 “本站许可协议” 说明。</p>
<p>2020&#x2F;9&#x2F;17 - 更新文章「Blender 插件 - 切换语言」；更新「站点导航」部分链接。</p>
<p>2020&#x2F;9&#x2F;15 - Hexo 从 v5.0.0 升级至 v5.1.1；hexo-cli 脚手架从 v4.1.0 升级至 v4.2.0；Next theme 从 v8.0.0-rc.5 升级至 v8.0.0；因主题作者已使用 flex 排版进行重构，所以去除「文章末尾自动插入信息」功能实现的旧方案 -“injects point”，使用 flex 中 order 属性实现顺序排版功能。</p>
<p>2020&#x2F;8&#x2F;6 - 去除页面“关于我”第一小节的原 hr 标签生成的横线，改用 css 样式生成边框和分割线。</p>
<p>2020&#x2F;8&#x2F;4 - 调整 hexo-neat 插件组件中的 HTMLMinifie（设置项为neat_html） 的参数设置，添加参数以保留 LineBreaks（因其默认参数会移除 LineBreaks，该问题会导致 sticky icon 和文章标题之间缺失空白空间的情况）。</p>
<p>2020&#x2F;8&#x2F;3 - Hexo 从 v4.2.1 升级至 v5.0.0；hexo-cli 脚手架从 v3.1.0 升级至 v4.1.0；Next theme 从 v8.0.0-rc.3 升级至 v8.0.0-rc.5；移除标签云插件 hexo-tag-cloud（对当前主题兼容性不好，会导致侧边栏超出限定 height 而出现滚动栏。另外，此插件有时挺占用 CPU 资源）；添加插件 index_generator 以支持置顶文章（扩展 Front-matter: sticky 参数）；重新添加回 hexo-browsersync 插件（字数超过 1000 时渲染空白的问题已找到解决方法，hexo-server 插件导致产生此bug，设置下 server 插件的参数即可）；页面 “关于我” 修改第一小节的排版属性 position 和 width 的参数以适应排版（当前环境下渲染有问题）。</p>
<p>2020&#x2F;6&#x2F;29 - 补充页面“关于”「技能点」；页面“关于”「挺我」中二维码放弃瀑布流排版方式，换用 tabs 实现切换。</p>
<p>2020&#x2F;6&#x2F;25 - 谷歌帐号由 moyu1355 迁至新帐号 im.misterkin，更新相应的 Google Analytics, Google Search Console, Google AdSense 标签代码；更新网站上关于 Gmail 邮件和 Youtube 频道的链接。</p>
<p>2020&#x2F;6&#x2F;21 - 部分页面使用 Pangu 在全角和半角字符间添加空格。</p>
<p>2020&#x2F;6&#x2F;16 - 替换网站透明图标和页面 “关于” 的透明头像；样式修改：深色模式下也给头像添加阴影（适应「深色模式」选项启用时的浅色浏览，即操作系统不启用 “深色模式”）；删除页面 “更新日志” 的标题 “日志内容”。</p>
<p>2020&#x2F;6&#x2F;14 - 更新页面 “关于我”「技能点」小节；侧边栏底部添加标签云特效；关闭侧边栏许可图标；侧边栏按钮增加样式 “顶部边距”。</p>
<p>2020&#x2F;6&#x2F;7 - 更新页面 “关于本站”；发表文章《BL 插件 - 一键切换语言》</p>
<p>2020&#x2F;6&#x2F;4 - 本机环境 Node 从 v14.3.0 降级到 v12.18.0 LTS（模块 stylus 在 node v14 下有 &#39;Accessing non-existent property&#39;s error&#39;，待该项目修复升级支持 node v14 才能解决；模块 fsevents（可选模块）在两个 node 版本都出现 win32 incompatible，暂未找到解决方式）；Next 主题从 v8.0.0-rc.2 升级至 v8.0.0-rc.3；增加 velocity 的 jsdelivr cdn；修改 hexo\config.yml 和 Next\config.yml 的部分注释；重新测试 hexo-browsersync 插件在 node v12 的效果（文章字数过多时，渲染页面依旧是空白）；更新页面 “蓝图”。</p>
<p>2020&#x2F;6&#x2F;3 - 更新页面 “关于本站”；添加页面 “<a href="/about/third-party-declaration/"> 第三方声明 </a>”。</p>
<p>2020&#x2F;6&#x2F;2 - 完成蓝图目标 “文章末尾自动插入信息” 剩余任务；去除功能「按钮菜单」「文章末尾自动插入信息」中具体颜色代码，使用 Next 主题定义的颜色变量，以适配 default&#x2F;darkmode 两种方案的显示。</p>
<p>2020&#x2F;6&#x2F;1 - 完成蓝图目标 “文章末尾自动插入信息 - 添加结尾标记” 等。</p>
<p>2020&#x2F;5&#x2F;29 - “flex-column” 类增加文字居中效果，去除以往手动添加 center 的标签；添加页面 “<a href="/roadmap/"> 蓝图规划 </a>”；页面 “更新日志” 迁至 <a href="/roadmap/"> 蓝图 </a> 子菜单之下。</p>
<p>2020&#x2F;5&#x2F;28 - Next 主题从 v7.8.0 升级至 v8.0.0-rc.2（<a href="https://github.com/theme-next/hexo-theme-next/">v7.8.0 仓库 </a> 废弃，新版迁至 <a href="https://github.com/next-theme/hexo-theme-next"> v8.0.0 仓库 </a>）；重新测试 hexo-browsersync 插件（当前主题版本勉强能用，但文章字数超过 1k 后就会加载异常，渲染空白）；使用新主题的 TabJS 重编排以往文章「飞助远程服务店」的 “注明” 部分内容及去除 img 标签的 width 属性，改用 style 实现；去除旧文章文件名中的 “-” 字符，统一使用大驼峰式命名法；<strong>推送时 hexo deploy 强制 push 导致所有 commit 丢失</strong>。</p>
<p>2020&#x2F;5&#x2F;27 - 对比 v5.1.4 和 v7.8.0 的异同，并进行相关测试 debug；新版主题已集成很多功能，删除 “Github forkme”“文章底部标签图标修改” 等自定义实现的代码；原页面 “关于” 中「关于本站」小节内容单独分离出做子菜单页面 “关于本站”。</p>
<p>2020&#x2F;5&#x2F;25-26 - 升级 hexo-cli 脚手架至 v3.1.0；hexo 框架从 v3.9.0 升级至 v4.2.1；Next 主题从 v5.1.4 升级至 v7.8.0（<a href="https://github.com/iissnan/hexo-theme-next/">v5.1.4 仓库 </a> 废弃，新版迁至 <a href="https://github.com/theme-next/hexo-theme-next/">v7.8.0 仓库 </a>）；删除 hexo-browsersync 插件（不支持新版 next 主题，主页空页）。</p>
<p>2020&#x2F;5&#x2F;8 - 添加 hexo-browsersync 插件；删除 “分类” 页；更新主页菜单联系图标；修改文章样式模板以适应：草稿 draft &gt; 发布 publish 的工作流；更正 “关于” 页面中「关注我」- 知乎图标。</p>
<p>2020&#x2F;4&#x2F;27 - 插入谷歌自动广告代码。</p>
<p>2020&#x2F;4&#x2F;24 - 完善 “关于页面” 信息；完善 “版权声明” 信息；完善 “侵权声明” 信息；添加 “许可注意事项”；将站点位图转换成 webp 格式；重新制作白色透明通道网站图标；修改文章尾部 “阅读结束” 样式；删除自定义代码块高亮效果；添加文章尾部 “微信公众号订阅”。</p>
<p>2020&#x2F;2&#x2F;23 - 重新排版 “关于页面”；作废文章《飞助远程服务店》《翻译计划》。</p>
</div>

<h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a><center>2019</center></h1><div class="hang-retract">

<p>2019&#x2F;9&#x2F;15 - 访客数悬浮框显示改用 setTimeout 和 innerHTML 调试成功。调试记录：头次使用不蒜子计数标签失败，因为同一页面内不能出现两个相同 id 的标签；接着尝试异步拷贝数据，由于实在看不懂 async 和 await 命令；后来尝试 setTimeout 命令，但 setTimeout 执行外部 function 不能成功，将 function 置于 setTimeout 内后，document.write 数值获取成功，但页面被重写；最后改用 innerHTML 后没问题。从 4 号开始尝试的功能，终于调试成功。但目前 setTimeout 实现效果不完美，以后有时间再完善。</p>
<p>2019&#x2F;9&#x2F;14 - “关于页面” 个人经历添加 Blender 翻译成员统计链接。</p>
<p>2019&#x2F;9&#x2F;4 - 更新 “关于页面” 个人经历中的 Blender 翻译阶段；悬浮菜单下添加访客数悬浮框显示（不蒜子标签方式未成功显示），另外探索新的方式显示。</p>
<p>2019&#x2F;9&#x2F;3 - 文章末尾添加 “侵权声明”。</p>
<p>2019&#x2F;9&#x2F;1 - “关于” 页面个人经历添加时间标注，修改个人技能描述。文章末尾 “勘误声明” 在 “联系我” 字符上增加联系方式链接。</p>
<p>2019&#x2F;8&#x2F;1 - “logs” 页面放弃 markdown 的列表排版，改用 css 样式达到换行缩进效果。更新 “about” 页面：添加打赏小节及相关二维码，添加关注小节。修改《火狐浏览器拓展推荐》文章的 read more 标签位置。添加站点悬浮按钮。</p>
<p>2019&#x2F;7&#x2F;31 - 完善 404 页面：添加导航按钮、添加音乐播放 + 歌单。</p>
<p>2019&#x2F;7&#x2F;27 - 增加博文压缩功能 (hexo-neat)。</p>
<p>2019&#x2F;7&#x2F;26 - 更改 logs 页面菜单图标；更改 youtube 图标，查询 html 源码得出 next 主题使用 Font Awesome 4.6.2 版本图标，不支持 5.0; 添加 google_analytics；google_site_verification 项属性值直接更换 meta 值；停用自定义代码高亮，启用自带的 night 风格的高亮；增加图片懒加载功能 (lazyload)。</p>
<p>2019&#x2F;7&#x2F;24-25 - 完成旧样式的重现，并重新开发文件，把自定义修改独立成一个配置文件，主题自定义资源整合一个文件夹。新添加样式：Gemini 配色 &#x2F; 主页文章阴影效果 &#x2F; 代码块自定义 &#x2F; 网页点击浮现文字；新添加布局：网站运行时间；新添加社交链接及图标：优酷 &#x2F; 油管；更改：显示” 全站文字统计 “的语言文件 &#x2F;“勘误声明” 的实现方式 &#x2F;”Fork me on Github“图标 &#x2F; 版权声明使用官方配置实现 &#x2F; 文章结束标记使用雪花图标 &#x2F; 第三方布局” 不蒜子统计” 的域名更新。</p>
<p>2019&#x2F;7&#x2F;23 - hexo 框架组件出问题，重建 hexo 博客并重新规范化配置文件。站点配置和主题配置文件修改完成。</p>
<p>2019&#x2F;7&#x2F;22 - 添加 live2d-hibiki，相应配置信息在站点配置文件下。live2d 配置若放于主题配置文件下，本机测试结果无法生效。</p>
<p>2019&#x2F;7&#x2F;20 - 系统重装，hexo 系统重新部署。ssh 丢失，现已新建部署测试通过。</p>
<p>2019&#x2F;5&#x2F;14 - 修改 Github 用户名，迁移博客地址至 <a href="https://mister-kin.github.io/">https://mister-kin.github.io/</a> ，旧地址 <a href="https://kin-sir.github.io/">https://kin-sir.github.io/</a> 已失效。</p>
<p>2019&#x2F;4&#x2F;1 - “关于” 页面增添点击 qq 号码调用客户端加好友方式。</p>
<p>2019&#x2F;3&#x2F;31 - 更新 “关于” 页面的本人概述内容。</p>
<p>2019&#x2F;3&#x2F;30 - 博客地址更改后的相应更新，签名更新，制作个人 logo 并更新头像，更新网站图标，更新统一结尾文件信息，更新文章《飞助远程服务店》联系方式内容。</p>
<p>2019&#x2F;3&#x2F;19 - 添加 &amp; 编写 “更新日志” 页面。</p>
</div>

<h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a><center>2018</center></h1><div class="hang-retract">

<p>2018&#x2F;12&#x2F;17 - 修改一些拼写错误，更新 B 站 UP 信息。P.S. 自此记录更新日志</p>
<p>2018&#x2F;12&#x2F;16 - 发表文章《翻译计划》。</p>
<p>2018&#x2F;10&#x2F;5 - 发表文章《Blender 自学资料向（干货整理）》。</p>
<p>2018&#x2F;9&#x2F;9 - 发表文章《飞助远程服务店》。</p>
<p>2018&#x2F;8&#x2F;12 - 博客搭建。</p>
</div>

<style type="text/css">
/* 悬挂缩进，下面的方法都是相同的距离。暂时没找到方式可以根据特定字符 “-” 进行缩进 */
.hang-retract {
    padding-left: 6.5em; /* 用 padding 将文字整理向右平移 */
    text-indent: -6.5em; /* 用 indent 将第一行收回来，相互抵消 */
}
</style>
]]></content>
  </entry>
  <entry>
    <title>博文离线下载 - PDF 及 LaTeX 源码</title>
    <url>/about/post-offline-download/index.html</url>
    <content><![CDATA[<h1 id="背景">1 <a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>本站一些重要的博文（例如软件手册或者系列文章汇总）会有对应的 PDF 及 LaTeX 源码，可以下载用以离线查看，<strong>一般都是在博文开头处有相关说明</strong>。PDF 文件存放在百度云（全部）或者蓝奏云（部分），LaTeX 源码文件存放在 Github 的 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 仓库。</p>
<h1 id="获取-PDF-电子文档">2 <a href="#获取-PDF-电子文档" class="headerlink" title="获取 PDF 电子文档"></a>获取 PDF 电子文档</h1><p>PDF 电子文档由百度云网盘（全部）和蓝奏云网盘（部分）同步分享。PDF 和文件夹同名，直接下载即可。</p>
<p><a href="https://pan.baidu.com/s/1Tn7qIO0raqvNoesgT8SKow">百度云</a>（提取码：docs）<br><a href="https://wwr.lanzoui.com/b02c7lamf">蓝奏云</a>（提取码：docs）</p>
<h1 id="获取-LaTeX-源码文件">3 <a href="#获取-LaTeX-源码文件" class="headerlink" title="获取 LaTeX 源码文件"></a>获取 LaTeX 源码文件</h1><div class="note info"><p><strong>LaTeX 源码文件可用以编译生成 PDF 文件，若不熟悉 LaTeX 语法的话，不推荐使用此方法。</strong></p>
</div>

<p>LaTeX 源码文件存放在 Github 的 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 仓库，在下载LaTeX源码文件之前，建议先了解一下仓库的存储结构。</p>
<h2 id="OpenDocs-仓库存储结构">3.1 <a href="#OpenDocs-仓库存储结构" class="headerlink" title="OpenDocs 仓库存储结构"></a>OpenDocs 仓库存储结构</h2><p><a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 仓库只提供文章源码（LaTeX）。</p>
<p><strong>注：为缩减仓库大小，本仓库自 2021&#x2F;6&#x2F;28 起，不再提供电子格式文件（PDF）。PDF 文件将改由百度云网盘同步分享。</strong></p>
<p>单个文档项目本身由一个含有 PDF 电子文档及其 LaTeX 源码的文件夹组成，均有其父分类。文件夹的名称就是该项目的名称，主文件名一般与文档项目名一致，即 PDF 电子文档和 LaTeX 源码主文件的文件名与文件夹名称相同。</p>
<p>例如名为 ToggleLanguage 文件夹所对应的项目名称就是 ToggleLanguage，位于名为 Manuals 的父文件夹下。其 PDF 电子文档和 LaTeX 源码的主文件名均为 ToggleLanuage。目录结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└── OpenDocs</span><br><span class="line">    └── Manuals</span><br><span class="line">        └── ToggleLanguage</span><br><span class="line">            ├── resources</span><br><span class="line">            │   ├── images</span><br><span class="line">            │   │   ├── Installation.png</span><br><span class="line">            │   │   ├── UI.png</span><br><span class="line">            │   │   └── ...</span><br><span class="line">            │   └── reference.bib</span><br><span class="line">            ├── ToggleLanguage.pdf</span><br><span class="line">            └── ToggleLanguage.tex</span><br></pre></td></tr></table></figure>

<h2 id="下载单个文件（推荐）">3.2 <a href="#下载单个文件（推荐）" class="headerlink" title="下载单个文件（推荐）"></a>下载单个文件（推荐）</h2><div class="note info"><p><strong>优点：可以找到所需单个文件夹或者单个文件进行下载，无需下载或克隆整个仓库。</strong></p>
</div>

<p>下面以火狐浏览器为例，说明具体的下载步骤：</p>
<ol>
<li>打开火狐浏览器。</li>
<li>安装浏览器插件 <a href="https://addons.mozilla.org/zh-CN/firefox/addon/gitzip/?utm_source=addons.mozilla.org&utm_medium=referral&utm_content=search">GitZip</a>。</li>
<li>访问 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 页面。</li>
<li>在所需的文件或者文件夹对应的空白处双击鼠标左键。</li>
<li>之后左侧会自动出现 √ 符号，如图 1 所示。</li>
<li>点击右下角的箭头图标，GitZip 会拉取文件。</li>
<li>GitZip 插件成功拉取文件后，记得保存文件到本地，如图 2 所示。</li>
</ol>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/DownloadProcess.webp">图 1: 下载步骤</div>
    <div class="flex-column">
    <img data-src="./images/Downloaded.webp">图 2: 保存文件</div>
</div>

<h2 id="下载整个仓库">3.3 <a href="#下载整个仓库" class="headerlink" title="下载整个仓库"></a>下载整个仓库</h2><div class="note danger"><p><strong>浏览器下载仓库的 ZIP 压缩包不会包含 .git 文件夹（即不包含 git 历史），Git 克隆方式则会完整克隆仓库。</strong></p>
</div>

<h3 id="通过浏览器下载仓库（推荐）">3.3.1 <a href="#通过浏览器下载仓库（推荐）" class="headerlink" title="通过浏览器下载仓库（推荐）"></a>通过浏览器下载仓库（推荐）</h3><ol>
<li>打开浏览器。</li>
<li>访问 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 页面。</li>
<li>点击「Code」图标上，如图 3 所示。</li>
<li>点击「Download ZIP」，下载整个仓库的 ZIP 压缩包。</li>
<li>保存压缩包到本地即可。</li>
</ol>
<div class="flex-column">
<img data-src="./images/DownloadClone.webp">图 3: 浏览器下载和 Git 克隆仓库</div>

<h3 id="用过-Git-克隆完整仓库（确保系统已经安装了-Git-程序）">3.3.2 <a href="#用过-Git-克隆完整仓库（确保系统已经安装了-Git-程序）" class="headerlink" title="用过 Git 克隆完整仓库（确保系统已经安装了 Git 程序）"></a>用过 Git 克隆完整仓库（确保系统已经安装了 Git 程序）</h3><ol>
<li>打开浏览器。</li>
<li>访问 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 页面。</li>
<li>点击「Code」图标上，如图 3 所示。</li>
<li>复制克隆操作所需的 HTTPS 链接：<a href="https://github.com/Mister-Kin/OpenDocs.git">https://github.com/Mister-Kin/OpenDocs.git</a></li>
<li>运行 Git Bash，切换当前目录到所需保存的路径，输入 <code>git clone https://github.com/Mister-Kin/OpenDocs.git</code>。</li>
<li>在保存路径上会生成一个 OpenDocs 文件夹。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>第三方开源许可声明</title>
    <url>/about/third-party-declaration/index.html</url>
    <content><![CDATA[<div class="wrap">

<div class="left">
<div class="center-bold">
编程&写作
</div>

<ul>
<li><a href="https://code.visualstudio.com/">Visual Studio Code</a>: <a href="https://github.com/Microsoft/vscode/blob/master/LICENSE.txt">MIT</a></li>
<li><a href="https://tug.org/texlive/">Tex Live</a>: <a href="https://tug.org/texlive/copying.html">TeX Live Licensing</a></li>
<li><a href="https://git-scm.com/">Git</a>: <a href="https://github.com/git/git/blob/master/COPYING">GPL v2</a></li>
</ul>

<div class="center-bold">
CGI&后期处理
</div>
<ul>
<li><a href="https://www.blender.org">Blender</a>: <a href="https://www.blender.org/about/license/">GPL</a></li>
<li><a href="http://ffmpeg.org">FFmpeg</a>: <a href="http://ffmpeg.org/legal.html">LGPL v2.1 / GPL v2</a></li>
<li><a href="https://krita.org/en/">Krita</a>: <a href="https://docs.krita.org/en/KritaFAQ.html?highlight=license#license-rights-and-the-krita-foundation">Krita's GNU GPL license</a></li>
<li><a href="https://inkscape.org/">Inkscape</a>: <a href="https://inkscape.org/about/license/">GPL</a></li>
<li><a href="https://www.audacityteam.org/">Audacity</a>: <a href="https://www.audacityteam.org/about/license/">GPL v2</a></li>
</ul>
</div>

<div class="right">
<div class="center-bold">
网站建设
</div>
<ul>
<li><a href="http://nodejs.cn/">Node</a>: <a href="https://github.com/nodejs/node/blob/master/LICENSE">MIT</a></li>
<li><a href="https://classic.yarnpkg.com">Yarn</a>: <a href="https://github.com/yarnpkg/yarn/blob/master/LICENSE">BSD 2-Clause</a></li>
</ul>

<div class="center-bold">
开源字体
</div>
<ul>
<li><a href="https://github.com/adobe-fonts">Adobe Fonts</a>: <a href="https://github.com/adobe-fonts/source-serif-pro/blob/release/LICENSE.md">SIL OFL v1.1</a></li>
</ul>

<div class="center-bold">
已弃用
</div>
<ul>
<li><a href="https://www.gimp.org">GIMP</a>: <a href="https://www.gimp.org/about/COPYING">GPL</a></li>
<li><a href="https://handbrake.fr">Handbrake</a>: <a href="https://github.com/HandBrake/HandBrake/blob/master/LICENSE">GPL v2</a></li>
</ul>
</div>

</div>

<style type="text/css">
.wrap{
    display: flex;
}
.left {
    flex-grow: 1;
    margin-right: 25px;
}
.right {
    flex-grow: 1;
    margin-left: 25px;
}
</style>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/live2d_models/umaru/physics.json</url>
    <content><![CDATA[{"type":"Live2D Physics","physics_hair":[{"label":"hair_front","setup":{"length":0.15,"regist":0.5,"mass":0.1},"src":[{"id":"PARAM_ANGLE_X","ptype":"x","scale":0.005,"weight":0.5},{"id":"PARAM_BODY_ANGLE_X","ptype":"x","scale":0.015,"weight":1},{"id":"PARAM_ANGLE_Z","ptype":"angle","scale":0.8,"weight":0.5},{"id":"PARAM_BODY_ANGLE_Z","ptype":"angle","scale":2.4,"weight":1}],"targets":[{"id":"PARAM_HAIR_FRONT","ptype":"angle","scale":0.022,"weight":1}]},{"label":"hair_side","setup":{"length":0.35,"regist":0.6,"mass":0.22},"src":[{"id":"PARAM_ANGLE_X","ptype":"x","scale":0.005,"weight":0.5},{"id":"PARAM_BODY_ANGLE_X","ptype":"x","scale":0.015,"weight":1},{"id":"PARAM_ANGLE_Z","ptype":"angle","scale":0.8,"weight":0.5},{"id":"PARAM_BODY_ANGLE_Z","ptype":"angle","scale":2.4,"weight":1}],"targets":[{"id":"PARAM_HAIR_SIDE","ptype":"angle","scale":0.022,"weight":1}]},{"label":"hair_back","setup":{"length":0.25,"regist":0.7,"mass":0.25},"src":[{"id":"PARAM_ANGLE_X","ptype":"x","scale":0.005,"weight":0.5},{"id":"PARAM_BODY_ANGLE_X","ptype":"x","scale":0.012,"weight":1},{"id":"PARAM_ANGLE_Z","ptype":"angle","scale":0.8,"weight":0.5},{"id":"PARAM_BODY_ANGLE_Z","ptype":"angle","scale":2,"weight":1}],"targets":[{"id":"PARAM_HAIR_BACK","ptype":"angle","scale":0.022,"weight":1}]}]}]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/live2d_models/umaru/umaru.model.json</url>
    <content><![CDATA[{"version":"Sample 1.0.0","model":"umaru.moc","textures":["umaru2048/texture_00.png"],"physics":"physics.json","layout":{"width":1.5,"center_x":-0.0507,"center_y":0.57},"hit_areas":[{"name":"head","id":"D_REF.PT_HEAD"},{"name":"body","id":"D_REF.PT_BODY"}],"hit_areas_custom":{"head_x":[0.3,-0.9],"head_y":[0.19,-0.2],"body_x":[-0.3,-0.25],"body_y":[0.3,-0.9]},"motions":{"idle":[{"file":"mtn/umaru_idle.mtn","fade_in":1000,"fade_out":1000,"expressions":"F00"}],"tap_body":[{"file":"mtn/rita_Live2D_001.mtn","sound":"voice/01.wav"},{"file":"mtn/rita_Live2D_002.mtn","sound":"voice/02.wav"},{"file":"mtn/rita_Live2D_003.mtn","sound":"voice/03.wav"},{"file":"mtn/rita_Live2D_004.mtn","sound":"voice/04.wav"},{"file":"mtn/rita_Live2D_005.mtn","sound":"voice/05.wav"},{"file":"mtn/rita_Live2D_006.mtn","sound":"voice/06.wav"},{"file":"mtn/rita_Live2D_007.mtn","sound":"voice/07.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_008.mtn","sound":"voice/08.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_009.mtn","sound":"voice/09.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_010.mtn","sound":"voice/10.wav"},{"file":"mtn/rita_Live2D_011.mtn","sound":"voice/11.wav"},{"file":"mtn/rita_Live2D_012.mtn","sound":"voice/12.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_013.mtn","sound":"voice/13.wav","fade_in":500,"fade_out":500},{"file":"mtn/rita_Live2D_014.mtn","sound":"voice/14.wav"},{"file":"mtn/rita_Live2D_015.mtn","sound":"voice/15.wav"},{"file":"mtn/rita_Live2D_016.mtn","sound":"voice/16.wav"},{"file":"mtn/rita_Live2D_017.mtn","sound":"voice/17.wav"},{"file":"mtn/rita_Live2D_018.mtn","sound":"voice/18.wav"},{"file":"mtn/rita_Live2D_019.mtn","sound":"voice/19.wav"},{"file":"mtn/rita_Live2D_020.mtn","sound":"voice/20.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_021.mtn","sound":"voice/21.wav"},{"file":"mtn/rita_Live2D_022.mtn","sound":"voice/22.wav"},{"file":"mtn/rita_Live2D_023.mtn","sound":"voice/23.wav"},{"file":"mtn/rita_Live2D_024.mtn","sound":"voice/24.wav"},{"file":"mtn/rita_Live2D_025.mtn","sound":"voice/25.wav"},{"file":"mtn/rita_Live2D_026.mtn","sound":"voice/26.wav"},{"file":"mtn/rita_Live2D_027.mtn","sound":"voice/27.wav"},{"file":"mtn/rita_Live2D_028.mtn","sound":"voice/28.wav"},{"file":"mtn/rita_Live2D_029.mtn","sound":"voice/29.wav"},{"file":"mtn/rita_Live2D_030.mtn","sound":"voice/30.wav"},{"file":"mtn/rita_Live2D_031.mtn","sound":"voice/31.wav"},{"file":"mtn/rita_Live2D_032.mtn","sound":"voice/32.wav"},{"file":"mtn/rita_Live2D_033.mtn","sound":"voice/33.wav"},{"file":"mtn/rita_Live2D_034.mtn","sound":"voice/34.wav"}]}}]]></content>
  </entry>
  <entry>
    <title>「批处理工具」使用手册</title>
    <url>/manuals/batch-tools/index.html</url>
    <content><![CDATA[<h1 id="准备工作">1 <a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="需要下载的文件">1.1 <a href="#需要下载的文件" class="headerlink" title="需要下载的文件"></a>需要下载的文件</h2><ul>
<li>下载最新版的<a href="https://github.com/AnimMouse/ffmpeg-stable-autobuild/releases">FFmpeg</a>。</li>
<li>下载最新版的<a href="https://git-scm.com/download/win">Git for Windows</a>。</li>
<li>下载<a href="https://github.com/Mister-Kin/BatchTools">批处理工具</a>仓库代码。</li>
</ul>
<div class="flex-row">
<div class="flex-column">
<img data-src="./images/download_ffmpeg.webp">下载FFmpeg</div>
<div class="flex-column">
<img data-src="./images/download_git.webp">下载Git for Windows</div>
<div class="flex-column">
<img data-src="./images/download_project_code.webp">下载批处理工具代码</div>
</div>

<h2 id="安装和环境配置">1.2 <a href="#安装和环境配置" class="headerlink" title="安装和环境配置"></a>安装和环境配置</h2><h3 id="FFmpeg配置">1.2.1 <a href="#FFmpeg配置" class="headerlink" title="FFmpeg配置"></a>FFmpeg配置</h3><ol>
<li>将前面下载好的FFmpeg压缩包，解压并重命名文件名为ffmpeg放置于C盘根目录。</li>
<li>WIN+R键打开运行对话框，输入<code>control system</code>。</li>
<li>在System Path环境变量新建一个路径，定位到FFmpeg路径。</li>
</ol>
<div class="flex-row">
<div class="flex-column">
<img data-src="./images/1.1.webp">解压重命名放于C盘</div>
<div class="flex-column">
<img data-src="./images/1.2.webp">运行对话框</div>
<div class="flex-column">
<img data-src="./images/1.3.webp">打开高级系统设置</div>
<div class="flex-column">
<img data-src="./images/1.4.webp">打开环境变量</div>
</div>

<div class="flex-row">
<div class="flex-column">
<img data-src="./images/1.5.webp">编辑系统变量Path</div>
<div class="flex-column">
<img data-src="./images/1.6.webp">添加一个新路径</div>
<div class="flex-column">
<img data-src="./images/1.7.webp">定位路径</div>
<div class="flex-column">
<img data-src="./images/1.8.webp">确保添加成功，点击确定</div>
</div>

<h3 id="安装Git-for-Windows">1.2.2 <a href="#安装Git-for-Windows" class="headerlink" title="安装Git for Windows"></a>安装Git for Windows</h3><p>一路默认安装下去，终端使用Git Bash。</p>
<h3 id="批处理工具配置">1.2.3 <a href="#批处理工具配置" class="headerlink" title="批处理工具配置"></a>批处理工具配置</h3><p>解压批处理工具代码的压缩包即可，自行确定路径。比如我的路径如下图：</p>
<div class="flex-column">
<img data-src="./images/1.9.webp">批处理工具程序路径</div>

<h1 id="使用方法">2 <a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ol>
<li>鼠标右键选择<code>Git Bash Here</code>，即可打开Bash终端。</li>
<li>输入批处理工具程序的路径，回车执行。</li>
<li>按菜单提示选择对应功能。</li>
<li>输入需要操作媒体文件的文件夹路径。</li>
</ol>
<div class="flex-column">
<img data-src="./images/2.1.webp">输入程序路径执行</div>
<div class="flex-column">
<img data-src="./images/2.2.webp">输入操作路径执行</div>
]]></content>
  </entry>
  <entry>
    <title>「切换语言」使用手册v1.1 - Blender 插件</title>
    <url>/manuals/toggle-language/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center">插件下载链接</th>
<th align="center">项目仓库链接</th>
<th align="center">离线 PDF 链接</th>
<th align="center">LaTeX 源码链接</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage/releases/latest">点击跳转</a></td>
<td align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage">点击跳转</a></td>
<td align="center"><a href="https://wwr.lanzoui.com/b02c7lamf">点击跳转</a>（提取码：docs）</td>
<td align="center"><a href="https://github.com/Mister-Kin/OpenDocs/tree/master/manuals/toggle_language">点击跳转</a></td>
</tr>
</tbody></table>
<h1 id="介绍">1 <a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一款 blender 插件，旨在通过一键快速、轻松地在两种语言之间切换用户界面，而非重复打开偏好设置。</p>
<h2 id="背景">1.1 <a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在早期进行 blender 手册翻译工作时，因需要校对相关 UI 内容，本人频繁地在中英文之间切换软件的用户界面语言。但每次繁琐地使用偏好设置进行语言切换令人苦不堪言，索性就开发一款插件以简化这操作。</p>
<h2 id="面向人群">1.2 <a href="#面向人群" class="headerlink" title="面向人群"></a>面向人群</h2><p>本插件主要面向需要频繁切换界面语言的人群，常见的有如下人群：</p>
<ul>
<li>翻译者：校对相关内容。</li>
<li>CG 学习者：跟进外语教程。</li>
</ul>
<h2 id="插件目前实现的功能">1.3 <a href="#插件目前实现的功能" class="headerlink" title="插件目前实现的功能"></a>插件目前实现的功能</h2><ul>
<li>一键切换 UI 语言（支持 17 种语言相互切换）</li>
<li>一键打开用户偏好设置</li>
<li>一键设置自定义的blender偏好设置——「加载我的设置」功能</li>
<li>拥有切换当前UI提示级别的菜单——默认模式及开发者模式</li>
</ul>
<p><em>注：更多详细介绍请查看「<a href="#%E6%8F%92%E4%BB%B6%E5%8A%9F%E8%83%BD">插件功能</a>」小节内容，规划中的功能请跳转<a href="/roadmap/#%E5%88%87%E6%8D%A2%E8%AF%AD%E8%A8%80-Blender-%E6%8F%92%E4%BB%B6">蓝图规划页</a>查看。</em></p>
<h1 id="用法">2 <a href="#用法" class="headerlink" title="用法"></a>用法</h1><h2 id="下载及安装">2.1 <a href="#下载及安装" class="headerlink" title="下载及安装"></a>下载及安装</h2><h3 id="下载步骤">2.1.1 <a href="#下载步骤" class="headerlink" title="下载步骤"></a>下载步骤</h3><ul>
<li>插件下载地址：<a href="https://github.com/Mister-Kin/ToggleLanguage/releases/latest">点击跳转</a>，下载 ToggleLanguage.zip 文件。</li>
<li>blender 版本要求：<a href="https://www.blender.org/download/">v2.83+</a></li>
</ul>
<p><em>注：blender v2.83默认是启用翻译功能，这也是本插件要求将v2.83作为最低版本的缘由。本插件也许在v2.83以下版本能够运行，但不推荐，因为没测试过。</em></p>
<h3 id="安装步骤">2.1.2 <a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li>运行 Blender。</li>
<li>打开「Preferences&#x2F;用户偏好设置」（Menu&#x2F;菜单 &gt;Edit&#x2F;编辑 &gt;Preferences&#x2F;用户偏好设置）。</li>
<li>选择「Add‐ons&#x2F;插件」选项卡。</li>
<li>点击「Install...&#x2F;安装」后，选择先前所下载好的 ToggleLanguage.zip 并点击确定。</li>
<li>启用插件。</li>
</ol>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/installation.webp">图 1.1: 安装方法</div>
    <div class="flex-column">
    <img data-src="./images/enable_addon.webp">图 1.2: 启用插件</div>
</div>

<h2 id="插件-UI">2.2 <a href="#插件-UI" class="headerlink" title="插件 UI"></a>插件 UI</h2><p>如图 1.3 所示，启用插件后，可看见插件位于顶端菜单栏末尾处。插件 UI 从左往右看，有三个元素：</p>
<ol>
<li>左侧是语言切换按钮。</li>
<li>中间是插件的个性化设置菜单。</li>
<li>右侧是用户偏好设置按钮。</li>
</ol>
<div class="flex-column">
    <img data-src="./images/ui.webp">
    图 1.3: 插件 UI（图示菜单已被下拉展开）
</div>

<h2 id="插件功能">2.3 <a href="#插件功能" class="headerlink" title="插件功能"></a>插件功能</h2><p><em>注：以下按照 UI 排布位置进行功能介绍。 UI 排布位置详见「<a href="#%E6%8F%92%E4%BB%B6-UI">插件UI</a>」小节</em>。</p>
<ol>
<li>语言切换按钮（快捷键 F5）：切换 blender 用户界面语言（支持 17 种语言相互切换）。</li>
<li>设置菜单：插件的个性化设置。<ol>
<li>UI 提示方案菜单：选择相应 UI 提示的方案。<ol>
<li>默认模式：禁用「开发选项」「Python 工具提示」，如图 1.4 所示。</li>
<li>开发者模式：启用「开发选项」「Python 工具提示」，如图 1.5 所示。</li>
</ol>
</li>
<li>翻译新建数据块的名称按钮：启用&#x2F;禁用新建数据块名称的翻译功能<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，默认值为禁用，如图 1.7 所示，其对应在偏好设置中的选项如图 1.6 所示。在非英语界面环境中，启用该功能可使 blender 新建数据块的名称为当前语言，如图 1.8所示，新建平面的名称为「平面」，而非「plane」。</li>
<li>加载我的设置按钮：部署我个人的偏好设置。所涉及的设置选项详见<a href="#%E6%88%91%E7%9A%84%E8%AE%BE%E7%BD%AE%EF%BC%88%E6%88%91%E6%9C%AC%E4%BA%BA%E7%9A%84%E4%B8%80%E4%BA%9B-blender-%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0%EF%BC%89">我的设置</a>。该功能会覆盖你原有的 blender 设置（启动文件和偏好设置），请详细了解所涉及的设置项后再确认是否使用该功能。<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></li>
<li>加载初始设置按钮：加载初始的偏好设置和启动文件，即重置 blender，还原成初次安装blender时的状态。</li>
</ol>
</li>
<li>用户偏好设置按钮（快捷键 Ctrl+Alt+U）：打开用户偏好设置窗口。</li>
</ol>
<h3 id="插件切换语言的设置">2.3.1 <a href="#插件切换语言的设置" class="headerlink" title="插件切换语言的设置"></a>插件切换语言的设置</h3><p>在本插件的偏好设置面板中，可以设置切换语言功能所需的语言项，如图 1.2 所示，两个语言项的默认值分别为简体中文和英语。两个语言项不分前后顺序，只要设置好两种不同语言，插件便可以在这两种语言之间切换 UI 界面。</p>
<p>目前本插件支持 17 种语言<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>相互切换，详见下表：</p>
<ul>
<li>Simplified Chinese (简体中文)</li>
<li>Traditional Chinese (繁體中文)</li>
<li>English (English)</li>
<li>Spanish (Español)</li>
<li>Japanese (日本語)</li>
<li>Slovak (Slovenčina)</li>
<li>Ukrainian (Український)</li>
<li>Vietnamese (tiếng Việt)</li>
<li>Arabic (ﺔﻴﺑﺮﻌﻟﺍ)</li>
<li>Czech (Český)</li>
<li>German (Deutsch)</li>
<li>French (Français)</li>
<li>Italian (Italiano)</li>
<li>Korean (한국 언어)</li>
<li>Brazilian Portuguese (Português do Brasil)</li>
<li>Portuguese (Português)</li>
<li>Russian (Русский)</li>
</ul>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/default_hint.webp">图 1.4: UI 提示方案菜单：默认模式</div>
    <div class="flex-column">
    <img data-src="./images/developer_hint.webp">图 1.5: UI 提示方案菜单：开发者模式</div>
</div>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/translate_name_option_origin.webp">图 1.6: 原始的翻译新建数据块名称选项</div>
    <div class="flex-column">
    <img data-src="./images/translate_name_option_addon.webp">图 1.7: 插件的翻译新建数据块名称选项</div>
</div>
<div class="flex-column">
<img data-src="./images/translate_name_option_effect.webp">图 1.8: 翻译新建数据块名称的效果（图示界面语言为简中）</div>

<h3 id="我的设置（我本人的一些-blender-设置参数）">2.3.2 <a href="#我的设置（我本人的一些-blender-设置参数）" class="headerlink" title="我的设置（我本人的一些 blender 设置参数）"></a>我的设置（我本人的一些 blender 设置参数）</h3><p>开发这个功能主要是为了方便我一键设置恢复个人的偏好设置，比如更换设备使用blender时，通过下载安装本插件就可以一键恢复设置，而无需拷贝配置文件。</p>
<p>详细的设置参数情况如下：</p>
<ol>
<li>偏好设置部分：<ol>
<li>界面 &gt; 分辨率缩放到 1.3</li>
<li>界面&gt;编辑器&gt;状态栏&gt;启用「场景统计数据」「系统内存」「显存」（v2.90以上版本才有）</li>
<li>主题 &gt; Blender Light</li>
<li>插件 &gt; 启用插件 Node Wrangler、Cell Fracture、Auto Tile Size、Development: Icon Viewer（v3.0以上版本的不含有Auto Tile Size插件）</li>
<li>视图切换 &gt; 启用「围绕选择物体选择」和「缩放至鼠标位置」</li>
<li>键位映射 &gt; 启用「Pie Menu on Drag」和「Extra Shading Pie Menu Items」</li>
<li>系统<ol>
<li>Cycles 渲染设备 &gt; 有显卡设备时会自动选择启用显卡设备</li>
<li>声音 &gt; 音频设备 &gt; SDL（v2.83版本才有）</li>
</ol>
</li>
<li>保存 &amp; 加载 &gt; 启用「压缩文件」、关闭「自动保存」</li>
<li>文件路径<ol>
<li>纹理：H:&#x2F;textures&#x2F;</li>
<li>临时文件：E:&#x2F;temp&#x2F;</li>
<li>渲染输出：E:&#x2F;process&#x2F;</li>
<li>渲染缓存：E:&#x2F;temp&#x2F;</li>
</ol>
</li>
</ol>
</li>
<li>启动界面部分（注意：使用「我的偏好设置」功能，会同时将以下设置保存进启动界面文件）：<ol>
<li>属性编辑器<ol>
<li>渲染属性<ol>
<li>渲染引擎 &gt; Cycles</li>
<li>设备 &gt; GPU 计算（有GPU设备时会自动启用）</li>
<li>采样 &gt; 启用「自适应采样」（v3.0以下版本才有，不含v3.0）</li>
<li>采样&gt;启用「自适应采样」&gt;噪波阈值&gt; 0.1</li>
<li>性能 &gt; Auto Tile Size &gt; Target Tile Size &gt; 256（v3.0以下版本才有，不含v3.0，v3.0以上版本的不含有Auto Tile Size插件）</li>
<li>性能 &gt; 线程 &gt; 多线程模式 &gt; 固定</li>
<li>性能 &gt; 线程 &gt; 线程 &gt; 总线程数量-2（自动检测总线程数量并计算设置，保留两个线程给系统）</li>
</ol>
</li>
<li>输出属性 &gt; 输出路径：E:&#x2F;process&#x2F;</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>考虑到主题和文件路径设置比较偏个性化，并且我个人的主题和文件路径设置并非适合所有人，所以我专门又开发设计了两个布尔属性值来控制是否需要主题和文件路径设置。如果你想用「加载我的设置」功能，但又不喜欢其中的主题和文件路径设置，就可以通过这两个布尔值属性值来禁用它。这两个布尔属性值位于插件偏好设置面板中，如图1.9所示，勾选启用后，再应用「加载我的设置」功能时，插件会自动禁用对应的参数设置。</p>
<p>关于「加载我的设置」的两个布尔值属性值如下：</p>
<ul>
<li>禁用路径设置：禁用「加载我的设置」中的路径参数设置。</li>
<li>禁用主题设置：禁用「加载我的设置」中的主题参数设置。</li>
</ul>
<div class="flex-column">
<img data-src="./images/two_bool_properties_for_loading_my_settings.webp">图 1.9: 关于「加载我的设置」的两个布尔属性值</div>

<h3 id="关于使用翻译新建数据块的名称按钮的说明">2.3.3 <a href="#关于使用翻译新建数据块的名称按钮的说明" class="headerlink" title="关于使用翻译新建数据块的名称按钮的说明"></a>关于使用翻译新建数据块的名称按钮的说明</h3><p>需要注意的是，翻译新建数据块的名称按钮设置值是无法随用户偏好设置自动保存。该功能的代码实现：其 property 属性值是注册在 bpy.types.Scene 中。因此，无法通过用户偏好设置中自动保存设置的功能进行存储。不像本插件偏好设置面板中的两种语言的属性值，后者是通过 bpy.types.AddonPreferences 类实现的，它可以通过用户偏好设置中自动保存设置的功能进行存储<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup>。</p>
<p>建议：若需要保存该功能的设置值，请保存一个工程文件<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>（.blend），该功能的设置值会保存在这个工程文件。</p>
<h1 id="开发记录">3 <a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><h2 id="开发与测试环境">3.1 <a href="#开发与测试环境" class="headerlink" title="开发与测试环境"></a>开发与测试环境</h2><p>OS: Win10 v22H2 &#x2F; Kali Linux 2021.3 &#x2F; MacOS<br>Blender: v2.83 ‑ v3.3</p>
<h2 id="已知问题——加载初始设置按钮导致闪退">3.2 <a href="#已知问题——加载初始设置按钮导致闪退" class="headerlink" title="已知问题——加载初始设置按钮导致闪退"></a>已知问题——加载初始设置按钮导致闪退</h2><p>在未保存工程文件<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>（.blend）的情况下，加载初始设置功能会有机率引起异常码EXCEPTION_ACCESS_VIOLATION，从而导致 blender 闪退<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>，目前暂未查明原因。在导致 blender 闪退时，重置功能的代码执行的不完整，一般是成功地加载初始偏好设置并保存，而初始启动文件并未成功加载并保存。因此，在该功能导致 blender 闪退后，还请用户自行重置偏好设置及启动文件。</p>
<p>建议：在使用该功能之前，请先保存一个工程文件（.blend）。</p>
<h2 id="更新历史">3.3 <a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>表 1.1 记录了本插件各个版本的更新历史。</p>
<center>表 1.1: 插件的更新历史</center>

<table>
<thead>
<tr>
<th align="center">版本</th>
<th align="center">更新日期</th>
<th align="center">更新内容</th>
</tr>
</thead>
<tbody><tr>
<td align="center">v1.1</td>
<td align="center">2022&#x2F;10&#x2F;16</td>
<td align="center">修复偏好设置一直被修改导致无法消星的情况；移除keymaps.py中的注释代码……</td>
</tr>
<tr>
<td align="center">v1.0</td>
<td align="center">2022&#x2F;01&#x2F;12</td>
<td align="center">移除F6快捷键的支持；paths路径统一为小写格式……</td>
</tr>
<tr>
<td align="center">v0.9</td>
<td align="center">2021&#x2F;11&#x2F;06</td>
<td align="center">重构：拆分文件规范化开发；加载我的设置功能支持更多的系统和硬件平台……</td>
</tr>
<tr>
<td align="center">v0.8</td>
<td align="center">2021&#x2F;08&#x2F;30</td>
<td align="center">支持切换更多语言；支持完整翻译插件 UI；为某些功能添加交互提示（信息框，确认框等）……</td>
</tr>
<tr>
<td align="center">v0.7</td>
<td align="center">2021&#x2F;07&#x2F;11</td>
<td align="center">我的偏好设置支持 blender v2.93；重写 property 代码</td>
</tr>
<tr>
<td align="center">v0.6</td>
<td align="center">2021&#x2F;03&#x2F;10</td>
<td align="center">添加布尔值按钮‐新数据翻译；支持快捷键；代码重构，插件翻译重构……</td>
</tr>
<tr>
<td align="center">v0.5</td>
<td align="center">2020&#x2F;12&#x2F;08</td>
<td align="center">支持 blender v2.91；支持从.zip 文件安装插件……</td>
</tr>
<tr>
<td align="center">v0.5‐beta</td>
<td align="center">2020&#x2F;09&#x2F;20</td>
<td align="center">添加菜单用以选择 UI 提示方案</td>
</tr>
<tr>
<td align="center">v0.4</td>
<td align="center">2020&#x2F;08&#x2F;03</td>
<td align="center">代码项目重命名为 ToggleLanguage；按钮 UI 放置于最右端；添加新按钮以快速查看 preferences</td>
</tr>
<tr>
<td align="center">v0.3</td>
<td align="center">2020&#x2F;06&#x2F;05</td>
<td align="center">更新至 blender 2.83 API；修改部分类名；添加文档链接；修改完善许可说明</td>
</tr>
<tr>
<td align="center">v0.2</td>
<td align="center">2020&#x2F;05&#x2F;21</td>
<td align="center">清除未使用属性的报错</td>
</tr>
<tr>
<td align="center">v0.1</td>
<td align="center">2020&#x2F;05&#x2F;12</td>
<td align="center">完成基础的功能设计「一键切换」</td>
</tr>
</tbody></table>
<p><em>注：更多详细的信息，请查看 <a href="https://github.com/Mister-Kin/ToggleLanguage/releases">Release Notes</a> 。</em></p>
<h1 id="作者">4 <a href="#作者" class="headerlink" title="作者"></a>作者</h1><p><strong>ToggleLanguage</strong> © Mr. Kin, 项目代码采用 <a href="https://github.com/Mister-Kin/ToggleLanguage/blob/master/LICENSE">GNU GPL v3.0</a> 许可协议进行发布。<br>由 Mr. Kin 著作并维护。</p>
<h1 id="参考文献">5 <a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] CONLAN C. The Blender Python API[M]. Bethesda, Maryland: Apress, 2017: 65-85. DOI: 10.1007&#x2F;978-1-4842-2802-9.<br>[2] Blender Python API Documentation[EB&#x2F;OL]. <a href="https://docs.blender.org/api/current/index.html">https://docs.blender.org/api/current/index.html</a>.<br>[3] Blender Stackexchange[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/">https://blender.stackexchange.com/questions/</a>.<br>[4] 一花一世界，一叶一乾坤. Blender 插件编写指南[EB&#x2F;OL]. <a href="https://www.cnblogs.com/yaoyu126/p/9319746.html">https://www.cnblogs.com/yaoyu126/p/9319746.html</a>.<br>[5] Python Documentation[EB&#x2F;OL]. <a href="https://docs.python.org/3/library/functions.html?highlight=dir#dir">https://docs.python.org/3/library/functions.html?highlight=dir#dir</a>.<br>[6] Nikita. Localization of Blender add-ons –with API[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/localization-of-blender-add-ons-with-api/">https://b3d.interplanety.org/en/localization-of-blender-add-ons-with-api/</a>.<br>[7] Nikita. Add-on preferences panel[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/add-on-preferences-panel/">https://b3d.interplanety.org/en/add-on-preferences-panel/</a>.<br>[8] Blendermonkey. How to save custom user preferences for an addon[EB&#x2F;OL]. <a href="https://devtalk.blender.org/t/how-to-save-custom-user-preferences-for-an-addon/10362">https://devtalk.blender.org/t/how-to-save-custom-user-preferences-for-an-addon/10362</a>.<br>[9] Skylumz. How to popup simple message box from python console?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/109711/how-to-popup-simple-message-box-from-python-console">https://blender.stackexchange.com/questions/109711/how-to-popup-simple-message-box-from-python-console</a>.<br>[10] P2or. How to call a confirmation dialog box?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/73286/how-to-call-a-confirmation-dialog-box">https://blender.stackexchange.com/questions/73286/how-to-call-a-confirmation-dialog-box</a>.<br>[11] Nikita. Creating pop-up panels with user UI in Blender add-on[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/creating-pop-up-panels-with-user-ui-in-blender-add-on/">https://b3d.interplanety.org/en/creating-pop-up-panels-with-user-ui-in-blender-add-on/</a>.<br>[12] TEUSINK D. Force GPU rendering python script[EB&#x2F;OL]. <a href="https://developer.blender.org/T54099">https://developer.blender.org/T54099</a>.<br>[13] Lewis2e. Need a way to detect if a valid GPU device is available from Python[EB&#x2F;OL]. <a href="https://devtalk.blender.org/t/need-a-way-to-detect-if-a-valid-gpu-device-is-available-from-python/17080">https://devtalk.blender.org/t/need-a-way-to-detect-if-a-valid-gpu-device-is-available-from-python/17080</a>.<br>[14] NEUMANN N. Python API for getting available devices is getting even more awkward in 2.81[EB&#x2F;OL]. <a href="https://developer.blender.org/T71172">https://developer.blender.org/T71172</a>.<br>[15] Quarkpol. How setup Cycles Compute Device in console[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/154249/how-setup-cycles-compute-device-in-console">https://blender.stackexchange.com/questions/154249/how-setup-cycles-compute-device-in-console</a>.<br>[16] User2746401. Render using all cores except one (or N)[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/45213/render-using-all-cores-except-one-or-n">https://blender.stackexchange.com/questions/45213/render-using-all-cores-except-one-or-n</a>.<br>[17] Nikita. Class naming conventions in Blender 2.8 Python API[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/class-naming-conventions-in-blender-2-8-python-api/">https://b3d.interplanety.org/en/class-naming-conventions-in-blender-2-8-python-api/</a>.<br>[18] BARTON C. Python API, changes to type registration in 2.8[EB&#x2F;OL]. <a href="https://developer.blender.org/T52599">https://developer.blender.org/T52599</a>.<br>[19] Blender Addon UI Cookbook[EB&#x2F;OL]. <a href="https://archive.blender.org/wiki/index.php/Dev:Py/Scripts/Cookbook/Code_snippets/Interface/">https://archive.blender.org/wiki/index.php/Dev:Py/Scripts/Cookbook/Code_snippets/Interface/</a>.</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">v1.1以上版本不再是强制接管该功能。虽然可以通过用户偏好设置来设置一个不同于插件的设置值，但在使用插件的该功能或者语言切换按钮后，插件会对该项改写修正为插件的设置值。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">理论上支持任意系统、任意安装路径、任意显卡平台的情况，但Linux OS和MacOS比较少测试，可能会存在有bug。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">即 blender 内置翻译语言列表中 Complete 和 In Progress 两个列表中的语言，共17种。暂不考虑加入 Starting 列表中的语言，因为其变动性较高，有可能被删除或者新添加。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;">实际上，在禁用用户偏好设置的自动保存设置功能后，本插件偏好设置面板中的两种语言的属性值也无法自动存储，需要保存在某一工程文件中才行。</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;">保存在启动文件也是可行的。</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline-block; vertical-align: top;">例如通过安装路径打开主程序的情况或者打开一个工程文件后进行修改却未保存的情况。</span><a href="#fnref:6" rev="footnote"> ↩</a></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">7.</span><span style="display: inline-block; vertical-align: top;">v1.1版本修复偏好设置一直被修改导致无法消星的问题后，闪退的情况大幅改善，触发闪退概率大大降低。</span><a href="#fnref:7" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
  </entry>
</search>

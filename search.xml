<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>网站收藏夹</title>
    <url>/bookmark/</url>
    <content><![CDATA[<h1 id="软件查找"><a href="#软件查找" class="headerlink" title="软件查找"></a>软件查找</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">软件查找</p>
    </div>
    <a href="https://alternativeto.net/">AlternativeTo</a>
    <a href="https://meta.appinn.net/t/topic/17302">Adobe桌面软件替代</a>
    <a href="https://post.smzdm.com/p/a7po0d79/">Adobe替代软件</a>
    <a href="https://www.adobe.com/creativecloud/whats-included/mini-plans/cci-all-apps-whats-included.html">Adobe CC Apps List</a>
    <a href="https://www.adobe.com/products/substance3d.html#">Adobe Substance3D Apps List</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">镜像源</p>
    </div>
    <a href="https://mirrors.ustc.edu.cn/">中国科学技术大学镜像源</a>
    <a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学镜像源</a>
    <a href="https://developer.aliyun.com/mirror/">阿里镜像源</a>
    <a href="https://developer.aliyun.com/mirror/NPM">阿里NPM镜像</a>
    <a href="https://mirrors.cloud.tencent.com/">腾讯镜像源</a>
    <a href="https://mirrors.huaweicloud.com/home">华为镜像源</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">镜像源整合</p>
    </div>
    <a href="https://help.mirrors.cernet.edu.cn/">MirrorZ Help</a>
</div>

</div>

<h1 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">使用工具箱</p>
    </div>
    <a href="https://www.idcd.com/">实用工具箱</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">公众号排版器</p>
    </div>
    <a href="https://knb.im/mp/">可能吧公众号排版器</a>
    <a href="https://foxmd.cn/">Foxmd｜markdown微信公众号编辑器</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">图像处理</p>
    </div>
    <a href="https://www.photopea.com/">Photopea</a>
    <a href="https://ps.gaoding.com">稿定设计（国内版Photopea）</a>
    <a href="https://www.vectorpea.com/">Vectorpea</a>
    <a href="https://tinify.cn/">TinyPNG</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">以图搜图</p>
    </div>
    <a href="https://trace.moe/">动漫图像查番</a>
    <a href="https://ascii2d.net/">二次元画像详细检索</a>
    <a href="http://www.iqdb.org/">多服务图像查找</a>
    <a href="https://graph.baidu.com/pcpage/index">百度识图</a>
    <a href="https://www.bing.com/visualsearch">必应识图</a>
    <a href="https://images.google.com/">谷歌识图</a>
    <a href="https://yandex.com/images/">Yandex</a>
    <a href="https://saucenao.com/">SauceNAO</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">镜像加速</p>
    </div>
    <a href="https://doget.nocsdn.com/">Doget（Github加速下载）</a>
    <a href="https://pd.zwc365.com/">zwc365（Github加速下载）</a>
    <a href="https://nightly.link/">免登录下载actions artifacts</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Host加速</p>
    </div>
    <a href="https://github-hosts.tinsfox.com/hosts">GitHub Host列表</a>
    <a href="https://github-hosts.tinsfox.com/">GitHub Host</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">IP地址查询</p>
    </div>
    <a href="https://ip.tool.chinaz.com/">全球IP地址查询-站长工具</a>
    <a href="https://my-ip.cc/zh-hans/">我的IP地址</a>
    <a href="https://www.ipaddress.com/">ipaddress查看IP地址</a>
    <a href="https://www.ip138.com/">ip138查看IP地址</a>
    <a href="https://tool.lu/ip/">IP归属地查询</a>
    <a href="https://www.cip.cc/">CIP查看IP地址</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">远程传输</p>
    </div>
    <a href="https://wormhole.app/">Wormhole简单私密文件共享</a>
    <a href="https://fastsend.ing/zh">点对点Fast Send</a>
    <a href="https://snapdrop.net/">snapdrop（仅局域网）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">文档处理</p>
    </div>
    <a href="https://tableconvert.com/zh-cn/csv-to-markdown">表格转换工具</a>
    <a href="https://smallpdf.com/cn">Smallpdf</a>
    <a href="https://tools.pdf24.org/zh/">PDF24 Tools</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">机场</p>
    </div>
    <a href="https://sub.789.st/">在线订阅转换</a>
    <a href="https://linux.do/t/topic/31505">在线订阅转换分享</a>
    <a href="https://github.com/Aethersailor/Custom_OpenClash_Rules">Custom_OpenClash_Rules</a>
</div>

</div>

<h1 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">CG教程</p>
    </div>
    <a href="https://www.gfxcamp.com/">龋齿一号GFXCamp</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">软件</p>
    </div>
    <a href="http://monkrus.ws">m0nkrus (Adobe Cracked)</a>
    <a href="https://genpguides.github.io/download_directory/">Genp Guides (Adobe Cracked)</a>
    <a href="https://wangchujiang.com/awesome-mac/README-zh.html">Awesome Mac</a>
    <a href="https://wangchujiang.com/awesome-mac/README-zh.html#%E7%9B%97%E7%89%88%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E9%BB%91%E5%90%8D%E5%8D%95">Awesome Mac（Cracked）</a>
    <a href="https://www.shejibaozang.com/">设计宝藏</a>
    <a href="https://zmingcx.com/">知更鸟</a>
    <a href="https://www.ghxi.com/">果核剥壳</a>
    <a href="https://www.ypojie.com/">易破解（亿破姐）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">书籍</p>
    </div>
    <a href="https://zhuanlan.zhihu.com/p/98625180">全网最全绘画优秀书籍推荐</a>
    <a href="https://github.com/TapXWorld/ChinaTextbook">所有小初高、大学PDF教材</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">游戏</p>
    </div>
    <a href="http://qhgame.ysepan.com/">乐赏游戏空间</a>
    <a href="https://www.gamer520.com/">GAMER520</a>
    <a href="https://www.humblebundle.com/">Humble慈善包</a>
    <a href="https://www.nexusmods.com/">Nexus Mods</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">音乐</p>
    </div>
    <a href="https://github.com/lyswhut/lx-music-desktop/releases">LX Music桌面版</a>
    <a href="https://github.com/lyswhut/lx-music-mobile/releases">LX Music移动版</a>
    <a href="https://github.com/Huibq/keep-alive">音乐音源</a>
    <a href="https://github.com/maotoumao/MusicFreeDesktop/releases">MusicFree</a>
    <a href="https://docs.lxmusic.top/">LX Music（旧地址）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">漫画</p>
    </div>
    <a href="https://mihon.app/">Mihon（Tachiyomi的接任者）</a>
    <a href="https://tachiyomi.org/">Tachiyomi（已删库）</a>
</div>

</div>

<h1 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">浏览器</p>
    </div>
    <a href="https://www.mozilla.org/zh-CN/firefox/all/#product-desktop-release">Mozilla Firefox（国际版）</a>
    <a href="https://www.microsoft.com/zh-cn/edge/business/download">Microsoft Edge</a>
    <a href="https://www.google.com/intl/zh-CN/chrome/?standalone=1&platform=win64">Google Chrome（com域名）</a>
    <a href="https://community.wvbtech.com/d/3201">Edge/Chrome/Opera（支持win7）</a>
    <a href="https://www.torproject.org/zh-CN/download/">Tor浏览器</a>
    <a href="https://www.google.cn/chrome/?standalone=1&platform=win64">Google Chrome（cn域名）</a>
    <a href="http://www.firefox.com.cn/download/#product-desktop-release">Mozilla Firefox（国内版）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">输入法</p>
    </div>
    <a href="https://github.com/rime/weasel/releases">小狼毫Weasel</a>
    <a href="https://rime.im/">RIME中州韻輸入法引擎</a>
    <a href="https://github.com/studyzy/imewlconverter/">深蓝词库转换</a>
    <a href="https://github.com/rime/rime-cantonese">粵語拼音輸入方案</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">压缩软件</p>
    </div>
    <a href="https://www.7-zip.org/">7-Zip</a>
    <a href="https://github.com/mcmilk/7-Zip-zstd/releases">7-Zip ZS</a>
    <a href="/troubleshooting/software-troubleshooting/#WinRAR">WinRAR</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">密码管理器</p>
    </div>
    <a href="https://keepass.info/">KeePass密码管理器</a>
    <a href="https://keepass.info/translations.html">KeePass翻译文件</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">PDF工具</p>
    </div>
    <a href="https://www.sumatrapdfreader.org/">Sumatra PDF</a>
    <a href="https://www.cnblogs.com/stronghorse">老马的原创空间（电子书制作工具）</a>
    <a href="https://github.com/ocrmypdf/OCRmyPDF">OCRmyPDF</a>
    <del><a href="http://www.daokeyuedu.com/index.php?act=download">稻壳阅读器（被金山法务起诉导致下架）</a></del>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">图像浏览器</p>
    </div>
    <a href="https://github.com/d2phap/ImageGlass/releases">ImageGlass</a>
    <a href="https://github.com/d2phap/ExifGlass/releases">ExifGlass</a>
    <a href="https://github.com/sylikc/jpegview/releases">JPEGView</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">录屏推流</p>
    </div>
    <a href="https://obsproject.com/">OBS</a>
    <a href="https://www.danmuji.org/plugins/">弹幕姬插件</a>
    <a href="https://www.obsapp.com/">OBS插件中心（旧称小葫芦）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Win实用工具</p>
    </div>
    <a href="https://github.com/microsoft/terminal/releases">Terminal终端</a>
    <a href="https://github.com/microsoft/PowerToys/releases">PowerToys</a>
    <a href="https://github.com/lin-ycv/EverythingPowerToys/releases">EverythingPowerToys</a>
    <a href="https://fastcopy.jp/">FastCopy</a>
    <a href="https://github.com/Const-me/Whisper/releases">Whisper（语音转文字）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">截图贴图</p>
    </div>
    <a href="https://pixpinapp.com/">PixPin</a>
    <a href="https://www.snipaste.com/">Snipaste</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">播放器/编解码库</p>
    </div>
    <a href="https://codecguide.com/download_k-lite_codec_pack_mega.htm">K-Lite Codec Pack</a>
    <a href="https://wenlei.lanzout.com/b04aos4qh">闻雷PotPlayer</a>
    <a href="http://wenlei.ysepan.com/">闻雷网盘（密码同名）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">杀软</p>
    </div>
    <a href="https://www.huorong.cn/">火绒安全</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">多线程下载工具</p>
    </div>
    <a href="https://www.neatdownloadmanager.com/index.php/en/">Neat Download Manager</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">磁力下载</p>
    </div>
    <a href="https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases">qBittorrent Enhanced</a>
    <a href="https://www.qbittorrent.org/download">qBittorrent</a>
    <a href="https://m2t.lolicon.app/">Magnet2Torrent（磁力转种子）</a>
    <a href="https://webtor.io/#/">webtor.io（在线观看和下载种子）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Telegram下载</p>
    </div>
    <a href="https://github.com/iyear/tdl/releases">tdl（Teleglam对话文件下载工具）</a>
    <a href="https://docs.iyear.me/tdl/zh/">tdl使用手册</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">即时通讯</p>
    </div>
    <a href="https://weixin.qq.com/">微信（WeChat）</a>
    <a href="https://tim.qq.com/download.html">TIM</a>
    <a href="https://work.weixin.qq.com/#indexDownload">企业微信</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">扩屏工具</p>
    </div>
    <a href="https://www.splashtop.cn/cn/products/wiredxdisplay">XDisplay</a>
    <a href="https://www.duetdisplay.com/zh#download">Duet Display</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">笔记</p>
    </div>
    <a href="https://note.youdao.com/download.html">有道云笔记</a>
    <a href="https://github.com/NaoTu/DesktopNaotu/releases">桌面版脑图</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">远程控制</p>
    </div>
    <a href="https://rustdesk.com/zh-cn/">RustDesk</a>
    <a href="https://www.todesk.com/download.html">ToDesk</a>
    <a href="https://sunlogin.oray.com/default">向日葵远程控制软件</a>
    <a href="https://www.anyviewer.cn/remote-access.html">AnyViewer远程看看</a>
    <a href="https://uuyc.163.com/">网易UU远程</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">键盘控制</p>
    </div>
    <a href="https://github.com/martin-stone/touchcursor/releases">TouchCursor（主键盘控制方向键）</a>
    <a href="https://github.com/petoncle/mousemaster/releases">mousemaster（键盘控制鼠标）</a>
</div>

</div>

<h1 id="CG设计软件"><a href="#CG设计软件" class="headerlink" title="CG设计软件"></a>CG设计软件</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Blender三维软件</p>
    </div>
    <a href="https://www.blender.org/download/">Blender</a>
    <a href="https://download.blender.org/release/">Blender All Release</a>
    <a href="https://developer.blender.org/docs/release_notes/">Blender Release Notes</a>
    <a href="https://extensions.blender.org/">Blender Extensions</a>
    <a href="https://opendata.blender.org/">Blender Open Data</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">三维软件</p>
    </div>
    <a href="https://alicevision.org/">AliceVision（照片建模）</a>
    <a href="https://instamaterial.com/">InstaMAT</a>
    <a href="https://static.makehumancommunity.org/makehuman/releases.html">MakeHuman Releases</a>
    <a href="https://vroid.com/en">VRoid</a>
    <a href="https://ephtracy.github.io/">MagicaVoxel</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">动捕工具</p>
    </div>
    <a href="https://github.com/cgtinker/BlendArMocap">BlendArMocap</a>
    <a href="https://github.com/freemocap/freemocap">freemocap</a>
    <a href="https://blendermarket.com/products/faceit">Faceit</a>
    <a href="https://www.facegood.cc/home">FACEGOOD Metahuman Animator</a>
    <a href="https://reincubate.com/zh/camo/">Camo（摄像头调用工具）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">音视频编解码</p>
    </div>
    <a href="https://github.com/AnimMouse/ffmpeg-stable-autobuild/releases">FFmpeg二进制程序</a>
    <a href="https://ffmpeg.org/">FFmpeg</a>
    <a href="https://handbrake.fr/">HandBrake</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">视频处理</p>
    </div>
    <a href="http://www.blackmagicdesign.com/cn/products/davinciresolve"> DaVinci Resolve</a>
    <a href="https://kdenlive.org/en/download/">Kdenlive</a>
    <a href="https://www.openshot.org/download/">OpenShot</a>
    <a href="https://www.shotcut.org/download/">Shotcut</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">图像处理</p>
    </div>
    <a href="https://krita.org/zh-cn/download/">Krita</a>
    <a href="https://github.com/Acly/krita-ai-diffusion/releases">krita-ai-diffusion</a>
    <a href="https://inkscape.org/zh-hans/">Inkscape</a>
    <a href="https://www.gimp.org/">GIMP</a>
    <a href="https://gmic.eu/">G'MIC（图像处理框架）</a>
    <a href="https://imagemagick.org/index.php">ImageMagick</a>
    <a href="https://opentoonz.github.io/e/">OpenToonz</a>
    <a href="https://www.synfig.org/">Synfig Studio</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">音频处理</p>
    </div>
    <a href="https://www.audacityteam.org/">Audacity</a>
    <a href="https://support.audacityteam.org/basics/installing-ffmpeg">Audacity FFmpeg库</a>
    <a href="https://github.com/intel/openvino-plugins-ai-audacity/releases">OpenVINO™ AI Plugins for Audacity</a>
    <a href="https://lmms.io/">LMMS</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">字幕工具</p>
    </div>
    <a href="https://aegisub.org/downloads/">Aegisub (Advanced Subtitle Editor)</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">后期特效</p>
    </div>
    <a href="https://natrongithub.github.io/">NATRON</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">独游发布平台</p>
    </div>
    <a href="https://itch.io/">itch.io</a>
    <a href="https://www.dlsite-china.com/">Dlsite（无法发布免费游戏）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">游戏引擎</p>
    </div>
    <a href="https://www.unrealengine.com/">虚幻引擎Unreal Engine</a>
    <a href="https://ue5box.com/index.html">虚幻盒子UE Box</a>
    <a href="https://dev.epicgames.com/documentation/zh-cn/unreal-engine">虚幻引擎手册</a>
    <a href="https://godotengine.org/">Godot Engine</a>
    <a href="https://unity.com/cn/download">Unity</a>
    <a href="https://upbge.org/">UPBGE</a>
    <a href="https://armory3d.org/">Armory</a>
    <a href="https://devga.me/">devga（引擎资料）</a>
    <a href="https://github.com/urho3d/Urho3D">Urho3D</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">渲染器</p>
    </div>
    <a href="https://malt3d.com/">Malt（NPR Blender插件）</a>
    <a href="http://www.mitsuba-renderer.org/">Mitsuba 3（PBR）</a>
    <a href="https://www.amd.com/zh-cn/products/graphics/software/radeon-prorender.html">AMD Radeon ProRender（PBR）</a>
    <a href="https://luxcorerender.org/">LuxCoreRender（PBR）</a>
    <a href="http://www.povray.org/">POV-Ray（PBR）</a>
    <a href="https://appleseedhq.net/">appleseed（PBR）</a>
    <a href="https://github.com/YafaRay/libYafaRay">YafaRay（PBR）</a>
    <a href="http://www.aqsis.org/">Aqsis（PBR）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">破解</p>
    </div>
    <a href="http://monkrus.ws">m0nkrus (Adobe Cracked)</a>
    <a href="https://genpguides.github.io/download_directory/">Genp Guides (Adobe Cracked)</a>
    <a href="https://www.yuque.com/ccllcc/share/psbeta">Photoshop Beta 版使用指南</a>
</div>

</div>

<h1 id="CG设计软件素材"><a href="#CG设计软件素材" class="headerlink" title="CG设计软件素材"></a>CG设计软件素材</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">参考蓝图</p>
    </div>
    <a href="https://drawingdatabase.com/">Blueprints for 3D modeling</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">三维模型</p>
    </div>
    <a href="https://documentation.3delightcloud.com/display/3DFM9/Demo+Scenes">Demo场景（Maya插件3Delight网站）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">音乐/音效</p>
    </div>
    <a href="https://freemusicarchive.org/music/alex-productions/">Alex-Productions</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">游戏相关资产</p>
    </div>
    <a href="https://www.spriters-resource.com/">spriters-resource</a>
    <a href="https://github.com/RyensX/UnrealFabAssistant">Fab商城免费资源入库脚本</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">图标ICON</p>
    </div>
    <a href="https://uiverse.io/">Uiverse</a>
    <a href="https://remixicon.com/">REMIX ICON</a>
</div>

</div>

<h1 id="代码开发"><a href="#代码开发" class="headerlink" title="代码开发"></a>代码开发</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">文本编辑器/IDE</p>
    </div>
    <a href="https://code.visualstudio.com/Download">Visual Studio Code</a>
    <a href="https://gitee.com/cxasm/notepad--/releases">notepad--</a>
    <a href="https://github.com/VSCodium/vscodium">vscodium</a>
    <a href="https://www.jetbrains.com/zh-cn/idea/download/?section=windows">IntelliJ IDEA</a>
    <a href="https://github.com/petitoff/Reset-trial-Jetbrains-Products-on-Windows">IntelliJ IDEA（重置许可）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">编译器</p>
    </div>
    <a href="https://visualstudio.microsoft.com/zh-hans/downloads/">Visual Studio 2022生成工具</a>
    <a href="https://tug.org/texlive/">TeX Live</a>
    <a href="https://gcc.gnu.org/">GCC</a>
    <a href="https://github.com/jmeubank/tdm-gcc/releases">tdm-gcc</a>
    <a href="https://nasm.us/">NASM</a>
    <a href="http://yasm.tortall.net/">Yasm</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">JDK发行版</p>
    </div>
    <a href="https://adoptium.net/zh-CN/temurin/releases/">（推荐）Adoptium OpenJDK</a>
    <a href="https://mirrors.tuna.tsinghua.edu.cn/Adoptium/">Adoptium OpenJDK（清华镜像源）</a>
    <a href="https://www.azul.com/downloads/">Azul JDKs</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">API接口调试</p>
    </div>
    <a href="https://www.apipost.cn/">Apipost</a>
    <a href="https://apifox.com/">Apifox</a>
    <a href="https://www.postman.com/postman/">Postman</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">数据库</p>
    </div>
    <a href="https://dev.mysql.com/downloads/mysql/">MySQL Community版</a>
    <a href="https://download.navicat.com/download/navicat170_premium_lite_cs_x64.exe">Navicat Premium Lite（v17.0.13无需帐号）</a>
    <a href="https://www.navicat.com.cn/download/navicat-premium-lite">Navicat Premium Lite（需帐号登录）</a>
    <a href="https://www.jetbrains.com/datagrip/">JetBrains DataGrip</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">构建系统/工具</p>
    </div>
    <a href="https://cmake.org/download/">CMake</a>
    <a href="https://github.com/ninja-build/ninja/releases">Ninja</a>
    <a href="https://www.msys2.org/">MSYS2</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Python</p>
    </div>
    <a href="https://www.python.org/">Python</a>
    <a href="https://www.anaconda.com/download/success">Anaconda</a>
    <a href="https://docs.anaconda.com/free/miniconda/">Miniconda</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">版本控制</p>
    </div>
    <a href="https://git-scm.com/">Git</a>
    <a href="https://tortoisesvn.net/downloads.html">TortoiseSVN</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">前端工具</p>
    </div>
    <a href="https://nodejs.org/en/download">Node.js</a>
    <a href="https://github.com/coreybutler/nvm-windows">nvm-windows（node版本管理）</a>
    <a href="https://github.com/yarnpkg/yarn/releases">Yarn离线包<=v1.22.19</a>
    <a href="https://classic.yarnpkg.com/lang/en/">Yarn（旧版网站）</a>
    <a href="https://yarnpkg.com/migration/guide">新版Yarn迁移步骤</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Docker</p>
    </div>
    <a href="https://github.com/louislam/dockge">Docker Compose可视化管理</a>
    <a href="https://github.com/dongyubin/DockerHub">Docker镜像源</a>
    <a href="https://status.1panel.top/status/docker">国内 Docker 服务状态 & 镜像加速监控</a>
    <a href="https://www.docker.com/products/docker-desktop/">Docker Desktop</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">安装包制作</p>
    </div>
    <a href="https://nsis.sourceforge.io/Download">NSIS</a>
    <a href="https://hmne.sourceforge.net/index.php#Download">HM NIS EDIT</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">软件单文件制作</p>
    </div>
    <a href="https://enigmaprotector.com/en/downloads.html">Enigma Virtual Box</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">虚拟机软件</p>
    </div>
    <a href="https://dl.bobpony.com/software/vmware/workstation/">VMware full版BobPony镜像</a>
    <a href="https://softwareupdate.vmware.com/cds/vmw-desktop/ws/">VMware core+补全工具官链</a>
    <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a>
    <a href="https://www.qemu.org/download/">QEMU</a>
    <a href="https://www.android-x86.org/">Android-x86</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">虚拟化系统</p>
    </div>
    <a href="https://www.proxmox.com/en/downloads">Proxmox VE (PVE)</a>
    <a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">virtio-win for Proxmox VE</a>
    <a href="https://unraid.net/download">Unraid OS</a>
    <a href="https://knowledge.broadcom.com/external/article/316595/build-numbers-and-versions-of-vmware-esx.html">VMware ESXi/ESX</a>
    <a href="https://www.nutanix.com/products/community-edition">Nutanix</a>
    <a href="https://platform9.com/private-cloud-director-community-edition/">Platform9</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">SSH传输|局域网传输|远程传输</p>
    </div>
    <a href="https://winscp.net/eng/download.php">WinSCP</a>
    <a href="https://localsend.org/zh-CN/download">LocalSend</a>
    <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PuTTY</a>
    <a href="https://snapdrop.net/">snapdrop（局域网）</a>
    <a href="https://github.com/sz3/libcimbar">libcimbar（光波传输/二维码）</a>
    <a href="https://github.com/divan/txqr">TXQR（光波传输/二维码）</a>
    <a href="https://github.com/ggerganov/ggwave">ggwave（声波传输）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">网络分析</p>
    </div>
    <a href="https://www.wireshark.org/download.html">网络抓包Wireshark</a>
    <a href="https://github.com/pouriyajamshidi/tcping">pouriyajamshidi/tcping</a>
    <a href="https://github.com/cloverstd/tcping">cloverstd/tcping</a>
    <a href="https://elifulkerson.com/projects/tcping.php">elifulkerson/tcping</a>
    <a href="https://nmap.org/download.html#windows">端口扫描Nmap</a>
    <a href="http://networktools.he.net/">HE.NET Network Tools（手机APP）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">网络带宽测试</p>
    </div>
    <a href="https://iperf.fr/iperf-download.php">iperf3二进制下载</a>
    <a href="https://github.com/esnet/iperf">iperf3</a>
    <a href="https://github.com/baidu/dperf">dperf</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">wintee</p>
    </div>
    <a href="https://code.google.com/archive/p/wintee/downloads">wintee</a>
    <a href="https://code.google.com/archive/p/wintee/wikis/FAQ.wiki">wintee文档</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Windows管理优化工具</p>
    </div>
    <a href="https://github.com/Atlas-OS/Atlas">AtlasOS</a>
    <a href="https://bitsum.com/download-process-lasso/">进程管理Process Lasso</a>
    <a href="https://github.com/henrypp/memreduct/releases">内存清理memreduct</a>
    <a href="https://forums.guru3d.com/threads/windows-power-plan-settings-explorer-utility.416058/">图形化电源计划设置PowerSettingsExplorer</a>
    <a href="https://windhawk.net/">Windhawk</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">BI数据库可视化</p>
    </div>
    <a href="https://github.com/dataease/dataease/releases">DataEase</a>
    <a href="https://dataease.io/versions.html">DataEase 版本对比</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">服务器运维工具</p>
    </div>
    <a href="https://1panel.cn/">1Panel</a>
    <a href="https://www.bt.cn/new/index.html">宝塔面板</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">通知服务</p>
    </div>
    <a href="https://sct.ftqq.com/">Server酱</a>
    <a href="https://github.com/chf007/action-wechat-work">action-wechat-work（企微通知）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">机场</p>
    </div>
    <a href="https://github.com/Anankke/SSPanel-UIM">SSPanel-UIM（网络代理管理系统）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">免费API</p>
    </div>
    <a href="https://www.idcd.com/docs/open-api">实用工具箱Open API</a>
    <a href="https://uapis.cn/">UApi</a>
</div>

</div>

<h1 id="系统镜像"><a href="#系统镜像" class="headerlink" title="系统镜像"></a>系统镜像</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Windows系统</p>
    </div>
    <a href="https://www.uupdump.cn/">（推荐）UUP dump（cn域名，不忘初心中文站）</a>
    <a href="https://uupdump.net/">（不推荐）UUP dump（net域名）</a>
    <a href="https://uup.rg-adguard.net/">UUP Generation Project（rgadguard）</a>
    <a href="https://store.rg-adguard.net/">微软商店应用MS Store（rgadguard）</a>
    <a href="https://next.itellyou.cn/">NEXT, ITELLYOU（新站点）</a>
    <a href="https://msdn.itellyou.cn/">MSDN, itellyou（旧站点）</a>
    <a href="https://www.microsoft.com/zh-cn/software-download/">Windows官方下载</a>
    <a href="https://www.catalog.update.microsoft.com/Home.aspx">Windows Update Catalog官方下载</a>
    <a href="https://hellowindows.cn/">HelloWindows下载仓储站</a>
    <a href="https://archive.org/details/tiny-10-23-h2">tiny10 23H2</a>
    <a href="https://www.heidoc.net/joomla/technology-science/microsoft/67-microsoft-windows-and-office-iso-download-tool">Windows and Office ISO Downloader</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Linux系统</p>
    </div>
    <a href="https://ubuntu.com/download">Ubuntu Linux</a>
    <a href="https://archlinux.org/download/">Arch Linux</a>
    <a href="https://www.anduinos.com/">AnduinOS Linux（仿WinOS）</a>
    <a href="https://www.deepin.org/zh/download/">deepin Linux</a>
    <a href="https://manjaro.org/download/">Manjaro Linux</a>
    <a href="https://linuxmint.com/download.php">Linux Mint</a>
    <a href="http://www.tinycorelinux.net/downloads.html">Tiny Core Linux</a>

</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">渗透相关</p>
    </div>
    <a href="https://www.kali.org/get-kali/#kali-platforms">Kali Linux</a>
    <a href="https://www.kali.org/tools/">Kali Tools</a>
    <a href="https://pentestbox.org/zh/">PentestBox</a>
    <a href="https://www.tamos.com/download/main/ca">CommView® for WiFi</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">DOS系统</p>
    </div>
    <a href="https://freedos.org/download/">FreeDOS</a>
    <a href="https://www.dosbox.com/">DOSBox</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">软路由系统</p>
    </div>
    <a href="https://www.ikuai8.com/component/download">iKuaiOS</a>
    <a href="https://firmware-selector.immortalwrt.org/?target=x86%2F64&id=generic">ImmortalWrt</a>
    <a href="https://downloads.openwrt.org/">OpenWrt官方固件</a>
    <a href="https://openwrt.mpdn.fun:8443/?dir=lede/x86_64">Bleach OpenWrt</a>
    <a href="https://drive.google.com/drive/folders/1PsS3c0P7a4A4KY8plQg4Fla8ZI-PGBb1">OpenWrt eSir GDQ 高大全</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">NAS/智能家具系统</p>
    </div>
    <a href="https://www.fnnas.com/download">飞牛私有云fnOS</a>
    <a href="https://github.com/hslr-s/sun-panel/releases">sun-panel（docker应用集中管理）</a>
    <a href="https://archive.synology.cn/download/Os/DSM">群晖系统DSM</a>
    <a href="https://www.truenas.com/truenas-community-edition/">TrueNAS Community</a>
    <a href="https://www.openmediavault.org/download.html">OpenMediaVault</a>
    <a href="https://www.home-assistant.io/installation/">Home Assistant</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">引导制作工具</p>
    </div>
    <a href="https://github.com/ventoy/Ventoy/releases">Ventoy</a>
    <a href="https://github.com/CloverHackyColor/CloverBootloader/releases">CloverBootloader</a>
    <a href="https://rufus.ie/zh/">Rufus</a>
    <a href="https://www.iventoy.com/cn/download.html">iVentoy</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">WinPE</p>
    </div>
    <a href="https://firpe.cn/page-247">FirPE维护系统</a>
    <a href="https://www.wepe.com.cn/download.html">微PE工具箱</a>
    <a href="https://www.423down.com/8926.html">微PE2.1 (2021.10.19) 维护增强版万能启动盘</a>
    <a href="https://lipe.mysxl.cn/">Lightning PE</a>
    <a href="https://home.edgeless.top/">Edgeless（半开源PE工具）</a>
    <a href="http://wuyou.net/forum.php?mod=viewthread&tid=349965">USBOS</a>
    <a href="https://cowpe.top/">CowPE（纯净）</a>
    <a href="https://www.angel-pe.cn/tspe/">天使PE</a>
    <a href="https://www.sysceo.com/usm">USM（U盘魔术师-系统总裁）</a>
    <a href="https://www.itsk.com/thread/431283">优启通（IT天空）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">LinuxPE</p>
    </div>
    <a href="https://www.system-rescue.org/">SystemRescue</a>
</div>

</div>

<h1 id="硬件检测"><a href="#硬件检测" class="headerlink" title="硬件检测"></a>硬件检测</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">综合检测/OSD</p>
    </div>
    <a href="https://www.hwinfo.com/download/">HWiNFO</a>
    <a href="https://github.com/CXWorld/CapFrameX">CapFrameX</a>
    <a href="https://www.capframex.com/blog/post/How%20to%20configure%20the%20CapFrameX%20game%20overlay">CapFrameX预设OSD模板</a>
    <a href="https://www.guru3d.com/download/rtss-rivatuner-statistics-server-download/">RTSS Rivatuner Statistics Server</a>
    <a href="https://www.aida64.com/downloads">AIDA64</a>
    <a href="https://www.aida64.com/news">AIDA64 NEWS/Release Notes</a>
    <a href="https://www.423down.com/887.html">AIDA64安装包直链|注册机</a>
    <a href="https://blog.asuhu.com/1384.aspx">AIDA64注册机/注册码</a>
    <a href="https://gist.github.com/DeezNutq/f8708fdb632f0d6aedb15f69515f8168">AIDA64注册码2</a>
    <a href="https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/releases">LibreHardwareMonitor</a>
    <a href="https://www.msi.com/Landing/afterburner/graphics-cards">MSI Afterburner</a>
    <a href="https://www.asus.com/supportonly/gpu%20tweak%20iii/helpdesk_download/">ASUS GPU Tweak III</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">综合工具箱</p>
    </div>
    <a href="https://www.tbtool.cn/">图拉丁吧工具箱（图吧工具箱）</a>
    <a href="http://www.kbtool.cn/">卡硬工具箱（卡吧工具箱）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">综合基准测试</p>
    </div>
    <a href="https://crystalmark.info/en/software/crystalmarkretro/">CrystalMark Retro</a>
    <a href="https://www.423down.com/13945.html">PCMark 10（423DOWN）</a>
    <a href="https://www.guru3d.com/download/pcmark-10-download/">PCMark 10（GURU3D）</a>
    <a href="https://www.techpowerup.com/download/futuremark-pcmark-10/">PCMark 10（TECHPOWERUP）</a>
    <a href="https://benchmarks.ul.com/zh-hans/pcmark10">PCMark 10（官网基准测试介绍）</a>
    <a href="https://support.benchmarks.ul.com/support/solutions/articles/44002171607-pcmark-10-release-notes">PCMark 10（官方Release Notes）</a>
    <a href="https://www.ocbase.com/download">OCBASE/OCCT</a>
    <a href="https://epcdiy.org/download1.html">白眼（跑分工具）</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">中央处理器CPU</p>
    </div>
    <a href="https://www.cpuid.com/softwares/cpu-z.html">CPU-Z</a>
    <a href="http://www.numberworld.org/y-cruncher/#Download">y-cruncher（可测IMC）</a>
    <a href="https://www.maxon.net/en/downloads/cinebench-2024-downloads">Cinebench2024</a>
    <a href="https://www.chaos.com/benchmark-download">V-Ray Benchmark</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">显卡GPU</p>
    </div>
    <a href="https://www.techpowerup.com/download/techpowerup-gpu-z/">GPU-Z</a>
    <a href="https://geeks3d.com/furmark/downloads/">FurMark</a>
    <a href="https://www.423down.com/11529.html">Futuremark 3DMark（423DOWN）</a>
    <a href="https://www.guru3d.com/download/3dmark-download/">Futuremark 3DMark（GURU3D）</a>
    <a href="https://www.techpowerup.com/download/futuremark-3dmark-timespy-raytracing/">Futuremark 3DMark（TECHPOWERUP）</a>
    <a href="https://benchmarks.ul.com/zh-hans/3dmark">Futuremark 3DMark（官网基准测试介绍）</a>
    <a href="https://support.benchmarks.ul.com/support/solutions/articles/44001971281-3dmark-windows-application-release-notes">Futuremark 3DMark（官方Release Notes）</a>
    <a href="https://www.chaos.com/benchmark-download">V-Ray Benchmark</a>
    <a href="https://render.otoy.com/octanebench/">OctaneBench</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">内存RAM</p>
    </div>
    <a href="https://zentimings.com/">内存时序：ZENTIMINGS（AMD平台）</a>
    <a href="https://github.com/CoolCmd/TestMem5">新版TM5（TestMem5）</a>
    <a href="https://docs.qq.com/sheet/DYmV0dFFJcFZrTmhY?tab=no3u73">TestMem5内存超频测试报错表</a>
    <a href="https://docs.qq.com/sheet/DQ2FUTlZBUEVnd1lM?tab=BB08J2">1usmus Error Diagnosis（腾讯文档表格）</a>
    <a href="https://docs.google.com/spreadsheets/d/1A7G97QOL0dNMwJZa9SYEq2RElJ5T6Hcx9WdReTsnIWw">DDR4/5 Helper by Veii（1usmus v3配置文件）</a>
    <a href="https://docs.google.com/spreadsheets/d/1cJmhO62WHPLNKGBtsJV3BjdL-dcfJJeyhdSAoJmuzJE">Ryzen Google Calculator!（也有报错表）</a>
    <a href="https://www.thaiphoonburner.com/zh/download-for-windows">Thaiphoon Burner</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">硬盘Harddisk</p>
    </div>
    <a href="https://www.backblaze.com/blog/backblaze-drive-stats-for-2024/">Backblaze Drive Stats</a>
    <a href="https://www.chiphell.com/thread-2568242-1-1.html">硬盘SMART信息解读</a>
    <a href="https://hdd.by/Victoria/">Victoria HDD/SSD</a>
    <a href="https://sourceforge.net/projects/iometer/files/iometer-stable/">IOmeter </a>
    <a href="https://www.techpowerup.com/download/atto-disk-benchmark/">ATTO Disk Benchmark</a>
    <a href="https://www.hdtune.com/download.html">HD Tune Pro</a>
    <a href="https://crystalmark.info/en/software/crystaldiskinfo/">CrystalDiskInfo</a>
    <a href="https://crystalmark.info/en/software/crystaldiskmark/">CrystalDiskMark</a>
    <a href="https://www.alex-is.de/PHP/fusion/infusions/downloads/downloads.php">AS SSD Benchmark</a>
    <a href="https://www.guru3d.com/download/anvils-storage-utilities-download/">Anvil's Storage Utilities</a>
    <a href="https://www.52pojie.cn/thread-1658820-1-1.html">TXBench汉化版</a>
    <a href="https://www.texim.jp/txbench.html">TXBench官链</a>
    <a href="https://www.texim.jp/dl/txbench098b_eng.zip">0.98 Beta版TXBench官链</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">硬盘Harddisk游戏基准测试</p>
    </div>
    <a href="https://na.finalfantasyxiv.com/benchmark/">最终幻想 14：基准测试官链</a>
    <a href="https://download.finalfantasyxiv.com/Z27rsYvWfCa3iTaM/ffxiv-dawntrail-bench_v11.zip">最终幻想 14：黄金的遗产 v7.0 第二版</a>
    <a href="https://download.finalfantasyxiv.com/s9qmq6SJfMMqYM4o/ffxiv-dawntrail-bench.zip">最终幻想 14：黄金的遗产 v7.0</a>
    <a href="https://download.finalfantasyxiv.com/ys8glaimvmykn88p/ffxiv-endwalker-bench.zip">最终幻想 14：晓月之终途 v6.0</a>
    <a href="http://gdl.square-enix.com/ffxiv/nr2xkhecw9vrkuqy/ffxiv-shadowbringers-bench.zip">最终幻想 14：暗影之逆焰 v5.0</a>
    <a href="http://gdl.square-enix.com/ffxiv/ga61lwajq3g5r2qb/ffxiv-stormblood-bench.zip">最终幻想 14：红莲之狂潮 v4.0</a>
    <a href="http://gdl.square-enix.com/ffxiv/inst/ffxiv-heavensward-bench.zip">最终幻想 14：苍穹之禁城 v3.0</a>
    <a href="http://gdl.square-enix.com/ffxiv/inst/FFXIV-ARR-Bench-Character.zip">最终幻想 14 v2.0</a>
    <a href="http://http.download.nvidia.com/downloads/nZone/demos/FFXIVBenchmark.zip">最终幻想 14 v1.0</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">硬盘Harddisk官方工具</p>
    </div>
    <a href="https://semiconductor.samsung.com/cn/consumer-storage/support/tools/">三星魔术师软件（Magician）</a>
    <a href="https://www.ymtc.com/cn/techsupport.html">致态天枢大师</a>
    <a href="https://wwwaem.seagate.com/cn/zh/support/downloads/seatools/#downloads">希捷SeaTools</a>
    <a href="https://support-en.wd.com/app/products/downloads/softwaredownloads">Western Digital Dashboard</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">网络测试Network</p>
    </div>
    <a href="https://test.ustc.edu.cn/">中国科学技术大学测速网站</a>
    <a href="https://www.speedtest.cn/">测速网</a>
    <a href="https://10000.gd.cn/#/speed">广东电信宽带测速平台</a>
    <a href="http://speed.unicomgd.com:8080/">联通宽带测试平台</a>
    <a href="https://qps.itzmx.com/">会话数（连接数）在线测试</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">蓝屏BSOD排查</p>
    </div>
    <a href="https://apps.microsoft.com/detail/9pgjgd53tn86?hl=zh-CN&gl=CN">WinDbg</a>
    <a href="https://www.nirsoft.net/utils/blue_screen_view.html">BlueScreenView</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Windows文件占用分析</p>
    </div>
    <a href="https://www.uderzo.it/main_products/space_sniffer/index.html">SpaceSniffer</a>
    <a href="https://www.diskanalyzer.com/">WizTree</a>
    <a href="https://windirstat.net/">WinDirStat</a>
</div>

</div>

<h1 id="硬件驱动"><a href="#硬件驱动" class="headerlink" title="硬件驱动"></a>硬件驱动</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">显卡驱动</p>
    </div>
    <a href="https://www.nvidia.com/en-us/drivers/">Nvidia驱动（US域名）</a>
    <a href="https://www.nvidia.cn/drivers/lookup/">Nvidia驱动（CN域名）</a>
    <a href="https://nvidia.custhelp.com/app/answers/list/kw/hotfix/search/">Nvidia驱动（热修复）</a>
    <a href="https://developer.nvidia.com/cuda-toolkit-archive">Nvidia CUDA Toolkit</a>
    <a href="https://www.nvidia.com/en-us/drivers/nv-uefi-update-x64/">NVIDIA Graphics Firmware</a>
    <a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-">DDU显卡驱动卸载工具</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">品牌主板驱动</p>
    </div>
    <a href="https://downloadcenter.intel.com">INTEL下载中心（英特尔）</a>
    <a href="https://www.amd.com/en/support/download/drivers.html">AMD下载中心（超威半导体）</a>
    <a href="https://www.asus.com.cn/support/download-center">Asus华硕下载中心</a>
    <a href="https://driverhub.asus.com/zh-CN">Asus DriverHub</a>
    <a href="https://rog-forum.asus.com/t5/downloads-for-motherboards/bd-p/MB_Downloads">华硕主板驱动下载（ROG论坛）</a>
    <a href="https://www.msi.cn/support/download">微星下载中心</a>
    <a href="https://www.gigabyte.cn/Support/Consumer/Download">技嘉下载中心</a>
    <a href="https://www.colorful.cn/home/download">七彩虹下载中心</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">开源灯控软件</p>
    </div>
    <a href="https://openrgb.org/releases.html">OpenRGB</a>
    <a href="https://signalrgb.com/">SignalRGB</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">主板灯控软件</p>
    </div>
    <a href="https://www.asus.com.cn/supportonly/armoury%20crate/helpdesk_download">华硕奥创Armoury Crate</a>
    <a href="https://rog.asus.com.cn/cooling/cpu-liquid-coolers/rog-ryuo/rog-ryuo-iv-slc-360-argb/helpdesk_download/">ROG RYUO 龙王4代 360 ARGB</a>
    <a href="https://www.asus.com.cn/motherboards-components/cooling/tx-gaming/asus-tx-gaming-lc-360-lcd-hatsune-miku-edition/helpdesk_bios?model2Name=ASUS-TX-GAMING-LC-360-LCD-Hatsune-Miku-Edition">华硕天选 360 LCD 水冷初音未来版</a>
    <a href="https://www.asus.com/motherboards-components/cooling/tuf-gaming/tuf-gaming-lc-iii-360-argb-lcd/helpdesk_bios?model2Name=TUF-Gaming-LC-III-360-ARGB-LCD">TUF Gaming LC III 360 ARGB LCD</a>
    <a href="https://www.gigabyte.cn/Consumer/Software/GIGABYTE-Control-Center">技嘉GCC（GigaByte Control Center）</a>
    <a href="https://www.msi.com/Landing/MSI-Center">微星MSI-Center</a>
    <a href="https://www.colorful.cn/igamecenter/#firstPage">七彩虹iGameCenter</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">水冷灯控/屏幕驱动软件</p>
    </div>
    <a href="https://valkyrie.com.cn">瓦尔基里Myth.Cool（VK官网）</a>
    <a href="https://myth.cool/cn/download.html">瓦尔基里Myth.Cool</a>
    <a href="https://thermalright.com.cn/downloads">Thermalright利民水冷</a>
    <a href="https://cn.tryxzone.com/downloads/">TRYX创氪星系水冷控制软件</a>
    <a href="https://www.tcomas.net/downloads">TCOMAS钛钽水冷控制软件</a>
    <a href="https://www.aigodiy.com/cpsms/info.aspx?itemid=1369">爱国者魔方水冷驱动软件</a>
    <a href="https://cn.deepcool.com/downloadpage/">九州风神DeepCreative</a>
    <a href="https://nzxt.com/software/cam">NZXT CAM</a>
    <a href="http://www.sama.cn/download">先马水冷</a>
    <a href="https://h5.hlcode.net/?id=NEeweeG">雅骏ProArtist BA5PRO</a>
    <a href="https://www.pccooler.cn/software/">超频三水冷驱动Pccooler</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">机箱/外设屏幕驱动软件</p>
    </div>
    <a href="https://lian-li.com/l-connect3/l3-ga-ii-lcd-users/">联力L-Connect3</a>
    <a href="https://www.aigodiy.com/HuaqiHOMEAPP/index.aspx">爱国者星璨系列屏显机箱驱动</a>
    <a href="https://lgb123-1253504678.cos.ap-beijing.myqcloud.com/ShinySnake.exe">闪鳞G500机箱副屏版驱动</a>
    <a href="https://www.turzx.com/2023/03/02/%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BDdirectdownload/">图灵智显屏幕驱动</a>
    <a href="https://www.hyte.co/nexus-download">Hyte Nexus</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">内存灯控软件</p>
    </div>
    <a href="https://www.kingston.com.cn/cn/gaming/fury-ctrl">金士顿内存灯控</a>
    <a href="https://www.gskill.com/cn/download/1502180912/1551690847/Trident-Z-Z5-Ripjaws-M5-RGB-%E7%B3%BB%E5%88%97-%E5%B9%BB%E5%85%89%E6%88%9F-%E7%84%B0%E5%85%89%E6%88%9F-%E7%9A%87%E5%AE%B6%E6%88%9F-%E7%9A%87%E5%AE%B6%E6%88%9F-%E5%B0%8A%E7%88%B5%E7%89%88-%E5%B9%BB%E9%94%8B%E6%88%9F-%E7%84%B0%E9%94%8B%E6%88%9F-%E7%83%88%E7%84%B0%E6%9E%AA-%E7%84%B0%E5%88%83">芝奇内存灯控</a>
    <a href="https://www.corsair.com/us/en/s/icue">iCUE海盗船灯控</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">网卡驱动</p>
    </div>
    <a href="https://downloadcenter.intel.com">INTEL下载中心（英特尔）</a>
    <a href="https://www.mediatek.com/products/networking-and-connectivity/broadband-wifi">联发科下载中心</a>
    <a href="https://www.realtek.com/Download/Index?cate_id=194&menu_id=368">Realtek通讯网络ICs下载中心</a>
    <a href="https://cn.fenvi.com/drive.html">奋威网卡驱动下载</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">万能驱动/在线驱动</p>
    </div>
    <a href="https://www.glenn.delahoy.com/snappy-driver-installer-origin/">SDIO (Snappy Driver Installer Origin)</a>
    <a href="https://sdi-tool.org/download/">SDI (Snappy Driver Installer)</a>
    <a href="https://www.itsk.com/thread/431197">万能驱动 v7.23.1221.1 最终版（IT天空）</a>
    <a href="https://www.itsk.com/thread/433062">万能驱动 8（IT天空）</a>
    <a href="https://www.sysceo.com/dc.html">驱动总裁</a>
</div>

</div>

<h1 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">大模型工具</p>
    </div>
    <a href="https://ollama.com/download">Ollama</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">Stable Diffusion</p>
    </div>
    <a href="https://github.com/comfyanonymous/ComfyUI">ComfyUI</a>
    <a href="https://comfyanonymous.github.io/ComfyUI_examples/">ComfyUI官方教例</a>
    <a href="https://www.comfyuidoc.com/zh/">ComfyUI用户手册</a>
    <a href="https://www.stablediffusion-cn.com/">Stable Diffusion中文网</a>
    <a href="https://docs.stablediffusion.cn/article/3.html">Stable Diffusion WebUI从入门到卸载</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">模型站点</p>
    </div>
    <a href="https://ollama.com/library">Ollama Library</a>
    <a href="https://ollama.org.cn/library/deepseek-r1">deepseek-r1 - Ollama 框架</a>
    <a href="https://huggingface.co/">Hugging Face（偏深度学习技术向）</a>
    <a href="https://hf-mirror.com/">Huggingface 镜像站</a>
    <a href="https://civitai.com/">Civitai（偏SD视觉导向）</a>
    <a href="https://civitai.work/">Civitai镜像站</a>
    <a href="https://www.liblib.art/">liblib哩布哩布AI</a>
</div>

</div>

<h1 id="CAD"><a href="#CAD" class="headerlink" title="CAD"></a>CAD</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">EDA</p>
    </div>
    <a href="https://lceda.cn/page/download">嘉立创EDA</a>
</div>

</div>

<h1 id="电脑硬件品牌质保查询"><a href="#电脑硬件品牌质保查询" class="headerlink" title="电脑硬件品牌质保查询"></a>电脑硬件品牌质保查询</h1><div class="text-box-container">

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">华硕ASUS</p>
    </div>
    <a href="https://www.asus.com.cn/support/article/642/">华硕-质保条款</a>
    <a href="https://www.asus.com.cn/support/warranty-status-inquiry/">华硕-质保期限查询（主板若注册一年换新则无法查）</a>
    <a href="https://acs.asus.com.cn/huanxin/webentrance/">华硕-主板一年换新（微信访问）</a>
    <a href="https://acs.asus.com.cn/huanxin/register/JD/">华硕-主板一年换新（京东）</a>
    <a href="https://acs.asus.com.cn/huanxin/register/tmall">华硕-主板一年换新（天猫电商专供）</a>
    <a href="https://www.asus.com.cn/support/repair-status-inquiry/">华硕-查询维修进度</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">万丽MANLI</p>
    </div>
    <a href="https://www.manli.com.cn/cn/support-inquiry.html">万丽-SN查询</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">微星MSI</p>
    </div>
    <a href="https://account.msi.com/zh-Hans/services/warranty-book">微星-保修信息查询</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">七彩虹COLORFUL</p>
    </div>
    <a href="https://www.colorful.cn/home/sn">七彩虹-SN码查询</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">宏碁ACER</p>
    </div>
    <a href="https://www.acerstorage.cn/support/warranty-policy/">宏碁存储-质保条款</a>
    <a href="https://www.acer.com.cn/product-search.html">宏碁-产品信息查询</a>
    <a href="https://weixin.acer.com.cn/service/views/querywarranty/index.aspx">宏碁-质保信息查询</a>
    <a href="https://www.acer.com.cn/myhelp.html?type=1&serverid=14">宏碁-维修进度</a>
</div>

<div class="text-box">
    <div class="tag-align">
    <p class="tag-bookmark-page">酷冷至尊</p>
    </div>
    <a href="https://coolermaster.com.cn/quality.html">酷冷至尊-质保条款</a>
    <a href="https://account.coolermaster.com/warrantycheck.aspx">酷冷至尊-质保期限查询</a>
</div>

</div>

<span id="more"></span>
<p>m0nkrus (Adobe Cracked)如下两个站点可以直接获取磁力文件：</p>
<ul>
<li>UNIONDHT.OR</li>
<li>PB.WTF</li>
</ul>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] 官网 Navicat Premium 历史版本官方下载地址[EB&#x2F;OL]. <a href="https://blog.csdn.net/LordForce/article/details/135081445">https://blog.csdn.net/LordForce/article/details/135081445</a>.<br>[2] 官方JDK免登录下载安装[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_44005802/article/details/136427780">https://blog.csdn.net/weixin_44005802/article/details/136427780</a>.<br>[3] 我应该使用哪个版本的 JDK？[EB&#x2F;OL]. <a href="https://www.ga0x.com/docs/Java/base/whichjdk">https://www.ga0x.com/docs/Java/base/whichjdk</a>.</p>
]]></content>
      <tags>
        <tag>书签</tag>
        <tag>收藏夹</tag>
        <tag>网址</tag>
        <tag>站点</tag>
        <tag>导航</tag>
        <tag>推荐</tag>
      </tags>
  </entry>
  <entry>
    <title>日常生活</title>
    <url>/daily-life/</url>
    <content><![CDATA[<h1 id="数学计算">1 &nbsp&nbsp<a href="#数学计算" class="headerlink" title="数学计算"></a>数学计算</h1><ul>
<li>对于指数函数来说底数不能为负数，而对于代数运算来说却可以为负数。因为n总是表示正整数,底数为负数是可以的，这个式子仍然是有限次代数运算的极限</li>
<li>乘除法的计算本质：计算过程中的错位相加是为了保证各行的小数点位置相同，实际就是保证各个数字的权重相同。</li>
</ul>
<h1 id="生活琐事">2 &nbsp&nbsp<a href="#生活琐事" class="headerlink" title="生活琐事"></a>生活琐事</h1><p>当花费大量时间却无法解决一个问题时，若非紧急状态，建议先将该问题放一边。等到放松或者忙完另外一件事情甚至于明天再重新去思考解决这个问题。</p>
<h1 id="生活记录">3 &nbsp&nbsp<a href="#生活记录" class="headerlink" title="生活记录"></a>生活记录</h1><ul>
<li>灭蟑螂：洗衣服+饭+白糖。</li>
<li>盖章：公章盖签字位置，以及骑缝章（盖边缘，确保完整章都出现在边缘）。</li>
<li>去打印店，一定得输出PDF再打印。</li>
<li>不要买大豆油，加热有腥臭味。买花生油。</li>
<li>湖南人fh不分，弗兰银&#x2F;湖兰人&#x2F;胡建人。</li>
<li>出门在外吃饭，看大货车司机。</li>
<li>学生票要取纸票，得刷磁条才能享受优惠，否则检票时会面临补票的问题。</li>
<li>四六级口语分两天，笔试一天（上午四，下午六）。</li>
<li>2021花呗弹窗说需上报征信。</li>
<li>京东白条的注销，需要下载京东金融白条&gt;设置&gt;账户安全&gt;注销白条用户&gt;继续注销，或者直接在京东金融客服，输入注销白条，可以直接跳转。</li>
<li>信用卡（透支信用贷款），小额消费贷款（多笔记录不利于征信）</li>
</ul>
<h1 id="医学">4 &nbsp&nbsp<a href="#医学" class="headerlink" title="医学"></a>医学</h1><ul>
<li>睡眠一定要规律，否则生物钟不好调整适应，会造成人体免疫力下降。</li>
<li>关于外伤伤口的处理：生理盐水清洗伤口即可，剩下等身体自动修复。消毒可以用碘伏。P.S.切忌使用紫药水，不仅致癌，还会形成结痂无法观察伤口。</li>
<li>烫伤疼痛明显：冷水冲洗30分钟。</li>
</ul>
<h2 id="药品清单">4.1 &nbsp&nbsp<a href="#药品清单" class="headerlink" title="药品清单"></a>药品清单</h2><ul>
<li>蚬壳胃散-海螵蛸</li>
<li>小柴胡冲剂</li>
<li>复方黄芩片-肇庆新湖制药</li>
<li>复方穿心莲-广州白云山和记黄埔中药</li>
<li>氯芬黄敏片-广州白云山明兴制药</li>
<li>复方氨酚烷胺片（感冒）</li>
<li>维C银翘片-国药集团德众（佛山）药业有限公司</li>
<li>腹可安片-广州白云山一药业</li>
<li>正露丸（喇叭丸）-大幸药品</li>
<li>桂林西瓜霜-桂林三金药业</li>
<li>冰硼散（微毒性）</li>
<li>维C片</li>
<li>维B片</li>
<li>盐酸小襞碱片</li>
<li>枸地氯雷他定片-扬子江药业集团</li>
<li>脾氨肽口服冻干粉</li>
<li>攻肤之王-广州泽上堂生物科技有限公司</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>考研总结</title>
    <url>/graduate-entrance-exam/</url>
    <content><![CDATA[<p>政治、英语、数学这三个公共课是全国统考，专业课只有法硕、农学、教育学、心理学、历史学、西医综合、计算机是全国统考，其他的都是学校自主出题。</p>
<h1 id="关键时间点">1 &nbsp&nbsp<a href="#关键时间点" class="headerlink" title="关键时间点"></a>关键时间点</h1><ul>
<li>准考证打印：12&#x2F;18-27</li>
<li>考研初试：12&#x2F;25-26（8:30-11:30，14:00-17:00）<ul>
<li>25：政治|外国语</li>
<li>26：业务课1（数一）|业务课2（408）</li>
</ul>
</li>
</ul>
<h1 id="考试及试题信息">2 &nbsp&nbsp<a href="#考试及试题信息" class="headerlink" title="考试及试题信息"></a>考试及试题信息</h1><h2 id="数学一">2.1 &nbsp&nbsp<a href="#数学一" class="headerlink" title="数学一"></a>数学一</h2><ul>
<li>试卷情况：分值 150，考试时长 180min。</li>
<li>内容占比：56% 高等数学（微积分），22% 线性代数，22% 概率论与数理统计。</li>
<li>题型结构：<ol>
<li>单项选择 10 道，共 50 分</li>
<li>填空题 5 道，共 30 分</li>
<li>解答题（含证明题）6 道，共 70 分</li>
</ol>
</li>
</ul>
<h2 id="英语一">2.2 &nbsp&nbsp<a href="#英语一" class="headerlink" title="英语一"></a>英语一</h2><ul>
<li>试卷情况：分值100，考试时长180min。</li>
<li>内容占比：词汇（5500+附表词汇）；语法（基本熟练地运用基本的语法知识）。</li>
<li>题型结构：<ol>
<li>英语知识运用（10分）：20道完形填空（四选一）：1篇文章（240～280词），词汇、语法和结构。</li>
<li>阅读理解（40+10+10分）<ol>
<li>20道多项选择（四选一）：4篇文章（共约1600词），理解主旨要义、具体信息、概念性含义、进行判断、推理和引申，根据上下文推测生词词义。</li>
<li>5道选择搭配：1篇文章（500～600词），理解连贯性、一致性等语段特征和文章结构。</li>
<li>5道英译汉：1篇文章（400词，5个划线部分约150词），理解复杂概念、结构。</li>
</ol>
</li>
<li>写作（10+20分）<ol>
<li>一个应用文写作（规定情景：信函、备忘录、报告等）：100词。</li>
<li>一个短文写作（描述性、叙述性、说明性、议论性文章）：160～200词。</li>
</ol>
</li>
</ol>
</li>
</ul>
<h2 id="政治">2.3 &nbsp&nbsp<a href="#政治" class="headerlink" title="政治"></a>政治</h2><ul>
<li>试卷情况：分值100，考试时长180min。</li>
<li>内容占比：24% 马原，30% 毛中特，14% 史纲，16% 思修，16% 时政和当代。</li>
<li>题型结构：<ol>
<li>单项选择 16 道：16 分</li>
<li>多项选择 17 道：34 分</li>
<li>材料分析题：50 分</li>
</ol>
</li>
</ul>
<h2 id="408专业课">2.4 &nbsp&nbsp<a href="#408专业课" class="headerlink" title="408专业课"></a>408专业课</h2><ul>
<li>试卷情况：分值150，考试时长180min。</li>
<li>内容占比：数据结构（45分），计算机组成原理（45分），操作系统（35分），计算机网络（25分）。</li>
<li>题型结构：<ol>
<li>单项选择 40 道：80 分</li>
<li>综合应用题：70 分</li>
</ol>
</li>
</ul>
<h1 id="学习资料推荐">3 &nbsp&nbsp<a href="#学习资料推荐" class="headerlink" title="学习资料推荐"></a>学习资料推荐</h1><ul>
<li>数学：线代李永乐、高数汤家凤&#x2F;武忠祥，概率王式安。</li>
<li>政治：《精讲精练》《1000题》《八套卷》《四套卷》《风中劲草》《模拟卷》</li>
</ul>
]]></content>
      <tags>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">0.1 &nbsp&nbsp<a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post">0.1.1 &nbsp&nbsp<a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">0.1.2 &nbsp&nbsp<a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">0.1.3 &nbsp&nbsp<a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">0.1.4 &nbsp&nbsp<a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>站点导航和公告</title>
    <url>/navigation-announcement/</url>
    <content><![CDATA[<center>
<div style="margin-top: -35px; margin-bottom: 25px">

<div class="dropdown-menu">
    <button class="dropdown-menu-btn">软件作品</button>
    <div class="dropdown-menu-content">
        <a href="/works/software-works/toggle-language/">切换语言</a>
        <a href="/works/software-works/batch-tools/">批处理工具</a>
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">艺术作品</button>
    <div class="dropdown-menu-content">
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">关于我</button>
    <div class="dropdown-menu-content">
        <a href="/about">关于我</a>
        <a href="/about/#联系方式">联系我</a>
        <a href="/about/#关注我">关注我</a>
        <a href="/about/#免费支持我">支持我</a>
    </div>
</div>
<div class="dropdown-menu">
    <button class="dropdown-menu-btn">关于本站</button>
    <div class="dropdown-menu-content">
        <a href="/about/about-site">关于本站</a>
        <a href="/about/about-site/#本站许可协议">许可说明</a>
        <a href="/about/logs">更新日志</a>
        <a href="/about/third-party-declaration/">第三方声明</a>
        <a href="/about/post-offline-download/">离线下载</a>
    </div>
</div>

</div>
<div class="note info no-icon"><p><strong>置顶公告1：若需交流，请通过邮箱或QQ联系我，其他方式我基本不看！！！具体联系方式请点击并详看<a href="/about#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F">「联系我」</a>。</strong></p>
</div>

<div class="note info no-icon"><p><strong>置顶公告2：本站一些重要的博文会有对应的PDF及LaTeX源码，可以下载用以离线查看，具体详看「<a href="/about/post-offline-download/">博文离线下载</a>」。</strong></p>
</div>

<div class="note danger no-icon"><p><strong>当前公告：随缘更新</strong></p>
</div>

</center>

<style type="text/css">
.dropdown-menu {
    position: relative;
    display: inline-block;
}
.dropdown-menu-btn {
    background: var(--btn-default-bg);
    border: 5px solid var(--btn-default-border-color);
    border-radius: 5px;
    color: var(--btn-default-color);
    display: inline-block;
    font-weight: bold;
    font-size: 25px;
    line-height: 2;
    padding: 0 12px;
    text-decoration: none;
    transition-property: background-color;
    transition-delay: 0s;
    transition-duration: .2s;
    transition-timing-function: ease-in-out;
    margin-right: -5px;
}
.dropdown-menu:hover .dropdown-menu-btn {
    background: var(--btn-default-hover-bg);
    border-color: var(--btn-default-hover-border-color);
    color: var(--btn-default-hover-color);
    cursor: pointer;
}
.dropdown-menu-content {
    display: none;
    position: absolute;
    z-index: 9999;
    border: 3px solid var(--btn-default-border-color);
    border-radius: 3px;
    width: 100%;
}
.dropdown-menu:hover .dropdown-menu-content {
    display: block;
    border-color: var(--btn-default-hover-border-color);
}
.dropdown-menu-content a {
    display: block;
    font-size: 22px;
    color: var(--btn-default-color);
    background-color: var(--btn-default-bg);
    padding:  5px 5px;
}
.dropdown-menu-content a:hover {
    color: var(--btn-default-hover-color);
    background: var(--btn-default-hover-bg);
    cursor: pointer;
}
</style>
]]></content>
  </entry>
  <entry>
    <title>致首次使用RIME的你 -- 小狼毫输入法详细配置</title>
    <url>/rime-input-method/</url>
    <content><![CDATA[<div class="note danger no-icon"><p><strong>注：本文撰写进度：5%</strong></p>
</div>

<p>TODO<br>前段时间，搜狗输入法被曝后台手脚不干净，强制推送618活动啥的。</p>
<h2 id="前言：我与RIME的相遇">0.1 &nbsp&nbsp<a href="#前言：我与RIME的相遇" class="headerlink" title="前言：我与RIME的相遇"></a>前言：我与RIME的相遇</h2><p>在受不了原版的搜狗输入法的广告弹窗和响应速度后，我开始折腾起输入法。</p>
<p>为了解决搜狗的弹窗问题，我使用了火绒安全软件的扩展工具 --- 弹窗拦截（强推一波<a href="https://www.huorong.cn/"><strong>火绒安全软件</strong></a>）。然后，弹窗是解决了。但由于本人最初安装搜狗输入法于机械盘，加上个人词库越来越庞大，搜狗的输入法的响应速度已经严重影响我的输入效率。</p>
<p>于是，我便开始搜寻精简版的搜狗输入法。所幸的是，网络上已有大神在做这个，例如<strong>大水牛去广告精简优化版</strong> --- <a href="https://pan.baidu.com/s/1RAWTp6d6eZnCtDvC6RsEmQ"><strong>百度云链接</strong></a>（提取码：ffqz）。</p>
<p>如此一来，响应速度的确是有所提升，可惜这种做法始终是治标不治本（其实响应速度问题也可通过安装程序于固态盘来解决）。后来在一次搜索相关开源的输入法时，我遇到了RIME。</p>
<span id="more"></span>

<p>对RIME进行简单的了解后，我便被它吸引住了。无奈的是，RIME的配置并没有图形交互界面。这对新用户来说，极为不友好。我估计这也是很多人放弃使用RIME的原因。</p>
<p>在遍寻各途径的资料后（官网、贴吧、博客等），我发现没有一篇文章完整并系统地介绍所有配置流程。因此，我决定收集目前网上的已存资料，并将其系统化整理。望能对新入坑的朋友有所帮助，也希望更多的朋友能够使用到基于RIME框架的输入法。</p>
<h2 id="软件简介">0.2 &nbsp&nbsp<a href="#软件简介" class="headerlink" title="软件简介"></a>软件简介</h2><h2 id="软件配置">0.3 &nbsp&nbsp<a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><h3 id="安装">0.3.1 &nbsp&nbsp<a href="#安装" class="headerlink" title="安装"></a>安装</h3><h3 id="繁简转换">0.3.2 &nbsp&nbsp<a href="#繁简转换" class="headerlink" title="繁简转换"></a>繁简转换</h3><h3 id="weasel-yaml设置">0.3.3 &nbsp&nbsp<a href="#weasel-yaml设置" class="headerlink" title="weasel.yaml设置"></a>weasel.yaml设置</h3><h4 id>0.3.3.1 &nbsp&nbsp<a href="#" class="headerlink" title></a></h4>]]></content>
      <tags>
        <tag>开源软件</tag>
        <tag>RIME输入法</tag>
        <tag>软件配置</tag>
      </tags>
  </entry>
  <entry>
    <title>搜索引擎</title>
    <url>/search-engine/</url>
    <content><![CDATA[<div class="note info no-icon"><p>搜索技巧：巧用AI GC相关工具和传统搜索引擎方式。</p>
</div>

<h1 id="常见搜索需求">1 &nbsp&nbsp<a href="#常见搜索需求" class="headerlink" title="常见搜索需求"></a>常见搜索需求</h1><ul>
<li>信息资讯</li>
<li>知识技能</li>
<li>素材文件</li>
<li>工具软件</li>
</ul>
<h1 id="搜索效率">2 &nbsp&nbsp<a href="#搜索效率" class="headerlink" title="搜索效率"></a>搜索效率</h1><ul>
<li>一般而言：谷歌&gt;必应&gt;公众号&gt;短视频&gt;百度</li>
<li>网页搜索：谷歌&gt;搜狗搜索引擎（可搜索公众号文章）&gt;微信APP搜索</li>
<li>PDF搜索：谷歌限定文件格式语法&gt;垂直类网站</li>
<li>科研PDF：谷歌学术&gt;SCI-HUB</li>
</ul>
<h1 id="谷歌搜索语法">3 &nbsp&nbsp<a href="#谷歌搜索语法" class="headerlink" title="谷歌搜索语法"></a>谷歌搜索语法</h1><ul>
<li>限定关键词：<code>&quot;关键词&quot;</code>，英文双引号包含关键词</li>
<li>限定标题：<code>intitle:关键词</code>。此时，关键词并不是限定状态，因此关键词中的字符也可能是乱序查询的。</li>
<li>限定标题+限定关键词：<code>intitle:&quot;关键词&quot;</code>。此种用法，关键词是限定状态，要求完整出现，不能乱序。</li>
<li>限定标题+多个关键词：<code>allintitle:关键词1 关键词2</code></li>
<li>限定内容关键词：<code>intext:关键词</code></li>
<li>限定网址关键词：<code>inurl:关键词</code>，如<code>inurl:cctv</code></li>
<li>限定网址来源：<code>site:网址</code>，如<code>site:cctv.com</code>，域名的www可不输入。</li>
<li>限定图片尺寸：<code>imagesize:分辨率</code>，如<code>imagesize:1920x1080</code></li>
<li>限定文件格式：<code>filetype:文件后缀名</code>，如<code>filetype:pdf</code></li>
</ul>
<h1 id="油管直链转制">4 &nbsp&nbsp<a href="#油管直链转制" class="headerlink" title="油管直链转制"></a>油管直链转制</h1><p>youtube-&gt;9xyoutube</p>
<h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 搜索技术，普通人变强的唯一外挂。全套详细宝藏教程~[EB&#x2F;OL]. <a href="https://www.youtube.com/watch?v=tiN6T1LewmQ&t=31s">https://www.youtube.com/watch?v=tiN6T1LewmQ&amp;t=31s</a>.</p>
]]></content>
  </entry>
  <entry>
    <title>飞助远程服务店（作废）</title>
    <url>/service-shop/</url>
    <content><![CDATA[<h1 id="店铺介绍">1 &nbsp&nbsp<a href="#店铺介绍" class="headerlink" title="店铺介绍"></a>店铺介绍</h1><p>本人开的一个小店，旨在通过远程操作帮助客户解决电脑系统问题。</p>
<img data-src="/images/service_shop/shop_logo.webp" style="width: 500px">

<h2 id="为何诞生">1.1 &nbsp&nbsp<a href="#为何诞生" class="headerlink" title="为何诞生?"></a>为何诞生?</h2><p>许多朋友系统卡顿或者出现无法解决的毛病，想要维修或重装系统，但究于实体维修店太远或是实体店过于昂贵的收费，自己爱机的问题迟迟得不到解决。是的，50块一次的收费甚至更高，确实是贵了。因此，飞助诞生了。</p>
<span id="more"></span>

<h2 id="本店优势">1.2 &nbsp&nbsp<a href="#本店优势" class="headerlink" title="本店优势"></a>本店优势</h2><p>“远程”二字就已经很好说明了本店的一个特色。飞助远程，提供一个方便的平台，远程控制，无需到店。注意是<strong>远程！远程！！！</strong></p>
<p>无论客户身处何处，只要能提供一个良好的网络通信条件，保证机子能够访问互联网，本店就能为你服务。</p>
<p><strong>联系飞助远程，远程帮助系统优化&#x2F;维修&#x2F;重装，价格合理。</strong></p>
<h1 id="服务内容">2 &nbsp&nbsp<a href="#服务内容" class="headerlink" title="服务内容"></a>服务内容</h1><h2 id="系统优化-维修-重装">2.1 &nbsp&nbsp<a href="#系统优化-维修-重装" class="headerlink" title="系统优化&#x2F;维修&#x2F;重装"></a>系统优化&#x2F;维修&#x2F;重装</h2><p>曾经，您是否曾苦恼于系统卡顿或者出现无法解决的毛病，想要维修或重装系统，但却无从下手。</p>
<p>联系飞助远程，远程帮助<strong>系统优化&#x2F;维修&#x2F;重装</strong>，物美价廉。</p>
<div class="note danger no-icon"><p><em>注：关于系统，本店默认以最新的<strong>64</strong>位的<strong>WIN10</strong>系统镜像为源（有其他需求的请另外告知店长）。系统完全纯净，不带任何多余的第三方软件。另提供<strong>虚拟机</strong>的安装，可在其上安装<strong>Mac</strong>或<strong>Linux</strong>系统。</em></p>
</div>

<img data-src="/images/service_shop/win10.webp" style="width: 400px">

<h2 id="硬盘分区">2.2 &nbsp&nbsp<a href="#硬盘分区" class="headerlink" title="硬盘分区"></a>硬盘分区</h2><p>曾经，您是否因为为刚买机的时候装机人员只把您的每个硬盘做一个分区而苦恼。是的，500g或1t甚至是更大容量的机械硬盘却只能做一个分区，在管理文件上确实是十分不方便。</p>
<p>联系飞助远程，远程<strong>帮助硬盘分区</strong>。例如，原有分区的基础上无损调整分区，包括新增分区以及调整原有分区大小。</p>
<div class="flex-row">
<div class="flex-column">
分区前<img data-src="/images/service_shop/hard_disk_origin.webp"></div>
<div class="flex-column">
分区后<img data-src="/images/service_shop/hard_disk_split.webp"></div>
</div>

<h2 id="软件直装">2.3 &nbsp&nbsp<a href="#软件直装" class="headerlink" title="软件直装"></a>软件直装</h2><p>曾经，您是否苦恼于不会装某些软件，例如办公软件套件，或者安装后但却困于激活这一步。而对于编程初学者们来说，最为头疼不过于编程环境搭建了，明明代码是正确的，却总是无法正确编译，这再痛苦不过了。</p>
<p>联系飞助远程，远程<strong>安装软件</strong>。需要直装<strong>office</strong>套件或者<strong>Adobe</strong>系列等其他软件的，请将软件名详细告知本店。此外，本店可提供编程初学者头疼的编程环境搭建及一些常见的环境搭建服务，例如，搭建以文本编辑软件和编译套件为基础的C和C++等语言编程环境，完成后只需几个快捷键便可在文本编辑软件上完成编译和链接。</p>
<div class="flex-column">
<div class="flex-row">
<img data-src="/images/service_shop/adobe.webp">
<img data-src="/images/service_shop/office.webp"></div>
<img data-src="/images/service_shop/compile_c.webp">
</div>

<h1 id="服务价格单">3 &nbsp&nbsp<a href="#服务价格单" class="headerlink" title="服务价格单"></a>服务价格单</h1><table>
<thead>
<tr>
<th align="center">服务项</th>
<th align="center">价格</th>
</tr>
</thead>
<tbody><tr>
<td align="center">系统维修优化</td>
<td align="center">￥15</td>
</tr>
<tr>
<td align="center">系统重装（只含驱动+VC环境）</td>
<td align="center">￥25</td>
</tr>
<tr>
<td align="center">系统重装（驱动+VC环境+MS office）</td>
<td align="center">￥35</td>
</tr>
<tr>
<td align="center">分区相关</td>
<td align="center">￥5</td>
</tr>
<tr>
<td align="center">直装软件</td>
<td align="center">￥15</td>
</tr>
</tbody></table>
<div class="note danger no-icon"><p><em><em>注：价格单上的服务价格为</em>基本价格*，但收费是视实际操作的复杂度来决定。换句话说，最终收费是在基本价格*上下浮动</em>。**</p>
</div>
<div class="note danger no-icon"><p>特别说明：本店所有服务都是通过<strong>远程</strong>完成，某些操作可能需要远程语音指导客户自己动手操作完成，但请放心，不会涉及到复杂的操作。本店的系统维修和软件直装服务是基于<strong>Windows OS</strong>的平台，目前不接受Linux以及Mac系统的维修需求和软件直装服务。</p>
</div>

<h1 id="知识科普">4 &nbsp&nbsp<a href="#知识科普" class="headerlink" title="知识科普"></a>知识科普</h1><h2 id="电脑使用期限">4.1 &nbsp&nbsp<a href="#电脑使用期限" class="headerlink" title="电脑使用期限"></a>电脑使用期限</h2><p>事实上，一台电脑设备，无论是台式的或是笔记本，只要正常使用，其硬件没有损坏，电脑设备都可以一直运行使用。当然，运行的体验结果如果又是另外一回事了。你总不能拿十几年前的超低配置电脑来装现在最新的系统和大型软件，对吧？而且，兼不兼容都不好说呢！</p>
<p>电脑最好的<strong>保养方式</strong>，其实是<strong>自己的使用方式</strong>。你使用不佳，再好的设备给你也折腾不了几年。本人维修时遇到过的大多数设备卡顿多是由于个人使用方式导致的，例如机械键盘长期读写却从未整理过磁盘碎片，导致硬盘读取越来越慢，从而导致一些卡顿问题，等等诸如此类的问题。</p>
<p>只要养成一些好的使用习惯，设备在手中就如同一把利器，工作效率或许都能提高呢。至于有哪些好的使用习惯，这里就不展开阐述，以后有机会专门写一篇来讲讲。</p>
<h2 id="加速球的认识误区">4.2 &nbsp&nbsp<a href="#加速球的认识误区" class="headerlink" title="加速球的认识误区"></a>加速球的认识误区</h2><p>现在电脑系统上装管家、杀软之类的软件已经是很常见，甚至不少是装了全家桶。而在使用电脑时，不少朋友就喜欢时不时点一下加速球。看着它清理完程序后的提示甚是满意。</p>
<img data-src="/images/service_shop/accelerate_ball.webp" style="width: 200px">

<p>且先不谈加速球的效果，我们来了解下它背后的原理。来看看加速球在这背后都做了什么？</p>
<ol>
<li>整理内存</li>
<li>关掉无用程序</li>
</ol>
<p>首先来了解下进程的概念。</p>
<blockquote>
<p>用户下达运行程序的命令后，就会产生进程。同一程序可产生多个进程（一对多关系），以允许同时有多位用户运行同一程序，却不会相冲突。进程需要一些资源才能完成工作，如CPU使用时间、存储器、文件以及I&#x2F;O设备，且为依序逐一进行，也就是每个CPU核心任何时间内仅能运行一项进程。程序本身只是指令、数据及其组织形式的描述，进程才是程序（那些指令和数据）的真正运行实例。  ---  <a href="https://zh.wikipedia.org/wiki/%E8%BF%9B%E7%A8%8B">维基百科</a></p>
</blockquote>
<p>也就是说<strong>关掉无用程序，即是关闭相关进程</strong>。</p>
<p>众所周知，计算机程序的运行是在内存中进行的。加速球所做的就是关闭进程，将它认为内存中不常用的数据调回到硬盘上。而实际上，当程序又被运行时，系统又会将相关数据加载进内存中。加速球的做法，其实是拖慢了该程序的运行速度。这种腾出内存的做法在某些使用场景中，对于低内存配置的电脑有所帮助，但本质上这是<strong>治标不治本</strong>。</p>
<p>其实系统本身是有内存管理的，将常用的数据加载到内存中，将不常用的数据释放到硬盘中。<strong>系统不需要额外的内存优化</strong>。如果时常使用加速球，强行介入系统本身的优化机制，反而会导致更多的系统卡死的新问题。（别问我怎么知道的。。。）</p>
<p>那内存小怎么办？别在加速球上折腾了，要么换合适的系统，要么就升级内存。</p>
<h1 id="联系我">5 &nbsp&nbsp<a href="#联系我" class="headerlink" title="联系我"></a>联系我</h1><p>有意者请咨询店长。<del>现在分享链接到朋友圈，下单还能享受免费系统优化（需截图）。</del></p>
<div class="note danger no-icon"><p><strong>此外，再次强调，本店视服务要求的复杂度和操作性来确定最终收费。</strong></p>
</div>

<h2 id="联系方式">5.1 &nbsp&nbsp<a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><ul>
<li>店长昵称：Mr. Kin</li>
<li>QQ：2312463626</li>
</ul>
<div class="flex-row-left-start">
<div class="flex-column" style="align: left;">
QQ二维码<img data-src="/images_public/qq_qr_code2.webp" style="width: 200px"></div>
</div>
]]></content>
      <tags>
        <tag>电脑维修</tag>
        <tag>个人店铺</tag>
      </tags>
  </entry>
  <entry>
    <title>CAD总结笔记</title>
    <url>/cad/cad/</url>
    <content><![CDATA[<h1 id="Autodesk-CAD">1 &nbsp&nbsp<a href="#Autodesk-CAD" class="headerlink" title="Autodesk CAD"></a>Autodesk CAD</h1><h2 id="版本下载">1.1 &nbsp&nbsp<a href="#版本下载" class="headerlink" title="版本下载"></a>版本下载</h2><p><a href="https://zhuanlan.zhihu.com/p/636416292">CAD哪个版本好用-CAD各版本对比</a></p>
<p>下载地址：</p>
<ul>
<li>Autodesk CAD 2026(简体中文版)<ul>
<li><a href="https://trial2.autodesk.com/NetSWDLD/ODIS/prd/2026/ACD/9165B4AF-8BF4-37D6-882D-694B73603AED/SFX/ACD_2026_simplified_chinese_win_db_001_002.exe">安装包文件1</a></li>
<li><a href="https://trial2.autodesk.com/NetSWDLD/ODIS/prd/2026/ACD/9165B4AF-8BF4-37D6-882D-694B73603AED/SFX/ACD_2026_simplified_chinese_win_db_002_002.7z">安装包文件2</a></li>
</ul>
</li>
<li>Autodesk CAD 2025(简体中文版)<ul>
<li><a href="https://efulfillment.autodesk.com/NetSWDLD/ODIS/prd/2025/ACD/7B66591E-A260-34D2-B2AD-8FDC4EA76CE8/SFX/AutoCAD_2025_Simplified_Chinese_Win_64bit_db_001_002.exe">安装包文件1</a></li>
<li><a href="https://efulfillment.autodesk.com/NetSWDLD/ODIS/prd/2025/ACD/7B66591E-A260-34D2-B2AD-8FDC4EA76CE8/SFX/AutoCAD_2025_Simplified_Chinese_Win_64bit_db_002_002.7z">安装包文件2</a></li>
</ul>
</li>
<li>Autodesk CAD 2024(简体中文版)<ul>
<li><a href="https://efulfillment.autodesk.com/NetSWDLD/2024/ACD/C0D3A90A-5925-3283-B826-68A4EAF3698A/SFX/AutoCAD_2024_Simplified_Chinese_Win_64bit_dlm_001_002.sfx.exe">安装包文件1</a></li>
<li><a href="https://efulfillment.autodesk.com/NetSWDLD/2024/ACD/C0D3A90A-5925-3283-B826-68A4EAF3698A/SFX/AutoCAD_2024_Simplified_Chinese_Win_64bit_dlm_002_002.sfx.exe">安装包文件2</a></li>
<li><a href="https://pan.baidu.com/s/16tToZ9qJfPQ74ACm1PZ02Q?pwd=i71k">破解文件</a></li>
</ul>
</li>
<li>Autodesk CAD 2023(简体中文版)<ul>
<li><a href="http://dds.autodesk.com/NetSWDLD/2023/ACD/8FB3A471-BAFE-379D-AE7F-9ECF1E74401D/SFX/AutoCAD_2023_Simplified_Chinese_Win_64bit_dlm_001_002.sfx.exe">安装包文件1</a></li>
<li><a href="http://dds.autodesk.com/NetSWDLD/2023/ACD/8FB3A471-BAFE-379D-AE7F-9ECF1E74401D/SFX/AutoCAD_2023_Simplified_Chinese_Win_64bit_dlm_002_002.sfx.exe">安装包文件2</a></li>
<li><a href="https://up.autodesk.com/2023/ACD/D542F978-96F7-30BC-81D7-27B50E8DF170//AutoCAD_2023.0.1_Update.exe">2023.0.1 64位更新补丁</a></li>
<li><a href="https://pan.baidu.com/s/1quoya6wkKgqfa-6ZlfCx-g?pwd=p8c8">破解文件</a></li>
</ul>
</li>
<li>Autodesk CAD 2022(简体中文版)<ul>
<li><a href="http://dds.autodesk.com/NetSWDLD/2022/ACD/7EE008AE-5D6A-3AA3-ACDF-EC695BCCA205/SFX/AutoCAD_2022_Simplified_Chinese_Win_64bit_dlm.sfx.exe">安装包文件</a></li>
<li><a href="https://up.autodesk.com/2022/ACD/F6031D87-3154-39BF-B2EA-D81E9E577486//AutoCAD_2022.1.1_Update.exe">2022.1.1 64位更新补丁</a></li>
<li><a href="https://up.autodesk.com/2022/ACD/E3428484-5B9C-390A-9570-F40DCD1E07F4//AutoCAD_2022.1.2_Update.exe">2022.1.2 64位更新补丁</a></li>
<li><a href="https://pan.baidu.com/s/1gD9BjPM5_26zh-Lj2LjrMQ?pwd=y5f9">破解文件</a></li>
</ul>
</li>
<li>Autodesk CAD 2021(简体中文版)<ul>
<li><a href="http://trial2.autodesk.com/NetSWDLD/2021/ACD/9046B381-E756-4D38-A7EF-FAD07F4456E6/SFX/AutoCAD_2021_Simplified_Chinese_Win_64bit_dlm.sfx.exe">安装包文件</a></li>
<li><a href="https://up.autodesk.com/2021/ACD/FB48C738-141C-4F14-BDC5-57BBA246D404/AutoCAD_2021.1_Update_64bit.exe">2021.1 64位更新补丁</a></li>
<li><a href="https://pan.baidu.com/s/1wVQ7viHBdHmOVz1ZRSlQaA?pwd=cmh7">破解文件</a></li>
</ul>
</li>
<li>Autodesk CAD 2020(简体中文版)<ul>
<li><a href="http://trial2.autodesk.com/NetSWDLD/2020/ACD/D98B88A0-50EC-4B88-9CA3-EA909DD6BC8C/SFX/AutoCAD_2020_Simplified_Chinese_Win_64bit_dlm.sfx.exe">安装包文件</a></li>
<li><a href="https://up.autodesk.com/2020/ACD/1B52239E-5BA3-4A90-BAD4-6936ED3425BD/AutoCAD_2020.1_Update_64bit.exe">2020.1 64位升级补丁</a></li>
<li><a href="https://up.autodesk.com/2020/ACD/C1116C06-6497-434A-BCDB-158218DDC3F9/AutoCAD_2020.1.3_Update_64bit.exe">2020.1.3 64位升级补丁</a></li>
<li><a href="https://pan.baidu.com/s/1EaANrT-zGeYrGk8NdURDcw?pwd=py3g">破解文件</a></li>
</ul>
</li>
<li>Autodesk CAD 2019(简体中文版)<ul>
<li><a href="http://trial2.autodesk.com/NetSWDLD/2019/ACD/19B8BB53-6D2C-4FFF-A2E9-C8BBABC04DC8/SFX/AutoCAD_2019_Simplified_Chinese_Win_64bit_dlm.sfx.exe">安装包文件</a></li>
<li><a href="https://up.autodesk.com/2019/ACD/3A8501B8-C695-4FE4-88CD-C3A0F8D70EA5/AutoCAD_2019.1_Update_64bit.exe">2019.1 64位更新补丁</a></li>
<li><a href="https://up.autodesk.com/2019/ACD/9BFD102A-51F1-4C11-9ECC-11D9414EBF44/AutoCAD_2019.1.2_Update_64bit.exe">2019.1.2 64位升级补丁</a></li>
</ul>
</li>
<li>Autodesk CAD 2018 R1(简体中文版)<ul>
<li><a href="https://dds.autodesk.com/NET18SWDLD/2018/ACD/62DF0BD6-3008-4CE2-B89C-221BE76417F8/SFX/AutoCAD_2018_Simplified_Chinese_Win_64bit_r1_dlm_001_002.sfx.exe">安装包文件1</a></li>
<li><a href="https://dds.autodesk.com/NET18SWDLD/2018/ACD/62DF0BD6-3008-4CE2-B89C-221BE76417F8/SFX/AutoCAD_2018_Simplified_Chinese_Win_64bit_r1_dlm_002_002.sfx.exe">安装包文件2</a></li>
<li><a href="https://up.autodesk.com/2018/ACD/AutoCAD_2018.1_Update_64bit.exe">2018.1 64位更新补丁</a></li>
<li><a href="https://up.autodesk.com/2018/ACD/5C9FB70F-6354-4845-B3E6-9EA501F3C343/AutoCAD_2018.1.2_Update_64bit.exe">2018.1.2 64位更新补丁</a></li>
</ul>
</li>
<li>Autodesk CAD 2018(简体中文版)<ul>
<li><a href="http://dds.autodesk.com/NET18SWDLD/2018/ACD/724F4580-6FEF-4987-B286-234C7E13FB96/SFX/AutoCAD_2018_Simplified_Chinese_Win_64bit_dlm_001_002.sfx.exe">安装包文件1</a></li>
<li><a href="http://dds.autodesk.com/NET18SWDLD/2018/ACD/724F4580-6FEF-4987-B286-234C7E13FB96/SFX/AutoCAD_2018_Simplified_Chinese_Win_64bit_dlm_002_002.sfx.exe">安装包文件2</a></li>
</ul>
</li>
<li>Autodesk CAD 2017(简体中文版)<ul>
<li><a href="https://dds.autodesk.com/NET17SWDLD/2017/ACD/AB9A4E92-D7F8-4ED3-B2F7-93DB18332165/SFX/AutoCAD_2017_Simplified_Chinese_Win_64bit_r1_dlm_001_002.sfx.exe">安装包文件1</a></li>
<li><a href="https://dds.autodesk.com/NET17SWDLD/2017/ACD/AB9A4E92-D7F8-4ED3-B2F7-93DB18332165/SFX/AutoCAD_2017_Simplified_Chinese_Win_64bit_r1_dlm_002_002.sfx.exe">安装包文件2</a></li>
<li><a href="https://download.autodesk.com/us/support/files/genuine/AutoCAD_2017_SP1_64bit_GL.sfx.exe">2017.1.2 32位更新补丁</a></li>
<li><a href="https://up.autodesk.com/2017/ACD/AutoCAD_2017.1.2_Update_64bit.exe">2017.1.2 64位更新补丁</a></li>
</ul>
</li>
<li>Autodesk CAD 2016(简体中文版)<ul>
<li><a href="https://dds.autodesk.com/NET16SWDLD/2016/ACD/DLM/AutoCAD_2016_Simplified_Chinese_Win_64bit_dlm.sfx.exe">安装包文件</a></li>
<li><a href="https://download.autodesk.com/us/support/files/autocad_2016_service_pack_1/AutoCAD_2016_SP1_64bit.exe">2016 SP1 64位更新补丁</a></li>
<li><a href="https://pan.baidu.com/s/1__IicGs72MhYyS97Ptv7Hw#iig2">度盘下载地址</a></li>
</ul>
</li>
</ul>
<h2 id="官方文档查阅">1.2 &nbsp&nbsp<a href="#官方文档查阅" class="headerlink" title="官方文档查阅"></a>官方文档查阅</h2><ul>
<li><a href="https://www.autodesk.com.cn/support/technical/article/caas/sfdcarticles/sfdcarticles/CHS/Optimize-Performance-within-Windows-7-Environments.html">在 Windows 中优化 AutoCAD 性能</a></li>
<li><a href="https://www.autodesk.com.cn/support/technical/article/caas/sfdcarticles/sfdcarticles/CHS/Hardware-acceleration-options-are-unavailable-in-AutoCAD.html?us_oa=dotcom-us&us_si=69dc3963-6795-4fd5-a3e5-fd651446f36d&us_st=%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F">无法在 AutoCAD 产品中启用硬件加速</a></li>
</ul>
<h2 id="优化CAD性能">1.3 &nbsp&nbsp<a href="#优化CAD性能" class="headerlink" title="优化CAD性能"></a>优化CAD性能</h2><ul>
<li>只用SHX字体，不要用系统真字体，例如宋体、黑体之类的粗字体。SHX的量级要远比TTF字体来得轻便，可以极大减小文件的尺寸，改善缩放平移以后的性能。</li>
<li>开启硬件加速</li>
<li>清理图面，善用清理命令及插件</li>
</ul>
<h1 id="浩辰CAD">2 &nbsp&nbsp<a href="#浩辰CAD" class="headerlink" title="浩辰CAD"></a>浩辰CAD</h1><h2 id="版本下载-1">2.1 &nbsp&nbsp<a href="#版本下载-1" class="headerlink" title="版本下载"></a>版本下载</h2><p>下载地址：</p>
<ul>
<li>浩辰CAD 2024<ul>
<li><a href="https://hccad.gstarcad.cn/2024/GstarCAD2024_zh-cn_231117.exe">安装包</a></li>
<li><a href="https://pan.baidu.com/s/1DjzAHIQzuZ8SkHuHmz1hGg">安装包及注册机</a></li>
</ul>
</li>
<li>浩辰CAD 2023<ul>
<li><a href="https://hccad.gstarcad.cn/2023/GstarCAD2023_SP3_zh-cn_231101-1.exe">安装包</a></li>
<li><a href="https://hccad.gstarcad.cn/2023/GstarCAD2023_SP3_Update_zh-cn_231101.exe">SP2升级包</a></li>
</ul>
</li>
</ul>
<h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] AutoCAD小秘密038：SHX大字体的通天塔[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/52121478">https://zhuanlan.zhihu.com/p/52121478</a>.<br>[2] 详解AutoCAD的.TTF字体和.SHX字体文件[EB&#x2F;OL]. <a href="https://www.cadzxw.com/711.html">https://www.cadzxw.com/711.html</a>.<br>[3] AutoCAD全系列版本官方下载地址[EB&#x2F;OL]. <a href="https://www.thcad.net/question/10513.html">https://www.thcad.net/question/10513.html</a>.</p>
]]></content>
      <categories>
        <category>cad</category>
      </categories>
  </entry>
  <entry>
    <title>闪存驱动器设计</title>
    <url>/cad/flash-disk/</url>
    <content><![CDATA[<h1 id="焊接技巧">1 &nbsp&nbsp<a href="#焊接技巧" class="headerlink" title="焊接技巧"></a>焊接技巧</h1><p>详看<a href="/cad/pcb/#%E7%84%8A%E6%8E%A5%E6%80%BB%E7%BB%93">「PCB设计」的焊接总结</a></p>
<h1 id="店铺点评">2 &nbsp&nbsp<a href="#店铺点评" class="headerlink" title="店铺点评"></a>店铺点评</h1><blockquote>
<p>部分店铺的网评：大树推荐，翼浪排除</p>
</blockquote>
<p><strong>店铺总结（个人购买经验总结）：</strong></p>
<ul>
<li>南翔科技（TB）：东芝颗粒。店家会给芯片颗粒值球后再发货（自己懒得值球的，推荐这个店铺买颗粒，省事）</li>
<li>QFZ FLY SPEED SSD U盘（TB）：IS903主控板+外壳。（外壳设计属于个人觉得很好看的金属壳，主控板买了四块都正常工作）</li>
<li>约翰的咖啡屋（TB）：模块化测试架。（模块化的设计十分优秀，买了一个IS903测试架，使用超级方便）</li>
</ul>
<h1 id="主控和颗粒的选择">3 &nbsp&nbsp<a href="#主控和颗粒的选择" class="headerlink" title="主控和颗粒的选择"></a>主控和颗粒的选择</h1><ul>
<li>一般的主控选择：不要4K上903，要4K，单贴3281，双头3280。（3280和3281在4k性能差不多，3280好一点）。预算足够的话，可考虑2246xt&#x2F;2246en。</li>
<li>东芝颗粒在IS903主控上的适配性和兼容性都比较好</li>
</ul>
<h2 id="部分颗粒总结">3.1 &nbsp&nbsp<a href="#部分颗粒总结" class="headerlink" title="部分颗粒总结"></a>部分颗粒总结</h2><ul>
<li>TH58TEG9DDKBA8H：经典DDK 64GB MLC颗粒，BGA132封装。ID为983A95937AD0。IS903单贴顺序读取312MB，写入101MB。4K读取7.7MB，写入0.26MB。</li>
<li>TH58TFG9EFLBS8C：EFL 64GB MLC颗粒，BGA132封装。ID为983A3AA4A493937A7AD1D1。IS903单贴顺序读取300MB，写入79.89MB。4K读取7.7MB，写入0.26MB。IS903双贴EFL性能和单贴DDK性能差不多。<ul>
<li>颗粒是从东芝Q200 EX固态拆出来（主控为TC358790XBG）</li>
</ul>
</li>
<li>TH58TFT0DFKBA8J：DFK 128GB MLC颗粒，BGA152封装。ID为983CA5937ED0。IS903双贴顺序读取212MB，顺序写入183MB。4K读取5.25MB，写入0.26MB。</li>
<li>29F2T08EMLCE：132BGA封装，256GB，镁光后打的自封丝印，网络资料传为B27B晶圆。IS903测试架检测ID为：2C2CC3C308083232E6E600，无法量产。可尝试用PS3111主控量产开卡。<ul>
<li>颗粒是从七彩虹SL500固态拆出来（主控为MAS0902A-B2C）</li>
</ul>
</li>
<li>THGBMFG9C4LBAIR：64GB<ul>
<li>颗粒从酷派平板拆出来</li>
</ul>
</li>
<li>FB51208UCN1（表面丝印层印有金士顿logo）（颗粒本身实际为英特尔 144层QLC 3D NAND颗粒）：512GB<ul>
<li>颗粒从金士顿NV2 1TB（PCIe 4.0 NVMe M.2）（SNV2S&#x2F;1000GCN，99M7461-021.A01G，1054433-2337）拆出来（主控为SM2267XTV）</li>
</ul>
</li>
<li>NW852（7WB2D&#x2F;7ZB2D）：镁光64GB颗粒，BGA132封装，ID为2CB47832AA04。<ul>
<li>颗粒从HP SSD S700 M.2 250GB拆出来，PN：2LU79AA#UUF（主控为hp 1746 H6008 G AB N1GX89 00）</li>
</ul>
</li>
<li>LGLY256G09CB1（第二行丝印LP2350J120，第三行丝印CD08AI42384）：256GB<ul>
<li>颗粒从梵想256G固态U盘FF520拆出来（A&#x2F;C双口+USB 3.2）（主控为Maxio MAS1102B-B1C AFNA8R41003 2224 &#x2F; Maxio MAS1102B-B1C AANA1B21313 2342，桥接芯片JMS580）</li>
</ul>
</li>
<li>SEC116 K9DVGY8 J5BDCK0 PUAC189VC：1TB<ul>
<li>从三星980Pro 2TB固态拆出来，PN MZVL22T0HBLB，MODEL MZ-V8P2T0，2021.05</li>
<li>缓存芯片：SEC 052 K4F6E3S 4HMBGCH HAKVP490</li>
<li>主控：SAMSUNG S4LV003 NPA0ZSYH 2214 ARM ELPIS</li>
</ul>
</li>
</ul>
<p>颗粒的部分资料：</p>
<ul>
<li><a href="https://www.mydigit.cn/thread-142601-1-1.html">[慧荣] SM2258XT固件 29F2T08EMLCE颗粒</a></li>
<li><a href="https://www.mydigit.cn/forum.php?mod=viewthread&tid=230139">[慧荣] B27B的颗粒有解了</a></li>
</ul>
<h1 id="颗粒芯片资料查询">4 &nbsp&nbsp<a href="#颗粒芯片资料查询" class="headerlink" title="颗粒芯片资料查询"></a>颗粒芯片资料查询</h1><ul>
<li><a href="https://www.flashinfo.top/">「翼浪数码」店铺的FlashInfo网站</a></li>
<li><a href="https://fm-us.xfjportal.com/">在线FlashMaster</a></li>
<li><a href="https://www.usbdev.ru/">USBDEV（需要海外IP）</a></li>
<li><a href="https://www.diyflash.top/">diyflash（usbdev.ru镜像站）</a></li>
<li><a href="https://file.diyflash.top/">diyflash（资源分享站）</a></li>
</ul>
<h1 id="开卡量产工具">5 &nbsp&nbsp<a href="#开卡量产工具" class="headerlink" title="开卡量产工具"></a>开卡量产工具</h1><ul>
<li><a href="https://www.mydigit.cn/thread-495185-1-1.html">[Other] 固态硬盘量产工具合集（2025.1.28）</a></li>
<li><a href="http://am.adianshi.com:6805/%E5%BC%80%E5%8D%A1%E8%BD%AF%E4%BB%B6/">「明丽电子」店铺的资料文件共享链接</a></li>
<li><a href="https://down.wttx.ltd/mp_tools/">「球球的折腾铺子」店铺的资料文件共享链接</a></li>
<li><a href="https://www.ssdtool.cc/ma">https://www.ssdtool.cc/ma</a></li>
</ul>
<h1 id="测试架资料">6 &nbsp&nbsp<a href="#测试架资料" class="headerlink" title="测试架资料"></a>测试架资料</h1><ul>
<li><a href="https://www.mydigit.cn/forum.php?mod=viewthread&tid=204030">[其他] 请叫我“撸架狂魔”——秀一下这两些年撸过的测试架！</a></li>
<li><a href="https://www.mydigit.cn/thread-360745-1-1.html">[芯邦] 自打板6层沉金CBM2199测试架简单测试+大量晒图(支持1.2V、1.8V、3.3V 3D颗粒)</a></li>
<li><a href="https://www.mydigit.cn/thread-263993-1-1.html">[安国] 安国AU6989主控这下真是全球通了，居然还能支持长江颗粒</a></li>
</ul>
<h1 id="主控芯片资料">7 &nbsp&nbsp<a href="#主控芯片资料" class="headerlink" title="主控芯片资料"></a>主控芯片资料</h1><ul>
<li><a href="https://bbs.luobotou.org/bstra/forum.php?mod=viewthread&tid=50691&extra=page=">常见固态U盘主控芯片介绍总结</a></li>
<li><a href="https://bbs.luobotou.org/bstra/forum.php?mod=viewthread&tid=47287&extra=page=">主流USB3.0闪存盘主控介绍</a></li>
<li><a href="https://www.mydigit.cn/thread-202315-1-1.html">[闪存] U盘主控解析（转发技术宅小唐）</a></li>
<li><a href="https://www.mydigit.cn/thread-306846-1-1.html">[SMI] 流言终结者之：SM2258XT是不是最好的固态U盘主控</a></li>
<li><a href="https://www.mydigit.cn/thread-85081-1-1.html">[慧荣] 新人必看：玩了这么久SM3280&#x2F;3281，一些经验分享给大家</a></li>
</ul>
<h1 id="IS903">8 &nbsp&nbsp<a href="#IS903" class="headerlink" title="IS903"></a>IS903</h1><p><a href="https://www.upantool.com/jiaocheng/liangchan/Innostor/13507.html">银灿主控的U盘量产怎么调整ECC大小，多大合适</a></p>
<h2 id="量产开卡步骤">8.1 &nbsp&nbsp<a href="#量产开卡步骤" class="headerlink" title="量产开卡步骤"></a>量产开卡步骤</h2><ol>
<li>焊接颗粒到主控盘，插上电脑</li>
<li>打开量产工具软件，「量产测试」标签页点击「搜寻装置」，点击下方通道查看是否有识别到颗粒ID</li>
<li>摁F9，点击强力擦除（量产之前推荐先擦除）</li>
<li>「量产设定」标签页，点击「编辑」，输入密码<code>IS0024</code>，设定好参数，点击「存档」</li>
<li>「量产测试」标签页点击「开始」就会开始量产</li>
</ol>
<h2 id="部分资料">8.2 &nbsp&nbsp<a href="#部分资料" class="headerlink" title="部分资料"></a>部分资料</h2><ul>
<li><a href="https://www.cnblogs.com/DLHC-TECH/p/IS903_FLASH-DRIVE_D-P10.html">银灿IS903主控 + MT29F64G08CBAAA(NAND) 制作8GB闪存驱动器</a></li>
<li><a href="https://www.mydigit.cn/thread-336398-1-1.html">[银灿] 免费共享IS903测试架原理图+PCB资料，带04T跳线，电压跳线</a></li>
<li><a href="https://www.mydigit.cn/thread-219825-1-1.html">[银灿] ISD903-V6.0主控板上市，彻底解决了Win10系统下掉盘的问题</a></li>
<li><a href="https://github.com/prashant87/IS903">prashant87&#x2F;IS903</a></li>
</ul>
<h1 id="关于开卡设定参数的帖子链接">9 &nbsp&nbsp<a href="#关于开卡设定参数的帖子链接" class="headerlink" title="关于开卡设定参数的帖子链接"></a>关于开卡设定参数的帖子链接</h1><ul>
<li><a href="https://www.mydigit.cn/thread-23817-1-1.html">[银灿] 如何添加参数让银灿IS903支持自己的Flash颗粒-小白晋级+备忘</a></li>
<li><a href="https://www.mydigit.cn/thread-240834-1-1.html">[Toshiba] 东芝9DDK在sm2246xt上写入速度低的终极解决办法</a></li>
<li><a href="https://www.mydigit.cn/thread-153446-1-1.html">[慧荣] 发一个自己总结的SM3280、SM3281改参数的教程</a></li>
<li><a href="https://www.mydigit.cn/thread-285939-1-1.html">[慧荣] 修改forceflash文件里的一个小小参数，增容SM3280&#x2F;3281贴东芝颗粒增容</a></li>
</ul>
<h1 id="参考文献">10 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>cad</category>
      </categories>
      <tags>
        <tag>量产</tag>
        <tag>U盘</tag>
        <tag>固态</tag>
        <tag>开卡</tag>
        <tag>测试架</tag>
        <tag>主控</tag>
        <tag>颗粒</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记本硬件基础</title>
    <url>/cad/laptop-fundamental/</url>
    <content><![CDATA[<h1 id="基本外型介绍">1 &nbsp&nbsp<a href="#基本外型介绍" class="headerlink" title="基本外型介绍"></a>基本外型介绍</h1><table>
<thead>
<tr>
<th align="center">外型</th>
<th align="center">A壳</th>
<th align="center">B壳</th>
<th align="center">C壳</th>
<th align="center">D壳</th>
</tr>
</thead>
<tbody><tr>
<td align="center">位置</td>
<td align="center">顶面的壳</td>
<td align="center">屏幕面的外框</td>
<td align="center">键盘面的壳</td>
<td align="center">底面的壳</td>
</tr>
</tbody></table>
<h1 id="部件介绍">2 &nbsp&nbsp<a href="#部件介绍" class="headerlink" title="部件介绍"></a>部件介绍</h1><h2 id="PCB（印刷电路板）">2.1 &nbsp&nbsp<a href="#PCB（印刷电路板）" class="headerlink" title="PCB（印刷电路板）"></a>PCB（印刷电路板）</h2><p>笔记本PCB集成度高，一般6层以上，比如6(较少)，8，10...，不像1或2层板，无法跑线。板层数越多，EMI性能越好，成本也越高。</p>
<p>PCBA是指PCB上装配按照设定规则指定元件的成品功能板。（元件：电阻，电容，芯片，接口...）</p>
<div class="note default no-icon"><p>注：PCB, Printed Circuit Board; PCBA, Printed Circuit Board Assembly; EMI, Electromagnetic Interference</p>
</div>

<h2 id="Chipset（芯片组）">2.2 &nbsp&nbsp<a href="#Chipset（芯片组）" class="headerlink" title="Chipset（芯片组）"></a>Chipset（芯片组）</h2><p>一般指南北桥。（目前北桥已逐渐淘汰）</p>
<p>常见厂商有：AMD，INTEL，NVDIA，VIA，SIS。</p>
<p>南桥：North Bridge Chipset，INTEL的为输出&#x2F;输入控制器中心（Input&#x2F;Output Controller Hub，ICH），NVIDIA的为MCP，ATI的称为IXP&#x2F;SB，AMD的为FCH。</p>
<p>北桥：North Bridge Chipset，INTEL的为GMCH，Graphics &amp; Memory controller hub，带G有集显，无G的无集显。</p>
<h2 id="CPU（中央处理器）">2.3 &nbsp&nbsp<a href="#CPU（中央处理器）" class="headerlink" title="CPU（中央处理器）"></a>CPU（中央处理器）</h2><p>常见厂商：AMD，INTEL。龙芯，VIA，IBM，Transmeta。</p>
<p>不同芯片组对应不同的Intel CPU座（针脚不同）</p>
<p>注：CPU, Center Processor Unit</p>
<h2 id="Battery（电池）">2.4 &nbsp&nbsp<a href="#Battery（电池）" class="headerlink" title="Battery（电池）"></a>Battery（电池）</h2><ul>
<li>组成：外壳+控制板+电芯。</li>
<li>类型：圆柱型、方型、聚合物</li>
<li>电芯：常见18650型锂离子电芯。单个电压3.7V，充电电压4.2V，电容量为2400mAH。三串两并：电压为3*3.7V，容量为2*2400mAH。</li>
</ul>
<h2 id="Adapter（适配器）">2.5 &nbsp&nbsp<a href="#Adapter（适配器）" class="headerlink" title="Adapter（适配器）"></a>Adapter（适配器）</h2><p>输入100~240V的AC（50&#x2F;60Hz），输出16~20V居多。（华硕EPC有9.5V和12V的输出）</p>
<h1 id="笔记本和台式机的区别">3 &nbsp&nbsp<a href="#笔记本和台式机的区别" class="headerlink" title="笔记本和台式机的区别"></a>笔记本和台式机的区别</h1><ul>
<li>笔记本自带显示系统（LCD&#x2F;LED，专用屏线接口，自带高压板，灯管）</li>
<li>笔记本电源统一只由一个电压转出，常见16~20。台式主板由ATX电源提供12V、5V、3.3V等电压。\这个是最大区别，笔记本的工作电压是由板子转换完成（16-20V主供电输入，经PWM电路降压处理，提供待机电压等工作电压），台式主板电源完成（多种方式，不只PWM）。</li>
<li>笔记本有充放电的电路，可用电池做替代电源。</li>
<li>为保证笔记本移动性和续航，CPU低功率、节能设计。</li>
<li>笔记本的保护电路多，过热保护，过电压保护。</li>
<li>笔记本内置鼠标设备，如指点杆，触摸板。</li>
<li>笔记本元件集成度高，MOS管多为8脚贴片。专用IC也多。（芯片功能作用原理类似，供电不是太复杂。）</li>
<li>笔记本6-8层板，夹层中也有信号线。台式主板4层，一般只在正反面有信号线。</li>
<li>笔记本引入EC（多功能芯片）概念，类似台式主板的IO，但功能更多，因为处理键盘的各种信号（亮度调节，声音调节等快捷键）。部分EC里会带有程序，其脚位功能由程序决定。</li>
<li>笔记本的时序概念很重要，电压和功能的实现，都由时序控制。环环相扣，前面条件未完成，后面动作就不会执行。</li>
<li>笔记本维修对电路图依赖很强，需要电路图分析陌生元件，且需要点位图对照。无这些的话，只能维修一些通病。（信号复杂，板子小，整合度高）</li>
</ul>
<h1 id="笔记本板号">4 &nbsp&nbsp<a href="#笔记本板号" class="headerlink" title="笔记本板号"></a>笔记本板号</h1><p>板号：板子型号。即工程代号，Project Code</p>
<p>笔记本大规模的代工厂：广达（quanta），仁宝（compal），纬创（wistron），英业达（inventec），和硕联合（pegatron）。<br>二线代工厂：神达（mitac），蓝天（clevo），大众（fic），微星（msi），精英（ecs）</p>
<p>OEM代工：品牌商设计，代工厂生产。如苹果，联想（thinkpad）。成本高<br>ODM代工：设计和生产都是代工厂。</p>
<p>广达：DAO+板号+mb，一般为3个字，如ch3，zq5<br>仁宝：la-xxxxp<br>纬创：板号+mb（有白框）<br>华硕（asus）： 板号+main board（没有位置号，PCB丝印层无标记，若无点位图无法分析）<br>英业达：板号（很长）+mb，一般给hp做得多<br>微星：ms-板号<br>富士康：代工索尼</p>
<h1 id="主板板子元件">5 &nbsp&nbsp<a href="#主板板子元件" class="headerlink" title="主板板子元件"></a>主板板子元件</h1><p>CPU座，北桥，南桥，内存插槽，独立显卡，显存，SPI BIOS，pice，电池接口，适配器插头，时钟芯片，ec，LCD接口，硬盘接口，键盘接口，光驱接口，读卡器槽。</p>
<h1 id="笔记本主板架构">6 &nbsp&nbsp<a href="#笔记本主板架构" class="headerlink" title="笔记本主板架构"></a>笔记本主板架构</h1><p>修接口。供电维修看架构没用。</p>
<p>intel双桥架构：</p>
<ul>
<li>CPU管理北桥。</li>
<li>北桥管内存，独显，显示接口，与cpu的连接的总线---FSB前端总线。北桥与南桥的总线---DMI+CLINK</li>
<li>南桥管理周边设备，网卡，迷你卡，USB，摄像头，EC，光驱，硬盘等，南桥和EC连接的总线--LPC总线，7根重要信号：LAD0，LAD1，LAD2，LAD3，LFRAME#，LCLK，LRESET#。（诊断卡接9根，外加VCC、GND）</li>
<li>EC管理键盘，触控板，鼠标，部分挂BIOS（SPI ROM）</li>
</ul>
<p>intel单桥架构（无北桥）：</p>
<ul>
<li>CPU管理显卡，内存。CPU不管显示接口，通过PCH桥到显示接口（cpu里有集成显卡，通过FDI总线输出）</li>
<li>pch（管理原来南桥的功能）相比原南桥，增加了显示接口（VGA，LVDS，HDMI等）管理，可能也直接管理SPI rom（BIOS）</li>
<li>EC管理键盘，温控芯片，触摸板，挂BIOS</li>
</ul>
<p>AMD（ATI）双桥架构：</p>
<ul>
<li>CPU管内存</li>
<li>北桥管理所有PCIE，显示接口。网卡（1000M，走PCIE）</li>
<li>南桥管理USB，网卡（100M，走PCI。），硬盘光驱等</li>
</ul>
<p>AMD单桥架构：</p>
<ul>
<li>CPU管理内存，显卡，显示接口（这个是与intel的区别）</li>
<li>桥（fch）管理网卡，mini-pcie，硬盘光驱，USB，EC，声卡等</li>
<li>EC管键盘，鼠标</li>
</ul>
<p>intel和AMD单桥架构无时钟芯片，集成在桥。nvidia的双桥和amd相同。nvidia单桥：CPU管内存，桥管其他。</p>
<h1 id="名词解释">7 &nbsp&nbsp<a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><p>复位和PG都是测电压，时钟是测频率（无示波器时，可测电压，33MHz大概1.6V，100MHz大概0.4V）。</p>
<h2 id="供电和信号">7.1 &nbsp&nbsp<a href="#供电和信号" class="headerlink" title="供电和信号"></a>供电和信号</h2><p>供电一个可以输出电流的电压，电流较大。工作过程中，这个电压不能置高或拉低。供电被拉低，就是短路。一般，也不许置高。（动力来源）。</p>
<p>常见有19，12，5（往上大电压给接口），3.3（给芯片），2.5，1.8，1.5，1.25，1.05，1.2，1.1，0.9，0.75V。CPU供电0.7-1.5V</p>
<p>名称一般为：VCC，VDD，VCC3，VDDQ，VTT，VBAT，5VALW，+3VO等（有V字）。苹果的供电特殊，例如PP0V75_s3_mem</p>
<p>符号为一个圆圈，T型，三角形。表示固定的电压，不允许置高和拉低。信号电压（例如19V）与1.5V（供电）碰在一起会变为1.5V。</p>
<h2 id="接地">7.2 &nbsp&nbsp<a href="#接地" class="headerlink" title="接地"></a>接地</h2><p>接地是给供电构成回路。有接地，才会有电流流过设备。</p>
<p>名称一般为：VSS、GND。</p>
<p>符号：三角形（数字地）；倒三角形多横线（模拟地）。避免数字和模拟连在一起相互干扰。例子：数字地和模拟地通过一个0欧姆电阻PR170(值0_6)，实际测量是通路，但信号不一样。如果这个0欧姆电阻坏了，可能导致烧元件。压差相对值不一样。</p>
<h2 id="信号">7.3 &nbsp&nbsp<a href="#信号" class="headerlink" title="信号"></a>信号</h2><p>理论上，电压信号值考虑电压变化，电流很小。在工作过程中，可根据需要置高或者拉低。电路图中的信号的箭头不完全代表信号的流向，因为画图人员的随意性。<br>信号方向考经验判断：例如PWRBTN#给南桥的；slp_s3#南桥出来的；therm_stp#温控信号看情况：过温时，温控芯片吧温控信号拉低。</p>
<h2 id="高低电平">7.4 &nbsp&nbsp<a href="#高低电平" class="headerlink" title="高低电平"></a>高低电平</h2><p>数字逻辑电路中，高电平表示1，低电平表示0。一般规定：低电平为0-0.25V，高电平为3.5-5V。</p>
<p>主板中，1V以上为高电平，0.7以下为低电平。</p>
<p>结论：根据电路判断高低电平，非限定特定值。有些电路0.5就是高，有的电路1.1还是低。但0肯定是地，3.3肯定是高。</p>
<h2 id="脉冲和跳变">7.5 &nbsp&nbsp<a href="#脉冲和跳变" class="headerlink" title="脉冲和跳变"></a>脉冲和跳变</h2><p>上升沿，下降沿。</p>
<p>类型：高电平跳变为低电平；低电平跳变为高电平；高跳变为低再跳变为高。</p>
<h2 id="时钟信号">7.6 &nbsp&nbsp<a href="#时钟信号" class="headerlink" title="时钟信号"></a>时钟信号</h2><p>时钟信号CLK（Clock的简写）。为数字电路工作提供一个基准，使各个相连设备统一步调工作。单位Hz。南桥晶振323.768KHz。</p>
<p>主板上都有一个主时钟产生电路，给所有设备提供时钟，送出到cpu的频率为100MHz以上，送给PCI的是33MHz，送给PCIE的是100MHz，送给USB控制器（集成在南桥内部）的为48MHz。</p>
<p>相连的两个设备需要相同的时钟频率和电压才能通信，如内存和北桥。</p>
<p>时钟信号需要在主板正常通电后且时钟芯片工作正常才能测量到，用示波器和万用表（测电压?）测。100M的示波器一般测不了CPU的频率。</p>
<h2 id="复位信号">7.7 &nbsp&nbsp<a href="#复位信号" class="headerlink" title="复位信号"></a>复位信号</h2><p>复位信号RST（RESET的简写）。复位都是从高电平向低电平跳变再回到高电平，如PCI的复位是从3.3V向0V跳变再回到3.3V就是一个正常的复位跳变。</p>
<p>名称一般为：xxxRST#，如PCIRST#、CPURST#、IDERST#等。复位只能是瞬间低电平，主板正常工作时复位都是高电平。但不是恒高电平，不能直接接到供电上。如台式机reset键，复位开关弹不起来就一直为低电平，就不行。</p>
<p>平常说没复位，通常指没复位电压，即复位信号测量点电压为0V。维修一般都是把复位电压修出来。</p>
<p>所有设备的复位信号，如EC，北桥等，都是由南桥发出。开机的瞬间，便会对设备清零，使其重新工作。</p>
<h2 id="PG信号">7.8 &nbsp&nbsp<a href="#PG信号" class="headerlink" title="PG信号"></a>PG信号</h2><p>电源好信号PG（powergood的缩写），用来描述供电正常的信号。一般高电平有效。如cpu供电芯片，只有在正常发出cpu电压后，才会发出PG信号。</p>
<p>名称一般为：PG、PWRGD、PWROK、POK、PWRG、VTTPWRGD、CPUPWRGD等。</p>
<h2 id="开启信号">7.9 &nbsp&nbsp<a href="#开启信号" class="headerlink" title="开启信号"></a>开启信号</h2><p>开启信号。有的芯片叫EN（enable），使能，高电平时表示开启信号。有的芯片叫SHDN#（shutdown），#表示低电平有效。综合名称和#来看，意思是低电平时关闭芯片，高电平开启。所以一般shutdown信号一般要维持高电平。</p>
<p>注：信号带#时（低电平有效），一定要结合信号的英文全程去理解。有的带#，为低电平时主板可以正常工作。例如：VT_PWRGD_CK410#信号是cpu供电正常后发出低电平开启时钟信号。1999_SHDN#信号是低电平关闭MAX1999的控制信号，即为高电平时，主板才能正常工作。</p>
<h1 id="参考文献">8 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>cad</category>
      </categories>
      <tags>
        <tag>硬件</tag>
        <tag>笔记本</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>PCB设计</title>
    <url>/cad/pcb/</url>
    <content><![CDATA[<h1 id="嵌入式代码开发">1 &nbsp&nbsp<a href="#嵌入式代码开发" class="headerlink" title="嵌入式代码开发"></a>嵌入式代码开发</h1><h2 id="开发编译器">1.1 &nbsp&nbsp<a href="#开发编译器" class="headerlink" title="开发编译器"></a>开发编译器</h2><p>开源的sdcc编译器，一个优化的ansi-c交叉编译器。</p>
<h1 id="常见接口引脚定义">2 &nbsp&nbsp<a href="#常见接口引脚定义" class="headerlink" title="常见接口引脚定义"></a>常见接口引脚定义</h1><p>USB协议官网：<a href="https://www.usb.org/">https://www.usb.org/</a></p>
<p>USB接口种类：<a href="https://zhuanlan.zhihu.com/p/447595295">https://zhuanlan.zhihu.com/p/447595295</a></p>
<p>常见USB引脚定义：<a href="https://zhuanlan.zhihu.com/p/364748197">https://zhuanlan.zhihu.com/p/364748197</a><br>USB 2.0 A型、B型、Mini和Micro接口 type-c 定义及封装：<a href="https://blog.csdn.net/wuhenyouyuyouyu/article/details/52511925">https://blog.csdn.net/wuhenyouyuyouyu/article/details/52511925</a></p>
<p>接口速率总结：</p>
<ul>
<li>USB3.0：460MB左右</li>
<li>USB2.0：44MB左右</li>
<li>Type-C：1GB左右</li>
</ul>
<h2 id="Type-C接口">2.1 &nbsp&nbsp<a href="#Type-C接口" class="headerlink" title="Type-C接口"></a>Type-C接口</h2><p><a href="https://blog.csdn.net/qlexcel/article/details/117431413">https://blog.csdn.net/qlexcel/article/details/117431413</a></p>
<h2 id="mini-usb接口">2.2 &nbsp&nbsp<a href="#mini-usb接口" class="headerlink" title="mini usb接口"></a>mini usb接口</h2><p><a href="https://blog.csdn.net/eddy_liu/article/details/8316140">https://blog.csdn.net/eddy_liu/article/details/8316140</a></p>
<table>
<thead>
<tr>
<th>针脚</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
</tr>
</thead>
<tbody><tr>
<td>名称</td>
<td>VCC</td>
<td>D-</td>
<td>D+</td>
<td>id</td>
<td>GND</td>
</tr>
<tr>
<td>作用</td>
<td>+5V电压</td>
<td>数据线负极</td>
<td>数据线正极</td>
<td>OTG功能</td>
<td>接地</td>
</tr>
<tr>
<td>接线颜色</td>
<td>红色</td>
<td>白色</td>
<td>绿色</td>
<td>&#x2F;</td>
<td>黑色</td>
</tr>
</tbody></table>
<h2 id="充电DC圆孔">2.3 &nbsp&nbsp<a href="#充电DC圆孔" class="headerlink" title="充电DC圆孔"></a>充电DC圆孔</h2><p>无论是公口或者母口，一般都是内正外负，不仅是5.5大小的，4、3.5、2.5等等的。不过有些厂家是对着干的，比如当年卡西欧和雅马哈电子琴所配的电源。</p>
<div class="flex-column">
<img data-src="/images/pcb/dc_pin.webp">DC接口引脚定义</div>

<h1 id="常见传感器的应用">3 &nbsp&nbsp<a href="#常见传感器的应用" class="headerlink" title="常见传感器的应用"></a>常见传感器的应用</h1><ul>
<li>IR感测器（红外）：作为检测判断防尘网是否被灰尘堵塞（用例：华硕PA602机箱）</li>
<li>触摸传感器（触觉传感器）：对于触摸或者压力敏感, 是一种用来检测物体接触或靠近的传感器。通常是通过检测触摸界面的电容或电阻的变化，或者是检测声波反射等方式来工作。<ul>
<li>电容式触摸传感器：弹簧型传感器，可适用于曲面前面板方案。例如屏幕灯为圆柱形，触摸面为曲面。<ul>
<li>德州仪器 (TI)技术资料：<a href="https://www.ti.com.cn/cn/lit/ml/zhcaaa9/zhcaaa9.pdf?ts=1740213118582">CapTIvate™电容式触摸入门手册</a></li>
</ul>
</li>
<li>电阻式触摸传感器</li>
<li>红外触摸传感器</li>
</ul>
</li>
</ul>
<div class="flex-column">
<img data-src="/images/pcb/touch-sensor-comparison.webp">触摸传感器比较</div>

<h1 id="华硕主板灯控开发">4 &nbsp&nbsp<a href="#华硕主板灯控开发" class="headerlink" title="华硕主板灯控开发"></a>华硕主板灯控开发</h1><ul>
<li><a href="https://github.com/ProgramAndPoem/AacHal">https://github.com/ProgramAndPoem/AacHal</a></li>
<li><a href="https://blog.csdn.net/weixin_42349978/article/details/112128924">https://blog.csdn.net/weixin_42349978/article/details/112128924</a></li>
</ul>
<h1 id="锂电池">5 &nbsp&nbsp<a href="#锂电池" class="headerlink" title="锂电池"></a>锂电池</h1><p>串并联符号：串联s，并联p。3s1p：三串一并，一并实际就是没有并联。比如1s1p就是单一电池。</p>
<p>串联增压，并联增容。</p>
<h1 id="FPC的断裂修复">6 &nbsp&nbsp<a href="#FPC的断裂修复" class="headerlink" title="FPC的断裂修复"></a>FPC的断裂修复</h1><p>刮表层，使用焊油连接金属触点（将锡附着在焊头上）。</p>
<h1 id="蓝牙耳机拆解">7 &nbsp&nbsp<a href="#蓝牙耳机拆解" class="headerlink" title="蓝牙耳机拆解"></a>蓝牙耳机拆解</h1><ul>
<li><a href="https://www.52audio.com/archives/107686.html">OPPO Enco Air2</a></li>
</ul>
<h1 id="焊接总结">8 &nbsp&nbsp<a href="#焊接总结" class="headerlink" title="焊接总结"></a>焊接总结</h1><ul>
<li>USB接口固定引脚的加固：一般的USB接口有两个的固定引脚，如果只在一侧加焊的话，USB接口的固定引脚仍有可能会因为长期的拔插使用导致断裂（是在没有焊点的那侧断裂的）。因此加固建议是在无焊点那侧加焊，即固定引脚两侧都有焊点。</li>
<li>5V3针灯条的串接，上下相叠起来才能吃锡</li>
<li>芯片主控板焊盘不需要值球（若买的成品焊盘已有值球的话，清理干净再上芯片），芯片需要值球。推荐吹焊前，先在焊盘均匀涂抹少许焊油。</li>
<li>BGA封装的植球焊接<ul>
<li>使用锡泥植球时，使用热风枪加热到锡泥变亮即加热成功（这个阶段一般不需要加焊油）。</li>
<li>倘若锡泥涂抹过多，导致加热后锡球不好脱离钢网的话，可以使用镊子夹起钢网，再重新加热，并利用重力让锡球脱离钢网。</li>
</ul>
</li>
</ul>
<h1 id="U盘的拆解">9 &nbsp&nbsp<a href="#U盘的拆解" class="headerlink" title="U盘的拆解"></a>U盘的拆解</h1><h2 id="推拉U盘的拆解">9.1 &nbsp&nbsp<a href="#推拉U盘的拆解" class="headerlink" title="推拉U盘的拆解"></a>推拉U盘的拆解</h2><div class="flex-column">
<img data-src="/images/pcb/ktc-usb.webp">金士顿推拉U盘示意图</div>

<p>大部分推拉U盘的拆解，直接将推拉外壳往外使劲一拉就能拆掉。但这种拆卸方法可能会导致外壳内侧的突起卡扣点被破坏，从而导致安装回去的推拉外壳内侧没有卡点导致失去原来的推拉限位功能。</p>
<p>有帖子教学无损拆解，是使用订书钉或者回形针（钳子拉直）插到外壳两侧的条形凹槽，然后将推拉外壳退回最内侧，使长针卡进外壳内侧，然后将外壳往外使劲一拉。</p>
<p>在拆掉推拉外壳之后，内部塑料壳就是基础的四侧卡扣结构，直接从USB口那侧用撬片撬开<code>人</code>字形后，就可取出U盘的PCB板。</p>
<h1 id="参考文献">10 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 触摸传感器 - 从零开始认识各种传感器【第五期】[EB&#x2F;OL]. <a href="https://blog.csdn.net/m0_61036291/article/details/140498200">https://blog.csdn.net/m0_61036291/article/details/140498200</a>.</p>
]]></content>
      <categories>
        <category>cad</category>
      </categories>
      <tags>
        <tag>PCB</tag>
        <tag>电路</tag>
        <tag>设计</tag>
      </tags>
  </entry>
  <entry>
    <title>维修工具</title>
    <url>/cad/repair-tools/</url>
    <content><![CDATA[<ul>
<li>可调电源：检测电流，电压。接入机器才会显示电流。可剪断电源正极的通用口线，自己做一个开关。（防止弄坏电源机械开关，有些机器待机电流也偏大，不宜频繁开关？）通用口可接特定的接口，可接不同厂商的机器。</li>
<li>烙铁</li>
<li>热风枪</li>
<li>万用表，打值卡，假负载，诊断卡</li>
<li>示波器：主要是供电和信号，不是频率</li>
<li>BGA返修台</li>
</ul>
<h1 id="参考文献">1 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>cad</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>维修</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>电路仿真设计</title>
    <url>/cad/simulation/</url>
    <content><![CDATA[<h1 id="Proteus仿真">1 &nbsp&nbsp<a href="#Proteus仿真" class="headerlink" title="Proteus仿真"></a>Proteus仿真</h1><h2 id="仿真时时间流动过慢">1.1 &nbsp&nbsp<a href="#仿真时时间流动过慢" class="headerlink" title="仿真时时间流动过慢"></a>仿真时时间流动过慢</h2><p>可能存在的原因：</p>
<ul>
<li>计算机性能不够，导致运行proteus仿真过慢</li>
<li>proteus内设置的晶振频率和keil源码编译时设置的晶振频率不同</li>
</ul>
<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] proteus 8 仿真时 时间流动过慢的解决方案[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_44176696/article/details/106875850">https://blog.csdn.net/weixin_44176696/article/details/106875850</a>.</p>
]]></content>
      <categories>
        <category>cad</category>
      </categories>
      <tags>
        <tag>电路</tag>
        <tag>仿真</tag>
      </tags>
  </entry>
  <entry>
    <title>Bash Shell总结笔记</title>
    <url>/code/bash/</url>
    <content><![CDATA[<h1 id="Bash-的简介">1 &nbsp&nbsp<a href="#Bash-的简介" class="headerlink" title="Bash 的简介"></a>Bash 的简介</h1><p>Shell是一种特殊的交互式工具，它为用户提供了启动程序、管理文件系统中的文件以及运行在Linux系统上的进程的途径。通过命令行提示符<code>$</code>，它允许用户输入文本命令，然后解释命令，并在内核中执行。</p>
<p>Bash是GNU项目的shell，即Bourne Again SHell。这是一个由Bourne shell（sh）发展而来的shell，并且兼容sh，包含不少korn shell（ksh）和c shell（csh）的优点。大部分Linux发行版都预装了bash，并且大多数sh脚本（由多个shell命令组成的文件）无需修改即可通过bash运行。</p>
<h1 id="shell提示符">2 &nbsp&nbsp<a href="#shell提示符" class="headerlink" title="shell提示符"></a>shell提示符</h1><p>shell命令行界面（CLI）</p>
<h1 id="bash的配置">3 &nbsp&nbsp<a href="#bash的配置" class="headerlink" title="bash的配置"></a>bash的配置</h1><p>source ~&#x2F;.bashrc<br>source ~&#x2F;.profile<br>echo &#39;export APP&#x3D;&#x2F;opt&#x2F;tinyos-2.x&#x2F;apps&#39; &gt;&gt; ~&#x2F;.bashrc</p>
<h2 id="删除Git-Bash历史记录">3.1 &nbsp&nbsp<a href="#删除Git-Bash历史记录" class="headerlink" title="删除Git Bash历史记录"></a>删除Git Bash历史记录</h2><p>在<code>%USERPROFILE%</code>（用户配置路径）下找到.bash_history删除即可。</p>
<h1 id="参数表达式">4 &nbsp&nbsp<a href="#参数表达式" class="headerlink" title="参数表达式"></a><a href="https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html">参数表达式</a></h1><h2 id="前缀和后缀的获取">4.1 &nbsp&nbsp<a href="#前缀和后缀的获取" class="headerlink" title="前缀和后缀的获取"></a>前缀和后缀的获取</h2><p><code>$&#123;file%.*&#125;</code>：移除最后一个点之后的内容<br><code>$&#123;file%%.*&#125;</code>：移除第一个点之后的内容<br><code>$&#123;file#*.&#125;</code>：移除第一个点之前的内容<br><code>$&#123;file##*.&#125;</code>：移除最后一个点之前的内容</p>
<h1 id="test">5 &nbsp&nbsp<a href="#test" class="headerlink" title="test"></a>test</h1><p>test可以与&amp;&amp;组成一个条件判断，无需用if命令。</p>
<h1 id="case">6 &nbsp&nbsp<a href="#case" class="headerlink" title="case"></a>case</h1><p>case命令，无法使用test命令。<br>case不能用正则表达，只用<a href="http://www.gnu.org/software/bash/manual/bashref.html#Pattern-Matching">样式匹配</a>。</p>
<h1 id="删除特定目录下所有文件，但排除部分文件">7 &nbsp&nbsp<a href="#删除特定目录下所有文件，但排除部分文件" class="headerlink" title="删除特定目录下所有文件，但排除部分文件"></a>删除特定目录下所有文件，但排除部分文件</h1><p><code>find /path/to/directory -type f ! -name &#39;file_prefix*&#39; | xargs rm -rf</code></p>
<h1 id="Bash脚本加密解密">8 &nbsp&nbsp<a href="#Bash脚本加密解密" class="headerlink" title="Bash脚本加密解密"></a>Bash脚本加密解密</h1><p><a href="https://www.jb51.net/article/216095.htm">https://www.jb51.net/article/216095.htm</a><br><a href="https://www.qcgzxw.cn/575.html">https://www.qcgzxw.cn/575.html</a></p>
<h1 id="文本编辑">9 &nbsp&nbsp<a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h1><h2 id="编辑并同时备份的命令">9.1 &nbsp&nbsp<a href="#编辑并同时备份的命令" class="headerlink" title="编辑并同时备份的命令"></a>编辑并同时备份的命令</h2><ul>
<li><code>set -i.bak</code>：编辑并同时创建一个<code>.bak</code>后缀的备份文件</li>
<li><code>sed -i_orig</code>：编辑并同时创建一个<code>_orig</code>后缀的备份文件</li>
</ul>
<h1 id="参考文献">10 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] BLUM R, BRESNAHAN C. Linux 命令行与 shell 脚本编程大全[M]. 门佳, 武海峰, 译. 3 版. 北京: 人民邮电出版社, 2016.<br>[2] GNU Bash[EB&#x2F;OL]. <a href="https://www.gnu.org/software/bash/">https://www.gnu.org/software/bash/</a>.<br>[3] Test variable in a bash case statement[EB&#x2F;OL]. <a href="https://unix.stackexchange.com/questions/205084/test%E2%80%91variable%E2%80%91in%E2%80%91a%E2%80%91bash%E2%80%91case%E2%80%91statement">https://unix.stackexchange.com/questions/205084/test‑variable‑in‑a‑bash‑case‑statement</a>.<br>[4] Regular expressions in a Bash case statement[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/9631335/regular%E2%80%91expressions%E2%80%91in%E2%80%91a%E2%80%91bash%E2%80%91case%E2%80%91statement">https://stackoverflow.com/questions/9631335/regular‑expressions‑in‑a‑bash‑case‑statement</a>.<br>[5] Adding suffix to filename during for loop in bash[EB&#x2F;OL]. <a href="https://unix.stackexchange.com/questions/600051/adding%E2%80%91suffix%E2%80%91to%E2%80%91filename%E2%80%91during%E2%80%91for%E2%80%91loop%E2%80%91in%E2%80%91bash">https://unix.stackexchange.com/questions/600051/adding‑suffix‑to‑filename‑during‑for‑loop‑in‑bash</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>bash</tag>
        <tag>shell</tag>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>终端</tag>
      </tags>
  </entry>
  <entry>
    <title>Bat&amp;Powershell语法总结笔记</title>
    <url>/code/bat-powershell/</url>
    <content><![CDATA[<div class="note danger no-icon"><p>温馨提示：远离BAT语法，幸福你我他(ಡωಡ)</p>
</div>

<h1 id="推荐链接">1 &nbsp&nbsp<a href="#推荐链接" class="headerlink" title="推荐链接"></a>推荐链接</h1><ul>
<li>微软文档：<a href="https://learn.microsoft.com/zh-cn/windows/win32/intl/code-page-identifiers">代码页标识符（chcp）</a></li>
<li><a href="https://ss64.com/nt/">CMD命令例程索引</a>：该网站的教程索引比微软官方文档好用。</li>
</ul>
<h1 id="检测并获取管理员权限">2 &nbsp&nbsp<a href="#检测并获取管理员权限" class="headerlink" title="检测并获取管理员权限"></a>检测并获取管理员权限</h1><h2 id="方式一：使用cacls工具检测权限">2.1 &nbsp&nbsp<a href="#方式一：使用cacls工具检测权限" class="headerlink" title="方式一：使用cacls工具检测权限"></a>方式一：使用cacls工具检测权限</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">@REM 检测权限：根据系统版本尝试访问系统文件路径</span></span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%PROCESSOR_ARCHITECTURE%</span>&quot; <span class="keyword">equ</span> &quot;amd64&quot; (</span><br><span class="line">    &quot;<span class="variable">%SYSTEMROOT%</span>\SysWOW64\<span class="built_in">cacls</span>.exe&quot; &quot;<span class="variable">%SYSTEMROOT%</span>\SysWOW64\config\system&quot; &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">    &quot;<span class="variable">%SYSTEMROOT%</span>\system32\<span class="built_in">cacls</span>.exe&quot; &quot;<span class="variable">%SYSTEMROOT%</span>\system32\config\system&quot; &gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 根据权限情况跳转标签</span></span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%errorlevel%</span>&quot; <span class="keyword">neq</span> &quot;<span class="number">0</span>&quot; (</span><br><span class="line">    <span class="built_in">echo</span> 当前检测无管理员权限。正在请求管理员权限...</span><br><span class="line">    <span class="built_in">echo</span>.</span><br><span class="line">    <span class="keyword">goto</span> uac_prompt</span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">    <span class="keyword">goto</span> got_admin</span><br><span class="line">)</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 获取管理员权限</span></span><br><span class="line">:uac_prompt</span><br><span class="line">powershell -Command &quot;<span class="built_in">Start</span>-Process -Verb RunAs -FilePath &#x27;%<span class="number">0</span>&#x27; -ArgumentList &#x27;am_admin&#x27;&quot;</span><br><span class="line"><span class="keyword">exit</span> /b</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM &quot;已获取管理员权限，存储当前目录并切换到脚本程序目录&quot;</span></span><br><span class="line">:got_admin</span><br><span class="line"><span class="built_in">pushd</span> &quot;<span class="variable">%cd%</span>&quot;</span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="方式二：使用fsutil-dirty-query检测权限">2.2 &nbsp&nbsp<a href="#方式二：使用fsutil-dirty-query检测权限" class="headerlink" title="方式二：使用fsutil dirty query检测权限"></a>方式二：使用fsutil dirty query检测权限</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">set</span> &quot;params=%*&quot;</span><br><span class="line"><span class="built_in">cd</span> /d &quot;%~dp0&quot; &amp;&amp; ( <span class="keyword">if</span> <span class="keyword">exist</span> &quot;<span class="variable">%temp%</span>\getadmin.vbs&quot; <span class="built_in">del</span> &quot;<span class="variable">%temp%</span>\getadmin.vbs&quot; ) &amp;&amp;  <span class="variable">%systemdrive%</span> <span class="number">1</span>&gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span> || (  <span class="built_in">echo</span> <span class="built_in">Set</span> UAC = CreateObject^(&quot;Shell.Application&quot;^) : UAC.ShellExecute &quot;<span class="built_in">cmd</span>.exe&quot;, &quot;/c <span class="built_in">cd</span> &quot;&quot;%~sdp0&quot;&quot; &amp;&amp; %~s0 <span class="variable">%params%</span>&quot;, &quot;&quot;, &quot;runas&quot;, <span class="number">1</span> &gt;&gt; &quot;<span class="variable">%temp%</span>\getadmin.vbs&quot; &amp;&amp; &quot;<span class="variable">%temp%</span>\getadmin.vbs&quot; &amp;&amp; <span class="keyword">exit</span> /B )</span><br><span class="line">@<span class="built_in">echo</span> off &amp; <span class="built_in">title</span> Install latest office &amp; <span class="built_in">color</span> <span class="number">70</span></span><br><span class="line">@<span class="built_in">chcp</span> <span class="number">65001</span>&gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">cd</span> /d %~dp0</span><br></pre></td></tr></table></figure>

<h2 id="方式三：提权到System权限">2.3 &nbsp&nbsp<a href="#方式三：提权到System权限" class="headerlink" title="方式三：提权到System权限"></a>方式三：提权到System权限</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">@REM 获取管理员权限</span></span><br><span class="line">:uac_prompt</span><br><span class="line">powershell -ep bypass &quot;Install-Module -Name NtObjectManager;<span class="built_in">start</span>-Win32ChildProcess <span class="built_in">cmd</span>&quot;</span><br><span class="line"><span class="keyword">exit</span> /b</span><br></pre></td></tr></table></figure>

<h1 id="提权并传递参数">3 &nbsp&nbsp<a href="#提权并传递参数" class="headerlink" title="提权并传递参数"></a>提权并传递参数</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">@REM 提权之前先保存当前的命令行参数</span></span><br><span class="line"><span class="comment">@REM 保存命令行参数到txt文件</span></span><br><span class="line"><span class="built_in">set</span> commandline_argument=%*</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%commandline_argument%</span> &gt; &quot;__temp__argument.txt&quot;</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 提权代码《检测并获取管理员权限》</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 重新读取参数</span></span><br><span class="line"><span class="comment">@REM 读取txt文件中的首个参数</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>&quot; <span class="variable">%%c</span> <span class="keyword">in</span> (__temp__argument.txt) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">set</span> get_argument=<span class="variable">%%c</span></span><br><span class="line">    <span class="keyword">goto</span> activate</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h1 id="打印输出">4 &nbsp&nbsp<a href="#打印输出" class="headerlink" title="打印输出"></a>打印输出</h1><h2 id="打印输出分割线">4.1 &nbsp&nbsp<a href="#打印输出分割线" class="headerlink" title="打印输出分割线"></a>打印输出分割线</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">:draw_line</span><br><span class="line"><span class="comment">@REM 局部环境设置打印的符号和数量，并传递到全局环境draw_line_chars变量中</span></span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="comment">@REM 查询当前终端窗口的列数大小，delims后面:之后没有空格，或者有多个空格都是一样的效果，它无法trim多余的空格。并且:后面不能单独加一个空格，否则无法正确获取。</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">2</span> delims=:&quot; <span class="variable">%%c</span> <span class="keyword">in</span> (&#x27;<span class="built_in">mode</span> <span class="built_in">con</span> ^| <span class="built_in">findstr</span> &quot;列&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> cols=<span class="variable">%%c</span></span><br><span class="line"><span class="comment">@REM 移除变量中左边多余的空格</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=* delims=: &quot; <span class="variable">%%c</span> <span class="keyword">in</span> (&#x27;<span class="built_in">echo</span> <span class="variable">%cols%</span>&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> cols=<span class="variable">%%c</span></span><br><span class="line"><span class="built_in">set</span> &quot;char=%~<span class="number">1</span>&quot;</span><br><span class="line"><span class="built_in">set</span> /a &quot;count=<span class="variable">%cols%</span>&quot;</span><br><span class="line"><span class="built_in">set</span> &quot;line=&quot;</span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="variable">%count%</span>) <span class="keyword">do</span> <span class="built_in">set</span> &quot;line=<span class="variable">!line!</span><span class="variable">%char%</span>&quot;</span><br><span class="line"><span class="built_in">endlocal</span> &amp; <span class="built_in">set</span> &quot;draw_line_chars=<span class="variable">%line%</span>&quot;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%draw_line_chars%</span></span><br><span class="line"><span class="keyword">exit</span> /b</span><br></pre></td></tr></table></figure>

<h2 id="打印输出当前时间">4.2 &nbsp&nbsp<a href="#打印输出当前时间" class="headerlink" title="打印输出当前时间"></a>打印输出当前时间</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">:log</span><br><span class="line"><span class="built_in">setlocal</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>-<span class="number">3</span> delims=/ &quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">date</span> /t&#x27;) <span class="keyword">do</span> (<span class="built_in">set</span> &quot;yy=<span class="variable">%%a</span>&quot; &amp; <span class="built_in">set</span> &quot;mm=<span class="variable">%%b</span>&quot; &amp; <span class="built_in">set</span> &quot;dd=<span class="variable">%%c</span>&quot;)</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>-<span class="number">3</span> delims=:.&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">echo</span> <span class="variable">%time%</span>&#x27;) <span class="keyword">do</span> (<span class="built_in">set</span> &quot;hh=<span class="variable">%%a</span>&quot; &amp; <span class="built_in">set</span> &quot;mn=<span class="variable">%%b</span>&quot; &amp; <span class="built_in">set</span> &quot;ss=<span class="variable">%%c</span>&quot;)</span><br><span class="line"><span class="built_in">set</span> time_stamp=<span class="variable">%yy%</span>-<span class="variable">%mm%</span>-<span class="variable">%dd%</span>T<span class="variable">%hh%</span>:<span class="variable">%mn%</span>:<span class="variable">%ss%</span>+<span class="number">08</span>:<span class="number">00</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%time_stamp%</span> %~<span class="number">1</span></span><br><span class="line"><span class="built_in">endlocal</span></span><br><span class="line"><span class="keyword">exit</span> /b</span><br></pre></td></tr></table></figure>

<h1 id="特殊字符">5 &nbsp&nbsp<a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h1><p>bat中有部分特殊字符，例如<code>()&lt;&gt;&amp;|</code>之类的，若需要输出打印特殊字符到终端控制台，则需要转义符号<code>^</code>。如果传递变量值时需要转义的话，以<code>&amp;</code>符号为例，一般写法为<code>^^^&amp;</code>，<code>^^</code>转义为<code>^</code>，<code>^&amp;</code>转义为<code>&amp;</code>。</p>
<p>在本人代码实践中，如果使用使用双引号去设置变量的话，例如<code>set &quot;val=Mr. Kin ^^^&lt;im.misterkin@gmail.com^^^&gt;&quot;</code>，传递过程中仍会出现解析异常，导致运行错误。如果不用双引号，直接使用单<code>^</code>符号直接转义，例如<code>set val=^&lt;im.misterkin@gmail.com^&gt;</code>则完全没问题。这点令人十分困扰。</p>
<h1 id="字符串的处理">6 &nbsp&nbsp<a href="#字符串的处理" class="headerlink" title="字符串的处理"></a>字符串的处理</h1><h2 id="字符串的截取">6.1 &nbsp&nbsp<a href="#字符串的截取" class="headerlink" title="字符串的截取"></a>字符串的截取</h2><p><code>%variable:~n,m%</code></p>
<ul>
<li>n：开始截取字符串的偏移量；如果为正数，则从左边开始；如果没有为负数，则从右边开始</li>
<li>m：要截取字符的个数。如果没有指定个数，则采用默认值，即变量数值的余数（余数指剩余个数，如：%variable:~-5% 当前偏移量为倒数第6，将剩下的字符全部截取）。如果两个数字 (偏移量和长度) 都是负数，使用的数字则是字符串长度加上指定的偏移量或长度（参见实例2）。</li>
</ul>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> ifo=abcdefghijklmnopqrstuvwxyz0123456789</span><br><span class="line"><span class="built_in">echo</span> 原字符串：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo%</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem abcde</span></span><br><span class="line"><span class="built_in">echo</span> 截取前<span class="number">5</span>个字符：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~0,5%</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem fghijklmnopqrstuvwxyz0123456789</span></span><br><span class="line"><span class="built_in">echo</span> 截取第六个字符直到最后一个字符</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~5%</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 56789</span></span><br><span class="line"><span class="built_in">echo</span> 截取最后<span class="number">5</span>个字符：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~-5%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~-5,5%</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem abcdefghijklmnopqrstuvwxyz01234</span></span><br><span class="line"><span class="built_in">echo</span> 截取第一个到倒数第<span class="number">6</span>个字符：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~0,-5%</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem defgh</span></span><br><span class="line"><span class="built_in">echo</span> 从第<span class="number">4</span>个字符开始，截取<span class="number">5</span>个字符：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~3,5%</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem wxyz0</span></span><br><span class="line"><span class="built_in">echo</span> 从倒数第<span class="number">14</span>个字符开始，截取<span class="number">5</span>个字符：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%ifo:~-14,5%</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串的字符替换">6.2 &nbsp&nbsp<a href="#字符串的字符替换" class="headerlink" title="字符串的字符替换"></a>字符串的字符替换</h2><p>BAT语法：<code>%variable:str1=str2%</code>，缺陷：用以文本文件中整行处理中可能无法处理一些特殊字符，导致丢失某些内容。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">@REM 替换str中的xxx为yyy</span></span><br><span class="line"><span class="built_in">set</span> str2=<span class="variable">%str:xxx=yyy%</span></span><br></pre></td></tr></table></figure>

<p>POWERSHELL语法：<code>(Get-Content -Path &#39;%file_path%&#39;) -replace &#39;%search_string%&#39;, &#39;%replace_string%&#39; | Set-Content -Path &#39;%file_path%&#39;</code>，缺陷：用以文本文件中整行处理中可能无法处理一些特殊字符，导致丢失某些内容。不过比BAT语法使用起来更简单，而且无需特殊处理也能保留空格和换行符。推荐只修改特定字符串，<code>%search_string%</code>无需填入过多的字符，例如将17改为20，只需搜索17字符串即可。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">powershell -Command &quot;(Get-Content -<span class="built_in">Path</span> &#x27;<span class="variable">%file_path%</span>&#x27;) -<span class="built_in">replace</span> &#x27;<span class="variable">%search_string%</span>&#x27;, &#x27;<span class="variable">%replace_string%</span>&#x27; | <span class="built_in">Set</span>-Content -<span class="built_in">Path</span> &#x27;<span class="variable">%file_path%</span>&#x27;&quot;</span><br></pre></td></tr></table></figure>

<h2 id="去掉变量字符串中的空格">6.3 &nbsp&nbsp<a href="#去掉变量字符串中的空格" class="headerlink" title="去掉变量字符串中的空格"></a>去掉变量字符串中的空格</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> abc=                          aaabbbccc</span><br><span class="line">:delleft</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%abc:~0,1%</span>&quot;==&quot; &quot; <span class="built_in">set</span> abc=<span class="variable">%abc:~1%</span>&amp;&amp;<span class="keyword">goto</span> delleft</span><br><span class="line"><span class="built_in">echo</span> 去掉左边空格:<span class="variable">%abc%</span></span><br><span class="line"><span class="built_in">set</span> abc=aaabbbccc</span><br><span class="line">:delright</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%abc:~-1%</span>&quot;==&quot; &quot; <span class="built_in">set</span> abc=<span class="variable">%abc:~0,-1%</span>&amp;&amp;<span class="keyword">goto</span> delright</span><br><span class="line"><span class="built_in">echo</span> 去掉右边空格:<span class="variable">%abc%</span></span><br><span class="line"><span class="comment">@REM 去除所有空格，使用的方式就是字符替换</span></span><br><span class="line"><span class="built_in">set</span> abc=        aaa     bbb       ccc</span><br><span class="line"><span class="built_in">set</span> &quot;abc=%abc: =%&quot;</span><br><span class="line"><span class="built_in">echo</span> 去掉所有空格:<span class="variable">%abc%</span></span><br></pre></td></tr></table></figure>

<h1 id="读取内容">7 &nbsp&nbsp<a href="#读取内容" class="headerlink" title="读取内容"></a>读取内容</h1><p>“<code>for /f</code>”常用来解析文本，读取字符串。</p>
<ul>
<li><code>delims</code>参数负责切分字符串，指定分隔符。内容会根据实际分隔符分隔开。</li>
<li><code>tokens</code>负责提取字符串，指提取的列数。例如<code>tokens=12-4</code>，表示提取第1列，第2列至第4列的内容，有多少列就要有多少个输出变量，并且各变量中的字母存在先后顺序。第一个变量字母是自己定义的，推荐是使用<code>%%a</code>，这样第二个列就是用<code>%%b</code>来表示。<code>m*</code>表示提取第m列和第m列之后的所有字符。</li>
</ul>
<h2 id="读取首行内容">7.1 &nbsp&nbsp<a href="#读取首行内容" class="headerlink" title="读取首行内容"></a>读取首行内容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /f &quot;usebackq delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&quot;<span class="variable">!drive!</span>\<span class="variable">!config_file!</span>&quot;) <span class="keyword">do</span> <span class="built_in">set</span> &quot;image_name=<span class="variable">%%a</span>&quot;</span><br></pre></td></tr></table></figure>

<h2 id="读取特定行数内容">7.2 &nbsp&nbsp<a href="#读取特定行数内容" class="headerlink" title="读取特定行数内容"></a>读取特定行数内容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /f &quot;tokens=* delims=&quot; <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;diskpart /s auto_partition_opts ^| <span class="built_in">findstr</span> /n &quot;^&quot; ^| <span class="built_in">findstr</span> &quot;^<span class="number">9</span>:&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> disk_model_name=<span class="variable">%%i</span></span><br></pre></td></tr></table></figure>

<h2 id="读取全部内容">7.3 &nbsp&nbsp<a href="#读取全部内容" class="headerlink" title="读取全部内容"></a>读取全部内容</h2><p><code>FOR /F</code>默认是不会返回空行，因为该命令本身设计就是如此。</p>
<p>若想实现完全读取，可以使用findstr对文本内容先赋予一个行号，再逐行读取。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">::preserve blank lines using <span class="built_in">FIND</span>, assume no line starts with ]</span><br><span class="line">::long lines are truncated</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>* delims=]&quot; <span class="variable">%%A</span> <span class="keyword">in</span> (&#x27;<span class="built_in">type</span> &quot;file.txt&quot; ^| <span class="built_in">find</span> /n /v &quot;&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%B</span></span><br><span class="line"></span><br><span class="line">::preserve blank lines using <span class="built_in">FINDSTR</span>, assume no line starts with :</span><br><span class="line">::long lines &gt; <span class="number">8191</span> bytes are lost</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>* delims=:&quot; <span class="variable">%%A</span> <span class="keyword">in</span> (&#x27;<span class="built_in">type</span> &quot;file.txt&quot; ^| <span class="built_in">findstr</span> /n &quot;^&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%B</span></span><br><span class="line"></span><br><span class="line">::<span class="built_in">FINDSTR</span> variant that preserves long lines</span><br><span class="line"><span class="built_in">type</span> &quot;file.txt&quot; &gt; &quot;file.txt.tmp&quot;</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>* delims=:&quot; <span class="variable">%%A</span> <span class="keyword">in</span> (&#x27;<span class="built_in">findstr</span> /n &quot;^&quot; &quot;file.txt.tmp&quot;&#x27;) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%B</span></span><br><span class="line"><span class="built_in">del</span> &quot;file.txt.tmp&quot;</span><br></pre></td></tr></table></figure>


<h1 id="判断网络连通状态执行不同命令">8 &nbsp&nbsp<a href="#判断网络连通状态执行不同命令" class="headerlink" title="判断网络连通状态执行不同命令"></a>判断网络连通状态执行不同命令</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> www.baidu.com -n <span class="number">3</span> | <span class="built_in">findstr</span> &quot;TTL&quot; &gt;<span class="built_in">nul</span> &amp;&amp; <span class="keyword">goto</span> network_well || <span class="keyword">goto</span> network_bad</span><br></pre></td></tr></table></figure>

<h1 id="将批处理运行结果显示并保存到文件">9 &nbsp&nbsp<a href="#将批处理运行结果显示并保存到文件" class="headerlink" title="将批处理运行结果显示并保存到文件"></a>将批处理运行结果显示并保存到文件</h1><h2 id="wtee方案">9.1 &nbsp&nbsp<a href="#wtee方案" class="headerlink" title="wtee方案"></a>wtee方案</h2><p>linux上有tee命令可以实现这个目的，wtee程序则是windows实现的tee版本。</p>
<ul>
<li><a href="https://code.google.com/archive/p/wintee/downloads">wintee</a></li>
<li><a href="https://code.google.com/archive/p/wintee/wikis/FAQ.wiki">wintee 文档</a></li>
</ul>
<h2 id="临时文件中转方案">9.2 &nbsp&nbsp<a href="#临时文件中转方案" class="headerlink" title="临时文件中转方案"></a>临时文件中转方案</h2><p>原理：使用call将想要输出结果输出到临时文件，之后进行：</p>
<ol>
<li>先清屏，将临时文本内容显示，实现窗口显示的本次运行结果的功能。</li>
<li>将临时文本内容追加到日志文件用于保存。</li>
<li>删除临时文件。</li>
</ol>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> a.bat &gt; log2.txt</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%i</span> <span class="keyword">in</span> (log2.txt) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">type</span> log2.txt &gt;&gt; log.txt</span><br><span class="line"><span class="built_in">del</span> log2.txt</span><br></pre></td></tr></table></figure>

<h1 id="数组">10 &nbsp&nbsp<a href="#数组" class="headerlink" title="数组"></a>数组</h1><p>创建数组：<code>set a[0]=1</code></p>
<p>定义值列表并遍历值列表：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> list=<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">(<span class="keyword">for</span> <span class="variable">%%a</span> <span class="keyword">in</span> (<span class="variable">%list%</span>) <span class="keyword">do</span> (</span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">%%a</span></span><br><span class="line">))</span><br></pre></td></tr></table></figure>

<p>遍历数组：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="built_in">set</span> topic[<span class="number">0</span>]=comments</span><br><span class="line"><span class="built_in">set</span> topic[<span class="number">1</span>]=variables</span><br><span class="line"><span class="built_in">set</span> topic[<span class="number">2</span>]=Arrays</span><br><span class="line"><span class="built_in">set</span> topic[<span class="number">3</span>]=Decision making</span><br><span class="line"><span class="built_in">set</span> topic[<span class="number">4</span>]=<span class="built_in">Time</span> and <span class="built_in">date</span></span><br><span class="line"><span class="built_in">set</span> topic[<span class="number">5</span>]=Operators</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM for /L %%变量 in (起始值，每次增值，结束时的比较值) do 命令 ，in (0,1,5) 会生成一个序列 [0,1,2,3,4]</span></span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%n</span> <span class="keyword">in</span> (<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> (</span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">!topic[%%n]!</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>计算数组长度：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> Arr[<span class="number">0</span>]=<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> Arr[<span class="number">1</span>]=<span class="number">2</span></span><br><span class="line"><span class="built_in">set</span> Arr[<span class="number">2</span>]=<span class="number">3</span></span><br><span class="line"><span class="built_in">set</span> Arr[<span class="number">3</span>]=<span class="number">4</span></span><br><span class="line"><span class="built_in">set</span> &quot;x=<span class="number">0</span>&quot;</span><br><span class="line">:SymLoop</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">defined</span> Arr[<span class="variable">%x%</span>] (</span><br><span class="line">   <span class="keyword">call</span> <span class="built_in">echo</span> <span class="variable">%%A</span>rr[<span class="variable">%x%</span>]<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>   <span class="built_in">set</span> /a &quot;x+=<span class="number">1</span>&quot;</span><br><span class="line">   <span class="keyword">GOTO</span> :SymLoop</span><br><span class="line">)</span><br><span class="line"><span class="built_in">echo</span> &quot;The length of the array is&quot; <span class="variable">%x%</span></span><br></pre></td></tr></table></figure>

<p>数组结构体：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> obj[<span class="number">0</span>].Name=Joe</span><br><span class="line"><span class="built_in">set</span> obj[<span class="number">0</span>].ID=<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> obj[<span class="number">1</span>].Name=Mark</span><br><span class="line"><span class="built_in">set</span> obj[<span class="number">1</span>].ID=<span class="number">2</span></span><br><span class="line"><span class="built_in">set</span> obj[<span class="number">2</span>].Name=Mohan</span><br><span class="line"><span class="built_in">set</span> obj[<span class="number">2</span>].ID=<span class="number">3</span></span><br><span class="line"><span class="keyword">FOR</span> /L <span class="variable">%%i</span> <span class="keyword">IN</span> (<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>) <span class="keyword">DO</span>  (</span><br><span class="line">   <span class="keyword">call</span> <span class="built_in">echo</span> Name = <span class="variable">%%o</span>bj[<span class="variable">%%i</span>].Name<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>   <span class="keyword">call</span> <span class="built_in">echo</span> Value = <span class="variable">%%o</span>bj[<span class="variable">%%i</span>].ID<span class="variable">%%</span></span><br><span class="line"><span class="variable"></span>)</span><br></pre></td></tr></table></figure>

<h1 id="setlocal和endlocal的作用域">11 &nbsp&nbsp<a href="#setlocal和endlocal的作用域" class="headerlink" title="setlocal和endlocal的作用域"></a>setlocal和endlocal的作用域</h1><p>在setlocal和endlocal语句内的set变量，是属于局部变量。</p>
<p>如果用setlocal enabledelayedexpansion设置了延迟环境变量扩展，需要使用<code>!variable!</code>来引用变量。</p>
<h1 id="生成特定命令的批处理帮助文件">12 &nbsp&nbsp<a href="#生成特定命令的批处理帮助文件" class="headerlink" title="生成特定命令的批处理帮助文件"></a>生成特定命令的批处理帮助文件</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> on</span><br><span class="line">:z</span><br><span class="line">@<span class="built_in">cls</span></span><br><span class="line">@<span class="built_in">set</span> /p &quot;d=输入要BAT指令:&quot;</span><br><span class="line">@ <span class="variable">%d%</span> /? &gt; <span class="variable">%d%</span>.txt</span><br><span class="line"><span class="keyword">goto</span> z</span><br></pre></td></tr></table></figure>

<h1 id="字符集引起的“is-not-recognized-as-an-internal-or-external-command”">13 &nbsp&nbsp<a href="#字符集引起的“is-not-recognized-as-an-internal-or-external-command”" class="headerlink" title="字符集引起的“is not recognized as an internal or external command”"></a>字符集引起的“is not recognized as an internal or external command”</h1><p>知识背景：系统终端默认的字符集是ANSI，但ANSI并非某一种特定的字符编码，在不同的系统中，ANSI表示不同的编码。比如原生英文系统的ANSI编码是ASCII编码，原生中文系统的ANSI编码是GBK编码。（code page实际是由系统的「区域和语言」控制的）</p>
<p>问题现象：当bat程序脚本文件本身用默认的utf-8编码保存，并且使用命令<code>@chcp 65001&gt;nul</code>切换代码页，仍然有概率执行是会导致<code>echo</code>命令在输出中文出现解析错误，提示“is not recognized as an internal or external command”，比如使用注释命令<code>@rem 中文注释</code>之后，再使用<code>echo</code>打印输出中文时就出现解析错乱。</p>
<p>问题原因：具体引起的原因未知，目前猜测是当脚本程序执行不少命令之后，环境变量可能会出现错乱，导致部分命令解析失败。</p>
<p>解决方法有两种：</p>
<ul>
<li>在<code>@rem 中文注释</code>命令之后重新执行<code>@chcp 65001&gt;nul</code>即可确保后面的命令正确解析执行。</li>
<li>将所有文件编码改为ANSI编码，比如简中系统，使用GBK编码。</li>
</ul>
<h1 id="在命令提示符中运行-PowerShell-命令">14 &nbsp&nbsp<a href="#在命令提示符中运行-PowerShell-命令" class="headerlink" title="在命令提示符中运行 PowerShell 命令"></a>在命令提示符中运行 PowerShell 命令</h1><p>命令形式：<code>powershell -command &quot;xxx&quot;</code></p>
<p>如果命令中有双引号，记得使用反斜杠转义双引号字符，避免最外层的双引号和里面的双引号一起被匹配解析。在PowerShell语法中，双引号 &quot;&quot; 视为文字字符串值的。因此需要确保符号被正确解析。</p>
<h1 id="语法问题">15 &nbsp&nbsp<a href="#语法问题" class="headerlink" title="语法问题"></a>语法问题</h1><h2 id="与equ的对比区别">15.1 &nbsp&nbsp<a href="#与equ的对比区别" class="headerlink" title="==与equ的对比区别"></a><code>==</code>与<code>equ</code>的对比区别</h2><ul>
<li><code>==</code>是用来比较相同的，即比较字符串是否完全相同的。</li>
<li><code>EQU</code>是比较运算符，含有运算的功能，换句话说，是可以在比较之前转换数字为对应的数值，然后再比较。</li>
</ul>
<p>数值是指十进制的数字，在前缀加 <code>0×</code> （这里x忽略大小写）则表示十六进制数字，加 <code>0</code> 则表示八进制数字。因此，<code>0x12</code> 与 <code>18</code> 相同，也与 <code>022</code> 相同，八进制表示法容易引起混淆。例如，<code>08</code> 和 <code>09</code> 不是有效数字，因为 <code>8</code> 和 <code>9</code> 不是有效的八进制数字。</p>
<p>所以，在使用 <code>==</code> 比较时，<code>0x12</code>、<code>022</code>和<code>18</code>是不相等的，但在使用<code>EQU</code>比较时，他们是相等的，因为他们对应的数值都是<code>18</code>！</p>
<h1 id="ps脚本无法运行">16 &nbsp&nbsp<a href="#ps脚本无法运行" class="headerlink" title="ps脚本无法运行"></a>ps脚本无法运行</h1><p>出于安全考虑，默认的 Windows PowerShell 策略不允许执行脚本。</p>
<p>设置运行策略：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-ExecutionPolicy</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> unrestricted</span><br><span class="line"><span class="comment"># Restricted：默认设置，不允许运行任何脚本</span></span><br><span class="line"><span class="comment"># AllSigned：仅运行受信任脚本</span></span><br><span class="line"><span class="comment"># RemoteSigned：运行本地脚本，不管这些脚本是否受信任</span></span><br><span class="line"><span class="comment"># Unrestricted：允许运行所有脚本，甚至是不受信任的</span></span><br></pre></td></tr></table></figure>

<h1 id="终端Terminal总结">17 &nbsp&nbsp<a href="#终端Terminal总结" class="headerlink" title="终端Terminal总结"></a>终端Terminal总结</h1><h2 id="Windows11运行BAT脚本时，终端Terminal提示报错：无法加载设置">17.1 &nbsp&nbsp<a href="#Windows11运行BAT脚本时，终端Terminal提示报错：无法加载设置" class="headerlink" title="Windows11运行BAT脚本时，终端Terminal提示报错：无法加载设置"></a>Windows11运行BAT脚本时，终端Terminal提示报错：无法加载设置</h2><p>报错提示：无法加载设置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无法从文件加载设置。检查语法错误，包括尾部的逗号。</span><br><span class="line">* Line1, Column 1</span><br><span class="line">Syntax error: value, object or array expected.</span><br><span class="line">暂时使用 Windows 终端默认设置。</span><br></pre></td></tr></table></figure>

<p>问题原因：报错原因可能不在于脚本文件，而是在于终端Terminal设置本身。终端Terminal的设置文件JSON文件无法正常读取，例如文件全是NULL条目，从而引起该问题。</p>
<p>解决方法：<br>移除文件<code>%USERPROFILE\AppData\Local\Packages\Microsoft.WindowsTerminal_8wekybd8bbwe\LocalState\settings.json</code>内所有内容，让终端Terminal重新自动生成新的配置项。</p>
<h1 id="参考文献">18 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] How to request Administrator access inside a batch file[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/1894967/how%E2%80%91to%E2%80%91request%E2%80%91administrator%E2%80%91access%E2%80%91inside%E2%80%91a%E2%80%91batch%E2%80%91file">https://stackoverflow.com/questions/1894967/how‑to‑request‑administrator‑access‑inside‑a‑batch‑file</a>.<br>[2] How to write a batch file can run parameters as command with administrative privi‑leges?[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/38364617/how%E2%80%91to%E2%80%91write%E2%80%91a%E2%80%91batch%E2%80%91file%E2%80%91can%E2%80%91run%E2%80%91parameters%E2%80%91as%E2%80%91command%E2%80%91with%E2%80%91administrative%E2%80%91priv">https://stackoverflow.com/questions/38364617/how‑to‑write‑a‑batch‑file‑can‑run‑parameters‑as‑command‑with‑administrative‑priv</a>.<br>[3] 批处理通过 ping 判断网络[EB&#x2F;OL]. <a href="https://www.52pojie.cn/thread-1021861-1-1.html">https://www.52pojie.cn/thread-1021861-1-1.html</a>.<br>[4] 批处理 ping命令判断是否可以连接到一个网站[EB&#x2F;OL]. <a href="https://lanlan2017.github.io/blog/318f3e6b/">https://lanlan2017.github.io/blog/318f3e6b/</a>.<br>[5] Windows10一句话从administrator权限提升到system权限[EB&#x2F;OL]. <a href="https://blog.csdn.net/mochu7777777/article/details/106842901">https://blog.csdn.net/mochu7777777/article/details/106842901</a>.<br>[6] 在命令提示符中运行 PowerShell 命令[EB&#x2F;OL]. <a href="https://www.delftstack.com/zh/howto/powershell/running-powershell-commands-in-cmd/">https://www.delftstack.com/zh/howto/powershell/running-powershell-commands-in-cmd/</a>.<br>[7] [系统相关] [已解决]批处理if中，&#x3D;&#x3D; 与equ 这2个，在什么情况下会有区别？[EB&#x2F;OL]. <a href="http://www.bathome.net/thread-15170-1-1.html">http://www.bathome.net/thread-15170-1-1.html</a>.<br>[8] cmd 字符串替换[EB&#x2F;OL]. <a href="https://blog.csdn.net/scimence/article/details/52816878">https://blog.csdn.net/scimence/article/details/52816878</a>.<br>[9] Bat 去掉变量字符串中的空格[EB&#x2F;OL]. <a href="https://blog.csdn.net/a71468293a/article/details/127747191">https://blog.csdn.net/a71468293a/article/details/127747191</a>.<br>[10] 字符串截取操作[EB&#x2F;OL]. <a href="https://www.hxstrive.com/subject/windows_bat/122.htm">https://www.hxstrive.com/subject/windows_bat/122.htm</a>.<br>[11] 在使用bat 批处理 时将运行结果显示并保存到文件中 echo[EB&#x2F;OL]. <a href="https://www.cnblogs.com/qiyuexin/p/11701362.html">https://www.cnblogs.com/qiyuexin/p/11701362.html</a>.<br>[12] for &#x2F;f命令之—Delims和Tokens用法&amp;总结[EB&#x2F;OL]. <a href="https://blog.csdn.net/kagurawill/article/details/114982328">https://blog.csdn.net/kagurawill/article/details/114982328</a>.<br>[13] 批处理（bat）中的数组问题[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_34414530/article/details/117839838">https://blog.csdn.net/qq_34414530/article/details/117839838</a>.<br>[14] BAT批处理文件 setlocal,endlocal命令详解[EB&#x2F;OL]. <a href="https://blog.csdn.net/csqxy547/article/details/89856034">https://blog.csdn.net/csqxy547/article/details/89856034</a>.<br>[15] [数值计算] [已解决]批处理()嵌套的变量延时与endlocal作用域问题[EB&#x2F;OL]. <a href="http://www.bathome.net/thread-32880-1-1.html">http://www.bathome.net/thread-32880-1-1.html</a>.<br>[16] How can I replace every occurrence of a String in a file with PowerShell?[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/17144355/how-can-i-replace-every-occurrence-of-a-string-in-a-file-with-powershell">https://stackoverflow.com/questions/17144355/how-can-i-replace-every-occurrence-of-a-string-in-a-file-with-powershell</a>.<br>[17] DOS batch FOR loop with FIND.exe is stripping out blank lines?[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/8811992/dos-batch-for-loop-with-find-exe-is-stripping-out-blank-lines">https://stackoverflow.com/questions/8811992/dos-batch-for-loop-with-find-exe-is-stripping-out-blank-lines</a>.<br>[18] Special Characters in Batch File[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/37333620/special-characters-in-batch-file">https://stackoverflow.com/questions/37333620/special-characters-in-batch-file</a>.<br>[19] Failed to load settings. Temporarily using the Windows Terminal default settings[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/76827828/failed-to-load-settings-temporarily-using-the-windows-terminal-default-settings">https://stackoverflow.com/questions/76827828/failed-to-load-settings-temporarily-using-the-windows-terminal-default-settings</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>终端</tag>
        <tag>bat</tag>
        <tag>cmd</tag>
        <tag>语法</tag>
        <tag>笔记</tag>
        <tag>windows</tag>
        <tag>运维</tag>
        <tag>powershell</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言总结笔记</title>
    <url>/code/c/</url>
    <content><![CDATA[<h1 id="语言摘记">1 &nbsp&nbsp<a href="#语言摘记" class="headerlink" title="语言摘记"></a>语言摘记</h1><h2 id="结构体的定义和引用">1.1 &nbsp&nbsp<a href="#结构体的定义和引用" class="headerlink" title="结构体的定义和引用"></a>结构体的定义和引用</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">    <span class="type">float</span> value;</span><br><span class="line">&#125;adventure;</span><br><span class="line"><span class="comment">// 引用和访问结构体</span></span><br><span class="line">adventrue.value=<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体指针的定义和访问</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span> *<span class="title">book1</span></span></span><br><span class="line"><span class="class"><span class="title">book1</span>=</span>&amp;adventure</span><br><span class="line"><span class="comment">// 引用和访问结构体指针</span></span><br><span class="line">book1-&gt;value=<span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>c</tag>
        <tag>编程</tag>
        <tag>语言</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机安全</title>
    <url>/code/computer-security/</url>
    <content><![CDATA[<h1 id="网络安全">1 &nbsp&nbsp<a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h1><h2 id="无线网络的加密形式">1.1 &nbsp&nbsp<a href="#无线网络的加密形式" class="headerlink" title="无线网络的加密形式"></a>无线网络的加密形式</h2><ul>
<li>wep：几乎都能破解，注入包一分钟即可</li>
<li>wpa&#x2F;wpa2、混合、pin：暴力破解</li>
</ul>
<h1 id="关于代理服务器和跳板攻击">2 &nbsp&nbsp<a href="#关于代理服务器和跳板攻击" class="headerlink" title="关于代理服务器和跳板攻击"></a>关于代理服务器和跳板攻击</h1><p>通过代理跳板，跳板越多，主机链越长（若有路由器或者交换机，可删除保存在flash内的登录日志，消除痕迹），可做到防止被攻击（隐藏IP），突破一些网址的限制访问（墙或者请求次数），隐藏身份进行攻击。</p>
<h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>计算机安全</tag>
        <tag>信息安全</tag>
      </tags>
  </entry>
  <entry>
    <title>css总结笔记</title>
    <url>/code/css/</url>
    <content><![CDATA[<h1 id="开发记录">1 &nbsp&nbsp<a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><p>类名含有空格（浏览器F12检查元素）时，一般是包含多个类名，空格字符在类型中无效，实际上呈现出来的是分隔符，不是空格。CSS类名选择器一般选择第一个即可。</p>
<h2 id="伪类的content不能被选中">1.1 &nbsp&nbsp<a href="#伪类的content不能被选中" class="headerlink" title="伪类的content不能被选中"></a>伪类的content不能被选中</h2><p>伪类不是真正的DOM，无DOM相关的属性和方法。</p>
<p><code>::before</code>和<code>::after</code>伪类的说明：</p>
<ul>
<li>默认display: inline</li>
<li>必须设置content属性，否则一切都是无用功</li>
<li>默认user-select: none，就是::before和::after的内容无法被用户选中的</li>
</ul>
<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] CSS 魔法堂：一起玩透伪元素和 Content 属性[EB&#x2F;OL]. <a href="https://segmentfault.com/a/1190000016441049">https://segmentfault.com/a/1190000016441049</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>开发总结</title>
    <url>/code/code/</url>
    <content><![CDATA[<h1 id="关于项目开发的语言技术栈选择">1 &nbsp&nbsp<a href="#关于项目开发的语言技术栈选择" class="headerlink" title="关于项目开发的语言技术栈选择"></a>关于项目开发的语言技术栈选择</h1><ul>
<li>B&#x2F;S（Browser&#x2F;Server）业务开发一般推荐Java，相关技术栈和框架比较成熟。而不推荐C++，效率太低。</li>
</ul>
<h1 id="开发记录">2 &nbsp&nbsp<a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><h2 id="关于字节的一些记录">2.1 &nbsp&nbsp<a href="#关于字节的一些记录" class="headerlink" title="关于字节的一些记录"></a>关于字节的一些记录</h2><p>int在机器上占一个字长，而32位机器中，一个字长就是4Byte，64位机器 一个字长就是8Byte。这里指的是在64位机器上的运行64位操作系统，计算的sizeof(int)。</p>
<p>这个说法不太正确，gcc编译64bit的程序，sizeof(int)输出为4，即4Byte，32bit。</p>
<h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>code</category>
      </categories>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/code/data-structure/</url>
    <content><![CDATA[<h1 id="数组和字符串">1 &nbsp&nbsp<a href="#数组和字符串" class="headerlink" title="数组和字符串"></a>数组和字符串</h1><h2 id="数组">1.1 &nbsp&nbsp<a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul>
<li>集合的定义：由一个或多个确定的元素所构成的整体。</li>
<li>集合的特性：<ul>
<li>集合里的元素类型不一定相同</li>
<li>集合里的元素没有顺序</li>
</ul>
</li>
<li>列表（又称线性列表）的定义：是一种数据项构成的有限序列，即按照一定的线性顺序，排列而成的数据项的集合。<ul>
<li>列表的概念是在集合的特征上形成的，它具有顺序，且长度是可变的。</li>
<li>列表最常见的表现形式：数组和链表<ul>
<li>C++和Java中，数组中的元素类型必须保持一致。</li>
<li>Python数组叫list，元素类型可以不同，具有更多高级功能。</li>
</ul>
</li>
<li>特殊类型的列表：栈和队列</li>
</ul>
</li>
<li>列表和数组的区别<ul>
<li>数组<ul>
<li>数组有<code>索引</code>，用来标识每项数据在数组中的位置，且在大多数编程语言中，索引是从 0 算起的。</li>
<li>数组中的元素在内存中是连续存储，且每个元素占用的相同大小内存。</li>
</ul>
</li>
<li>列表<ul>
<li>列表没有<code>索引</code>。</li>
<li>列表中的元素在内存中可能彼此相邻，也可能不相邻。例如链表。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="数组的操作">1.2 &nbsp&nbsp<a href="#数组的操作" class="headerlink" title="数组的操作"></a>数组的操作</h2><p>对于数组，计算机会在内存中为其申请一段<strong>连续</strong>的空间，并且会记下<strong>索引为 0 处的内存地址</strong>。</p>
<ul>
<li>读取元素：读取数组中的元素，是通过访问索引的方式来读取的，索引一般从 0 开始。寻找索引为2的元素，实际就是在索引为0的元素内存地址上偏移+2得到新地址的元素。<ul>
<li>时间复杂度：O(1)</li>
</ul>
</li>
<li>查找元素：由于只保存了索引为 0 处的内存地址，因此需要从数组开头逐步向后查找。<ul>
<li>时间复杂度：O(N)</li>
</ul>
</li>
<li>插入元素<ul>
<li>末尾插入：只需要一步（根据数组的长度和位置计算出需插入元素的内存地址插入即可）。</li>
<li>中间插入：需要在数组中腾出空间，才能继续操作插入（这种操作，更推荐使用链表）。</li>
</ul>
</li>
<li>删除元素：与插入元素类似<ul>
<li>末尾删除：只需要一步</li>
<li>中间删除：删除中间元素后，后面的元素需要对该位置进行操作</li>
<li>时间复杂度：O(N)。数组长度<code>N</code>，例如删除第一个元素，总步骤数：<code>1+(N-1)=N</code>。（<code>1</code>为删除操作，<code>N-1</code>为移动操作）</li>
</ul>
</li>
</ul>
<h2 id="字符串">1.3 &nbsp&nbsp<a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>字符串是由字符串数组形成的。</p>
<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 数组和字符串[EB&#x2F;OL]. <a href="https://leetcode.cn/leetbook/detail/array-and-string/">https://leetcode.cn/leetbook/detail/array-and-string/</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
  </entry>
  <entry>
    <title>数据库技术总结笔记</title>
    <url>/code/database/</url>
    <content><![CDATA[<h1 id="常见数据库">1 &nbsp&nbsp<a href="#常见数据库" class="headerlink" title="常见数据库"></a>常见数据库</h1><ul>
<li>企业级开源分布式数据库：OceanBase，可应对高并发和海量数据</li>
</ul>
<h1 id="MySQL基础命令操作">2 &nbsp&nbsp<a href="#MySQL基础命令操作" class="headerlink" title="MySQL基础命令操作"></a>MySQL基础命令操作</h1><table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">功能</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mysql -u[your_username] -p[your_password]<br>mysql -u your_name -p</td>
<td align="center">连接mysql</td>
<td align="center">但一般不推荐直接在终端上输入明文密码</td>
</tr>
<tr>
<td align="center">show databases;</td>
<td align="center">列出所有可用的数据库</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">use your_database;</td>
<td align="center">选择要使用的数据库</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">show tables;</td>
<td align="center">列出数据库中的所有表</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">show create table table_name;</td>
<td align="center">查看表的创建语句</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">desc table_name;<br>show fields from table_name;<br>desc  table_name;</td>
<td align="center">查看表的结构</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">exit;<br>quit;<br>Ctrl + D（Unix&#x2F;Linux 系统）</td>
<td align="center">退出<code>mysql</code>命令环境</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">alter table tableName auto_increment&#x3D;number;</td>
<td align="center">重新设置表的AUTO_INCREMENT自增值</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">rename table table_original_name to table_new_name;<br>alter table table_original_name rename table_new_name;<br>alter table table_original_name rename to table_new_name;</td>
<td align="center">重命名表的名字</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">drop table table_name;</td>
<td align="center">删除表</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">alter table table_name drop column_name</td>
<td align="center">删除表中的列</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">update table_name set column_name1&#x3D;value1,column_name2&#x3D;value2 where colomn_name3&#x3D;value3;</td>
<td align="center">更新表中的数据</td>
<td align="center">set是修改具体列数据<br>where关键字后面跟随条件</td>
</tr>
<tr>
<td align="center">delete from table_name where column_name&#x3D;value;</td>
<td align="center">删除一行记录</td>
<td align="center">where关键字后面跟随条件</td>
</tr>
<tr>
<td align="center">mysqldump -u your_name -p database_name &gt; path&#x2F;database_name.sql;</td>
<td align="center">备份数据库到对应路径的SQL文件</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">mysql -u your_name -p database_name &lt; path&#x2F;database_name.sql;</td>
<td align="center">从对应路径的SQL文件恢复数据库</td>
<td align="center"></td>
</tr>
</tbody></table>
<h1 id="mongodb">3 &nbsp&nbsp<a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h1><p><strong>GUI客户端推荐：mongodb compass</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查询某天的文档</span><br><span class="line">db.getCollection(&#x27;YSTZ_202305&#x27;)</span><br><span class="line">  .find(&#123;</span><br><span class="line">    createat: &#123;</span><br><span class="line">      $gte: &#x27;2023-05-23 00:00:00&#x27;,</span><br><span class="line">      $lte: &#x27;2023-05-30 00:00:00&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .sort(&#123; createat: 1 &#125;)</span><br><span class="line">  .limit(100000000);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 排序：其中1为升序排列，而-1是用于降序排列</span><br><span class="line">db.COLLECTION_NAME.find().sort(&#123;KEY:1,key2:-1&#125;);</span><br><span class="line"></span><br><span class="line"># 查看当前操作进度（比如创建索引）</span><br><span class="line">db.currentOp()</span><br></pre></td></tr></table></figure>

<h1 id="Navicat">4 &nbsp&nbsp<a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h1><h2 id="mongodb导出导入">4.1 &nbsp&nbsp<a href="#mongodb导出导入" class="headerlink" title="mongodb导出导入"></a>mongodb导出导入</h2><h3 id="导入导出数据库">4.1.1 &nbsp&nbsp<a href="#导入导出数据库" class="headerlink" title="导入导出数据库"></a>导入导出数据库</h3><ol>
<li>去MongoDB官网下载<a href="https://www.mongodb.com/try/download/database-tools">MongoDB Command Line Database Tools</a></li>
<li>对数据库右键，选择MongoDump，设置刚刚下载解压后的bin下路径的mongodump.exe</li>
<li>设置保存路径，以gz格式存放</li>
<li>对新数据库右键，选择MongoRestore，配置路径mongorestore.exe，选择备份文件导入</li>
</ol>
<h3 id="导入导出表，或者表中部分字段">4.1.2 &nbsp&nbsp<a href="#导入导出表，或者表中部分字段" class="headerlink" title="导入导出表，或者表中部分字段"></a>导入导出表，或者表中部分字段</h3><p>使用mongoexport，mongoimport功能</p>
<h2 id="数据迁移">4.2 &nbsp&nbsp<a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h2><h3 id="单库迁移">4.2.1 &nbsp&nbsp<a href="#单库迁移" class="headerlink" title="单库迁移"></a>单库迁移</h3><ol>
<li>在目标服务器中创建一个和源服务器数据库名称一样的数据库</li>
<li>菜单栏&gt;工具&gt;数据传输（填写源服务器和目标服务器的信息，例如ip访问地址）</li>
<li>下一步即可开始迁移</li>
</ol>
<h3 id="多库迁移">4.2.2 &nbsp&nbsp<a href="#多库迁移" class="headerlink" title="多库迁移"></a>多库迁移</h3><ol>
<li>在目标服务器中创建一个和源服务器数据库名称一样的数据库</li>
<li>菜单栏&gt;工具&gt;数据传输（填写源服务器和目标服务器的信息，例如ip访问地址）</li>
<li>选择保存配置文件，一一为每个数据库都进行这个操作。</li>
<li>菜单栏&gt;工具&gt;数据传输&gt;自动运行&gt;点击新建批处理操作&gt;点击数据传递，导入前面保存的配置文件。</li>
</ol>
<h2 id="Navicat执行查询超时">4.3 &nbsp&nbsp<a href="#Navicat执行查询超时" class="headerlink" title="Navicat执行查询超时"></a>Navicat执行查询超时</h2><p>问题：执行一段复杂的Sql，在mysql命令行下用时较长。</p>
<p>解决方法：做好索引再查询或者更换其他工具（例如mongodb官方工具）进行查询。</p>
<h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 利用Navicat进行数据迁移[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_39043762/article/details/118363462">https://blog.csdn.net/qq_39043762/article/details/118363462</a>.<br>[2] Navicat导出 导入mongodb数据库（windows）[EB&#x2F;OL]. <a href="https://blog.csdn.net/zjkpy_5/article/details/123952785">https://blog.csdn.net/zjkpy_5/article/details/123952785</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>数据库</tag>
        <tag>mongodb</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>docker</title>
    <url>/code/docker/</url>
    <content><![CDATA[<ul>
<li><a href="https://www.runoob.com/docker/docker-resources.html">Docker 命令大全</a></li>
</ul>
<h1 id="docker的基础命令操作">1 &nbsp&nbsp<a href="#docker的基础命令操作" class="headerlink" title="docker的基础命令操作"></a>docker的基础命令操作</h1><table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">功能</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">docker ps</td>
<td align="center">列出当前正在运行的容器</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker ps -a</td>
<td align="center">列出所有容器（包括已停止的容器）</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker logs container_name</td>
<td align="center">查看指定容器的日志</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker inspect container_name&#x2F;image</td>
<td align="center">获取指定容器或镜像的详细信息</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker exec -it container_name &#x2F;bin&#x2F;bash</td>
<td align="center">进入指定容器的交互式终端</td>
<td align="center">-i: 交互式操作<br>-t: 终端<br>-it：以交互式终端运行容器，例如 docker exec -it container_name bash</td>
</tr>
<tr>
<td align="center">docker stop container_name</td>
<td align="center">停止一个或多个容器</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker rm container_name</td>
<td align="center">删除一个或多个容器</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker rmi image-name:tag</td>
<td align="center">删除一个或多个镜像</td>
<td align="center">不加tag则会删除所有</td>
</tr>
<tr>
<td align="center">docker run image-name --name container_name -d</td>
<td align="center">启动一个新的容器并运行命令</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker start container_name</td>
<td align="center">启动已停止的容器</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker restart container_name</td>
<td align="center">重启一个容器</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker version</td>
<td align="center">显示 Docker 客户端和守护进程的版本信息</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker network ls</td>
<td align="center">列出所有 Docker 网络</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker volume ls</td>
<td align="center">列出所有 Docker 卷</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker images ls</td>
<td align="center">列出本地存储的所有镜像</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker compose -f docker-compose.yml up -d</td>
<td align="center">启动多容器应用（从 docker-compose.yml 文件）</td>
<td align="center">-d：后台运行容器，例如 docker run -d ubuntu</td>
</tr>
<tr>
<td align="center">docker compose -f docker-compose.yml down</td>
<td align="center">停止并删除由 docker-compose 启动的容器、网络等</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker compose logs -f docker-compose.yml</td>
<td align="center">查看指定compose的运行日志</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker info</td>
<td align="center">显示 Docker 系统的详细信息</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker stats</td>
<td align="center">显示容器的实时资源使用情况</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker builder prune</td>
<td align="center">删除所有未被使用的构建缓存</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker builder prune --filter &#39;until&#x3D;240h&#39;</td>
<td align="center">删除所有未被使用的构建缓存，并保留最近10天的缓存</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker system prune</td>
<td align="center">清理磁盘，删除关闭的容器、无用的数据卷和网络，以及dangling镜像（即无tag的镜像）</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">docker system prune -a</td>
<td align="center">比上面命令清理得更加彻底，没有容器使用Docker镜像都会被删掉</td>
<td align="center"></td>
</tr>
</tbody></table>
<h1 id="使用apt仓库为Debian安装docker">2 &nbsp&nbsp<a href="#使用apt仓库为Debian安装docker" class="headerlink" title="使用apt仓库为Debian安装docker"></a>使用apt仓库为Debian安装docker</h1><h2 id="添加Docker的官方GPG密钥">2.1 &nbsp&nbsp<a href="#添加Docker的官方GPG密钥" class="headerlink" title="添加Docker的官方GPG密钥"></a>添加Docker的官方GPG密钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install ca-certificates -y</span><br><span class="line">install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"><span class="comment"># 可能下载会出现ssl验证错误，多重复执行几次wget下载就能成功下载</span></span><br><span class="line">wget https://download.docker.com/linux/debian/gpg -O /etc/apt/keyrings/docker.asc</span><br><span class="line"><span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.asc</span><br></pre></td></tr></table></figure>

<h2 id="添加Docker的官方仓库">2.2 &nbsp&nbsp<a href="#添加Docker的官方仓库" class="headerlink" title="添加Docker的官方仓库"></a>添加Docker的官方仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="string">  <span class="subst">$(. /etc/os-release &amp;&amp; echo <span class="string">&quot;<span class="variable">$VERSION_CODENAME</span>&quot;</span>)</span> stable&quot;</span> | \</span><br><span class="line">  <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">apt update</span><br></pre></td></tr></table></figure>

<h2 id="安装Docker">2.3 &nbsp&nbsp<a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y</span><br></pre></td></tr></table></figure>

<h2 id="验证Docker版本">2.4 &nbsp&nbsp<a href="#验证Docker版本" class="headerlink" title="验证Docker版本"></a>验证Docker版本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker -v</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure>

<h2 id="修改Docker镜像源">2.5 &nbsp&nbsp<a href="#修改Docker镜像源" class="headerlink" title="修改Docker镜像源"></a>修改Docker镜像源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">    &quot;https://docker.1ms.run&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.mybacc.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dytt.online&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://lispy.org&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.xiaogenban1993.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.yomansunter.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://aicarbon.xyz&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://666860.xyz&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.zhai.cm&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://a.ussh.net&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://hub.littlediary.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://hub.rat.dev&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.m.daocloud.io&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h2 id="重启相关服务">2.6 &nbsp&nbsp<a href="#重启相关服务" class="headerlink" title="重启相关服务"></a>重启相关服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h1 id="Docker部署Dockge（docker-compose可视化管理）">3 &nbsp&nbsp<a href="#Docker部署Dockge（docker-compose可视化管理）" class="headerlink" title="Docker部署Dockge（docker compose可视化管理）"></a>Docker部署Dockge（docker compose可视化管理）</h1><div class="note danger no-icon"><ul>
<li>dockge容器运行是UTC世界时，指定环境变量或者同步宿主机的时区都是无法生效，容器日志纪录的时间戳就是UTC时间——Mr. Kin，2025-05-22</li>
<li>docker实现的终端功能只有简单shell命令，因此终端更多是使用docker相关命令，其余复杂的操作，还是推荐ssh连接到服务器进行操作。</li>
</ul>
</div>
<div class="note default no-icon"><p><code>/opt/stacks</code>路径下任意文件夹的名称都是作为堆栈stack名称，显示在dockge网页管理后台上。其中，在文件夹内，<code>docker-compose.yml</code>或者<code>compose.yml</code>文件名称是必需，其他自定义文件名称，dockge将无法识别。</p>
<p>例如，<code>/opt/stacks/dockge</code>文件夹，在dockge网页管理后台上显示为<code>dockge</code>。</p>
</div>

<ol>
<li>创建stacks文件夹：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/stacks/dockge</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>创建<code>dockge</code>的<code>docker-compose.yml</code>文件：<code>nano /opt/stacks/dockge/docker-compose.yml</code></li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">dockge:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">louislam/dockge:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">dockge</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5001</span><span class="string">:5001</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/dockge_data:/app/data</span></span><br><span class="line">      <span class="comment"># Stacks Directory</span></span><br><span class="line">      <span class="comment"># ⚠️ READ IT CAREFULLY. If you did it wrong, your data could end up writing into a WRONG PATH.</span></span><br><span class="line">      <span class="comment"># ⚠️ 1. FULL path only. No relative path (MUST)</span></span><br><span class="line">      <span class="comment"># ⚠️ 2. Left Stacks Path === Right Stacks Path (MUST)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/stacks:/opt/stacks</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># Tell Dockge where to find the stacks</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKGE_STACKS_DIR=/opt/stacks</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKGE_ENABLE_CONSOLE=true</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>访问dockge网页管理后台：<code>http://10.10.10.10:5001</code>。初次访问会提示创建用户和密码。</li>
</ol>
<h1 id="Docker搭建Gitea">4 &nbsp&nbsp<a href="#Docker搭建Gitea" class="headerlink" title="Docker搭建Gitea"></a>Docker搭建Gitea</h1><h2 id="创建Gitea的mysql数据库数据文件夹">4.1 &nbsp&nbsp<a href="#创建Gitea的mysql数据库数据文件夹" class="headerlink" title="创建Gitea的mysql数据库数据文件夹"></a>创建Gitea的mysql数据库数据文件夹</h2><p>在<code>root</code>账户路径下，创建<code>mysql</code>文件夹和子目录：<code>mkdir -p /root/mysql/conf.d</code></p>
<p>创建<code>my.ini</code>：<code>nano /root/mysql/conf.d/my.ini</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">###### [client]配置模块 ######</span></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4</span><br><span class="line"><span class="attr">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment">###### [mysql]配置模块 ######</span></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置MySQL客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4</span><br><span class="line"><span class="attr">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment">###### [mysqld]配置模块 ######</span></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">user</span>=mysql</span><br><span class="line"><span class="comment"># 设置sql模式 sql_mode模式引起的分组查询出现*this is incompatible with sql_mode=only_full_group_by，这里最好剔除ONLY_FULL_GROUP_BY</span></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br><span class="line"><span class="attr">datadir</span>=/var/lib/mysql</span><br><span class="line"><span class="attr">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class="line"><span class="attr">server-id</span>= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL8 的密码认证插件 如果不设置低版本navicat无法连接</span></span><br><span class="line"><span class="comment">#default_authentication_plugin=mysql_native_password</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用符号链接以防止各种安全风险</span></span><br><span class="line"><span class="attr">symbolic-links</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库字符集对应一些排序等规则，注意要和 character-set-server 对应</span></span><br><span class="line"><span class="attr">collation-server</span> = utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0: 表名将按指定方式存储，并且比较区分大小写;</span></span><br><span class="line"><span class="comment"># 1: 表名以小写形式存储在磁盘上，比较不区分大小写；</span></span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">max_allowed_packet</span>=<span class="number">16</span>M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置时区</span></span><br><span class="line"><span class="attr">default-time_zone</span>=<span class="string">&#x27;+8:00&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="创建Gitea数据文件夹和配置文件">4.2 &nbsp&nbsp<a href="#创建Gitea数据文件夹和配置文件" class="headerlink" title="创建Gitea数据文件夹和配置文件"></a>创建Gitea数据文件夹和配置文件</h2><p>在<code>root</code>账户路径下，创建<code>gitea</code>文件夹和子目录：<code>mkdir -p /root/gitea/gitea/conf</code></p>
<p>创建<code>app.ini</code>文件：<code>nano /root/gitea/gitea/conf/app.ini</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">APP_NAME</span> = Gitea: Git with a cup of tea</span><br><span class="line"><span class="attr">RUN_MODE</span> = prod</span><br><span class="line"><span class="attr">WORK_PATH</span> = /data/gitea</span><br><span class="line"></span><br><span class="line"><span class="section">[repository]</span></span><br><span class="line"><span class="attr">ROOT</span> = /data/git/repositories</span><br><span class="line"></span><br><span class="line"><span class="section">[repository.local]</span></span><br><span class="line"><span class="attr">LOCAL_COPY_PATH</span> = /data/gitea/tmp/local-repo</span><br><span class="line"></span><br><span class="line"><span class="section">[repository.upload]</span></span><br><span class="line"><span class="attr">TEMP_PATH</span> = /data/gitea/uploads</span><br><span class="line"></span><br><span class="line"><span class="section">[server]</span></span><br><span class="line"><span class="attr">APP_DATA_PATH</span> = /data/gitea</span><br><span class="line"><span class="attr">DOMAIN</span> = localhost</span><br><span class="line"><span class="attr">SSH_DOMAIN</span> = localhost</span><br><span class="line"><span class="attr">HTTP_PORT</span> = <span class="number">3000</span></span><br><span class="line"><span class="attr">ROOT_URL</span> = http://<span class="number">192.168</span>.<span class="number">1.10</span>:<span class="number">3000</span>/</span><br><span class="line"><span class="attr">DISABLE_SSH</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">SSH_PORT</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">SSH_LISTEN_PORT</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">LFS_START_SERVER</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">LFS_JWT_SECRET</span> =</span><br><span class="line"><span class="attr">OFFLINE_MODE</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">PATH</span> = /data/gitea/gitea.db</span><br><span class="line"><span class="attr">DB_TYPE</span> = mysql</span><br><span class="line"><span class="attr">HOST</span> = database:<span class="number">3306</span></span><br><span class="line"><span class="attr">NAME</span> = gitea</span><br><span class="line"><span class="attr">USER</span> = gitea</span><br><span class="line"><span class="attr">PASSWD</span> = normalpdxxx</span><br><span class="line"><span class="attr">LOG_SQL</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">SSL_MODE</span> = disable</span><br><span class="line"></span><br><span class="line"><span class="section">[mailer]</span></span><br><span class="line"><span class="attr">ENABLED</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[openid]</span></span><br><span class="line"><span class="attr">ENABLE_OPENID_SIGNIN</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">ENABLE_OPENID_SIGNUP</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[cron.update_checker]</span></span><br><span class="line"><span class="attr">ENABLED</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[indexer]</span></span><br><span class="line"><span class="attr">ISSUE_INDEXER_PATH</span> = /data/gitea/indexers/issues.bleve</span><br><span class="line"></span><br><span class="line"><span class="section">[session]</span></span><br><span class="line"><span class="attr">PROVIDER_CONFIG</span> = /data/gitea/sessions</span><br><span class="line"></span><br><span class="line"><span class="section">[picture]</span></span><br><span class="line"><span class="attr">AVATAR_UPLOAD_PATH</span> = /data/gitea/avatars</span><br><span class="line"><span class="attr">REPOSITORY_AVATAR_UPLOAD_PATH</span> = /data/gitea/repo-avatars</span><br><span class="line"></span><br><span class="line"><span class="section">[attachment]</span></span><br><span class="line"><span class="attr">PATH</span> = /data/gitea/attachments</span><br><span class="line"></span><br><span class="line"><span class="section">[log]</span></span><br><span class="line"><span class="attr">MODE</span> = console</span><br><span class="line"><span class="attr">LEVEL</span> = info</span><br><span class="line"><span class="attr">ROOT_PATH</span> = /data/gitea/log</span><br><span class="line"></span><br><span class="line"><span class="section">[security]</span></span><br><span class="line"><span class="attr">INSTALL_LOCK</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">INTERNAL_TOKEN</span> =</span><br><span class="line"><span class="attr">PASSWORD_HASH_ALGO</span> = pbkdf2</span><br><span class="line"><span class="attr">SECRET_KEY</span> =</span><br><span class="line"><span class="attr">REVERSE_PROXY_LIMIT</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">REVERSE_PROXY_TRUSTED_PROXIES</span> = *</span><br><span class="line"></span><br><span class="line"><span class="section">[service]</span></span><br><span class="line"><span class="attr">REGISTER_EMAIL_CONFIRM</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">ENABLE_NOTIFY_MAIL</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">DISABLE_REGISTRATION</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">ALLOW_ONLY_EXTERNAL_REGISTRATION</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">ENABLE_CAPTCHA</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">REQUIRE_SIGNIN_VIEW</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">DEFAULT_KEEP_EMAIL_PRIVATE</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">DEFAULT_ALLOW_CREATE_ORGANIZATION</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">DEFAULT_ENABLE_TIMETRACKING</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">NO_REPLY_ADDRESS</span> = noreply.localhost</span><br><span class="line"></span><br><span class="line"><span class="section">[lfs]</span></span><br><span class="line"><span class="attr">PATH</span> = /data/git/lfs</span><br><span class="line"></span><br><span class="line"><span class="section">[repository.pull-request]</span></span><br><span class="line"><span class="attr">DEFAULT_MERGE_STYLE</span> = merge</span><br><span class="line"></span><br><span class="line"><span class="section">[repository.signing]</span></span><br><span class="line"><span class="attr">DEFAULT_TRUST_MODEL</span> = committer</span><br><span class="line"></span><br><span class="line"><span class="section">[oauth2]</span></span><br><span class="line">JWT_SECRET =</span><br></pre></td></tr></table></figure>

<h2 id="创建actions-runner配置文件">4.3 &nbsp&nbsp<a href="#创建actions-runner配置文件" class="headerlink" title="创建actions_runner配置文件"></a>创建actions_runner配置文件</h2><div class="note danger no-icon"><p>如果是本地搭建并只在本地使用，配件文件的<code>host</code>设置为<code>127.0.0.1</code>就能访问到gitea实例了。</p>
</div>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /root/actions_runner_config.yaml</span><br></pre></td></tr></table></figure>

<p><code>actions_runner_config.yaml</code>内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Example configuration file, it&#x27;s safe to copy this as the default config file without any modification.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You don&#x27;t have to copy this file to your instance,</span></span><br><span class="line"><span class="comment"># just run `./act_runner generate-config &gt; config.yaml` to generate a config file.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log:</span></span><br><span class="line">  <span class="comment"># The level of logging, can be trace, debug, info, warn, error, fatal</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line"></span><br><span class="line"><span class="attr">runner:</span></span><br><span class="line">  <span class="comment"># Where to store the registration result.</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">.runner</span></span><br><span class="line">  <span class="comment"># Execute how many tasks concurrently at the same time.</span></span><br><span class="line">  <span class="attr">capacity:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># Extra environment variables to run jobs.</span></span><br><span class="line">  <span class="attr">envs:</span></span><br><span class="line">    <span class="attr">A_TEST_ENV_NAME_1:</span> <span class="string">a_test_env_value_1</span></span><br><span class="line">    <span class="attr">A_TEST_ENV_NAME_2:</span> <span class="string">a_test_env_value_2</span></span><br><span class="line">  <span class="comment"># Extra environment variables to run jobs from a file.</span></span><br><span class="line">  <span class="comment"># It will be ignored if it&#x27;s empty or the file doesn&#x27;t exist.</span></span><br><span class="line">  <span class="attr">env_file:</span> <span class="string">.env</span></span><br><span class="line">  <span class="comment"># The timeout for a job to be finished.</span></span><br><span class="line">  <span class="comment"># Please note that the Gitea instance also has a timeout (3h by default) for the job.</span></span><br><span class="line">  <span class="comment"># So the job could be stopped by the Gitea instance if it&#x27;s timeout is shorter than this.</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="string">3h</span></span><br><span class="line">  <span class="comment"># Whether skip verifying the TLS certificate of the Gitea instance.</span></span><br><span class="line">  <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The timeout for fetching the job from the Gitea instance.</span></span><br><span class="line">  <span class="attr">fetch_timeout:</span> <span class="string">5s</span></span><br><span class="line">  <span class="comment"># The interval for fetching the job from the Gitea instance.</span></span><br><span class="line">  <span class="attr">fetch_interval:</span> <span class="string">2s</span></span><br><span class="line">  <span class="comment"># The labels of a runner are used to determine which jobs the runner can run, and how to run them.</span></span><br><span class="line">  <span class="comment"># Like: &quot;macos-arm64:host&quot; or &quot;ubuntu-latest:docker://gitea/runner-images:ubuntu-latest&quot;</span></span><br><span class="line">  <span class="comment"># Find more images provided by Gitea at https://gitea.com/gitea/runner-images .</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty when registering, it will ask for inputting labels.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty when execute `daemon`, will use labels in `.runner` file.</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;ubuntu-latest:docker://gitea/runner-images:ubuntu-latest&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;ubuntu-22.04:docker://gitea/runner-images:ubuntu-22.04&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;ubuntu-20.04:docker://gitea/runner-images:ubuntu-20.04&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="comment"># Enable cache server to use actions/cache.</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The directory to store the cache data.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, the cache data will be stored in $HOME/.cache/actcache.</span></span><br><span class="line">  <span class="attr">dir:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># The host of the cache server.</span></span><br><span class="line">  <span class="comment"># It&#x27;s not for the address to listen, but the address to connect from job containers.</span></span><br><span class="line">  <span class="comment"># So 0.0.0.0 is a bad choice, leave it empty to detect automatically.</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;10.10.10.10&quot;</span></span><br><span class="line">  <span class="comment"># The port of the cache server.</span></span><br><span class="line">  <span class="comment"># 0 means to use a random available port.</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">18088</span></span><br><span class="line">  <span class="comment"># The external cache server URL. Valid only when enable is true.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s specified, act_runner will use this URL as the ACTIONS_CACHE_URL rather than start a server by itself.</span></span><br><span class="line">  <span class="comment"># The URL should generally end with &quot;/&quot;.</span></span><br><span class="line">  <span class="attr">external_server:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">container:</span></span><br><span class="line">  <span class="comment"># Specifies the network to which the container will connect.</span></span><br><span class="line">  <span class="comment"># Could be host, bridge or the name of a custom network.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, act_runner will create a network automatically.</span></span><br><span class="line">  <span class="attr">network:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># Whether to use privileged mode or not when launching task containers (privileged mode is required for Docker-in-Docker).</span></span><br><span class="line">  <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># And other options to be used when the container is started (eg, --add-host=my.gitea.url:host-gateway).</span></span><br><span class="line">  <span class="attr">options:</span></span><br><span class="line">  <span class="comment"># The parent directory of a job&#x27;s working directory.</span></span><br><span class="line">  <span class="comment"># <span class="doctag">NOTE:</span> There is no need to add the first &#x27;/&#x27; of the path as act_runner will add it automatically.</span></span><br><span class="line">  <span class="comment"># If the path starts with &#x27;/&#x27;, the &#x27;/&#x27; will be trimmed.</span></span><br><span class="line">  <span class="comment"># For example, if the parent directory is /path/to/my/dir, workdir_parent should be path/to/my/dir</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, /workspace will be used.</span></span><br><span class="line">  <span class="attr">workdir_parent:</span></span><br><span class="line">  <span class="comment"># Volumes (including bind mounts) can be mounted to containers. Glob syntax is supported, see https://github.com/gobwas/glob</span></span><br><span class="line">  <span class="comment"># You can specify multiple volumes. If the sequence is empty, no volumes can be mounted.</span></span><br><span class="line">  <span class="comment"># For example, if you only allow containers to mount the `data` volume and all the json files in `/src`, you should change the config to:</span></span><br><span class="line">  <span class="comment"># valid_volumes:</span></span><br><span class="line">  <span class="comment">#   - data</span></span><br><span class="line">  <span class="comment">#   - /src/*.json</span></span><br><span class="line">  <span class="comment"># If you want to allow any volume, please use the following configuration:</span></span><br><span class="line">  <span class="comment"># valid_volumes:</span></span><br><span class="line">  <span class="comment">#   - &#x27;**&#x27;</span></span><br><span class="line">  <span class="attr">valid_volumes:</span> []</span><br><span class="line">  <span class="comment"># overrides the docker client host with the specified one.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, act_runner will find an available docker host automatically.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s &quot;-&quot;, act_runner will find an available docker host automatically, but the docker host won&#x27;t be mounted to the job containers and service containers.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s not empty or &quot;-&quot;, the specified docker host will be used. An error will be returned if it doesn&#x27;t work.</span></span><br><span class="line">  <span class="attr">docker_host:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># Pull docker image(s) even if already present</span></span><br><span class="line">  <span class="attr">force_pull:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Rebuild docker image(s) even if already present</span></span><br><span class="line">  <span class="attr">force_rebuild:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">host:</span></span><br><span class="line">  <span class="comment"># The parent directory of a job&#x27;s working directory.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, $HOME/.cache/act/ will be used.</span></span><br><span class="line">  <span class="attr">workdir_parent:</span></span><br></pre></td></tr></table></figure>

<h2 id="启动Docker-Compose">4.4 &nbsp&nbsp<a href="#启动Docker-Compose" class="headerlink" title="启动Docker-Compose"></a>启动Docker-Compose</h2><div class="note danger no-icon"><p><code>runner</code>容器的环境变量<code>environment</code>的Gitea实例地址<code>GITEA_INSTANCE_URL</code>参数这里，不能用<code>http://server</code>直接作为参数。虽然docker compose容器之间可以识别这个写法，但<code>action runner</code>运行时无法识别该参数，使用<code>checkout</code>脚本甚至都拉取不了源码到<code>runner</code>容器内。</p>
<p>但参数设置错误也会导致如下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">level=error msg=<span class="string">&quot;Cannot ping the Gitea instance server&quot;</span> error=<span class="string">&quot;unknown: 500 Internal Server Error&quot;</span></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">level=error msg=<span class="string">&quot;Cannot ping the Gitea instance server&quot;</span> error=<span class="string">&quot;unavailable: dial tcp: lookup server on 127.0.0.11:53: server misbehaving&quot;</span></span><br></pre></td></tr></table></figure></div>
<div class="note danger no-icon"><p><code>runner</code>容器的环境变量<code>environment</code>的runner注册令牌<code>GITEA_RUNNER_REGISTRATION_TOKEN</code>参数步骤：在Gitea管理后台-&gt;Actions-&gt;Runners-&gt;创建Runner-&gt;创建新的令牌或者查看已有的令牌。</p>
</div>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /root/docker-compose.yml</span><br><span class="line">docker compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure>

<p><code>docker-compose.yml</code>内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">gitea:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.gitea.com/gitea:nightly</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USER_UID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USER_GID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA__database__DB_TYPE=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA__database__HOST=database:3306</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA__database__NAME=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA__database__USER=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA__database__PASSWD=normalpdxxx</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/gitea:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;222:22&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">database</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">database:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.io/library/mysql:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=rootpdxxx</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=gitea</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=normalpdxxx</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="comment"># 映射数据目录，宿主机:容器</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/mysql/data:/var/lib/mysql</span></span><br><span class="line">      <span class="comment"># 映射配置目录，宿主机:容器</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/mysql/conf.d:/etc/mysql/conf.d</span></span><br><span class="line">      <span class="comment"># 映射日志目录，宿主机:容器</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/mysql/log:/var/log/mysql</span></span><br><span class="line">      <span class="comment"># 让容器的时钟与宿主机时钟同步，避免时间的问题，ro是read only的意思，就是只读。</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">runner:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitea/act_runner:nightly</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">runner</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;18088:18088&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CONFIG_FILE=/config.yaml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA_INSTANCE_URL=http://10.10.10.10:3000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA_RUNNER_REGISTRATION_TOKEN=xxx_token</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA_RUNNER_NAME=$&#123;RUNNER_NAME&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA_RUNNER_LABELS=$&#123;RUNNER_LABELS&#125;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/actions_runner_config.yaml:/config.yaml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/actions_runner:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/actions_runner_cache:/root/.cache</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">server</span></span><br></pre></td></tr></table></figure>

<h2 id="迁移Gitea的mysql数据库和git仓库数据">4.5 &nbsp&nbsp<a href="#迁移Gitea的mysql数据库和git仓库数据" class="headerlink" title="迁移Gitea的mysql数据库和git仓库数据"></a>迁移Gitea的mysql数据库和git仓库数据</h2><ol>
<li>备份其他服务器上的Gitea的mysql数据库、git仓库数据和gitea其他资产数据。</li>
<li>进入mysql容器，并使用备份sql文件恢复mysql数据库。</li>
<li>停止docker-compose</li>
<li>迁移Gitea的git仓库数据和其他资产数据（例如avatars，actions_logs等），<ul>
<li>Git仓库数据路径：<code>/root/gitea/git/repositories</code></li>
<li>Git仓库lfs数据路径：<code>/root/gitea/git/lfs</code></li>
<li>Gitea资产数据路径：<ul>
<li><code>/root/gitea/gitea/attachments</code></li>
<li><code>/root/gitea/gitea/repo-archive</code></li>
<li><code>/root/gitea/gitea/actions_logs</code></li>
<li><code>/root/gitea/gitea/conf</code></li>
<li><code>/root/gitea/gitea/actions_artifacts</code></li>
<li><code>/root/gitea/gitea/jwt</code></li>
<li><code>/root/gitea/gitea/indexers</code></li>
<li><code>/root/gitea/gitea/tmp</code></li>
<li><code>/root/gitea/gitea/repo-avatars</code></li>
<li><code>/root/gitea/gitea/queues</code></li>
<li><code>/root/gitea/gitea/packages</code></li>
<li><code>/root/gitea/gitea/home</code></li>
<li><code>/root/gitea/gitea/avatars</code></li>
<li><code>/root/gitea/gitea/log</code></li>
</ul>
</li>
</ul>
</li>
<li>重新运行docker-compose</li>
</ol>
<h2 id="Gitea搭建和使用的踩坑">4.6 &nbsp&nbsp<a href="#Gitea搭建和使用的踩坑" class="headerlink" title="Gitea搭建和使用的踩坑"></a>Gitea搭建和使用的踩坑</h2><h3 id="actions-runner容器无法正常启动，日志提示未注册runner">4.6.1 &nbsp&nbsp<a href="#actions-runner容器无法正常启动，日志提示未注册runner" class="headerlink" title="actions_runner容器无法正常启动，日志提示未注册runner"></a>actions_runner容器无法正常启动，日志提示未注册runner</h3><p>问题现象：<code>docker logs runner</code>查看日志提示如下，同时，gitea管理后台查看runner也无法看到有正常在线的runner。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">level=error msg=<span class="string">&quot;fail to invoke Declare&quot;</span> error=<span class="string">&quot;unknown: rpc error: code = Unauthenticated desc = unregistered runner&quot;</span></span><br><span class="line">Error: Unknown: rpc error: code = Unauthenticated desc = unregistered runner</span><br></pre></td></tr></table></figure>

<p>问题原因：<code>/root/actions_runner</code>路径下有一个隐藏文件夹<code>.runner</code>，该文件夹存储runner配置数据，但该数据是旧的，gitea实例无法识别，因此runner容器无法成功注册。</p>
<p>解决方法：</p>
<ol>
<li>停止docker-compose</li>
<li>删除<code>.runner</code>文件夹：<code>rm -rf /root/actions_runner/.runner</code></li>
<li>重新运行docker-compose</li>
<li>之后在gitea管理后台就能看到正常在线的新runner了</li>
</ol>
<h3 id="“版本发布”下，自己上传的文件url错误">4.6.2 &nbsp&nbsp<a href="#“版本发布”下，自己上传的文件url错误" class="headerlink" title="“版本发布”下，自己上传的文件url错误"></a>“版本发布”下，自己上传的文件url错误</h3><blockquote>
<p>背景说明：Gitea构建在子局域网IP<code>10.10.10.10</code>，然后外部网络访问该Gitea服务是通过IP<code>192.168.1.10</code>（宿主机IP<code>192.168.1.10</code>已设置路由表转发<code>3000</code>端口到IP<code>10.10.10.10</code>，即<code>192.168.1.10:3000</code>-&gt;<code>10.10.10.10:3000</code>）</p>
</blockquote>
<p>问题现象：在版本发布内容中，上传的资产文件<code>assets</code>下载路径链接指向<code>http://10.10.10.10:3000/xxx.zip</code>。</p>
<p>问题原因：Gitea的配置文件<code>app.ini</code>中的<code>ROOT_URL</code>未设置参数，导致下载路径链接自动指向<code>http://10.10.10.10:3000/xxx</code>。</p>
<p>解决方法：编辑<code>app.ini</code>文件，将<code>[server]</code>小节中的<code>ROOT_URL</code>参数设置为<code>http://192.168.1.10:3000</code>即可。</p>
<h3 id="Gitea管理后台提示当前访问的url和app-ini配置url不同">4.6.3 &nbsp&nbsp<a href="#Gitea管理后台提示当前访问的url和app-ini配置url不同" class="headerlink" title="Gitea管理后台提示当前访问的url和app.ini配置url不同"></a>Gitea管理后台提示当前访问的url和app.ini配置url不同</h3><p>问题现象：Gitea管理后台提示警告，你的<code>app.ini</code>的<code>ROOT_URL</code>是<code>http://10.10.10.10:3000</code>，但当前访问的url是<code>http://192.168.1.10:3000</code>。你应该正确设置<code>ROOT_URL</code>，否则网络服务可能无法正常运行。</p>
<p>问题原因：Gitea的配置文件<code>app.ini</code>中的<code>ROOT_URL</code>未设置参数或者设置错误的url，导致下载路径链接自动指向<code>http://10.10.10.10:3000/xxx</code>。</p>
<p>解决方法：编辑<code>app.ini</code>文件，将<code>[server]</code>小节中的<code>ROOT_URL</code>参数设置为当前访问URL即可，例如<code>http://192.168.1.10:3000</code>。</p>
<h1 id="Docker搭建Redis">5 &nbsp&nbsp<a href="#Docker搭建Redis" class="headerlink" title="Docker搭建Redis"></a>Docker搭建Redis</h1><h2 id="Redis容器清理缓存">5.1 &nbsp&nbsp<a href="#Redis容器清理缓存" class="headerlink" title="Redis容器清理缓存"></a>Redis容器清理缓存</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过可交互终端进入redis容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis /bin/bash</span><br><span class="line"><span class="comment"># 登录容器的redis服务</span></span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br><span class="line"><span class="comment"># 若Redis设置有密码使用该命令，否则执行 keys *会报错：(error) NOAUTH Authentication required。</span></span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有key值</span></span><br><span class="line">keys *</span><br><span class="line"><span class="comment"># 删除指定索引的值</span></span><br><span class="line">del key</span><br><span class="line"><span class="comment"># 清除当前数据库缓存</span></span><br><span class="line">flushdb</span><br><span class="line"><span class="comment"># 清除整个redis所有缓存</span></span><br><span class="line">flushall</span><br></pre></td></tr></table></figure>

<h1 id="Docker搭建DataEase">6 &nbsp&nbsp<a href="#Docker搭建DataEase" class="headerlink" title="Docker搭建DataEase"></a>Docker搭建DataEase</h1><p>请提前为宿主机安装好Docker以及配置好镜像源，这里不作介绍。</p>
<h2 id="下载DataEase部署脚本。">6.1 &nbsp&nbsp<a href="#下载DataEase部署脚本。" class="headerlink" title="下载DataEase部署脚本。"></a>下载DataEase部署脚本。</h2><p>最新的<a href="https://github.com/dataease/dataease/releases/tag/v1.18.27">DataEase V1.x</a>部署脚本并解压（本文示例为v1.18.27版本）。</p>
<p><code>dataease-release-v1.18.27.tar.gz</code>和<code>dataease-v1.18.27-online.tar.gz</code>这两个文件数据完全一致，随意下载，本人解压并比对过文件哈希值。</p>
<p>v2.x开源社区版不支持创建用户，代码层面写死只有一个admin账户，若有用户管理的需求，可以不用考虑v2.x版本或者考虑商业版的v2.x。</p>
<h2 id="修改配置文件install-conf">6.2 &nbsp&nbsp<a href="#修改配置文件install-conf" class="headerlink" title="修改配置文件install.conf"></a>修改配置文件<code>install.conf</code></h2><p>安装模式模式修改为<code>local</code>，端口这些自行根据需求改，如下配置文件是修改为8100。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基础配置</span></span><br><span class="line"><span class="comment">## 安装目录</span></span><br><span class="line">DE_BASE=/opt</span><br><span class="line"><span class="comment">## Service 端口</span></span><br><span class="line">DE_PORT=8100</span><br><span class="line"><span class="comment">## 部署及运行模式，可选值有 local、simple、cluster，分别对应 本地模式、精简模式、集群模式</span></span><br><span class="line">DE_ENGINE_MODE=<span class="built_in">local</span></span><br><span class="line"><span class="comment">## docker 网段设置</span></span><br><span class="line">DE_DOCKER_SUBNET=172.19.0.0/16</span><br><span class="line"><span class="comment">## docker 网关 IP</span></span><br><span class="line">DE_DOCKER_GATEWAY=172.19.0.1</span><br><span class="line"><span class="comment">## Apache Doris FE IP (外部 Doris 此参数无效)</span></span><br><span class="line">DE_DORIS_FE_IP=172.19.0.198</span><br><span class="line"><span class="comment">## Apache Doris BE IP (外部 Doris 此参数无效)</span></span><br><span class="line">DE_DORIS_BE_IP=172.19.0.199</span><br><span class="line"><span class="comment">## 登录超时时间，单位min。如果不设置则默认8小时，也就是480</span></span><br><span class="line">DE_LOGIN_TIMEOUT=480</span><br><span class="line"><span class="comment">## 新建用户初始密码</span></span><br><span class="line">DE_INIT_PASSWORD=DataEase123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库配置</span></span><br><span class="line"><span class="comment">## 是否使用外部数据库</span></span><br><span class="line">DE_EXTERNAL_MYSQL=<span class="literal">false</span></span><br><span class="line"><span class="comment">## 数据库地址</span></span><br><span class="line">DE_MYSQL_HOST=mysql</span><br><span class="line"><span class="comment">## 数据库端口</span></span><br><span class="line">DE_MYSQL_PORT=3306</span><br><span class="line"><span class="comment">## DataEase 数据库库名</span></span><br><span class="line">DE_MYSQL_DB=dataease</span><br><span class="line"><span class="comment">## 数据库用户名</span></span><br><span class="line">DE_MYSQL_USER=root</span><br><span class="line"><span class="comment">## 数据库密码</span></span><br><span class="line">DE_MYSQL_PASSWORD=Password123@mysql</span><br><span class="line"><span class="comment">## 数据库参数</span></span><br><span class="line">DE_MYSQL_PARAMS=<span class="string">&quot;autoReconnect=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;characterSetResults=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Apache Doris 配置</span></span><br><span class="line"><span class="comment">## 是否使用外部 Apache Doris</span></span><br><span class="line">DE_EXTERNAL_DORIS=<span class="literal">false</span></span><br><span class="line"><span class="comment">## Doris 地址</span></span><br><span class="line">DE_DORIS_HOST=doris-fe</span><br><span class="line"><span class="comment">## Doris 查询连接端口</span></span><br><span class="line">DE_DORIS_PORT=9030</span><br><span class="line"><span class="comment">## Doris http端口</span></span><br><span class="line">DE_DORIS_HTTPPORT=8030</span><br><span class="line"><span class="comment">## Doris 数据库名称</span></span><br><span class="line">DE_DORIS_DB=dataease</span><br><span class="line"><span class="comment">## Doris 用户名</span></span><br><span class="line">DE_DORIS_USER=root</span><br><span class="line"><span class="comment">## Doris 密码</span></span><br><span class="line">DE_DORIS_PASSWORD=Password123@doris</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kettle 配置</span></span><br><span class="line"><span class="comment">## 是否使用外部 Kettle - (目前还不支持外部Kettle，除非不需运行Kettle，否则请不要修改此参数)</span></span><br><span class="line">DE_EXTERNAL_KETTLE=<span class="literal">false</span></span><br><span class="line"><span class="comment">## Kettle 服务器地址</span></span><br><span class="line">DE_CARTE_HOST=kettle</span><br><span class="line"><span class="comment">## Kettle 访问端口</span></span><br><span class="line">DE_CARTE_PORT=18080</span><br><span class="line"><span class="comment">## Kettle 用户名</span></span><br><span class="line">DE_CARTE_USER=cluster</span><br><span class="line"><span class="comment">## Kettle 密码</span></span><br><span class="line">DE_CARTE_PASSWORD=cluster</span><br></pre></td></tr></table></figure>

<h3 id="不同安装模式的区别">6.2.1 &nbsp&nbsp<a href="#不同安装模式的区别" class="headerlink" title="不同安装模式的区别"></a>不同安装模式的区别</h3><div class="note info no-icon"><p>DE_ENGINE_MODE&#x3D;local<br>使用本地模式安装，DataEase 会自带 Doris 与 Kettle 组件，无需再做额外配置，但各组件均为单点，不具备高可用特性。<br>在此模式下，Excel 数据集、API 数据集以及定时同步的数据默认保存在自带的 Doris 组件中。</p>
</div>

<div class="note info no-icon"><p>DE_ENGINE_MODE&#x3D;simple<br>使用精简模式安装，系统不会额外安装 Doris 与 Kettle 组件，提供用户轻量级的应用系统，尤其是对接数据量较小的情况。<br>在此模式下，Excel 数据集或 API 数据集的相关数据存储在数据引擎中（默认配置自带的 MySQL 组件，用户可在系统管理界面配置数据引擎，数据引擎目前仅支持 MySQL 类型）。<br>注意：由于精简模式未配置 Kettle 与 Doris，故精简模式不提供定时同步模式。</p>
</div>

<div class="note info no-icon"><p>DE_ENGINE_MODE&#x3D;cluster<br>使用集群模式安装，系统不会额外安装 Doris 与 Kettle 组件，但会在系统管理模块提供 Doris 与 Kettle 的链接配置界面（请参考【系统管理】的【系统参数】说明），用户可独立安装 Doris 集群及 Kettle 并配置在 DataEase 中。集群模式下 Excel 数据集，API 数据集以及定时同步的数据通过 Kettle 抽取到 Doris 集群中。<br>Doris 安装部署可参考：<a href="http://doris.incubator.apache.org/zh-CN/">http://doris.incubator.apache.org/zh-CN/</a><br>Kettle 安装部署可参考：<a href="http://www.kettle.org.cn/">http://www.kettle.org.cn/</a></p>
</div>

<h2 id="安装DataEase">6.3 &nbsp&nbsp<a href="#安装DataEase" class="headerlink" title="安装DataEase"></a>安装DataEase</h2><p>运行命令安装DataEase，并查看对应docker容器是否正常运行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash ./install.sh</span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<h2 id="创建DataEase的踩坑记录">6.4 &nbsp&nbsp<a href="#创建DataEase的踩坑记录" class="headerlink" title="创建DataEase的踩坑记录"></a>创建DataEase的踩坑记录</h2><h3 id="doris-be容器状态一直为unhealthy">6.4.1 &nbsp&nbsp<a href="#doris-be容器状态一直为unhealthy" class="headerlink" title="doris-be容器状态一直为unhealthy"></a>doris-be容器状态一直为unhealthy</h3><p>问题：doris-be容器状态一直为unhealthy，一直在尝试反复启动。<code>docker logs doris-be</code>查看到如下日志输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">doris_role:be</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; FE_SERVERS=[fe1:172.19.0.198:9010]</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; BE_ADDR=[172.19.0.199:9050]</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; feIpArray = 172.19.0.198</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; feEditLogPortArray = 9010</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; masterFe = 172.19.0.198:9010</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; be_addr = 172.19.0.199:9050</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; Append the configuration [priority_networks = 172.19.0.0/24] to /opt/apache-doris/be/conf/fe.conf</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; registerMySQL = mysql -uroot -P9030 -h172.19.0.198  -e <span class="string">&quot;alter system add backend &#x27;172.19.0.199:9050&#x27;&quot;</span></span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; registerShell = /opt/apache-doris/be/bin/start_be.sh &amp;</span><br><span class="line">mysql -uroot -P9030 -h172.19.0.198  -e <span class="string">&quot;show backends&quot;</span> | grep <span class="string">&quot; 172.19.0.199 &quot;</span> | grep <span class="string">&quot; 9050 &quot;</span></span><br><span class="line">10003   default_cluster 172.19.0.199    9050    -1      -1      -1      NULL    NULL    <span class="literal">false</span>   <span class="literal">false</span>   <span class="literal">false</span>   0       0.000   1.000 B       0.000   0.00 %  0.00 %  0.000   &#123;<span class="string">&quot;location&quot;</span> : <span class="string">&quot;default&quot;</span>&#125;        java.net.NoRouteToHostException: No route to host (Host unreachable)          &#123;<span class="string">&quot;lastStreamLoadTime&quot;</span>:-1,<span class="string">&quot;isQueryDisabled&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;isLoadDisabled&quot;</span>:<span class="literal">false</span>&#125;        1</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; The  0 <span class="keyword">time</span> to register BE node, be_join_status=0</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; run <span class="built_in">command</span> /opt/apache-doris/be/bin/start_be.sh &amp;</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; registered : 1</span><br><span class="line">Please <span class="built_in">set</span> vm.max_map_count to be 2000000 under root using <span class="string">&#x27;sysctl -w vm.max_map_count=2000000&#x27;</span>.</span><br><span class="line">ERROR 1105 (HY000) at line 1: errCode = 2, detailMessage = There is no scanNode Backend available.[10003: not alive]</span><br><span class="line">DEBUG &gt;&gt;&gt;&gt;&gt;&gt; The  1  <span class="keyword">time</span> to check is_alive &gt;&gt;&gt;&gt;&gt;&gt; 1</span><br><span class="line">ERROR 1105 (HY000) at line 1: errCode = 2, detailMessage = There is no scanNode Backend available.[10003: not alive]</span><br></pre></td></tr></table></figure>
<p>可以查看上述日志输出提示<code>Please set vm.max_map_count to be 2000000 under root using &#39;sysctl -w vm.max_map_count=2000000&#39;.</code></p>
<p>原因：Doris作为分布式数据库，对于内存映射数量有要求，Linux系统默认参数值无法满足，例如PVE系统默认的<code>vm.max_map_count=262144</code>。</p>
<ul>
<li>解决方法1：请在运行doris容器的宿主机上，运行<code>sysctl -w vm.max_map_count=2000000</code>命令设置<code>vm.max_map_count</code>内核参数。若宿主机本身也是容器化的虚拟机，例如PVE的LXC容器，可以直接在PVE上运行命令修改参数。<ul>
<li>查看参数值：<code>sysctl vm.max_map_count</code></li>
<li>宿主机PVE重启后，<code>vm.max_map_count</code>参数可能会被重置为默认值，若查看日志仍提示报错，请尝试重设参数。</li>
</ul>
</li>
<li>解决方法2：换DataEase v2版本，v2系列不需要部署Doris。</li>
</ul>
<h3 id="在DataEase添加Excel数据集后，预览数据界面无法加载，并一直提示Access-denied-for-user-root-172-19-0-4">6.4.2 &nbsp&nbsp<a href="#在DataEase添加Excel数据集后，预览数据界面无法加载，并一直提示Access-denied-for-user-root-172-19-0-4" class="headerlink" title="在DataEase添加Excel数据集后，预览数据界面无法加载，并一直提示Access denied for user &#39;root@172.19.0.4&#39;"></a>在DataEase添加Excel数据集后，预览数据界面无法加载，并一直提示<code>Access denied for user &#39;root@172.19.0.4&#39;</code></h3><p>原因：修改过<code>install.conf</code>的MySQL和Doris的密码都会导致出现该故障。据<a href="https://github.com/dataease/dataease/issues/5939">5939的issue</a>反馈该问题在1.18.23已修复，但本人使用1.18.27版本部署，修改密码仍会出现该问题。</p>
<p>解决方法：不修改<code>install.conf</code>的MySQL和Doris的密码，直接使用模板预设的默认密码完成部署。</p>
<h2 id="DataEase使用踩坑纪录">6.5 &nbsp&nbsp<a href="#DataEase使用踩坑纪录" class="headerlink" title="DataEase使用踩坑纪录"></a>DataEase使用踩坑纪录</h2><ul>
<li>变更&#x2F;删除数据集，均会导致丢失仪表盘的过滤器参数</li>
<li>仪表盘的视图在超过1000条数据时则无法全部导出excel表格（比如实际导出的excel表格行数为1001，有一行是表头）<ul>
<li>建议导出操作，使用数据集的导出功能。</li>
</ul>
</li>
<li>excel数据源若有几万行，则无法成功导入dataease作为数据集，在数据同步阶段会失效（可能是内存溢出的问题，有待排查验证）</li>
<li>V2社区开源版不支持创建多用户</li>
</ul>
<h1 id="Docker-Desktop（Windows）">7 &nbsp&nbsp<a href="#Docker-Desktop（Windows）" class="headerlink" title="Docker Desktop（Windows）"></a>Docker Desktop（Windows）</h1><h2 id="Docker-Unexpected-error">7.1 &nbsp&nbsp<a href="#Docker-Unexpected-error" class="headerlink" title="Docker Unexpected error"></a>Docker Unexpected error</h2><p>问题：无法启用Docker Desktop，提示报错<code>Docker Unexpected error</code>。</p>
<p>原因：之前有安装并卸载过Docker Desktop。重新安装Docker Desktop有可能触发此问题。</p>
<p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --unregister docker-desktop</span><br><span class="line">wsl --unregister docker-desktop-data</span><br><span class="line"><span class="comment"># 运行上面两条命令，然后重新启动Docker Desktop</span></span><br></pre></td></tr></table></figure>

<h1 id="参考文献">8 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Docker Unexpected error[EB&#x2F;OL]. <a href="https://github.com/docker/for-win/issues/14034">https://github.com/docker/for-win/issues/14034</a>.<br>[2] Install Docker Engine on Debian[EB&#x2F;OL]. <a href="https://docs.docker.com/engine/install/debian/#install-using-the-repository">https://docs.docker.com/engine/install/debian/#install-using-the-repository</a>.<br>[3] DockerHub 国内加速镜像列表[EB&#x2F;OL]. <a href="https://github.com/dongyubin/DockerHub">https://github.com/dongyubin/DockerHub</a>.<br>[4] Docker 容器使用[EB&#x2F;OL]. <a href="https://www.runoob.com/docker/docker-container-usage.html">https://www.runoob.com/docker/docker-container-usage.html</a>.<br>[5] [Question]配置doris数据源提示错误：Access denied for user &#39;<a href="mailto:&#x72;&#111;&#x6f;&#116;&#x40;&#x31;&#x37;&#50;&#46;&#x31;&#x39;&#46;&#x30;&#x2e;&#x34;">root@172.19.0.4</a>&#39; (using password: YES)[EB&#x2F;OL]. <a href="https://github.com/dataease/dataease/issues/5939">https://github.com/dataease/dataease/issues/5939</a>.<br>[6] 安装模式[EB&#x2F;OL]. <a href="https://dataease.io/docs/v1/installation/installation_mode/#11">https://dataease.io/docs/v1/installation/installation_mode/#11</a>.<br>[7] Docker Build Cache 缓存清理[EB&#x2F;OL]. <a href="https://blog.csdn.net/catoop/article/details/128002962">https://blog.csdn.net/catoop/article/details/128002962</a>.<br>[8] docker下redis容器清理缓存[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_44662304/article/details/114694451">https://blog.csdn.net/weixin_44662304/article/details/114694451</a>.<br>[9] “版本发布”下，自己上传的文件url错误[EB&#x2F;OL]. <a href="https://forum.gitea.com/t/url/8030/1">https://forum.gitea.com/t/url/8030/1</a>.<br>[10] 反向代理[EB&#x2F;OL]. <a href="https://docs.gitea.com/zh-cn/administration/reverse-proxies">https://docs.gitea.com/zh-cn/administration/reverse-proxies</a>.<br>[11] 使用 Docker 安装[EB&#x2F;OL]. <a href="https://docs.gitea.com/zh-cn/next/installation/install-with-docker">https://docs.gitea.com/zh-cn/next/installation/install-with-docker</a>.<br>[12] Act Runner[EB&#x2F;OL]. <a href="https://docs.gitea.com/zh-cn/next/usage/actions/act-runner">https://docs.gitea.com/zh-cn/next/usage/actions/act-runner</a>.<br>[13] 备份与恢复[EB&#x2F;OL]. <a href="https://docs.gitea.com/zh-cn/next/administration/backup-and-restore">https://docs.gitea.com/zh-cn/next/administration/backup-and-restore</a>.<br>[14] 求助：Docker-compose部署act_runner出现错误[EB&#x2F;OL]. <a href="https://forum.gitea.com/t/docker-compose-act-runner/8525">https://forum.gitea.com/t/docker-compose-act-runner/8525</a>.<br>[15] Runner Will Not Register via Docker Compose[EB&#x2F;OL]. <a href="https://gitea.com/gitea/act_runner/issues/550">https://gitea.com/gitea/act_runner/issues/550</a>.<br>[16] runner: level&#x3D;error msg&#x3D;&quot;Cannot ping the Gitea instance server&quot; error&#x3D;&quot;unknown: 500 Internal Server Error&quot;[EB&#x2F;OL]. <a href="https://gitea.com/gitea/act_runner/issues/400">https://gitea.com/gitea/act_runner/issues/400</a>.<br>[17] 使用docker-compose 部署 MySQL（所有版本通用）[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_44606481/article/details/132840940">https://blog.csdn.net/weixin_44606481/article/details/132840940</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
  </entry>
  <entry>
    <title>Git总结笔记</title>
    <url>/code/git/</url>
    <content><![CDATA[<h1 id="语言编码的区别">1 &nbsp&nbsp<a href="#语言编码的区别" class="headerlink" title="语言编码的区别"></a>语言编码的区别</h1><ul>
<li>zh-CN：中国大陆区域的中文。包括各种大方言、小方言、繁体、简体等等都可以被匹配到。</li>
<li>zh-Hans：简体中文。适用区域范围是全宇宙用中文简体的地方，内容包括各种用简体的方言等。</li>
</ul>
<h1 id="三维模型等二进制文件的版本控制">2 &nbsp&nbsp<a href="#三维模型等二进制文件的版本控制" class="headerlink" title="三维模型等二进制文件的版本控制"></a>三维模型等二进制文件的版本控制</h1><p>git和svn适合管理文本类的代码文件，perforce更适合管理像游戏资产3D模型、psd图像文件等的大型文件。</p>
<p>Perforce Helix Core官网下载：<a href="https://www.perforce.com/products">点击跳转</a></p>
<h1 id="linux和windows之间的文件换行符">3 &nbsp&nbsp<a href="#linux和windows之间的文件换行符" class="headerlink" title="linux和windows之间的文件换行符"></a>linux和windows之间的文件换行符</h1><p>windows中的换行符（dos）是\r\n，而linux中的换行符（unix）是\n。若不转换，git可能会视作为被更改的文件，从而造成大量无意义的commit。此外，windows中bat脚本文件要求换行符为\r\n，否则cmd解释器无法正确解析，导致无法正确执行脚本。</p>
<p>单文件转换：</p>
<ul>
<li>\r\n转\n：<code>dos2unix test.c</code></li>
<li>\n转\r\n：<code>unix2dos test.c</code></li>
</ul>
<p>批量转换：</p>
<ul>
<li>\r\n转\n：<code>find . -type f -exec dos2unix &#123;&#125; \;</code></li>
<li>\n转\r\n：<code>find . -type f -exec unix2dos &#123;&#125; \;</code></li>
</ul>
<p>详细命令解释：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find .: Find anything in this directory, including its subdirectories, and anything in those subdirectories as well (recursion)</span><br><span class="line">-type f: Only return &#x27;regular file&#x27; names. Exclude folder names from the results.</span><br><span class="line">-exec: Execute the following command for every result. Everything beyond this point should be treated as part of that command until the ; character is found.</span><br><span class="line">dos2unix: dos2unix will be executed with the following options...</span><br><span class="line">-k: Keep the date stamp of the output file the same as the input file</span><br><span class="line">-s: Skip binary files (images, archives, etc.). This option is included by default, but I use it anyway in case that default were different on some systems (e.g. OS X v. Debian v. CentOS v. Ubuntu v. ...).</span><br><span class="line">-o: Write the changes directly to the file, rather than creating a new file with the data in the new format.</span><br><span class="line">&#123;&#125;: This tells find to insert the filename it has found as a parameter of the dos2unix call.</span><br><span class="line">&#x27;;&#x27;: Tell find that the params for dos2unix have ended. Anything beyond this point will again be treated as a parameter of find. 反斜杠\是用于转移分号;</span><br><span class="line">&#x27;&#123;&#125;&#x27; is a placeholder which indicates where in the command you want the filename(s) to be inserted, and &#x27;+&#x27; terminates the said command. You can also run dos2unix once for each filename (by changing &#x27;+&#x27; with &#x27;;&#x27;), but since dos2unix accepts an arbitrary number of input arguments, it’s better to use it (as it avoids spawning many processes).</span><br></pre></td></tr></table></figure>

<h2 id="换行符问题导致git同步错误">3.1 &nbsp&nbsp<a href="#换行符问题导致git同步错误" class="headerlink" title="换行符问题导致git同步错误"></a>换行符问题导致git同步错误</h2><p>若出现本地仓库文件和远程仓库文件出现crlf和lf不相同的问题，会导致git代码同步报错。</p>
<p>解决方法：使用editorconfig文件规定文档。</p>
<h1 id="Git配置">4 &nbsp&nbsp<a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h1><h2 id="编辑git特定的config项">4.1 &nbsp&nbsp<a href="#编辑git特定的config项" class="headerlink" title="编辑git特定的config项"></a>编辑git特定的config项</h2><p>打开<code>%USERPROFILE%\.gitconfig</code>文件，编辑特定的设置项即可。</p>
<h2 id="代理设置">4.2 &nbsp&nbsp<a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy https://127.0.0.1:1080</span><br><span class="line">git config --global http.proxy <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line">git config --global https.proxy <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消代理</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure>

<h2 id="关于git的重命名操作">4.3 &nbsp&nbsp<a href="#关于git的重命名操作" class="headerlink" title="关于git的重命名操作"></a>关于git的重命名操作</h2><p>git默认对大小写不敏感，一般可通过两种方式避免git未识别大小写操作。</p>
<p>方式1：中间文件方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># git mv（重命名索引，文件夹直接大小写重命名可能无法成功，可以用tmp做中间处理，文件直接大小写无问题）</span></span><br><span class="line">git <span class="built_in">mv</span> myfolder tmp</span><br><span class="line">git <span class="built_in">mv</span> tmp MyFolder</span><br></pre></td></tr></table></figure>

<p>方式2：设置git配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config core.ignorecase <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h1 id="pull（拉取）">5 &nbsp&nbsp<a href="#pull（拉取）" class="headerlink" title="pull（拉取）"></a>pull（拉取）</h1><h2 id="github从远程仓库拉取">5.1 &nbsp&nbsp<a href="#github从远程仓库拉取" class="headerlink" title="github从远程仓库拉取"></a>github从远程仓库拉取</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin master <span class="comment"># 相当于fetch后merge</span></span><br></pre></td></tr></table></figure>

<h2 id="github从上游拉取未并入主干的拉取请求-pull-request">5.2 &nbsp&nbsp<a href="#github从上游拉取未并入主干的拉取请求-pull-request" class="headerlink" title="github从上游拉取未并入主干的拉取请求(pull request)"></a>github从上游拉取未并入主干的拉取请求(pull request)</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># 添加远程上游，仓库地址填写需要拉取的上游</span><br><span class="line">git remote add upstream https://github.com/USER/repository.git</span><br><span class="line"># ID 填pull-request id，BRANCHNAME填准备拉取到本地的某个分支名</span><br><span class="line">git pull upstream pull/ID/head:BRANCHNAME</span><br><span class="line"># 切换到分支目录</span><br><span class="line">git checkout BRANCHNAME</span><br><span class="line"># push到自己fork之后的上游</span><br><span class="line">git push -u origin BRANCHNAME</span><br></pre></td></tr></table></figure>

<h1 id="clone（克隆）">6 &nbsp&nbsp<a href="#clone（克隆）" class="headerlink" title="clone（克隆）"></a>clone（克隆）</h1><h2 id="常规克隆">6.1 &nbsp&nbsp<a href="#常规克隆" class="headerlink" title="常规克隆"></a>常规克隆</h2><p>git clone http链接（可以不包含.git后缀）</p>
<h2 id="wget从Github仓库下载特定的文件夹">6.2 &nbsp&nbsp<a href="#wget从Github仓库下载特定的文件夹" class="headerlink" title="wget从Github仓库下载特定的文件夹"></a>wget从Github仓库下载特定的文件夹</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -O为输出到指定文件，-和-O配合，不输出到具体文件，而是标准输出。可通过管道符|直接给其他命令。</span></span><br><span class="line"><span class="comment"># -x为解压，-z为gzip解压缩，移除目录，-C指定解压路径，--strip根据数字移除后面给定目录结构参数</span></span><br><span class="line">wget -O - https://github.com/Mister-Kin/PublicResources/archive/refs/heads/main.tar.gz | tar -xz -C path --strip=2 PublicResources-main/test</span><br></pre></td></tr></table></figure>

<h2 id="克隆特定分支">6.3 &nbsp&nbsp<a href="#克隆特定分支" class="headerlink" title="克隆特定分支"></a>克隆特定分支</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 克隆特定分支，-b（--branch）支持输入tag，--recursive包含子仓库</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive -b v1.0 url</span><br><span class="line">git <span class="built_in">clone</span> --recursive -b branch—name url</span><br></pre></td></tr></table></figure>

<h2 id="克隆远程仓库中的指定文件或者文件夹">6.4 &nbsp&nbsp<a href="#克隆远程仓库中的指定文件或者文件夹" class="headerlink" title="克隆远程仓库中的指定文件或者文件夹"></a>克隆远程仓库中的指定文件或者文件夹</h2><p>以克隆blender手册翻译的简中为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> locale</span><br><span class="line"><span class="built_in">cd</span> locale</span><br><span class="line"><span class="comment"># 为当前目录初始化一个git仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 添加上游git链接</span></span><br><span class="line">git remote add -f origin https://projects.blender.org/blender/blender-manual-translations.git</span><br><span class="line"><span class="comment"># 设置稀疏检出的筛选目录，sparse-checkout文件里写入要拉取的文件或者文件夹。匹配规则类似.gitignore</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;zh-hans&quot;</span> &gt;&gt; .git/info/sparse-checkout</span><br><span class="line"><span class="comment"># 或者使用sparse-checkout set命令设置设置稀疏检出的筛选目录</span></span><br><span class="line">git sparse-checkout <span class="built_in">set</span> <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"><span class="comment"># 开启稀疏检出</span></span><br><span class="line">git config core.sparsecheckout <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最后执行拉取获得特定文件或者文件夹</span></span><br><span class="line">git pull origin main</span><br></pre></td></tr></table></figure>

<h1 id="commit（提交）">7 &nbsp&nbsp<a href="#commit（提交）" class="headerlink" title="commit（提交）"></a>commit（提交）</h1><h2 id="commit信息的规范化">7.1 &nbsp&nbsp<a href="#commit信息的规范化" class="headerlink" title="commit信息的规范化"></a>commit信息的规范化</h2><p>规范编写的commit message可通过auto changelog发布release：</p>
<ul>
<li>chore</li>
<li>fix</li>
<li>feat</li>
<li>docs</li>
</ul>
<h1 id="release（发布）">8 &nbsp&nbsp<a href="#release（发布）" class="headerlink" title="release（发布）"></a>release（发布）</h1><h2 id="常规发布">8.1 &nbsp&nbsp<a href="#常规发布" class="headerlink" title="常规发布"></a>常规发布</h2><p>github release create -a ..&#x2F;learngit&#x2F;README.md -m &quot;release my first program&quot; v1.0.1</p>
<h2 id="release-note的规范化">8.2 &nbsp&nbsp<a href="#release-note的规范化" class="headerlink" title="release note的规范化"></a>release note的规范化</h2><ul>
<li>Breaking Changes</li>
<li>Changes</li>
<li>New Features</li>
<li>Features</li>
<li>Bug Fixes</li>
<li>Improvements</li>
<li>Documentation（可缩写 Docs）</li>
</ul>
<blockquote>
<p>注：支持……版本，英文用 Support for …… 表示</p>
</blockquote>
<h1 id="添加子仓库">9 &nbsp&nbsp<a href="#添加子仓库" class="headerlink" title="添加子仓库"></a>添加子仓库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/Mister-Kin/actions.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动如下功能，更新主仓，同时会执行submodule update</span></span><br><span class="line">git config --global submodule.recurse <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h1 id="重写历史">10 &nbsp&nbsp<a href="#重写历史" class="headerlink" title="重写历史"></a>重写历史</h1><h2 id="删除所有commit">10.1 &nbsp&nbsp<a href="#删除所有commit" class="headerlink" title="删除所有commit"></a>删除所有commit</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf .git</span><br><span class="line">git init</span><br><span class="line">git remote add origin url（仓库地址） <span class="comment"># git remote -v</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;commit message&#x27;</span></span><br><span class="line">git push --force origin master</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意如果使用这种方式，强制推送到远程github仓库的话，实际查看github网站的信息，貌似并没有缩小，可能数据更新有延迟。</p>
</blockquote>
<p>还有另外一种方式，在github网站上删除该reop，并重新建立同名repo再推送。</p>
<h2 id="从所有commit中清除特定文件">10.2 &nbsp&nbsp<a href="#从所有commit中清除特定文件" class="headerlink" title="从所有commit中清除特定文件"></a>从所有commit中清除特定文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git filter-branch --index-filter <span class="string">&#x27;git rm --cached --ignore-unmatch filename&#x27;</span> HEAD <span class="comment">#（*.pdf）</span></span><br><span class="line">git <span class="built_in">rm</span> -rf --ignore-unmatch .git/refs/original <span class="comment">#删除git的备份</span></span><br><span class="line">git reflog expire --expire=now --all <span class="comment">#使所有散落的object失效</span></span><br><span class="line">git fsck --full --unreachable <span class="comment">#检查是否有散落的object, 验证数据库中对象的连接性和有效性</span></span><br><span class="line">git repack -A -d <span class="comment">#重新打包所有对象，并删除旧的打包文件</span></span><br><span class="line">git gc --aggressive --prune=now <span class="comment">#git的垃圾清理车最终删除那些对象, --aggressive 此选项将导致git gc更积极地优化存储库</span></span><br></pre></td></tr></table></figure>

<h1 id="分支管理">11 &nbsp&nbsp<a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><h2 id="常规操作">11.1 &nbsp&nbsp<a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -M master <span class="comment"># 创建分支</span></span><br></pre></td></tr></table></figure>

<h2 id="多人协作的工作流">11.2 &nbsp&nbsp<a href="#多人协作的工作流" class="headerlink" title="多人协作的工作流"></a>多人协作的工作流</h2><p>多人协作注意版本控制，分支把控好，不能污染上游，开发者每个人单独分支。</p>
<h2 id="常规分支管理项目">11.3 &nbsp&nbsp<a href="#常规分支管理项目" class="headerlink" title="常规分支管理项目"></a>常规分支管理项目</h2><p>dev分支常规开发，hotfix分支临时修复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Switched to a new branch &quot;dev&quot;</span></span><br><span class="line">git checkout -b dev</span><br><span class="line"><span class="comment"># Switched to a new branch &quot;hotfix&quot;</span></span><br><span class="line">git checkout -b hotfix</span><br><span class="line"><span class="comment"># 切换到主分支</span></span><br><span class="line">git checkout master</span><br><span class="line"><span class="comment"># 合并hotfix分支</span></span><br><span class="line">git merge hotfix</span><br><span class="line"><span class="comment"># 删除hotfix分支</span></span><br><span class="line">git branch -d hotfix</span><br></pre></td></tr></table></figure>

<h1 id="切换分支时有未提交的文件">12 &nbsp&nbsp<a href="#切换分支时有未提交的文件" class="headerlink" title="切换分支时有未提交的文件"></a>切换分支时有未提交的文件</h1><p>应用场景：在dev分支进行开发编写，突然发现master分支有bug，想checkout分支（切换分支），但此时dev分支上有未提交的文件，并且也并不想现在提交。</p>
<p>解决方案：</p>
<ol>
<li>在dev分支上git stash，储藏当前工作区</li>
<li>checkout到master分支进行bug修复（新建bugfix分支时，完成后合并，删除）</li>
<li>checkout到dev分支，git stash list</li>
<li>git stash pop，恢复工作区（该方式恢复的同时也把stash内容删除）。（另一种方式是git stash apply（恢复）后git stash drop（删除））</li>
</ol>
<h1 id="远程仓库">13 &nbsp&nbsp<a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h1><h2 id="重命名分支并推送到远程仓库">13.1 &nbsp&nbsp<a href="#重命名分支并推送到远程仓库" class="headerlink" title="重命名分支并推送到远程仓库"></a>重命名分支并推送到远程仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Rename the local branch to the new name</span></span><br><span class="line">git branch -m &lt;old_name&gt; &lt;new_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Delete the old branch on remote - where &lt;remote&gt; is, for example, origin</span></span><br><span class="line">git push &lt;remote&gt; --delete &lt;old_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Or shorter way to delete remote branch [:]</span></span><br><span class="line">git push &lt;remote&gt; :&lt;old_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除失败时，请更改默认分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prevent git from using the old name when pushing in the next step.</span></span><br><span class="line"><span class="comment"># Otherwise, git will use the old upstream name instead of &lt;new_name&gt;.</span></span><br><span class="line">git branch --unset-upstream &lt;new_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Push the new branch to remote</span></span><br><span class="line">git push &lt;remote&gt; &lt;new_name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reset the upstream branch for the new_name local branch</span></span><br><span class="line">git push &lt;remote&gt; -u &lt;new_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="删除已经推送到远程仓库中的包含在-gitignore中的文件">13.2 &nbsp&nbsp<a href="#删除已经推送到远程仓库中的包含在-gitignore中的文件" class="headerlink" title="删除已经推送到远程仓库中的包含在.gitignore中的文件"></a>删除已经推送到远程仓库中的包含在.gitignore中的文件</h2><p>.gitignore文件中添加新的文件过滤，但是该文件在之前已经提交到远程仓库分支里，我们需要将远程分支代码中的这个文件移除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.为避免冲突，同步已下远程仓库最新代码</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.在本地项目目录下删除git缓存</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.add所有文件：输入以下命令，再次将项目中所有文件添加到本地仓库缓存中</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.本地commit</span></span><br><span class="line">git commit -m <span class="string">&quot;filter new files&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.push到远程仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h2 id="unable-to-access-github-OpenSSL-SSL-read-Connection-was-reset-errno-10054">13.3 &nbsp&nbsp<a href="#unable-to-access-github-OpenSSL-SSL-read-Connection-was-reset-errno-10054" class="headerlink" title="unable to access github: OpenSSL SSL_read: Connection was reset, errno 10054"></a>unable to access github: OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>这是由于Http协议错误，刷新缓存即可解决</p>
<div class="tabs" id="flush_dns"><ul class="nav-tabs"><li class="tab active"><a href="#flush_dns-1">Windows</a></li><li class="tab"><a href="#flush_dns-2">Mac</a></li></ul><div class="tab-content"><div class="tab-pane active" id="flush_dns-1"><p>使用终端命令窗口运行命令：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="flush_dns-2"><p>使用终端命令窗口运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> killall -HUP mDNSResponder</span><br><span class="line"><span class="built_in">sudo</span> dscacheutil -flushcache</span><br></pre></td></tr></table></figure></div></div></div>

<h2 id="更改已提交到远程仓库的commit消息（修改错别字或添加信息）">13.4 &nbsp&nbsp<a href="#更改已提交到远程仓库的commit消息（修改错别字或添加信息）" class="headerlink" title="更改已提交到远程仓库的commit消息（修改错别字或添加信息）"></a>更改已提交到远程仓库的commit消息（修改错别字或添加信息）</h2><ol>
<li>git rebase -i HEAD~n(N为最近n个提交)</li>
<li>git会生成一个文件在编辑器打开，在需要修改的commit那一行中，将pick修改为reword，保存关闭</li>
<li>之后会弹出一个文件，在编辑器修改后保存关闭</li>
<li>之后强制push到远程仓库</li>
</ol>
<h2 id="RPC-failed-curl-92-HTTP-2-stream-0-was-not-closed-cleanly-CANCEL-err-8">13.5 &nbsp&nbsp<a href="#RPC-failed-curl-92-HTTP-2-stream-0-was-not-closed-cleanly-CANCEL-err-8" class="headerlink" title="RPC failed; curl 92 HTTP&#x2F;2 stream 0 was not closed cleanly: CANCEL (err 8)"></a>RPC failed; curl 92 HTTP&#x2F;2 stream 0 was not closed cleanly: CANCEL (err 8)</h2><p>因为git文件过大造成的错误，默认缓冲区是1M大小。</p>
<p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.postBuffer 524288000 <span class="comment"># 设置为500M</span></span><br></pre></td></tr></table></figure>

<h2 id="已经提交Pull-Request的如何二次修改覆盖">13.6 &nbsp&nbsp<a href="#已经提交Pull-Request的如何二次修改覆盖" class="headerlink" title="已经提交Pull Request的如何二次修改覆盖"></a>已经提交Pull Request的如何二次修改覆盖</h2><ol>
<li>本地git reset撤销提交，然后重新完成二次修改</li>
<li>push -f强行覆盖掉你远程的commit</li>
<li>上游仓库的PR会自动更新相关内容（例如xx强制push commit）</li>
<li>有其他的新内容commit，push普通推送也能自动追加到上游仓库的PR中。</li>
</ol>
<h1 id="Github-LFS">14 &nbsp&nbsp<a href="#Github-LFS" class="headerlink" title="Github LFS"></a>Github LFS</h1><p>Github LFS是收费产品，免费账户只有1G的存储空间和带宽流量（本人已弃用）。</p>
<p>仓库一旦使用LFS存储，无法直接通过wget或者curl工具下载原文件，只会下载到一个文本指针文件，指向LFS的存储云地址。</p>
<h2 id="为Git启用LFS">14.1 &nbsp&nbsp<a href="#为Git启用LFS" class="headerlink" title="为Git启用LFS"></a>为Git启用LFS</h2><p>Windows Git LFS大文件管理：windows上使用Git for windows客户端程序时，LFS启用命令：<code>git lfs install</code>。</p>
<p>ubuntu安装LFS包：<code>sudo apt install git-lfs</code>。</p>
<h2 id="LFS基本使用">14.2 &nbsp&nbsp<a href="#LFS基本使用" class="headerlink" title="LFS基本使用"></a>LFS基本使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加LFS需要管理的大文件，如果文件名就是*.txt，则需要用双引号&quot;&quot;包含</span></span><br><span class="line"><span class="comment"># 若无引号，通配符*会被shell扩展，导致LFS跟踪所有txt文件</span></span><br><span class="line">git lfs track test.txt</span><br><span class="line">git lfs track *.txt</span><br><span class="line">git lfs track <span class="string">&quot;*.txt&quot;</span></span><br><span class="line"><span class="comment"># 取消LFS跟踪文件</span></span><br><span class="line">git lfs untrack *.txt</span><br><span class="line"><span class="comment"># 常规git操作都可以处理LFS文件，显式指定lfs命令可提高速度</span></span><br><span class="line">git <span class="built_in">clone</span></span><br><span class="line">git pull origin main</span><br><span class="line"><span class="comment"># git lfs clone是检出（checkout）完成后再批量下载所有必需的 Git LFS 文件。利用并行下载的优势，显著减少产生的 HTTP 请求和进程的数量</span></span><br><span class="line">git lfs <span class="built_in">clone</span></span><br><span class="line"><span class="comment"># 同样地，lfs提供拉取速度</span></span><br><span class="line">git lfs pull origin main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除lfs，然后手动删除.gitattribute中关于lfs的条目</span></span><br><span class="line">git lfs uninstall</span><br><span class="line"><span class="comment"># 重组织所有文件，可以使标记为lfs文件恢复到正常状态，但不会影响到不关联的文件。</span></span><br><span class="line">git add --renormalize .</span><br><span class="line"><span class="comment"># 重新提交</span></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>

<h1 id="CI-CD">15 &nbsp&nbsp<a href="#CI-CD" class="headerlink" title="CI&#x2F;CD"></a>CI&#x2F;CD</h1><p>重复繁琐的工作交予自动CI&#x2F;CD完成。</p>
<h1 id="参考文献">16 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] How do I rename both a Git local and remote branch name?[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/30590083/how%E2%80%91do%E2%80%91i%E2%80%91rename%E2%80%91both%E2%80%91a%E2%80%91git%E2%80%91local%E2%80%91and%E2%80%91remote%E2%80%91branch%E2%80%91name">https://stackoverflow.com/questions/30590083/how‑do‑i‑rename‑both‑a‑git‑local‑and‑remote‑branch‑name</a>.<br>[2] Git 中 submodule 的使用[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/614114699">https://zhuanlan.zhihu.com/p/614114699</a>.<br>[3] Why is git submodule not updated automatically on git checkout?[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/1899792/why%E2%80%91is%E2%80%91git%E2%80%91submodule%E2%80%91not%E2%80%91updated%E2%80%91automatically%E2%80%91on%E2%80%91git%E2%80%91checkout">https://stackoverflow.com/questions/1899792/why‑is‑git‑submodule‑not‑updated‑automatically‑on‑git‑checkout</a>.<br>[4] git lfs安装及使用方法[EB&#x2F;OL]. <a href="https://blog.csdn.net/michaelshare/article/details/83183806">https://blog.csdn.net/michaelshare/article/details/83183806</a>.<br>[5] Git克隆远程仓库中的指定文件或者文件夹[EB&#x2F;OL]. <a href="https://blog.csdn.net/fsfsdgsdg/article/details/127177631">https://blog.csdn.net/fsfsdgsdg/article/details/127177631</a>.<br>[6] How to run dos2unix on all files with all extensions in a directory and its sun-directories?[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/67254229/how-to-run-dos2unix-on-all-files-with-all-extensions-in-a-directory-and-its-sun">https://stackoverflow.com/questions/67254229/how-to-run-dos2unix-on-all-files-with-all-extensions-in-a-directory-and-its-sun</a>.<br>[7] How to pull a pull request from upstream in github[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/54033842/how-to-pull-a-pull-request-from-upstream-in-github">https://stackoverflow.com/questions/54033842/how-to-pull-a-pull-request-from-upstream-in-github</a>.<br>[8] 详解 Git 大文件存储（Git LFS）[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/146683392">https://zhuanlan.zhihu.com/p/146683392</a>.<br>[9] Git Sparse Checkout使用指南[EB&#x2F;OL]. <a href="https://blog.csdn.net/shelutai/article/details/123116973">https://blog.csdn.net/shelutai/article/details/123116973</a>.<br>[10] git-sparse-checkout[EB&#x2F;OL]. <a href="https://www.git-scm.com/docs/git-sparse-checkout">https://www.git-scm.com/docs/git-sparse-checkout</a>.<br>[11] Simple steps to uninstall Git LFS from your repository[EB&#x2F;OL]. <a href="https://github.com/git-lfs/git-lfs/issues/3026">https://github.com/git-lfs/git-lfs/issues/3026</a>.<br>[12] zh-cn 与 zh-hans 是什么关系、有什么区别？[EB&#x2F;OL]. <a href="https://www.zhihu.com/question/21980689">https://www.zhihu.com/question/21980689</a>.<br>[13] github 提交pull request操作后, 如果想对代码再次进行修改，该如何操作？[EB&#x2F;OL]. <a href="https://segmentfault.com/q/1010000012129041">https://segmentfault.com/q/1010000012129041</a>.<br>[14] git filter-branch 命令修改删除提示记录,删除误提交的大文件.减小.git的大小[EB&#x2F;OL]. <a href="https://www.zhaokeli.com/article/8332.html">https://www.zhaokeli.com/article/8332.html</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>git</tag>
        <tag>github</tag>
        <tag>代码管理</tag>
        <tag>版本控制</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo个人博客搭建踩坑记</title>
    <url>/code/hexo/</url>
    <content><![CDATA[<h1 id="开发环境配置">1 &nbsp&nbsp<a href="#开发环境配置" class="headerlink" title="开发环境配置"></a>开发环境配置</h1><h2 id="安装Node-js和启用Yarn">1.1 &nbsp&nbsp<a href="#安装Node-js和启用Yarn" class="headerlink" title="安装Node.js和启用Yarn"></a>安装Node.js和启用Yarn</h2><p>下载链接：</p>
<ul>
<li><a href="https://nodejs.org/en/download">Node.js</a>：推荐LTS长期版，不推荐用最新版，可能很多npm并未能适配新版。</li>
<li><a href="https://github.com/yarnpkg/yarn/releases">Yarn（&lt;&#x3D;v1.22.19才有编译好的安装包）</a>：若要使用新版Yarn，则不需要下载离线包安装，通过Node.js的corepack启用即可。</li>
</ul>
<p>启用Yarn：</p>
<div class="tabs" id="enable_yarn"><ul class="nav-tabs"><li class="tab active"><a href="#enable_yarn-1">通过Corepack启用Yarn（>v1.22.19，要求Node.js>=16.10）</a></li><li class="tab"><a href="#enable_yarn-2">通过离线包启用Yarn（<= v1.22.19）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="enable_yarn-1"><ol>
<li>管理员终端运行命令启用：<code>corepack enable</code>，执行成功之后yarn命令即可系统全局正常调用。</li>
<li>终端运行命令：<code>yarn global bin</code>，复制路径添加到用户的PATH环境变量中。（这一步一定需要手动添加路径，因为程序没有自动添加PATH变量）</li>
</ol></div><div class="tab-pane" id="enable_yarn-2"><p>下载安装Yarn离线包即可，程序会自动添加PATH环境变量（Yarn程序路径和Package二进制程序路径）。</p></div></div></div>

<h2 id="yarn和npm部分对应命令">1.2 &nbsp&nbsp<a href="#yarn和npm部分对应命令" class="headerlink" title="yarn和npm部分对应命令"></a>yarn和npm部分对应命令</h2><table>
<thead>
<tr>
<th align="center">yarn命令</th>
<th align="center">npm命令</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>yarn init</code></td>
<td align="center"><code>npm init</code></td>
<td align="center">初始化</td>
</tr>
<tr>
<td align="center"><code>yarn / yarn install</code></td>
<td align="center"><code>npm install</code></td>
<td align="center">安装包</td>
</tr>
<tr>
<td align="center"><code>yarn add [package]</code></td>
<td align="center"><code>npm install [package] --save</code></td>
<td align="center">安装包</td>
</tr>
<tr>
<td align="center"><code>yarn global add [package]</code></td>
<td align="center"><code>npm install -g [package] --save</code></td>
<td align="center">全局安装包</td>
</tr>
<tr>
<td align="center"><code>yarn remove</code></td>
<td align="center"><code>npm uninstall</code></td>
<td align="center">卸载包</td>
</tr>
<tr>
<td align="center"><code>yarn upgrade</code></td>
<td align="center"><code>npm update</code></td>
<td align="center">更新包</td>
</tr>
<tr>
<td align="center"><code>yarn global dir</code></td>
<td align="center"><code>npm config get prefix</code></td>
<td align="center">查看安装目录</td>
</tr>
<tr>
<td align="center"><code>yarn global bin</code></td>
<td align="center"></td>
<td align="center">查看安装bin目录</td>
</tr>
<tr>
<td align="center"><code>yarn cache dir</code></td>
<td align="center"></td>
<td align="center">查看缓存目录</td>
</tr>
<tr>
<td align="center"><code>yarn cache clear</code></td>
<td align="center"><code>npm cache clean</code></td>
<td align="center">清除缓存目录</td>
</tr>
</tbody></table>
<h2 id="版本和包更新">1.3 &nbsp&nbsp<a href="#版本和包更新" class="headerlink" title="版本和包更新"></a>版本和包更新</h2><blockquote>
<p>站点配置文件<code>_config.yml</code>和主题配置文件<code>_config.next.yml</code>的更新改动项，通过查看Github仓库代码是否存在更新改动。</p>
</blockquote>
<blockquote>
<p>Next主题直接可通过package版本号更新即可。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn outdated <span class="comment"># 检查已过时的包，并修改 package 中 dependencies 中相关版本号</span></span><br><span class="line">yarn global outdated <span class="comment"># 全局检查已过时的包（hexo-cli若已过时，可以先remove再add）</span></span><br><span class="line"><span class="built_in">rm</span> -rf node_modules <span class="comment"># 删除包路径</span></span><br><span class="line">yarn <span class="comment"># 重新为项目安装包，实际等于yarn install（根据package.json安装）</span></span><br></pre></td></tr></table></figure>

<h2 id="npm源设定">1.4 &nbsp&nbsp<a href="#npm源设定" class="headerlink" title="npm源设定"></a>npm源设定</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config get registry  // 查看当前npm源</span><br><span class="line">yarn config delete registry // 重置为官方源</span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com  // 设置npm镜像源（原淘宝镜像源）</span><br></pre></td></tr></table></figure>
<p>当前有效镜像链接：<code>npm config set registry https://registry.npmmirror.com</code><br><del>已失效镜像链接：<code>npm config set registry http://registry.npm.taobao.org</code></del></p>
<h2 id="安装hexo和hexo-cli">1.5 &nbsp&nbsp<a href="#安装hexo和hexo-cli" class="headerlink" title="安装hexo和hexo-cli"></a>安装hexo和hexo-cli</h2><p>在想要安装hexo的位置建立文件夹「hexo」，打开命令行终端，以此路径作为终端工作路径。然后执行下面命令（推荐全局安装）。</p>
<div class="tabs" id="install_hexo"><ul class="nav-tabs"><li class="tab active"><a href="#install_hexo-1">全局安装hexo-cli</a></li><li class="tab"><a href="#install_hexo-2">本地安装hexo-cli</a></li></ul><div class="tab-content"><div class="tab-pane active" id="install_hexo-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn global add hexo-cli <span class="comment"># 全局安装hexo-cli脚手架</span></span><br><span class="line">hexo init <span class="comment"># 初始化hexo，克隆hexo-starter和默认landscape主题仓库</span></span><br><span class="line">hexo s <span class="comment"># hexo server，启用本地服务器，见：http://localhost:4000/</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="install_hexo-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add hexo-cli</span><br><span class="line">node_modules/.bin/hexo.cmd init blog <span class="comment"># init需要空文件夹，所以另外用文件夹「blog」来初始化hexo</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">yarn add <span class="comment"># 一般hexo init之后都会自动安装相关依赖。若没有自动安装时，则需要执行该条命令以手动安装依赖。</span></span><br><span class="line">node_modules/.bin/hexo.cmd s</span><br></pre></td></tr></table></figure></div></div></div>

<h2 id="踩坑纪录">1.6 &nbsp&nbsp<a href="#踩坑纪录" class="headerlink" title="踩坑纪录"></a>踩坑纪录</h2><h3 id="npm-ERR-Error-EPERM-operation-not-permitted-unlink-xxx">1.6.1 &nbsp&nbsp<a href="#npm-ERR-Error-EPERM-operation-not-permitted-unlink-xxx" class="headerlink" title="npm ERR! Error: EPERM: operation not permitted, unlink xxx"></a>npm ERR! Error: EPERM: operation not permitted, unlink xxx</h3><p>问题原因：后台有node在运行相关命令进程，导致无法链接成功。全部终止进程，再运行安装库的命令即可。</p>
<h3 id="运行npm安装包提示报错：certificate-has-expired">1.6.2 &nbsp&nbsp<a href="#运行npm安装包提示报错：certificate-has-expired" class="headerlink" title="运行npm安装包提示报错：certificate has expired"></a>运行npm安装包提示报错：certificate has expired</h3><p>解决方法，关闭HTTPS证书验证即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> strict-ssl <span class="literal">false</span> -g</span><br><span class="line">npm config <span class="built_in">set</span> strict-ssl <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h1 id="hexo配置">2 &nbsp&nbsp<a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h1><h2 id="config-yml">2.1 &nbsp&nbsp<a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>注：language根据主题设置，注意新版Next主题已经没有zh-Hans语言配置文件，设置中文简体请用zh-CN参数。<br>注：新版Next主题主仓库已从 iissnan 名下迁移至 theme-next 组织。<br>注：现阶段新版Next支持Font Awesome 5.13.0，而5.1.4旧版Next版本只支持Font Awesome 4.7.0</p>
<h2 id="为Next主题引入Giscus评论系统">2.2 &nbsp&nbsp<a href="#为Next主题引入Giscus评论系统" class="headerlink" title="为Next主题引入Giscus评论系统"></a>为Next主题引入Giscus评论系统</h2><ol>
<li>前置条件准备：<ol>
<li>点击安装<a href="https://github.com/apps/giscus">Giscus APP</a>，选择安装到自己Github账户下的博客仓库<code>github.io</code>（不用勾选全部仓库）。</li>
<li>启用博客仓库<code>github.io</code>中的<a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/enabling-or-disabling-github-discussions-for-a-repository">Discussions功能</a>。</li>
</ol>
</li>
<li>安装<code>hexo-next-giscus</code>插件：<code>yarn add hexo-next-giscus</code></li>
<li>在博客配置文件<code>_config.yml</code>中添加<code>giscus</code>配置项，具体配置项参数值可以通过<a href="https://giscus.app/zh-CN">Giscus官方配置页面</a>查看（填好仓库地址，页面会检查该仓库地址是否符合要求）。选好各项配置项后，在<code>启用 giscus</code>小节中可以看到最终生成的配置项参数值，例如<code>repo_id</code>和<code>category_id</code>。<code>页面 ↔️ discussion 映射关系（mapping）</code>设置为<code>pathname</code>即可，该选项是用来控制创建<code>discussion</code>的名字，<code>pathname</code>就是博文在博客中的路径值。<code>Discussion 分类（category）</code>设置<code>Announcements</code>类型即可，该类型只有管理员（项目维护者）有权限管理操作。</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">Mister-Kin/Mister-Kin.github.io</span> <span class="comment"># 请填入自己实际的博客仓库 # Github repository name</span></span><br><span class="line">  <span class="attr">repo_id:</span> <span class="comment"># 请填入自己实际的id # Github repository id</span></span><br><span class="line">  <span class="attr">category:</span> <span class="string">Announcements</span> <span class="comment"># Github discussion category</span></span><br><span class="line">  <span class="attr">category_id:</span> <span class="comment"># 请填入自己实际的id # Github discussion category id</span></span><br><span class="line">  <span class="comment"># Available values: pathname | url | title | og:title</span></span><br><span class="line">  <span class="attr">mapping:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">reactions_enabled:</span> <span class="number">1</span></span><br><span class="line">   <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">emit_metadata:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Available values: light | light_high_contrast | light_protanopia | light_tritanopia | dark | dark_high_contrast | dark_protanopia | dark_tritanopia | dark_dimmed | preferred_color_scheme | transparent_dark | noborder_light | noborder_dark | noborder_gray | cobalt | purple_dark</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">preferred_color_scheme</span></span><br><span class="line">  <span class="comment"># Available values: en | zh-CN</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line">  <span class="comment"># Place the comment box above the comments: top | bottom</span></span><br><span class="line">  <span class="attr">input_position:</span> <span class="string">top</span></span><br><span class="line">  <span class="comment"># Load the comments lazily</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">lazy</span></span><br></pre></td></tr></table></figure>

<h2 id="为文章标题实现自动编号">2.3 &nbsp&nbsp<a href="#为文章标题实现自动编号" class="headerlink" title="为文章标题实现自动编号"></a>为文章标题实现自动编号</h2><h3 id="CSS样式实现">2.3.1 &nbsp&nbsp<a href="#CSS样式实现" class="headerlink" title="CSS样式实现"></a>CSS样式实现</h3><div class="note danger no-icon"><p>该CSS样式仅针对hexo-theme-next主题优化，并且也会针对TOC目录项进行适配。</p>
</div>
<p>需要注意的是：计数器应在对应标签上层级的创建，<code>计数器+1</code>就在对应标签中执行。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span>, <span class="selector-class">.post-toc</span>&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>: h1counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h1</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-1</span>&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>: h2counter;</span><br><span class="line">    <span class="attribute">counter-increment</span>: h1counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h2</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-2</span>&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>: h3counter;</span><br><span class="line">    <span class="attribute">counter-increment</span>: h2counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h3</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-3</span>&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>: h4counter;</span><br><span class="line">    <span class="attribute">counter-increment</span>: h3counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h4</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-4</span>&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>: h5counter;</span><br><span class="line">    <span class="attribute">counter-increment</span>: h4counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h5</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-5</span>&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>: h6counter;</span><br><span class="line">    <span class="attribute">counter-increment</span>: h5counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h6</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-6</span>&#123;</span><br><span class="line">    <span class="attribute">counter-increment</span>: h6counter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-1</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(h1counter) <span class="string">&quot;\0000a0\0000a0\0000a0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-2</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(h1counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h2counter) <span class="string">&quot;\0000a0\0000a0\0000a0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-3</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(h1counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h2counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h3counter) <span class="string">&quot;\0000a0\0000a0\0000a0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-4</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(h1counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h2counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h3counter)<span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h4counter)  <span class="string">&quot;\0000a0\0000a0\0000a0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-5</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(h1counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h2counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h3counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h4counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h5counter) <span class="string">&quot;\0000a0\0000a0\0000a0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.post-toc</span> <span class="selector-class">.nav-level-6</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(h1counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h2counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h3counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h4counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h5counter) <span class="string">&quot;.&quot;</span><span class="built_in">counter</span>(h6counter) <span class="string">&quot;\0000a0\0000a0\0000a0&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="live2d的修正处理">2.4 &nbsp&nbsp<a href="#live2d的修正处理" class="headerlink" title="live2d的修正处理"></a>live2d的修正处理</h2><p>参考链接：<a href="https://github.com/xiazeyu/live2d-widget.js/issues/62">&quot;idle&quot; 设置多个动作时每次加载只会执行其中一个动作，不会随机到别的动作</a></p>
<p>关于适配自动构建的两个解决方法：</p>
<ul>
<li>Github Action自动构建需要相应修改命令（比较繁琐，因此放弃）</li>
<li>fork源码修改重新编译发布npm包（需要注册npmjs，发布全局包也需审核；使用个人仓库链接作为npm使用即可）</li>
</ul>
<p>详细修改：</p>
<ol>
<li>cModel.js line 369（注释掉原来的，再添加以下代码）</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">motions</span>[motionName] == <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadMotion</span>(motionName, <span class="variable language_">this</span>.<span class="property">modelHomeDir</span> + motionName, <span class="keyword">function</span>(<span class="params">mtn</span>) &#123;</span><br><span class="line">        motion = mtn;</span><br><span class="line"></span><br><span class="line">        thisRef.<span class="title function_">setFadeInFadeOut</span>(name, no, priority, motion);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    motion = <span class="variable language_">this</span>.<span class="property">motions</span>[motionName];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    thisRef.<span class="title function_">setFadeInFadeOut</span>(name, no, priority, motion);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>cManager.js line 89（注释掉原来的，再添加以下代码）</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">models</span>[i].<span class="title function_">startRandomMotion</span>(cDefine.<span class="property">MOTION_GROUP_FLICK_HEAD</span>,</span><br><span class="line">        cDefine.<span class="property">PRIORITY_NORMAL</span>);</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>修改两个文件的代码后，在live2d-widget路径下执行构建命令：<code>npm run inst:dev</code>和<code>npm run build:prod</code></li>
</ol>
<div class="tabs" id="修正并构建live2d"><ul class="nav-tabs"><li class="tab active"><a href="#修正并构建live2d-1">yarn命令版本</a></li><li class="tab"><a href="#修正并构建live2d-2">npm命令版本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="修正并构建live2d-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn global add commitizen &amp;&amp; yarn global add conventional-changelog-cli &amp;&amp; yarn</span><br><span class="line">./node_modules/.bin/webpack --<span class="built_in">env</span> prod --progress --colors &amp;&amp; ./node_modules/.bin/webpack --<span class="built_in">env</span> prod --progress --colors --config webpack.config.common.js</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="修正并构建live2d-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run inst:dev</span><br><span class="line">npm run build:prod</span><br></pre></td></tr></table></figure></div></div></div>

<blockquote>
<p>yarn版本详细命令可通过查看<code>node_modules/live2d-widget/package.json</code>包得知：</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;inst:dev&quot;:</span> <span class="string">&quot;npm install -g commitizen &amp;&amp; npm install -g conventional-changelog-cli &amp;&amp; npm install&quot;</span></span><br><span class="line"><span class="attr">&quot;build:prod&quot;:</span> <span class="string">&quot;./node_modules/.bin/webpack --env prod --progress --colors &amp;&amp; npm run build:module&quot;</span><span class="string">,</span></span><br><span class="line"><span class="attr">&quot;build:module&quot;:</span> <span class="string">&quot;./node_modules/.bin/webpack --env prod --progress --colors --config webpack.config.common.js&quot;</span><span class="string">,</span></span><br></pre></td></tr></table></figure>

<h1 id="Github-Action自动构建">3 &nbsp&nbsp<a href="#Github-Action自动构建" class="headerlink" title="Github Action自动构建"></a>Github Action自动构建</h1><h2 id="以往编写actions测试的一些命令">3.1 &nbsp&nbsp<a href="#以往编写actions测试的一些命令" class="headerlink" title="以往编写actions测试的一些命令"></a>以往编写actions测试的一些命令</h2><p>Bash版本（ubuntu runner）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="subst">$(yarn global bin)</span>&quot;</span></span><br><span class="line">sed -i <span class="string">&quot;s/GITHUB_ACCESS_TOKEN/<span class="variable">$TOKEN_VALUE</span>/g&quot;</span> ./_config.yml <span class="comment"># g在s模式下会替换每个匹配字符串</span></span><br><span class="line">sed -i <span class="string">&quot;s/GITHUB_ACCESS_TOKEN/<span class="variable">$TOKEN_VALUE</span>/&quot;</span> ./_config.yml <span class="comment"># 这个只会替换每行的第一个字符串</span></span><br></pre></td></tr></table></figure>

<p>Powershell版本（windows runner）：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">get-content</span> _config.yml) <span class="operator">-replace</span> <span class="string">&quot;GITHUB_ACCESS_TOKEN&quot;</span>, <span class="string">&quot;<span class="variable">$TOKEN_VALUE</span>&quot;</span> | <span class="built_in">Set-content</span> _config.yml</span><br><span class="line"><span class="variable">$env:Path</span> += <span class="variable">$env:localappdata</span>/yarn/bin</span><br><span class="line"><span class="variable">$env:Path</span> +=<span class="string">&quot;;C:\Users\runneradmin\AppData\Local\Yarn\bin&quot;</span></span><br><span class="line">stix_2_math_font_path=<span class="variable">$</span>(find / <span class="literal">-name</span> STIXTwoMath<span class="literal">-Regular</span>.otf <span class="number">2</span>&gt;/dev/null)</span><br><span class="line"><span class="built_in">cp</span> <span class="literal">-a</span> <span class="variable">$stix_2_math_font_path</span> ./LaTeXFonts</span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-P</span> ./LaTeXFonts https://github.com/stipub/stixfonts/blob/master/fonts/static_otf/STIXTwoMath<span class="literal">-Regular</span>.otf</span><br></pre></td></tr></table></figure>

<h1 id="hexo部署报错排查">4 &nbsp&nbsp<a href="#hexo部署报错排查" class="headerlink" title="hexo部署报错排查"></a>hexo部署报错排查</h1><h2 id="postinstall-npm-run-build-highlight-failed">4.1 &nbsp&nbsp<a href="#postinstall-npm-run-build-highlight-failed" class="headerlink" title="postinstall: npm run build:highlight failed"></a>postinstall: npm run build:highlight failed</h2><p>问题现象：在操作更新hexo-renderer-marked，在使用yarn执行构建时候，出现报错：<code>hexo-util: command failed. Command: npm run build:highlight</code>。经过尝试全局单独安装<code>hexo-util</code>排查发现，<code>&quot;npm&#39;is not recognized as an internal or external command.</code>。</p>
<p>问题原因：安装<code>node.js</code>，由于未勾选启用<code>npm</code>模块，导致系统安装的<code>node.js</code>环境缺失<code>npm</code>，但由于新依赖包直接在包构建命令里面新增并写死了<code>npm</code>命令，导致无法正常构建。</p>
<p>解决方法：重新运行<code>node.js</code>安装包，选择「change」选项，启用<code>npm</code>模块。然后重新运行<code>yarn</code>构建。</p>
<h2 id="Stylus-for-Node-v14-Accessing-non-existent-property-errors">4.2 &nbsp&nbsp<a href="#Stylus-for-Node-v14-Accessing-non-existent-property-errors" class="headerlink" title="Stylus for Node v14 &#39;Accessing non-existent property&#39; errors"></a>Stylus for Node v14 &#39;Accessing non-existent property&#39; errors</h2><p>问题原因：Node.js v14环境搭配出现该报错。</p>
<p>解决方法：<br>本地开发环境Node.js版本选择v12，可避免出现<code>Stylus for Node v14 &#39;Accessing non-existent property&#39; errors</code>。</p>
<h2 id="stylus出现奇怪的依赖报错问题">4.3 &nbsp&nbsp<a href="#stylus出现奇怪的依赖报错问题" class="headerlink" title="stylus出现奇怪的依赖报错问题"></a>stylus出现奇怪的依赖报错问题</h2><p>问题原因：stylus的依赖问题。</p>
<p>解决方法1：</p>
<ol>
<li>更新hexo-renderer-stylus到v3.0.0以后（该版本默认子依赖stylus为v0.59.0）。</li>
<li>更新hexo-theme-next到v8.17.0以后（解决 stylus 依赖问题 ——css 库依赖报错）。</li>
</ol>
<p>解决方法2：<br>在<code>package.json</code>中用<code>resolutions</code>字段手动指定<code>stylus</code>依赖的版本。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;resolutions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.58.1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="hexo插件">5 &nbsp&nbsp<a href="#hexo插件" class="headerlink" title="hexo插件"></a>hexo插件</h1><h2 id="修复hexo-heading-index插件bug的记录">5.1 &nbsp&nbsp<a href="#修复hexo-heading-index插件bug的记录" class="headerlink" title="修复hexo-heading-index插件bug的记录"></a>修复<code>hexo-heading-index</code>插件bug的记录</h2><p>点击查看<a href="https://github.com/r12f/hexo-heading-index/pull/8">PR的具体修改内容</a>。关于debug的思路：在<code>updateHeadingIndexes</code>函数前后分别输出对应的数据，然后对比内容查看数据具体存在什么问题。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> contentKeys = [<span class="string">&#x27;content&#x27;</span>, <span class="string">&#x27;excerpt&#x27;</span>];</span><br><span class="line">contentKeys.<span class="title function_">forEach</span>(<span class="function">(<span class="params">contentKey</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ( contentKey == <span class="string">&#x27;excerpt&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">        fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;D:/excerpt_before.txt&#x27;</span>, contentKey, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    postInfo[contentKey] = <span class="title function_">updateHeadingIndexes</span>(options, postInfo[contentKey]);</span><br><span class="line">    <span class="keyword">if</span> ( contentKey == <span class="string">&#x27;excerpt&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">        fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;D:/excerpt_after.txt&#x27;</span>, contentKey, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>关于cheerio库的配置：<a href="https://cheerio.nodejs.cn/docs/advanced/configuring-cheerio">配置 Cheerio</a></p>
<h2 id="hexo-tag-mmedia插件替代方案标签">5.2 &nbsp&nbsp<a href="#hexo-tag-mmedia插件替代方案标签" class="headerlink" title="hexo-tag-mmedia插件替代方案&lt;ifame&gt;标签"></a>hexo-tag-mmedia插件替代方案<code>&lt;ifame&gt;</code>标签</h2><p>用 <code>&lt;iframe&gt;</code> 在 HTML 中插入B站视频：</p>
<ul>
<li><a href="https://perrykum.github.io/rtcls/study/bliframe/bliframe.html">https://perrykum.github.io/rtcls/study/bliframe/bliframe.html</a></li>
</ul>
<h2 id="hexo插件开发资料">5.3 &nbsp&nbsp<a href="#hexo插件开发资料" class="headerlink" title="hexo插件开发资料"></a>hexo插件开发资料</h2><ul>
<li><a href="https://hexo.io/docs/plugins.html#Plugin">https://hexo.io/docs/plugins.html#Plugin</a></li>
<li><a href="https://jiangtj.com/articles/beechnut/hexo-next-injects/">https://jiangtj.com/articles/beechnut/hexo-next-injects/</a></li>
<li><a href="https://theme-next.js.org/docs/advanced-settings/injects">https://theme-next.js.org/docs/advanced-settings/injects</a></li>
<li><a href="https://jayshao.com/hexo-inject-css-js/">https://jayshao.com/hexo-inject-css-js/</a></li>
<li><a href="https://frapples.github.io/articles/2016-09-21-6d0.html">https://frapples.github.io/articles/2016-09-21-6d0.html</a></li>
</ul>
<h1 id="参考文献">6 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] npm 淘宝镜像最新官方指引（2023.08.31）[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/653480874">https://zhuanlan.zhihu.com/p/653480874</a>.<br>[2] postinstall: npm run build:highlight failes leaving full hexo install unusable...[EB&#x2F;OL]. <a href="https://github.com/hexojs/hexo%E2%80%91util/issues/9">https://github.com/hexojs/hexo‑util/issues/9</a>.<br>[3] Step-by-step[EB&#x2F;OL]. <a href="https://yarnpkg.com/migration/guide">https://yarnpkg.com/migration/guide</a>.<br>[4] giscus[EB&#x2F;OL]. <a href="https://giscus.app/zh-CN">https://giscus.app/zh-CN</a>.<br>[5] Hexo评论系统对比推荐[EB&#x2F;OL]. <a href="https://yzs020220.github.io/posts/44102">https://yzs020220.github.io/posts/44102</a>.<br>[6] Hugo 博客引入 Giscus 评论系统[EB&#x2F;OL]. <a href="https://www.lixueduan.com/posts/blog/02-add-giscus-comment">https://www.lixueduan.com/posts/blog/02-add-giscus-comment</a>.<br>[7] CSS技巧：利用counter-reset和counter-increment实现标题自动编号[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_26822029/article/details/118864239">https://blog.csdn.net/qq_26822029/article/details/118864239</a>.<br>[8] 使用 Node.js 写入文件[EB&#x2F;OL]. <a href="https://dev.nodejs.cn/learn/writing-files-with-nodejs/">https://dev.nodejs.cn/learn/writing-files-with-nodejs/</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX语法总结笔记</title>
    <url>/code/latex/</url>
    <content><![CDATA[<h1 id="Latex环境的安装与配置">1 &nbsp&nbsp<a href="#Latex环境的安装与配置" class="headerlink" title="Latex环境的安装与配置"></a>Latex环境的安装与配置</h1><h2 id="Texlive发行版的下载">1.1 &nbsp&nbsp<a href="#Texlive发行版的下载" class="headerlink" title="Texlive发行版的下载"></a>Texlive发行版的下载</h2><ul>
<li><a href="https://tug.org/texlive/">官网导航下载地址</a>，点击<code>an ISO image or via torrent</code>-&gt;<code>download from a nearby CTAN mirror</code>-&gt;下载最新的iso文件。</li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学镜像下载地址</a>，点击<code>获取下载链接</code>-&gt;<code>应用软件</code>-&gt;<code>TeX 排版系统</code>-&gt;<code>TeX Live 2024 (Windows &amp; Linux)</code>。</li>
</ul>
<h2 id="Texlive的安装">1.2 &nbsp&nbsp<a href="#Texlive的安装" class="headerlink" title="Texlive的安装"></a>Texlive的安装</h2><ol>
<li>加载镜像，双击执行install-tl-windows.bat</li>
<li>安装路径保持默认的<code>C:/texlive/2024</code></li>
<li>点击<code>Advanced</code><ul>
<li><code>N. of collections</code>-&gt;<code>Languages</code>（全勾选无，然后只勾选下面三个，然后确认）<ul>
<li>Chinese</li>
<li>Chinese&#x2F;Japanese&#x2F;Korean (base)</li>
<li>US and UK English</li>
</ul>
</li>
<li>取消勾选<code>安装 Texworks 前端</code></li>
</ul>
</li>
<li>其他选项保持默认，然后点击开始安装。</li>
<li>测试Tex安装情况。打开控制台（CMD或Powershell），输入命令测试<code>tex -v</code>、<code>latex -v</code>、<code>xelatex -v</code>。<ul>
<li>P.S. 如果命令控制台显示找不到命令，在系统环境变量Path中添加texlive bin的路径：<code>C:\texlive\2024\bin\windows</code>。</li>
</ul>
</li>
<li>Tex更新：控制台输入<code>tlmgr update --all</code>。</li>
</ol>
<h2 id="VS-Code的相应配置">1.3 &nbsp&nbsp<a href="#VS-Code的相应配置" class="headerlink" title="VS Code的相应配置"></a>VS Code的相应配置</h2><p>关于在VSC中建立latex的snippets 用户代码片段时，若需要输出 \ 换行命令，需要在 json 里输入六个 \\\ 才能真正输出\的，个人想法是VSC传递机制非标准化，不符合 标准的转义字符输出。</p>
<h1 id="文档元素">2 &nbsp&nbsp<a href="#文档元素" class="headerlink" title="文档元素"></a>文档元素</h1><h2 id="图片">2.1 &nbsp&nbsp<a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="自适应缩放大小">2.1.1 &nbsp&nbsp<a href="#自适应缩放大小" class="headerlink" title="自适应缩放大小"></a>自适应缩放大小</h3><p>使用width参数缩放到0.5倍的文本宽度，scale参数就是图片相对于原尺寸缩放，比较难以控制。</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 此处用textwidth文本宽度，或者也可以用linewidth线宽</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[h!]</span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=0.5<span class="keyword">\linewidth</span>]&#123;figure&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;锚点文字&#125;</span><br><span class="line">    <span class="keyword">\label</span>&#123;图片注解&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 在minipage环境中，可以直接使用整倍线宽，就是minipage的宽度</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.48<span class="keyword">\linewidth</span>&#125;</span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=<span class="keyword">\linewidth</span>]&#123;developer<span class="built_in">_</span>hint&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;UI提示方案菜单：开发者模式&#125;</span><br><span class="line">    <span class="keyword">\label</span>&#123;开发者提示方案&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;minipage&#125;</span><br></pre></td></tr></table></figure>

<h1 id="宏包">3 &nbsp&nbsp<a href="#宏包" class="headerlink" title="宏包"></a>宏包</h1><h2 id="moderncv">3.1 &nbsp&nbsp<a href="#moderncv" class="headerlink" title="moderncv"></a>moderncv</h2><p>moderncv的宏包是分文件编写的，具体语法参照texmf-dist\tex\latex\moderncv中的各个模块。</p>
<h1 id="常见问题">4 &nbsp&nbsp<a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="reference-bib中参考文献中的title中写法">4.1 &nbsp&nbsp<a href="#reference-bib中参考文献中的title中写法" class="headerlink" title="reference.bib中参考文献中的title中写法"></a>reference.bib中参考文献中的title中写法</h2><p>和LaTeX语法一样，如果有特殊符号，一样要使用反斜杠标注，例如_要写成_，不然编译会导致所有参考文献没有输出。</p>
<h2 id="大型LaTeX文档中的input命令">4.2 &nbsp&nbsp<a href="#大型LaTeX文档中的input命令" class="headerlink" title="大型LaTeX文档中的input命令"></a>大型LaTeX文档中的input命令</h2><p>编写大型的LaTeX文档，在子文件中的input命令的路径应输入完整，即从项目顶层路径。input命令仅仅是插入该文档，不会做其他工作。</p>
<p>例如项目文件夹为<code>main</code>，下设<code>sub/subsub/</code>两层文件夹，sub中的tex文件要想插入subsub中的tex文件，应为<code>\input&#123;sub/subsub/xxx.tex&#125;</code>，而非<code>\input&#123;subsub/xxx.tex&#125;</code>。原因就是input仅仅是做插入，当main中的tex文件插入sub中xxx.tex，如果仅仅输入<code>\input&#123;subsub/xxx.tex&#125;</code>，编译时main根本就找不到文件，路径缺失了sub。</p>
<h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 【latex】LaTeX调整图片大小的方法；自动调整合适的大小[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_39589455/article/details/128533896">https://blog.csdn.net/weixin_39589455/article/details/128533896</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>语法</tag>
        <tag>笔记</tag>
        <tag>LaTeX</tag>
        <tag>TeX</tag>
        <tag>编译</tag>
        <tag>排版</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法总结笔记</title>
    <url>/code/markdown/</url>
    <content><![CDATA[<h1 id="标题">1 &nbsp&nbsp<a href="#标题" class="headerlink" title="标题"></a>标题</h1><ul>
<li>一级标题：<code># 标题</code></li>
<li>二级标题：<code>## 标题</code></li>
<li>三级标题：<code>### 标题</code></li>
<li>四级标题：<code>#### 标题</code></li>
<li>五级标题：<code>##### 标题</code></li>
<li>六级标题：<code>###### 标题</code></li>
</ul>
<h1 id="链接">2 &nbsp&nbsp<a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>链接中添加空格的方法</p>
<ul>
<li>使用<code>\&amp;\#32</code></li>
<li>使用<code>-</code>替代空格</li>
</ul>
<h1 id="代码块">3 &nbsp&nbsp<a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="行内代码">3.1 &nbsp&nbsp<a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>反引号（位于tab键之上）包裹住代码内容：<code>`代码内容`</code></p>
<h2 id="多行代码（围栏代码块）">3.2 &nbsp&nbsp<a href="#多行代码（围栏代码块）" class="headerlink" title="多行代码（围栏代码块）"></a>多行代码（围栏代码块）</h2><p>在代码内容前后使用三个反引号包裹住。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">```语言关键字</span></span><br><span class="line"><span class="code">代码内容</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>

<p>代码块支持语法高亮的语言关键字：</p>
<table>
<thead>
<tr>
<th>language</th>
<th>key</th>
</tr>
</thead>
<tbody><tr>
<td>1C</td>
<td>1c</td>
</tr>
<tr>
<td>ActionScript</td>
<td>actionscript</td>
</tr>
<tr>
<td>Apache</td>
<td>apache</td>
</tr>
<tr>
<td>AppleScript</td>
<td>applescript</td>
</tr>
<tr>
<td>AsciiDoc</td>
<td>asciidoc</td>
</tr>
<tr>
<td>AspectJ</td>
<td>asciidoc</td>
</tr>
<tr>
<td>AutoHotkey</td>
<td>autohotkey</td>
</tr>
<tr>
<td>AVR Assembler</td>
<td>avrasm</td>
</tr>
<tr>
<td>Axapta</td>
<td>axapta</td>
</tr>
<tr>
<td>Bash</td>
<td>bash</td>
</tr>
<tr>
<td>BrainFuck</td>
<td>brainfuck</td>
</tr>
<tr>
<td>Cap’n Proto</td>
<td>capnproto</td>
</tr>
<tr>
<td>Clojure REPL</td>
<td>clojure</td>
</tr>
<tr>
<td>Clojure</td>
<td>clojure</td>
</tr>
<tr>
<td>CMake</td>
<td>cmake</td>
</tr>
<tr>
<td>CoffeeScript</td>
<td>coffeescript</td>
</tr>
<tr>
<td>C++</td>
<td>cpp</td>
</tr>
<tr>
<td>C#</td>
<td>cs</td>
</tr>
<tr>
<td>CSS</td>
<td>css</td>
</tr>
<tr>
<td>D</td>
<td>d</td>
</tr>
<tr>
<td>Dart</td>
<td>d</td>
</tr>
<tr>
<td>Delphi</td>
<td>delphi</td>
</tr>
<tr>
<td>Diff</td>
<td>diff</td>
</tr>
<tr>
<td>Django</td>
<td>django</td>
</tr>
<tr>
<td>DOS.bat</td>
<td>dos</td>
</tr>
<tr>
<td>Dust</td>
<td>dust</td>
</tr>
<tr>
<td>Elixir</td>
<td>elixir</td>
</tr>
<tr>
<td>ERB(Embedded Ruby)</td>
<td>erb</td>
</tr>
<tr>
<td>Erlang REPL</td>
<td>erlang-repl</td>
</tr>
<tr>
<td>Erlang</td>
<td>erlang</td>
</tr>
<tr>
<td>FIX</td>
<td>fix</td>
</tr>
<tr>
<td>F#</td>
<td>fsharp</td>
</tr>
<tr>
<td>G-code(ISO 6983)</td>
<td>gcode</td>
</tr>
<tr>
<td>Gherkin</td>
<td>gherkin</td>
</tr>
<tr>
<td>GLSL</td>
<td>glsl</td>
</tr>
<tr>
<td>Go</td>
<td>go</td>
</tr>
<tr>
<td>Gradle</td>
<td>gradle</td>
</tr>
<tr>
<td>Groovy</td>
<td>groovy</td>
</tr>
<tr>
<td>Haml</td>
<td>haml</td>
</tr>
<tr>
<td>Handlebars</td>
<td>handlebars</td>
</tr>
<tr>
<td>Haskell</td>
<td>haskell</td>
</tr>
<tr>
<td>Haxe</td>
<td>haxe</td>
</tr>
<tr>
<td>HTML</td>
<td>html</td>
</tr>
<tr>
<td>HTTP</td>
<td>http</td>
</tr>
<tr>
<td>Ini file</td>
<td>ini</td>
</tr>
<tr>
<td>Java</td>
<td>java</td>
</tr>
<tr>
<td>JavaScript</td>
<td>javascript</td>
</tr>
<tr>
<td>JSON</td>
<td>json</td>
</tr>
<tr>
<td>Lasso</td>
<td>lasso</td>
</tr>
<tr>
<td>Less</td>
<td>less</td>
</tr>
<tr>
<td>Lisp</td>
<td>lisp</td>
</tr>
<tr>
<td>LiveCode</td>
<td>livecodeserver</td>
</tr>
<tr>
<td>LiveScript</td>
<td>livescript</td>
</tr>
<tr>
<td>Lua</td>
<td>lua</td>
</tr>
<tr>
<td>Makefile</td>
<td>makefile</td>
</tr>
<tr>
<td>Markdown</td>
<td>markdown</td>
</tr>
<tr>
<td>Mathematica</td>
<td>mathematica</td>
</tr>
<tr>
<td>Matlab</td>
<td>matlab</td>
</tr>
<tr>
<td>MEL (Maya Embedded Language)</td>
<td>mel</td>
</tr>
<tr>
<td>Mercury</td>
<td>mercury</td>
</tr>
<tr>
<td>Mizar</td>
<td>mizar</td>
</tr>
<tr>
<td>Monkey</td>
<td>monkey</td>
</tr>
<tr>
<td>Nginx</td>
<td>nginx</td>
</tr>
<tr>
<td>Nimrod</td>
<td>nimrod</td>
</tr>
<tr>
<td>Nix</td>
<td>nix</td>
</tr>
<tr>
<td>NSIS</td>
<td>nsis</td>
</tr>
<tr>
<td>Objective C</td>
<td>objectivec</td>
</tr>
<tr>
<td>OCaml</td>
<td>ocaml</td>
</tr>
<tr>
<td>Oxygene</td>
<td>oxygene</td>
</tr>
<tr>
<td>Parser 3</td>
<td>parser3</td>
</tr>
<tr>
<td>Perl</td>
<td>perl</td>
</tr>
<tr>
<td>PHP</td>
<td>php</td>
</tr>
<tr>
<td>PowerShell</td>
<td>powershell</td>
</tr>
<tr>
<td>Processing</td>
<td>processing</td>
</tr>
<tr>
<td>Python’s profiler output</td>
<td>profile</td>
</tr>
<tr>
<td>Protocol Buffers</td>
<td>protobuf</td>
</tr>
<tr>
<td>Puppet</td>
<td>puppet</td>
</tr>
<tr>
<td>Python</td>
<td>python</td>
</tr>
<tr>
<td>Q</td>
<td>q</td>
</tr>
<tr>
<td>R</td>
<td>r</td>
</tr>
<tr>
<td>RenderMan RIB</td>
<td>rib</td>
</tr>
<tr>
<td>Roboconf</td>
<td>roboconf</td>
</tr>
<tr>
<td>RenderMan RSL</td>
<td>rsl</td>
</tr>
<tr>
<td>Ruby</td>
<td>ruby</td>
</tr>
<tr>
<td>Oracle Rules Language</td>
<td>ruleslanguage</td>
</tr>
<tr>
<td>Rust</td>
<td>rust</td>
</tr>
<tr>
<td>Scala</td>
<td>scala</td>
</tr>
<tr>
<td>Scheme</td>
<td>scheme</td>
</tr>
<tr>
<td>Scilab</td>
<td>scilab</td>
</tr>
<tr>
<td>SCSS</td>
<td>scss</td>
</tr>
<tr>
<td>Smali</td>
<td>smali</td>
</tr>
<tr>
<td>SmallTalk</td>
<td>smalltalk</td>
</tr>
<tr>
<td>SML</td>
<td>sml</td>
</tr>
<tr>
<td>SQL</td>
<td>sql</td>
</tr>
<tr>
<td>Stata</td>
<td>stata</td>
</tr>
<tr>
<td>STEP Part21(ISO 10303-21)</td>
<td>step21</td>
</tr>
<tr>
<td>Stylus</td>
<td>stylus</td>
</tr>
<tr>
<td>Swift</td>
<td>swift</td>
</tr>
<tr>
<td>Tcl</td>
<td>tcl</td>
</tr>
<tr>
<td>Tex</td>
<td>tex</td>
</tr>
<tr>
<td>text</td>
<td>text&#x2F;plain</td>
</tr>
<tr>
<td>Thrift</td>
<td>thrift</td>
</tr>
<tr>
<td>Twig</td>
<td>twig</td>
</tr>
<tr>
<td>TypeScript</td>
<td>typescript</td>
</tr>
<tr>
<td>Vala</td>
<td>vala</td>
</tr>
<tr>
<td>VB.NET</td>
<td>vbnet</td>
</tr>
<tr>
<td>VBScript in HTML</td>
<td>vbscript-html</td>
</tr>
<tr>
<td>VBScript</td>
<td>vbscript</td>
</tr>
<tr>
<td>Verilog</td>
<td>verilog</td>
</tr>
<tr>
<td>VHDL</td>
<td>vhdl</td>
</tr>
<tr>
<td>Vim Script</td>
<td>vim</td>
</tr>
<tr>
<td>Intel x86 Assembly</td>
<td>x86asm</td>
</tr>
<tr>
<td>XL</td>
<td>xl</td>
</tr>
<tr>
<td>XML</td>
<td>xml</td>
</tr>
<tr>
<td>YAML</td>
<td>yml</td>
</tr>
</tbody></table>
<h1 id="参考资料">4 &nbsp&nbsp<a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] Markdown 官方教程[EB&#x2F;OL]. <a href="https://markdown.com.cn/">https://markdown.com.cn/</a>.<br>[2] MarkDown 支持高亮的语言[EB&#x2F;OL]. <a href="https://blog.csdn.net/u012102104/article/details/78950290">https://blog.csdn.net/u012102104/article/details/78950290</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>语法</tag>
        <tag>笔记</tag>
        <tag>markdown</tag>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>Python总结笔记</title>
    <url>/code/python/</url>
    <content><![CDATA[<h1 id="Python-语法摘记">1 &nbsp&nbsp<a href="#Python-语法摘记" class="headerlink" title="Python 语法摘记"></a>Python 语法摘记</h1><p>python在相对路径import导入时，包名前面的小数点.是必要的，python3之后都是严格模式。</p>
<h1 id="安装python的踩坑记录">2 &nbsp&nbsp<a href="#安装python的踩坑记录" class="headerlink" title="安装python的踩坑记录"></a>安装python的踩坑记录</h1><h2 id="vscode-无法设置python解释器">2.1 &nbsp&nbsp<a href="#vscode-无法设置python解释器" class="headerlink" title="vscode 无法设置python解释器"></a>vscode 无法设置python解释器</h2><p>原因：安装路径在<code>C:\Program Files</code>，vscode权限不够时会导致无法设置python解释器。</p>
<p>解决方法：安装路径直接按默认路径，不装program路径。</p>
<h2 id="pip安装某些包异常">2.2 &nbsp&nbsp<a href="#pip安装某些包异常" class="headerlink" title="pip安装某些包异常"></a>pip安装某些包异常</h2><p>情况：如果pip安装某些包一直有异常，反复安装卸载包都无法解决的话，并且确认不是包的问题的话。</p>
<p>原因：python环境异常。</p>
<p>解决方法：重装python。</p>
<ol>
<li>直接删除python主安装路径的文件</li>
<li>运行安装程序repair</li>
<li>点击卸载，再点击安装（必须要卸载再安装，否则site-packages路径下没有任何包，repair操作不会恢复这个路径的文件）</li>
</ol>
<h1 id="卸载python">3 &nbsp&nbsp<a href="#卸载python" class="headerlink" title="卸载python"></a>卸载python</h1><h2 id="卸载清除已安装的pip包的bat批处理脚本">3.1 &nbsp&nbsp<a href="#卸载清除已安装的pip包的bat批处理脚本" class="headerlink" title="卸载清除已安装的pip包的bat批处理脚本"></a>卸载清除已安装的pip包的bat批处理脚本</h2><div class="tabs" id="purge_pip_packages"><ul class="nav-tabs"><li class="tab active"><a href="#purge_pip_packages-1">python 3.11</a></li><li class="tab"><a href="#purge_pip_packages-2">python 3.10</a></li><li class="tab"><a href="#purge_pip_packages-3">python 3.9</a></li></ul><div class="tab-content"><div class="tab-pane active" id="purge_pip_packages-1"><p>purge_py311_packages.bat</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">py -<span class="number">3</span>.<span class="number">11</span> -m pip freeze &gt; py311_requirements.txt</span><br><span class="line">py -<span class="number">3</span>.<span class="number">11</span> -m pip uninstall -r py311_requirements.txt -y</span><br><span class="line"><span class="built_in">del</span> py311_requirements.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="purge_pip_packages-2"><p>purge_py310_packages.bat</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">py -<span class="number">3</span>.<span class="number">10</span> -m pip freeze &gt; py310_requirements.txt</span><br><span class="line">py -<span class="number">3</span>.<span class="number">10</span> -m pip uninstall -r py310_requirements.txt -y</span><br><span class="line"><span class="built_in">del</span> py310_requirements.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="purge_pip_packages-3"><p>purge_py39_packages.bat</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">py -<span class="number">3</span>.<span class="number">9</span> -m pip freeze &gt; py39_requirements.txt</span><br><span class="line">py -<span class="number">3</span>.<span class="number">9</span> -m pip uninstall -r py39_requirements.txt -y</span><br><span class="line"><span class="built_in">del</span> py39_requirements.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></div></div></div>

<h2 id="清除pip缓存">3.2 &nbsp&nbsp<a href="#清除pip缓存" class="headerlink" title="清除pip缓存"></a>清除pip缓存</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">pip cache purge</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h1 id="python的包管理">4 &nbsp&nbsp<a href="#python的包管理" class="headerlink" title="python的包管理"></a>python的包管理</h1><p>Python包管理是指创建、发布和安装Python包的过程。Python包是一种封装和分发Python代码的方式，以便于其他开发者使用和共享。Python包管理涉及的三个关键组件：PyPI、setuptools和wheel。</p>
<h2 id="PyPI">4.1 &nbsp&nbsp<a href="#PyPI" class="headerlink" title="PyPI"></a>PyPI</h2><p>Python软件包索引（PyPI）是一个在线存储库，用于发布和查找Python包。PyPI允许开发者上传他们的包，并提供一个中心化的搜索引擎，让其他开发者能够找到并安装这些包。PyPI通过pip（Python包安装器）来安装和管理包。</p>
<p>基本的使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 升级pip</span></span><br><span class="line">python -m pip install --upgrade pip</span><br><span class="line">pip install pip -U</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip设定清华源（升级 pip 到最新的版本 (&gt;=10.0.0) 后进再进行配置）</span></span><br><span class="line">pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># win平台pip缓存路径：\%LocalAppData\%&gt;pip&gt;Cache</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时一次性使用镜像源安装包</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包</span></span><br><span class="line">pip install &lt;package_name&gt;</span><br><span class="line"><span class="comment"># 升级包</span></span><br><span class="line">pip install --upgrade &lt;package_name&gt;</span><br><span class="line"><span class="comment"># 卸载包</span></span><br><span class="line">pip uninstall &lt;package_name&gt;</span><br><span class="line"><span class="comment"># 显示包文件信息</span></span><br><span class="line">pip show --files &lt;package_name&gt;</span><br><span class="line"><span class="comment"># 列出已过时的包</span></span><br><span class="line">pip list --outdated</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载全部包</span></span><br><span class="line">pip freeze &gt; requirements.txt</span><br><span class="line">pip uninstall -r requirements.txt -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装全部包</span></span><br><span class="line">pip install -r requirements.txt --upgrade</span><br></pre></td></tr></table></figure>

<h2 id="setuptools和wheel">4.2 &nbsp&nbsp<a href="#setuptools和wheel" class="headerlink" title="setuptools和wheel"></a>setuptools和wheel</h2><p>setuptools是一个Python包管理工具，用于创建、构建和发布Python包。setuptools通过提供易于使用的命令行接口和配置文件（如setup.py）来简化包管理过程。通过使用setuptools，开发者可以方便地将他们的代码打包成可分发的格式，如源代码分发（sdist）和wheel分发（bdist_wheel）。</p>
<p>wheel是一种Python分发格式，用于提高安装速度和兼容性。与源代码分发（sdist）相比，wheel分发是预编译的，这意味着它们不需要在安装过程中进行编译。这使得wheel分发在安装速度和跨平台兼容性方面具有优势。</p>
<p>基本使用：</p>
<ul>
<li>安装setuptools和wheel：<code>pip install setuptools wheel</code></li>
<li>创建setup.py文件：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup, find_packages</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name=<span class="string">&quot;my_package&quot;</span>,</span><br><span class="line">    version=<span class="string">&quot;0.1&quot;</span>,</span><br><span class="line">    packages=find_packages(),</span><br><span class="line">    install_requires=[</span><br><span class="line">        <span class="string">&quot;requests&quot;</span>,</span><br><span class="line">    ],</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<ul>
<li>构建源代码分发和wheel分发：<code>python setup.py sdist bdist_wheel</code></li>
<li>安装twine并发布包到PyPI：</li>
</ul>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">pip install twine</span><br><span class="line">twine upload dist/*</span><br></pre></td></tr></table></figure>
<ul>
<li>安装wheel分发的包：<code>pip install dist/my_package-0.1-py3-none-any.whl</code></li>
</ul>
<h1 id="其他">5 &nbsp&nbsp<a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul>
<li>官方3.9版本最后提供二进制文件下载的是3.9.13版本，之后都是补丁形式。</li>
</ul>
<h1 id="参考文献">6 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1]【Python 基础】Python 包管理：PyPI、setuptools 与 wheel[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_33578950/article/details/130297451">https://blog.csdn.net/qq_33578950/article/details/130297451</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>编程</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt总结笔记</title>
    <url>/code/qt/</url>
    <content><![CDATA[<h1 id="Qt语法">1 &nbsp&nbsp<a href="#Qt语法" class="headerlink" title="Qt语法"></a>Qt语法</h1><p><a href="https://www.cnblogs.com/jfzhu/p/13501678.html">Qt信号与槽使用方法最完整总结</a></p>
<h1 id="Qt学习资料">2 &nbsp&nbsp<a href="#Qt学习资料" class="headerlink" title="Qt学习资料"></a>Qt学习资料</h1><ul>
<li><a href="https://blog.csdn.net/dengjin20104042056/article/details/115174639">Qt6系列教程汇总</a></li>
<li><a href="https://dengjin.blog.csdn.net/article/details/88978836">Qt学习资料汇总</a></li>
</ul>
<h1 id="Qt程序发布的流程">3 &nbsp&nbsp<a href="#Qt程序发布的流程" class="headerlink" title="Qt程序发布的流程"></a>Qt程序发布的流程</h1><ol>
<li>Qt Creator开发程序</li>
<li>选择release编译后，在源码文件夹之外会生成构建的文件夹，带有-Release尾缀，在这个目录下拷贝程序的exe二进制文件到一个新建的文件夹中。</li>
<li>运行windeployqt工具打包动态链接文件：<code>windeployqt program_name.exe</code>。确保提前添加环境变量PATH：<code>C:\Qt\qt6release\bin</code>，否则找不到windeployqt程序。P.S. 使用vs cl终端运行windeployqt会同时拷贝vc_redist.x64.exe安装包（Microsoft Visual C++ 2015-2022 Redistributable (x64) - 14.36.32532，可以解决目标系统缺少dll动态链接库的报错），使用普通的终端运行windeployqt则不会拷贝这个文件（Warning: Cannot find Visual Studio installation directory, VCINSTALLDIR is not set.），但实际上可以手动拷贝dll动态链接库文件到程序根目录，可免去用户再次运行安装运行库。</li>
<li>NSIS打包生成安装包：创建快捷方式、创建卸载程序、界面美化（模仿网易云音乐安装包）、判断是否正在运行、判断并安装VC运行库。</li>
</ol>
<h2 id="单文件封包流程">3.1 &nbsp&nbsp<a href="#单文件封包流程" class="headerlink" title="单文件封包流程"></a>单文件封包流程</h2><p>除了静态编译可以单文件的打包，动态链接编译开发也可以实现，这个需要使用三方封包工具了，一般都是使用<a href="https://enigmaprotector.com/en/downloads.html">Enigma Virtual Box</a>进行单文件的打包。</p>
<p>单文件打包流程：</p>
<ol>
<li>新建文件夹，拷贝qt程序exe，运行windeployqt.exe打包动态链接文件，拷贝额外的MS VC++ DLL文件</li>
<li>打开Enigma Virtual Box，选择打包的程序</li>
<li>选择好打包程序后会自动生成一个打包后的程序名</li>
<li>在增加文件选项里面选择 增加文件夹[递归] ，把前面创建存放文件的文件夹包含进去</li>
<li>在文件选项 选择压缩文件</li>
<li>执行封包</li>
</ol>
<p>缺点：使用Enigma Virtual Box打包的单文件，有可能会被杀毒软件识别为病毒，比如Windows Defender。</p>
<h1 id="Qt下载">4 &nbsp&nbsp<a href="#Qt下载" class="headerlink" title="Qt下载"></a>Qt下载</h1><table>
<thead>
<tr>
<th align="center">资源名称</th>
<th align="center">官方源下载地址</th>
<th align="center">清华镜像源下载地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Qt资源总站</td>
<td align="center"><a href="https://download.qt.io/">点击跳转</a></td>
<td align="center"><a href="https://mirrors.tuna.tsinghua.edu.cn/qt/">点击跳转</a></td>
</tr>
<tr>
<td align="center">Qt源代码</td>
<td align="center"><a href="https://download.qt.io/official_releases/qt/">点击跳转</a></td>
<td align="center"><a href="https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qt/">点击跳转</a></td>
</tr>
<tr>
<td align="center">Qt Creator</td>
<td align="center"><a href="https://download.qt.io/official_releases/qtcreator/">点击跳转</a></td>
<td align="center"><a href="https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/qtcreator/">点击跳转</a></td>
</tr>
<tr>
<td align="center">Qt Linguist</td>
<td align="center"><a href="https://download.qt.io/linguist_releases/">点击跳转</a></td>
<td align="center"><a href="https://mirrors.tuna.tsinghua.edu.cn/qt/linguist_releases/">点击跳转</a></td>
</tr>
</tbody></table>
<h1 id="Qt-Creator的总结">5 &nbsp&nbsp<a href="#Qt-Creator的总结" class="headerlink" title="Qt Creator的总结"></a>Qt Creator的总结</h1><h2 id="安装Qt-Creator提示要求联网登录帐号">5.1 &nbsp&nbsp<a href="#安装Qt-Creator提示要求联网登录帐号" class="headerlink" title="安装Qt Creator提示要求联网登录帐号"></a>安装Qt Creator提示要求联网登录帐号</h2><p>断网再打开Qt Creator的安装包，等跳过检测联网帐号的界面后就可以启用网络继续安装。</p>
<h2 id="修改模板文件以便新建工程时默认支持C-20">5.2 &nbsp&nbsp<a href="#修改模板文件以便新建工程时默认支持C-20" class="headerlink" title="修改模板文件以便新建工程时默认支持C++20"></a>修改模板文件以便新建工程时默认支持C++20</h2><p>使用程序完成批量修改：<a href="https://github.com/Mister-Kin/BatchTools/blob/master/modify_qt_creator_template_files_to_support_c%2B%2B20.bat">modify_qt_creator_template_files_to_support_c++20.bat</a></p>
<div class="tabs" id="template"><ul class="nav-tabs"><li class="tab active"><a href="#template-1">cmake</a></li><li class="tab"><a href="#template-2">qmake</a></li></ul><div class="tab-content"><div class="tab-pane active" id="template-1"><p>将以下文件中的<code>set(CMAKE_CXX_STANDARD 17)</code>修改为<code>set(CMAKE_CXX_STANDARD 20)</code></p>
<ul>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\consoleapp\CMakeLists.txt</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\cpplibrary\CMakeLists.txt</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\plaincpp\CMakeLists.txt</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\qtquickapplication_compat\CMakeLists.txt</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\qtwidgetsapplication\CMakeLists.txt</li>
</ul></div><div class="tab-pane" id="template-2"><p>将以下文件中的<code>CONFIG += c++17</code>修改为<code>CONFIG += c++20</code></p>
<ul>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\consoleapp\file.pro</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\cpplibrary\project.pro</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\plaincpp\file.pro</li>
<li>qtcreator-16.0.2\share\qtcreator\templates\wizards\projects\qtwidgetsapplication\project.pro</li>
</ul></div></div></div>

<h1 id="Qt国际化多语言的总结">6 &nbsp&nbsp<a href="#Qt国际化多语言的总结" class="headerlink" title="Qt国际化多语言的总结"></a>Qt国际化多语言的总结</h1><p>QT官方多语言编程wiki参考：<a href="https://wiki.qt.io/How_to_create_a_multi_language_application#Add_translations_to_the_project">How to create a multi language application</a></p>
<ol>
<li>创建工程文件时，勾选国际化选项。</li>
<li>打开CMakeLists.txt文件，修改<code>$&#123;TS_FILES&#125;</code>对应的文件和手动生成需要的ts文件，找到<code>if($&#123;QT_VERSION_MAJOR&#125; GREATER_EQUAL 6)</code>语句，在该if语句内添加如下内容，其中<code>untitled</code>为项目名称。如果还需要创建对应资源文件的话，就创建languages.qrc并有qt资源编辑器打开编辑。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qt_create_translation(QM_FILES $&#123;CMAKE_SOURCE_DIR&#125; $&#123;TS_FILES&#125;)</span><br><span class="line">qt_add_executable(untitled</span><br><span class="line">    MANUAL_FINALIZATION</span><br><span class="line">    $&#123;PROJECT_SOURCES&#125;</span><br><span class="line">    $&#123;TS_FILES&#125;</span><br><span class="line">    $&#123;QM_FILES&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>编辑ui文件，编辑程序界面文本。</li>
<li>构建工程，ts文件会自动生成对应的文本（无需使用QT Creator的工具-&gt;外部-&gt;Linguist-&gt;Update&#x2F;Release Translations(lupate)，这个工具运行会报错）</li>
</ol>
<h2 id="创建工程提示找不到合适的套件">6.1 &nbsp&nbsp<a href="#创建工程提示找不到合适的套件" class="headerlink" title="创建工程提示找不到合适的套件"></a>创建工程提示找不到合适的套件</h2><p>问题：安装Qt Creator之后，在创建工程提示<code>No suitable kits found</code>.</p>
<p>解决：点击管理，手动设置构建套件kit的qt版本，这是通过选择qmake.exe或者qmake6.exe的路径确认。（不用重装，网上的教程都是重装或者安装在线版本包，但直接重装是无效）。</p>
<h2 id="旧项目的套件配置文件中的CL编译器路径不正确">6.2 &nbsp&nbsp<a href="#旧项目的套件配置文件中的CL编译器路径不正确" class="headerlink" title="旧项目的套件配置文件中的CL编译器路径不正确"></a>旧项目的套件配置文件中的CL编译器路径不正确</h2><p>原因：更新MSVC CL后，老版本编译器就被删除了，旧项目的套件配置文件中的CL编译器路径仍然是老版本的路径，导致路径错误无法识别最新版本的编译器。</p>
<p>解决方法：删除项目父路径中生成的构建配置文件夹，例如<code>build-untitled-x64-Release</code>，然后重新构建新的配置文件夹。</p>
<h1 id="Qt源码编译">7 &nbsp&nbsp<a href="#Qt源码编译" class="headerlink" title="Qt源码编译"></a>Qt源码编译</h1><h2 id="个人编译使用的模块">7.1 &nbsp&nbsp<a href="#个人编译使用的模块" class="headerlink" title="个人编译使用的模块"></a>个人编译使用的模块</h2><p>以下是我个人使用到的模块（按编译顺序列出）</p>
<ul>
<li>qtbase（基础库）</li>
<li>qtshadertools（编译qtdeclarative所需的依赖库）</li>
<li>qtdeclarative（qt quick和QML）</li>
<li>qttools（CMakeLists文件中指明要Qt Linguist包，因此即使在qt creator中没用上「工具」-&gt;「外部」-&gt;「Linguist」也要编译）</li>
<li>qtsvg（<a href="https://github.com/zhuzichu520/FluentUI">FluentUI</a>库所需）</li>
<li>qt5compat（<a href="https://github.com/zhuzichu520/FluentUI">FluentUI</a>库所需）</li>
<li><del>qttranslation</del>（如果不编译这个库，运行windeployqt会出现警告：<code>Warning: Translations will not be available due to the following error. Cannot open C:/Qt/qt6release/translations/catalogs.json</code>。但这个错误实际不影响程序的翻译状态，可以不编译）</li>
</ul>
<h2 id="环境配置和编译步骤">7.2 &nbsp&nbsp<a href="#环境配置和编译步骤" class="headerlink" title="环境配置和编译步骤"></a>环境配置和编译步骤</h2><p>环境变量：一定要确保系统PATH环境变量含有CMake和Ninja路径。关于如何详细设置，可以参见<a href="/code/vscode/#MSVC-CL%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE">MSVC CL编译器的安装和环境设置</a>。</p>
<p><em>注意不能使用ninja直接构建源码，会报错：build.ninja not found。<strong>构建是使用CMake。</strong></em></p>
<p>编译步骤：</p>
<ol>
<li>将源码解压到分区的根目录下，例如：<code>G:\qtbase-everywhere-src-6.9.1</code></li>
<li>在源码文件夹外新建一个文件夹，如<code>qtbasebuild</code>，拷贝该编译脚本进文件夹，打开cmd窗口，执行该脚本（不建议直接双击运行编译脚本，因为脚本编译出错或者执行完毕都会关闭窗口，这样无法得知编译详情）。</li>
<li>编译完成后添加环境变量PATH配置：<code>C:\Qt\qt6release\bin</code></li>
</ol>
<h2 id="单模块逐个编译的BAT脚本">7.3 &nbsp&nbsp<a href="#单模块逐个编译的BAT脚本" class="headerlink" title="单模块逐个编译的BAT脚本"></a>单模块逐个编译的BAT脚本</h2><p>附加编译子模块的方式：运行Qt安装路径下的&#x2F;bin&#x2F;qt-configure-module.bat + 附件模块源码解压路径。</p>
<p>一般普通开发编译release版本即可，debug版本是是编译用来开发调试qt源码的。</p>
<h3 id="编译release版本">7.3.1 &nbsp&nbsp<a href="#编译release版本" class="headerlink" title="编译release版本"></a>编译release版本</h3><h4 id="编译qtbase-release">7.3.1.1 &nbsp&nbsp<a href="#编译qtbase-release" class="headerlink" title="编译qtbase(release)"></a>编译qtbase(release)</h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">chcp</span> <span class="number">65001</span>&gt;<span class="built_in">nul</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">CALL</span> &quot;C:\Program Files (x86)\Microsoft Visual Studio\<span class="number">2022</span>\BuildTools\VC\Auxiliary\Build\vcvarsall.bat&quot; x64</span><br><span class="line">..\qtbase-everywhere-src-<span class="number">6</span>.<span class="number">9</span>.<span class="number">1</span>\configure.bat -prefix C:\Qt\qt6release -c++std c++<span class="number">20</span> -release -optimize-size -shared &amp;&amp; cmake --build . --parallel &amp;&amp; cmake --install .</span><br></pre></td></tr></table></figure>

<h4 id="附加编译其他子模块（release）">7.3.1.2 &nbsp&nbsp<a href="#附加编译其他子模块（release）" class="headerlink" title="附加编译其他子模块（release）"></a>附加编译其他子模块（release）</h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">chcp</span> <span class="number">65001</span>&gt;<span class="built_in">nul</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">CALL</span> &quot;C:\Program Files (x86)\Microsoft Visual Studio\<span class="number">2022</span>\BuildTools\VC\Auxiliary\Build\vcvarsall.bat&quot; x64</span><br><span class="line"><span class="function">C:\<span class="title">Qt</span>\<span class="title">qt6release</span>\<span class="title">bin</span>\<span class="title">qt</span>-<span class="title">configure</span>-<span class="title">module.bat</span> <span class="title">G</span>:\<span class="title">qtshadertools</span>-<span class="title">everywhere</span>-<span class="title">src</span>-6.9.1 &amp;&amp; <span class="title">cmake</span> --<span class="title">build</span> . --<span class="title">parallel</span> &amp;&amp; <span class="title">cmake</span> --<span class="title">install</span> .</span></span><br></pre></td></tr></table></figure>

<h3 id="编译debug版本">7.3.2 &nbsp&nbsp<a href="#编译debug版本" class="headerlink" title="编译debug版本"></a>编译debug版本</h3><h4 id="编译qtbase-debug">7.3.2.1 &nbsp&nbsp<a href="#编译qtbase-debug" class="headerlink" title="编译qtbase(debug)"></a>编译qtbase(debug)</h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">chcp</span> <span class="number">65001</span>&gt;<span class="built_in">nul</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">CALL</span> &quot;C:\Program Files (x86)\Microsoft Visual Studio\<span class="number">2022</span>\BuildTools\VC\Auxiliary\Build\vcvarsall.bat&quot; x64</span><br><span class="line">..\qtbase-everywhere-src-<span class="number">6</span>.<span class="number">9</span>.<span class="number">1</span>\configure.bat -prefix C:\Qt\qt6debug -c++std c++<span class="number">20</span> -debug -shared &amp;&amp; cmake --build . --parallel &amp;&amp; cmake --install .</span><br></pre></td></tr></table></figure>

<h4 id="附加编译其他子模块（debug）">7.3.2.2 &nbsp&nbsp<a href="#附加编译其他子模块（debug）" class="headerlink" title="附加编译其他子模块（debug）"></a>附加编译其他子模块（debug）</h4><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">chcp</span> <span class="number">65001</span>&gt;<span class="built_in">nul</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">CALL</span> &quot;C:\Program Files (x86)\Microsoft Visual Studio\<span class="number">2022</span>\BuildTools\VC\Auxiliary\Build\vcvarsall.bat&quot; x64</span><br><span class="line"><span class="function">C:\<span class="title">Qt</span>\<span class="title">qt6debug</span>\<span class="title">bin</span>\<span class="title">qt</span>-<span class="title">configure</span>-<span class="title">module.bat</span> ..\<span class="title">qtshadertools</span>-<span class="title">everywhere</span>-<span class="title">src</span>-6.9.1 &amp;&amp; <span class="title">cmake</span> --<span class="title">build</span> . --<span class="title">parallel</span> &amp;&amp; <span class="title">cmake</span> --<span class="title">install</span> .</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="编译遇到的坑">7.4 &nbsp&nbsp<a href="#编译遇到的坑" class="headerlink" title="编译遇到的坑"></a>编译遇到的坑</h2><h3 id="系统PATH环境变量含有CL路径，但终端手动编译时依旧报错">7.4.1 &nbsp&nbsp<a href="#系统PATH环境变量含有CL路径，但终端手动编译时依旧报错" class="headerlink" title="系统PATH环境变量含有CL路径，但终端手动编译时依旧报错"></a>系统PATH环境变量含有CL路径，但终端手动编译时依旧报错</h3><p>问题：系统PATH环境变量含有CL路径，直接输入cl可以查询到该命令。但终端手动编译时依旧出错，cmake等操作无法正常运行。</p>
<p>解决方式：需要在MSVC Cl初始化环境的情况下编译。不能使用普通终端运行，虽然系统PATH有添加可识别CL命令，但是CL相关环境变量只能通过vcvarsall.bat设置，例如<code>vcvarsall.bat x64</code>。</p>
<h3 id="无法写入源文件更新的清单">7.4.2 &nbsp&nbsp<a href="#无法写入源文件更新的清单" class="headerlink" title="无法写入源文件更新的清单"></a>无法写入源文件更新的清单</h3><p>报错信息：<code>mt.exe : general error c101008d: Failed to write the updated manifest to the resource of file</code></p>
<p>解决方法：多线程编译偶尔引起的现象，重新运行编译脚本命令即可。（个人见解：多线程编译引起资源阻塞，导致写入失败）</p>
<h3 id="找不到qtshadertools-qsb-工具">7.4.3 &nbsp&nbsp<a href="#找不到qtshadertools-qsb-工具" class="headerlink" title="找不到qtshadertools &#39;qsb&#39;工具"></a>找不到qtshadertools &#39;qsb&#39;工具</h3><p>报错信息：<code>Note: Qt Quick modules not built due to not finding the qtshadertools &#39;qsb&#39; tool.</code></p>
<p>解决方法：qtdeclarative模块依赖于qtshadertools模块，需要先编译安装好qtshadertools，之后再编译安装qtdeclarative。</p>
<h3 id="optimize-size选项导致编译中断">7.4.4 &nbsp&nbsp<a href="#optimize-size选项导致编译中断" class="headerlink" title="optimize_size选项导致编译中断"></a>optimize_size选项导致编译中断</h3><p>报错信息：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">ERROR: <span class="title">Feature</span> &quot;<span class="title">optimize_size</span>&quot;: <span class="title">Forcing</span> <span class="title">to</span> &quot;<span class="title">ON</span>&quot; <span class="title">breaks</span> <span class="title">its</span> <span class="title">condition</span>:</span></span><br><span class="line"><span class="function">    <span class="title">NOT</span> <span class="title">QT_FEATURE_debug</span> <span class="title">OR</span> <span class="title">QT_FEATURE_debug_and_release</span></span></span><br><span class="line"><span class="function"><span class="title">Condition</span> <span class="title">values</span> <span class="title">dump</span>:</span></span><br><span class="line"><span class="function">    <span class="title">QT_FEATURE_debug</span> = &quot;<span class="title">ON</span>&quot;</span></span><br><span class="line"><span class="function">    <span class="title">QT_FEATURE_debug_and_release</span> = &quot;<span class="title">OFF</span>&quot;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">CMake</span> <span class="title">Error</span> <span class="title">at</span> <span class="title">cmake</span>/<span class="title">QtBuildInformation.cmake</span>:194 (<span class="title">message</span>):</span></span><br><span class="line"><span class="function">  <span class="title">Check</span> <span class="title">the</span> <span class="title">configuration</span> <span class="title">messages</span> <span class="title">for</span> <span class="title">an</span> <span class="title">error</span> <span class="title">that</span> <span class="title">has</span> <span class="title">occurred</span>.</span></span><br><span class="line"><span class="function"><span class="title">Call</span> <span class="title">Stack</span> (<span class="title">most</span> <span class="title">recent</span> <span class="title">call</span> <span class="title">first</span>):</span></span><br><span class="line"><span class="function">  <span class="title">cmake</span>/<span class="title">QtBuildInformation.cmake</span>:24 (<span class="title">qt_configure_print_summary</span>)</span></span><br><span class="line"><span class="function">  <span class="title">cmake</span>/<span class="title">QtBuildInternals</span>/<span class="title">QtBuildInternalsConfig.cmake</span>:548 (<span class="title">qt_print_feature_summary</span>)</span></span><br><span class="line"><span class="function">  <span class="title">CMakeLists.txt</span>:198 (<span class="title">qt_build_repo_end</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">-- <span class="title">Configuring</span> <span class="title">incomplete</span>, <span class="title">errors</span> <span class="title">occurred</span>!</span></span><br><span class="line"><span class="function"><span class="title">CMake</span> <span class="title">Error</span> <span class="title">at</span> <span class="title">G</span>:/<span class="title">qtbase</span>-<span class="title">everywhere</span>-<span class="title">src</span>-6.9.1/<span class="title">cmake</span>/<span class="title">QtProcessConfigureArgs.cmake</span>:995 (<span class="title">message</span>):</span></span><br><span class="line"><span class="function">  <span class="title">CMake</span> <span class="title">exited</span> <span class="title">with</span> <span class="title">code</span> 1.</span></span><br></pre></td></tr></table></figure>

<p>解决方法：这是因为在64位的系统上选择x32的编译器引起的错误。根据自己的平台选择对应的编译器，例如，MSVC CL编译器的x64环境，否则启用optimize_size选项有相关报错信息。当然，不启用该选项的话，可正常编译，但得不偿失。</p>
<h3 id="链接lib文件出现错误LNK2019">7.4.5 &nbsp&nbsp<a href="#链接lib文件出现错误LNK2019" class="headerlink" title="链接lib文件出现错误LNK2019"></a>链接lib文件出现错误LNK2019</h3><p>问题：链接lib文件报错，error LNK2019: 无法解析的外部符号。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">-- Configuring done (<span class="number">10</span>.<span class="number">5</span>s)</span><br><span class="line">-- Generating done (<span class="number">2</span>.<span class="number">6</span>s)</span><br><span class="line">-- Build files have been written to: G:/qtdeclarative</span><br><span class="line">[<span class="number">1569</span>/<span class="number">4804</span>] Linking CXX shared library bin\Qt6QmlXmlListModeld.dll</span><br><span class="line"><span class="function">FAILED: <span class="title">bin</span>/<span class="title">Qt6QmlXmlListModeld.dll</span> <span class="title">lib</span>/<span class="title">Qt6QmlXmlListModeld.lib</span></span></span><br><span class="line"><span class="function"><span class="title">cmd.exe</span> /<span class="title">C</span> &quot;<span class="title">cd</span> . &amp;&amp; &quot;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">CMake</span>\<span class="title">bin</span>\<span class="title">cmake.exe</span>&quot; -<span class="title">E</span> <span class="title">vs_link_dll</span> --<span class="title">intdir</span>=<span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span> --<span class="title">rc</span>=&quot;<span class="title">C</span>:\<span class="title">PROGRA</span>~2\<span class="title">Windows</span> <span class="title">Kits</span>\10\<span class="title">bin</span>\10.0.22621.0\<span class="title">x64</span>\<span class="title">rc.exe</span>&quot; --<span class="title">mt</span>=&quot;<span class="title">C</span>:\<span class="title">PROGRA</span>~2\<span class="title">Windows</span> <span class="title">Kits</span>\10\<span class="title">bin</span>\10.0.22621.0\<span class="title">x64</span>\<span class="title">mt.exe</span>&quot; --<span class="title">manifests</span>  -- &quot;<span class="title">C</span>:\<span class="title">PROGRA</span>~2\<span class="title">Microsoft</span> <span class="title">Visual</span> <span class="title">Studio</span>\2022\<span class="title">BuildTools</span>\<span class="title">VC</span>\<span class="title">Tools</span>\<span class="title">MSVC</span>\14.36.32532\<span class="title">bin</span>\<span class="title">Hostx64</span>\<span class="title">x64</span>\<span class="title">link.exe</span>&quot; /<span class="title">nologo</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">QmlXmlListModel_autogen</span>\<span class="title">mocs_compilation_Debug.cpp.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">cmake_pch.cxx.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">Debug</span>\<span class="title">QmlXmlListModel_resource.rc.res</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">qqmlxmllistmodel.cpp.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">qmlxmllistmodel_qmltyperegistrations.cpp.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug.rcc</span>\<span class="title">qrc_qmake_QtQml_XmlListModel.cpp.obj</span>  /<span class="title">out:bin</span>\<span class="title">Qt6QmlXmlListModeld.dll</span> /<span class="title">implib:lib</span>\<span class="title">Qt6QmlXmlListModeld.lib</span> /<span class="title">pdb:bin</span>\<span class="title">Qt6QmlXmlListModeld.pdb</span> /<span class="title">dll</span> /<span class="title">version</span>:6.5 /<span class="title">machine:x64</span> /<span class="title">debug</span>  -<span class="title">DYNAMICBASE</span> -<span class="title">NXCOMPAT</span> -<span class="title">LARGEADDRESSAWARE</span>  <span class="title">lib</span>\<span class="title">Qt6QmlModelsd.lib</span>  <span class="title">lib</span>\<span class="title">Qt6Qmld.lib</span>  <span class="title">C</span>:\<span class="title">Qt</span>\<span class="title">qt6</span>\<span class="title">lib</span>\<span class="title">Qt6Network.lib</span>  <span class="title">C</span>:\<span class="title">Qt</span>\<span class="title">qt6</span>\<span class="title">lib</span>\<span class="title">Qt6Core.lib</span>  <span class="title">mpr.lib</span>  <span class="title">userenv.lib</span>  <span class="title">ws2_32.lib</span>  <span class="title">shell32.lib</span>  <span class="title">kernel32.lib</span> <span class="title">user32.lib</span> <span class="title">gdi32.lib</span> <span class="title">winspool.lib</span> <span class="title">shell32.lib</span> <span class="title">ole32.lib</span> <span class="title">oleaut32.lib</span> <span class="title">uuid.lib</span> <span class="title">comdlg32.lib</span> <span class="title">advapi32.lib</span>  &amp;&amp; <span class="title">cd</span> .&quot;</span></span><br><span class="line"><span class="function"><span class="title">LINK</span>: <span class="title">command</span> &quot;<span class="title">C</span>:\<span class="title">PROGRA</span>~2\<span class="title">Microsoft</span> <span class="title">Visual</span> <span class="title">Studio</span>\2022\<span class="title">BuildTools</span>\<span class="title">VC</span>\<span class="title">Tools</span>\<span class="title">MSVC</span>\14.36.32532\<span class="title">bin</span>\<span class="title">Hostx64</span>\<span class="title">x64</span>\<span class="title">link.exe</span> /<span class="title">nologo</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">QmlXmlListModel_autogen</span>\<span class="title">mocs_compilation_Debug.cpp.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">cmake_pch.cxx.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">Debug</span>\<span class="title">QmlXmlListModel_resource.rc.res</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">qqmlxmllistmodel.cpp.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug</span>\<span class="title">qmlxmllistmodel_qmltyperegistrations.cpp.obj</span> <span class="title">src</span>\<span class="title">qmlxmllistmodel</span>\<span class="title">CMakeFiles</span>\<span class="title">QmlXmlListModel.dir</span>\<span class="title">Debug.rcc</span>\<span class="title">qrc_qmake_QtQml_XmlListModel.cpp.obj</span> /<span class="title">out:bin</span>\<span class="title">Qt6QmlXmlListModeld.dll</span> /<span class="title">implib:lib</span>\<span class="title">Qt6QmlXmlListModeld.lib</span> /<span class="title">pdb:bin</span>\<span class="title">Qt6QmlXmlListModeld.pdb</span> /<span class="title">dll</span> /<span class="title">version</span>:6.5 /<span class="title">machine:x64</span> /<span class="title">debug</span> -<span class="title">DYNAMICBASE</span> -<span class="title">NXCOMPAT</span> -<span class="title">LARGEADDRESSAWARE</span> <span class="title">lib</span>\<span class="title">Qt6QmlModelsd.lib</span> <span class="title">lib</span>\<span class="title">Qt6Qmld.lib</span> <span class="title">C</span>:\<span class="title">Qt</span>\<span class="title">qt6</span>\<span class="title">lib</span>\<span class="title">Qt6Network.lib</span> <span class="title">C</span>:\<span class="title">Qt</span>\<span class="title">qt6</span>\<span class="title">lib</span>\<span class="title">Qt6Core.lib</span> <span class="title">mpr.lib</span> <span class="title">userenv.lib</span> <span class="title">ws2_32.lib</span> <span class="title">shell32.lib</span> <span class="title">kernel32.lib</span> <span class="title">user32.lib</span> <span class="title">gdi32.lib</span> <span class="title">winspool.lib</span> <span class="title">shell32.lib</span> <span class="title">ole32.lib</span> <span class="title">oleaut32.lib</span> <span class="title">uuid.lib</span> <span class="title">comdlg32.lib</span> <span class="title">advapi32.lib</span> /<span class="title">MANIFEST</span> /<span class="title">MANIFESTFILE:bin</span>\<span class="title">Qt6QmlXmlListModeld.dll.manifest</span>&quot; <span class="title">failed</span> (<span class="title">exit</span> <span class="title">code</span> 1120) <span class="title">with</span> <span class="title">the</span> <span class="title">following</span> <span class="title">output</span>:</span></span><br><span class="line"><span class="function">正在创建库 <span class="title">lib</span>\<span class="title">Qt6QmlXmlListModeld.lib</span> 和对象 <span class="title">lib</span>\<span class="title">Qt6QmlXmlListModeld.exp</span></span></span><br><span class="line"><span class="function"><span class="title">qqmlxmllistmodel.cpp.obj</span> : <span class="title">error</span> <span class="title">LNK2019</span>: 无法解析的外部符号 &quot;<span class="title">__declspec</span>(<span class="title">dllimport</span>) <span class="title">public</span>: <span class="title">__cdecl</span> <span class="title">QtPrivate</span>::<span class="title">ResultIteratorBase</span>::~<span class="title">ResultIteratorBase</span>(<span class="title">void</span>)&quot; (<span class="title">_imp</span>??1<span class="title">ResultIteratorBase</span>@<span class="title">QtPrivate</span>@@<span class="title">QEAA</span>@<span class="title">XZ</span>)，函数 &quot;<span class="title">public</span>: <span class="title">struct</span> <span class="title">QQmlXmlListModelQueryResult</span> <span class="title">const</span> &amp; <span class="title">__cdecl</span> <span class="title">QFutureInterface</span>&lt;<span class="title">struct</span> <span class="title">QQmlXmlListModelQueryResult</span>&gt;::<span class="title">resultReference</span>(<span class="title">int</span>)<span class="title">const</span> &quot; (?<span class="title">resultReference</span>@?$<span class="title">QFutureInterface</span>@<span class="title">UQQmlXmlListModelQueryResult</span>@@@@<span class="title">QEBAAEBUQQmlXmlListModelQueryResult</span>@@<span class="title">H</span>@<span class="title">Z</span>) 中引用了该符号</span></span><br><span class="line"><span class="function"><span class="title">bin</span>\<span class="title">Qt6QmlXmlListModeld.dll</span> : <span class="title">fatal</span> <span class="title">error</span> <span class="title">LNK1120</span>: 1 个无法解析的外部命令</span></span><br><span class="line"><span class="function">[1598/4804] <span class="title">Automatic</span> <span class="title">MOC</span> <span class="title">for</span> <span class="title">target</span> <span class="title">Quick</span></span></span><br><span class="line"><span class="function"><span class="title">ninja</span>: <span class="title">build</span> <span class="title">stopped</span>: <span class="title">subcommand</span> <span class="title">failed</span>.</span></span><br></pre></td></tr></table></figure>

<p>解决方式：这是启用debug-and-release编译源码导致的，debug和release同时编译易出问题，因此建议分开编译。</p>
<h3 id="编译的字符报错或者其他问题">7.4.6 &nbsp&nbsp<a href="#编译的字符报错或者其他问题" class="headerlink" title="编译的字符报错或者其他问题"></a>编译的字符报错或者其他问题</h3><p>问题：编译可能提示找不到路径或者字符报错等其他问题，可能是由于中文路径引起。</p>
<p>解决方式：路径中不要含有中文字符，可以在磁盘根目录下操作，这样可保证路径总字符不会很多。</p>
<h3 id="终端编译报错：The-input-line-is-too-long">7.4.7 &nbsp&nbsp<a href="#终端编译报错：The-input-line-is-too-long" class="headerlink" title="终端编译报错：The input line is too long"></a>终端编译报错：The input line is too long</h3><p>报错信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The input line is too long.</span><br><span class="line">The syntax of the command is incorrect.</span><br></pre></td></tr></table></figure>

<p>问题原因：单个终端实例多次运行命令，导致累积长度超过8191个字符，触发了命令行长度限制报错。该现象常见于终端窗口里面多次运行编译命令引起，不知道为啥多次会累积计算这个长度。例如我从<code>qtbase</code>-&gt;<code>qt5compat</code>编译总共6个模块，在编译第五个<code>qtsvg</code>模块时，在尝试执行BAT编译脚本就会出现该报错。</p>
<p>解决方法：直接关闭终端，重新在该路径上创建终端窗口实例。</p>
<h2 id="Qt各模块的介绍及其依赖项：">7.5 &nbsp&nbsp<a href="#Qt各模块的介绍及其依赖项：" class="headerlink" title="Qt各模块的介绍及其依赖项："></a>Qt各模块的介绍及其依赖项：</h2><table>
<thead>
<tr>
<th>Module</th>
<th>Required submodules</th>
<th>Development packages required</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>qtbase</td>
<td></td>
<td></td>
<td>Qt core, start with this.</td>
</tr>
<tr>
<td>qtimageformats</td>
<td></td>
<td>libmng-dev</td>
<td>Support for loading various extra image formats <br> <br> TIFF, MNG, WebP</td>
</tr>
<tr>
<td>qtsvg</td>
<td></td>
<td></td>
<td>Support for SVG vector graphics</td>
</tr>
<tr>
<td>qtshadertools</td>
<td></td>
<td></td>
<td>Tools for the cross-platform Qt shader pipeline</td>
</tr>
<tr>
<td>qttools</td>
<td>qtdeclarative</td>
<td>QDoc requires clang to be installed (See section about documentation above): <br> <br> clang-11 libclang-11-dev libclang-common-11-dev</td>
<td>Various Qt tools: <br> <strong>QtAssistant</strong> <br> Qt Designer <br> Qt Linguist <br> <strong>QDoc</strong> <br> etc</td>
</tr>
<tr>
<td>qtserialbus</td>
<td></td>
<td></td>
<td>Serial bus (CAN bus, ModBus) support</td>
</tr>
<tr>
<td>qtserialport</td>
<td>qtserialbus</td>
<td></td>
<td>Serial port support</td>
</tr>
<tr>
<td>qtlocation</td>
<td>qtserialport</td>
<td></td>
<td>Positioning (GPS) and location (Map) services</td>
</tr>
<tr>
<td>qtdeclarative</td>
<td>qtshadertools</td>
<td></td>
<td>Qt Quick &#x2F; QML</td>
</tr>
<tr>
<td>qtmultimedia</td>
<td>qtdeclarative</td>
<td>For ffmpeg backend (prefered backend since 6.5): <br> ffmpeg libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev libswresample-dev libswscale-dev <br> <br>  For gstreamer backend: <br> libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad libgstreamer-plugins-bad1.0-dev gstreamer1.0-pulseaudio gstreamer1.0-tools gstreamer1.0-alsa <br> <br> For pulseaudio support: <br> pulseaudio libpulse-dev <br> <br> For plain ALSA: <br> libasound2-dev</td>
<td>Multimedia (audio&#x2F;video) support <br> Audio play, record <br> Video play <br> Video input, capture</td>
</tr>
<tr>
<td>qt3d</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>qtquick3d</td>
<td></td>
<td></td>
<td>A high-level API for creating 3D content and 3D user interfaces based on Qt Quick</td>
</tr>
<tr>
<td>qtquick3dphysics</td>
<td></td>
<td></td>
<td>A physics engine for use with Qt Quick 3D</td>
</tr>
<tr>
<td>qtdatavis3d</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>qtsensors</td>
<td>qtmultimedia</td>
<td></td>
<td>Support for various device sensors</td>
</tr>
<tr>
<td>qtnetworkauth</td>
<td></td>
<td></td>
<td>Network authentication protocol support (OAuth)</td>
</tr>
<tr>
<td>qtconnectivity</td>
<td></td>
<td>bluez libbluetooth-dev</td>
<td>Bluetooth and NFC connectivity support</td>
</tr>
<tr>
<td>qtwebsockets</td>
<td>qtdeclarative</td>
<td></td>
<td>Websockets support</td>
</tr>
<tr>
<td>qtcharts</td>
<td>qtdeclarative</td>
<td></td>
<td>Charting controls</td>
</tr>
<tr>
<td>qtwayland</td>
<td></td>
<td>libwayland-dev</td>
<td>Wayland support</td>
</tr>
<tr>
<td>qtvirtualkeyboard</td>
<td>qtsvg</td>
<td></td>
<td>Provides on-screen keyboard</td>
</tr>
<tr>
<td>qtwebengine</td>
<td>qtdeclarative</td>
<td>flex bison gperf libre2-dev libnss3-dev nodejs libdrm-dev libxdamage-dev libsnappy-dev</td>
<td>WebEngine.</td>
</tr>
<tr>
<td>qtgrpc</td>
<td></td>
<td></td>
<td>Support for gRPC</td>
</tr>
<tr>
<td>qthttpserver</td>
<td></td>
<td></td>
<td>Qt HTTP Server</td>
</tr>
<tr>
<td>qtspeech</td>
<td></td>
<td></td>
<td>Text To Speech with Flite</td>
</tr>
<tr>
<td>qt5compat</td>
<td></td>
<td></td>
<td>Unsupported Qt 5 compatibility code.</td>
</tr>
</tbody></table>
<h1 id="Qt的许可协议和费用问题">8 &nbsp&nbsp<a href="#Qt的许可协议和费用问题" class="headerlink" title="Qt的许可协议和费用问题"></a>Qt的许可协议和费用问题</h1><p>使用LGPL协议开发闭源程序，若使用动态链接的形式，可以以任何形式发布应用程序，只需声明使用Qt开发即可。</p>
<h1 id="参考资料">9 &nbsp&nbsp<a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] Building Qt 6.5 submodules[EB&#x2F;OL]. <a href="https://www.tal.org/tutorials/building-qt-65-sub-modules">https://www.tal.org/tutorials/building-qt-65-sub-modules</a>.<br>[2] 用 VS Code 搞 Qt6：编译附加模块[EB&#x2F;OL]. <a href="https://www.cnblogs.com/tcjiaan/p/16575655.html">https://www.cnblogs.com/tcjiaan/p/16575655.html</a>.<br>[3] Building Qt 6 from Git[EB&#x2F;OL]. <a href="https://wiki.qt.io/Building_Qt_6_from_Git">https://wiki.qt.io/Building_Qt_6_from_Git</a>.<br>[4] Obligations of the GPL and LGPL[EB&#x2F;OL]. <a href="https://www.qt.io/licensing/open-source-lgpl-obligations">https://www.qt.io/licensing/open-source-lgpl-obligations</a>.<br>[5] Qt 收费吗？[EB&#x2F;OL]. <a href="https://blog.csdn.net/csyounth/article/details/7347182">https://blog.csdn.net/csyounth/article/details/7347182</a>.<br>[6] Qt 的开源版本与商业版区别及 LGPL 与闭源程序[EB&#x2F;OL]. <a href="https://blog.csdn.net/heli200482128/article/details/79305245">https://blog.csdn.net/heli200482128/article/details/79305245</a>.<br>[7] Qt5 怎么最小化编译，只编译 qtbase[EB&#x2F;OL]. <a href="https://blog.csdn.net/jhkwei/article/details/107949403">https://blog.csdn.net/jhkwei/article/details/107949403</a>.<br>[8] Qt 5.15.0 编译指南[EB&#x2F;OL]. <a href="https://blog.csdn.net/zxjohnson/article/details/106621457">https://blog.csdn.net/zxjohnson/article/details/106621457</a>.<br>[9] 在 Mac 编译成功运行 qt5.15 源码：debug 和 release 版本[EB&#x2F;OL]. <a href="https://xmuli.tech/posts/8b05b275/">https://xmuli.tech/posts/8b05b275/</a>.<br>[10] 愿编程不再乱码 (含 Qt)-根因深究[EB&#x2F;OL]. <a href="https://ifmet.cn/posts/c0862e62/">https://ifmet.cn/posts/c0862e62/</a>.<br>[11] QT error: LNK2019: 无法解析的外部符号“__declspec(dllimport) public:[EB&#x2F;OL]. <a href="https://blog.csdn.net/lifuran156/article/details/118935649">https://blog.csdn.net/lifuran156/article/details/118935649</a>.<br>[12] error LNK2019: 无法解析的外部符号”__declspec(dllimport)[EB&#x2F;OL]. <a href="https://www.cnblogs.com/lihaozy/archive/2012/07/05/2577512.html">https://www.cnblogs.com/lihaozy/archive/2012/07/05/2577512.html</a>.<br>[13] 配置Qt新建工程时默认支持C++14或C++17[EB&#x2F;OL]. <a href="https://blog.csdn.net/no_say_you_know/article/details/121924999">https://blog.csdn.net/no_say_you_know/article/details/121924999</a>.<br>[14] 首次安装Qt后，创建项目时出现“No valid kits found” 的解决办法[EB&#x2F;OL]. <a href="https://codeantenna.com/a/Mc08ZG5tEW">https://codeantenna.com/a/Mc08ZG5tEW</a>.<br>[15] 教你使用windeployqt工具来进行Qt的打包发布[EB&#x2F;OL]. <a href="https://blog.csdn.net/sinat_36264666/article/details/73305712">https://blog.csdn.net/sinat_36264666/article/details/73305712</a>.<br>[16] QT5实现语言国际化（中英文界面动态切换，超详细）[EB&#x2F;OL]. <a href="https://blog.csdn.net/m0_49047167/article/details/108442111">https://blog.csdn.net/m0_49047167/article/details/108442111</a>.<br>[17] Qt 项目(CMake)设置国际化支持[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_33154343/article/details/114439385">https://blog.csdn.net/qq_33154343/article/details/114439385</a>.<br>[18] QT使用Enigma Virtual Box打包exe[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_40994692/article/details/113880198">https://blog.csdn.net/qq_40994692/article/details/113880198</a>.<br>[19] Qt 实现单个EXE文件（绿色运行版） Enigma Virtual Box[EB&#x2F;OL]. <a href="https://www.cnblogs.com/ybqjymy/p/13926394.html">https://www.cnblogs.com/ybqjymy/p/13926394.html</a>.<br>[20] Virus detection by Windows Defender in boxed exe[EB&#x2F;OL]. <a href="http://forum.enigmaprotector.com/viewtopic.php?t=14841">http://forum.enigmaprotector.com/viewtopic.php?t=14841</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>编译</tag>
        <tag>qt</tag>
        <tag>gui</tag>
        <tag>源码</tag>
        <tag>qt creator</tag>
        <tag>界面开发</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式总结笔记</title>
    <url>/code/regular-expressions/</url>
    <content><![CDATA[<h1 id="常用的正则表达式">1 &nbsp&nbsp<a href="#常用的正则表达式" class="headerlink" title="常用的正则表达式"></a>常用的正则表达式</h1><ul>
<li>[\u4e00-\u9fa5] 匹配中文字符</li>
<li>[\u4e00-\u9fa5]+ 匹配中文字符组成的字符串</li>
</ul>
<h1 id="在编辑器中删除空行">2 &nbsp&nbsp<a href="#在编辑器中删除空行" class="headerlink" title="在编辑器中删除空行"></a>在编辑器中删除空行</h1><p>Ctrl+H键，输入<code>^(\s)*$\n</code>，替换为空即可。</p>
<h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1>]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>正则表达式</tag>
        <tag>正则</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode配置总结笔记</title>
    <url>/code/vscode/</url>
    <content><![CDATA[<h1 id="下载及安装VSCode">1 &nbsp&nbsp<a href="#下载及安装VSCode" class="headerlink" title="下载及安装VSCode"></a>下载及安装VSCode</h1><ul>
<li>下载：<a href="https://code.visualstudio.com/Download">VSCode System Installer</a></li>
<li>安装：默认路径安装，选项额外添选上下文菜单（文件和目录）</li>
</ul>
<p>镜像加速下载的方法：将下载链接URL中的<code>stable</code>之前的字符全部改为<code>https://vscode.cdn.azure.cn/</code>即可。</p>
<h1 id="配置C-C-开发环境">2 &nbsp&nbsp<a href="#配置C-C-开发环境" class="headerlink" title="配置C&#x2F;C++开发环境"></a>配置C&#x2F;C++开发环境</h1><h2 id="MSVC-CL编译器的安装和环境设置">2.1 &nbsp&nbsp<a href="#MSVC-CL编译器的安装和环境设置" class="headerlink" title="MSVC CL编译器的安装和环境设置"></a>MSVC CL编译器的安装和环境设置</h2><ol>
<li>下载（<code>CMake</code>和<code>Ninja</code>可以不用单独下载安装，<code>MSVC CL</code>编译器的<code>Visual Studio Installer</code>管理器可以统一管理下载和更新）<ul>
<li><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">MSVC CL编译器（Visual Studio 2022 生成工具）</a>，<code>所有下载</code>-&gt;<code>用于 Visual Studio 的工具</code>-&gt;<code>Visual Studio 2022 生成工具</code>。</li>
<li><del><a href="https://cmake.org/download/">CMake</a></del></li>
<li><del><a href="https://github.com/ninja-build/ninja/releases">Ninja</a></del></li>
</ul>
</li>
<li>安装「Visual Studio 2022 生成工具」，然后勾选对应包下载安装<ol>
<li>工作负荷：使用C++的桌面开发<ul>
<li>MSVC v143 - VS 2022 C++ x64&#x2F;x86生成工具(最新)</li>
<li>Windows 11 SDK (10.0.26100.0)：建议选择最新的系统版本号</li>
<li>用于 Windows 的 C++ CMake 工具（包含CMake和Ninja）</li>
</ul>
</li>
<li>单个组件<ul>
<li>对 LLVM(clang-cl)工具集的 MSBuild 支持</li>
<li>适用于 Windows 的C++ Clang 编译器(18.1.8)</li>
<li>MSVC v143 - VS 2022 C++ x64&#x2F;x86 Spectre 缓解库（最新）</li>
</ul>
</li>
</ol>
</li>
<li>分别添加程序路径到系统环境变量<code>Path</code><ul>
<li>MSVC CL编译器路径：<code>C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.42.34433\bin\Hostx64\x64</code></li>
<li>LLVM CLANG编译器路径：<code>C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\Llvm\x64\bin</code></li>
<li>CMake路径：<code>C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin</code></li>
<li>Ninja路径：<code>C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\IDE\CommonExtensions\Microsoft\CMake\Ninja</code></li>
</ul>
</li>
<li>拷贝<code>.vscode</code>配置文件夹</li>
</ol>
<h2 id="更新MSVC后找不到CL命令">2.2 &nbsp&nbsp<a href="#更新MSVC后找不到CL命令" class="headerlink" title="更新MSVC后找不到CL命令"></a>更新MSVC后找不到CL命令</h2><p>使用<code>Visual Studio Installer</code>更新MSVC后，编译器版本号可能会变更，如果在终端运行cl命令后提示找不到程序，需要手动更新两处地方的CL编译器路径：</p>
<ul>
<li>系统环境变量<code>Path</code></li>
<li><code>.vscode</code>配置文件夹中的<code>c_cpp_properties.json</code></li>
</ul>
<h1 id="VSCode源代码管理">3 &nbsp&nbsp<a href="#VSCode源代码管理" class="headerlink" title="VSCode源代码管理"></a>VSCode源代码管理</h1><p>对于新建的空仓库，使用clone命令克隆仓库后，第一次用vs code进行commit时，若使用「同步更改」命令提示说找不到远程仓库时，可以直接使用「推送到」命令。</p>
<h1 id="Codeium扩展插件的帐号token获取及使用">4 &nbsp&nbsp<a href="#Codeium扩展插件的帐号token获取及使用" class="headerlink" title="Codeium扩展插件的帐号token获取及使用"></a>Codeium扩展插件的帐号token获取及使用</h1><p>一般直接通过Codeium Auth登录帐号即可使用扩展插件。</p>
<h2 id="token获取">4.1 &nbsp&nbsp<a href="#token获取" class="headerlink" title="token获取"></a>token获取</h2><p>如果不想登录帐号，而是想要通过<code>ctrl+shift+p</code>执行<code>Codeium: Provide Authentication Token</code>命令输入token的话。首先需要获取token，获取方式：</p>
<ul>
<li>方式一：<a href="https://www.codeium.com/profile?response_type=token&redirect_uri=vim-show-auth-token&state=a&scope=openid%20profile%20email&redirect_parameters_type=query">官网直链获取</a>（此直链是会提示关联vim扩展，但token都是通用的，同样适用于VSCode的扩展），直接在该网址中登录帐号即可获取「Provide Authentication Token」</li>
<li>方式二：参考<a href="#token%E4%BD%BF%E7%94%A8">token使用</a>的1-4步骤。</li>
</ul>
<h2 id="token使用">4.2 &nbsp&nbsp<a href="#token使用" class="headerlink" title="token使用"></a>token使用</h2><ol>
<li>VSCode安装好Codeium扩展插件。</li>
<li>左下角，点击Codeium Auth登录按钮，首先插件会弹窗请求跳转到网页输入帐号登录。</li>
<li>直接关闭打开的网页，点击右下角「在线帐号登录」的cancel按钮。</li>
<li>之后插件会弹窗请求跳转到网页输入帐号登录，这个在线网址则是获取「Provide Authentication Token」。（如果已经提前获取到token，这里可以不登录网页帐号，直接关闭网页）</li>
<li>最后通过<code>ctrl+shift+p</code>执行<code>Codeium: Provide Authentication Token</code>命令输入token即可正常登录。</li>
</ol>
<h1 id="拓展插件">5 &nbsp&nbsp<a href="#拓展插件" class="headerlink" title="拓展插件"></a>拓展插件</h1><h2 id="LaTeX-Workshop报错提示command-latex-workshop-onEnterKey-not-found">5.1 &nbsp&nbsp<a href="#LaTeX-Workshop报错提示command-latex-workshop-onEnterKey-not-found" class="headerlink" title="LaTeX-Workshop报错提示command &#39;latex-workshop.onEnterKey&#39; not found"></a><code>LaTeX-Workshop</code>报错提示<code>command &#39;latex-workshop.onEnterKey&#39; not found</code></h2><p>问题现象：在<code>tex</code>文件中使用<code>Enter</code>键会出现报错信息，提示<code>command &#39;latex-workshop.onEnterKey&#39; not found</code>，只有<code>Ctrl+Enter</code>键才能正常输入回车。</p>
<p>解决方案：卸载<code>LaTeX-Workshop</code>扩展插件，关闭<code>VSCode</code>程序，确保<code>VSCode</code>正常移除插件的缓存文件。然后重新打开<code>VSCode</code>，重新安装<code>LaTeX-Workshop</code>。</p>
<h1 id="参考文献">6 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] [Question] How can I get codeium auth token[EB&#x2F;OL]. <a href="https://github.com/Exafunction/codeium.vim/issues/150">https://github.com/Exafunction/codeium.vim/issues/150</a>.<br>[2] VsCode下载，使用国内镜像秒下载[EB&#x2F;OL]. <a href="https://blog.csdn.net/bielaiwuyang1999/article/details/117814237">https://blog.csdn.net/bielaiwuyang1999/article/details/117814237</a>.</p>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>编译</tag>
        <tag>vsc</tag>
        <tag>vscode</tag>
        <tag>编辑器</tag>
        <tag>链接</tag>
      </tags>
  </entry>
  <entry>
    <title>Programming Ability Test (PAT)</title>
    <url>/code-training/pat/</url>
    <content><![CDATA[<p>“程序设计类教学辅助教学平台”（Programming Teaching Assistant，亦简称 PTA）（依稀记得以前这玩意叫PAT），面向高校和社会的程序自动评测、开放式的教学辅助平台。</p>
<p>练习代码文件的仓库链接：<a href="https://github.com/Mister-Kin/CodeTraining/tree/master/PAT">点击跳转</a>。</p>
<p>难点题解主要参考<a href="https://github.com/tiny656/PAT">PAT(tiny656)</a>和[<a href="https://gitee.com/branches/PAT">PAT(枝桠)</a>]</p>
<h1 id="基础编程题目集（PTA平台）"><a href="#基础编程题目集（PTA平台）" class="headerlink" title="基础编程题目集（PTA平台）"></a><a href="https://github.com/Mister-Kin/CodeTraining/tree/master/PAT/BasicProgrammingProblemSet">基础编程题目集</a>（<a href="https://pintia.cn/problem-sets/14/exam/problems/type/6">PTA平台</a>）</h1><h2 id="函数题"><a href="#函数题" class="headerlink" title="函数题"></a>函数题</h2><h3 id="6-1-简单输出整数（PTA平台）"><a href="#6-1-简单输出整数（PTA平台）" class="headerlink" title="6-1 简单输出整数（PTA平台）"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/PAT/BasicProgrammingProblemSet/CodeCompletion/6-1-print_n.c">6-1 简单输出整数</a>（<a href="https://pintia.cn/problem-sets/14/exam/problems/type/6?problemSetProblemId=733">PTA平台</a>）</h3><p>简单的<code>for</code>循环运用</p>
<h3 id="6-2-多项式求值（PTA平台）"><a href="#6-2-多项式求值（PTA平台）" class="headerlink" title="6-2 多项式求值（PTA平台）"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/PAT/BasicProgrammingProblemSet/CodeCompletion/6-2-multinomial_sum.c">6-2 多项式求值</a>（<a href="https://pintia.cn/problem-sets/14/exam/problems/type/6?problemSetProblemId=734">PTA平台</a>）</h3><p>先罗列多项式值，分析构成规律，再去考虑如何编写逻辑。（当年我是傻乎乎分开两个<code>for</code>循环处理，因此导致会导致部份用例运行超时）</p>
<h3 id="6-3-简单求和（PTA平台）"><a href="#6-3-简单求和（PTA平台）" class="headerlink" title="6-3 简单求和（PTA平台）"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/PAT/BasicProgrammingProblemSet/CodeCompletion/6-3-sum.c">6-3 简单求和</a>（<a href="https://pintia.cn/problem-sets/14/exam/problems/type/6?problemSetProblemId=735">PTA平台</a>）</h3><p><code>for</code>循环中应为<code>i&lt;N</code>，注意<code>main</code>函数最后赋值的下标，即需要保持和<code>main</code>函数中<code>for</code>循环的条件一致。（当年是挺傻乎乎的）</p>
<h3 id="6-4-求自定类型元素的平均（PTA平台）"><a href="#6-4-求自定类型元素的平均（PTA平台）" class="headerlink" title="6-4 求自定类型元素的平均（PTA平台）"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/PAT/BasicProgrammingProblemSet/CodeCompletion/6-4-average.c">6-4 求自定类型元素的平均</a>（<a href="https://pintia.cn/problem-sets/14/exam/problems/type/6?problemSetProblemId=736">PTA平台</a>）</h3><p><code>for</code>循环中应为<code>i&lt;N</code>，注意<code>main</code>函数最后赋值的下标，即需要保持和<code>main</code>函数中<code>for</code>循环的条件一致。</p>
<h3 id="6-5-求自定类型元素的最大值（PTA平台）"><a href="#6-5-求自定类型元素的最大值（PTA平台）" class="headerlink" title="6-5 求自定类型元素的最大值（PTA平台）"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/PAT/BasicProgrammingProblemSet/CodeCompletion/6-5-max_num.c">6-5 求自定类型元素的最大值</a>（<a href="https://pintia.cn/problem-sets/14/exam/problems/type/6?problemSetProblemId=737">PTA平台</a>）</h3><p><code>for</code>循环中应为<code>i&lt;N</code>，注意<code>main</code>函数最后赋值的下标，即需要保持和<code>main</code>函数中<code>for</code>循环的条件一致。</p>
<p>第一个MaxNum应该设为数组里的元素。如果设为0的话，当元素全为负数时，没法输出最大值。（也不知道我当年是怎么想出这种傻乎乎的逻辑）</p>
]]></content>
      <categories>
        <category>code-training</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>编程</tag>
        <tag>PAT</tag>
        <tag>PTA</tag>
        <tag>练习</tag>
        <tag>题库</tag>
        <tag>题目</tag>
        <tag>算法</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>英文词典常用缩写</title>
    <url>/english/abbr/</url>
    <content><![CDATA[<ul>
<li>abbr. abbreviations 缩写</li>
<li>v. verb 动词</li>
<li>vt. transitive verb 及物动词</li>
<li>vi. intransitive verb 不及物动词</li>
<li>n. noun 名词</li>
<li>adj. adjective 形容词</li>
<li>adv. adverb 副词</li>
<li>prep. preposition 介词</li>
<li>pron. pronoun 代词</li>
<li>conj. conjunction 连词</li>
<li>abbr. abbreviation 缩写</li>
<li>det. determiner 限定词</li>
<li>sing. singular 单数</li>
<li>pl. plural 复数</li>
<li>exclamation 感叹词</li>
<li>symb. symbol 符号</li>
<li>opp. opposite 反义词</li>
<li>syn. synonym 同义词</li>
<li>fig. figurative 比喻的</li>
<li>derog. derogatie 贬义的</li>
<li>fml. formal 用于正式文体</li>
<li>infml. informal 用于非正式文体</li>
<li>BrE 英国英语</li>
<li>AmE 美国英语</li>
<li>C countable 可数名词</li>
<li>U uncountable 不可数名词</li>
<li>sb. somebody 某人</li>
<li>sth. something 某事物</li>
<li>pt past tense 过去时</li>
<li>pp past participle 过去分词</li>
<li>[计] 计算机</li>
<li>[物] 物理</li>
<li>[电] 电路</li>
<li>[医] 医学</li>
</ul>
]]></content>
      <categories>
        <category>english</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>英文</tag>
        <tag>词典</tag>
        <tag>缩写</tag>
      </tags>
  </entry>
  <entry>
    <title>编程英文术语</title>
    <url>/english/code/</url>
    <content><![CDATA[<ul>
<li>crud 增删改查（create&#x2F;retrieve&#x2F;update&#x2F;delete）</li>
<li>功能特性相关<ul>
<li>feature 特性，指事物有鲜明特征方面的属性，对应到产品或解决方案所具有的特征<ul>
<li>feature-&gt;what&#39;s the difference?</li>
</ul>
</li>
<li>function 功能，强调产品的目的和用途<ul>
<li>目前许多数字产品的特点也正好是其所包含的多种功能，传统产品中则较容易区分这二者。介绍一个全新开发的且无人认识的产品时，应该先介绍function。</li>
<li>以手机为例，手机的function是用来打电话，不同手机的feature在于系统或者硬件配置上的差别。</li>
<li>function-&gt;what&#39;s this?</li>
</ul>
</li>
</ul>
</li>
<li>密码相关<ul>
<li>passphrase: a string that is formed a memorable phrase, by selecting certain characters.<ul>
<li>比如: 密码是IAtEaBurger@2pm. I ate a burger at 2 pm.</li>
<li>方便人们记忆，也保证了密码的复杂度.</li>
</ul>
</li>
<li>password: a sequence of characters that the user knows.<ul>
<li>密码泛指人们所知道的一系列的由字符组成的. 比如普通的密码.</li>
</ul>
</li>
<li>passcode: a sequence of numbers.<ul>
<li>比如four-digit PIN.</li>
</ul>
</li>
</ul>
</li>
<li>改动&#x2F;重构相关<ul>
<li>这三个指改动，希望改动能够达到最好的效果（一般是在已存在的软件中发现一些问题时做出改动），但不保证其能改善任何东西。<ul>
<li>architecture 指软件项目规模很大<ul>
<li>rearchitecturing 大规模代码改动修复严重问题</li>
</ul>
</li>
<li>design 指软件架构，规模较小，通常用于指APIs和UI组件<ul>
<li>redesigning API改动和用户交互层的改动</li>
</ul>
</li>
<li>rewriting 通常也指小规模的改动<ul>
<li>例如rewrite一个函数，用更好的代码替换它</li>
</ul>
</li>
</ul>
</li>
<li>refactoring 更加具体，快速开发中，这些改动覆盖于单元测试refactoring不改动程序的行为（不破坏任何单元测试），但从维护的观点上看，改动的代码改善了软件。</li>
<li>refactoring用于改写还行，但不建议用rearchitecturing、redesigning、rewriting（red flags），可能User Ineterface用redesign算个例外。</li>
</ul>
</li>
<li>数据单位相关<ul>
<li>1 kB(kilobyte) &#x3D; 1000 bytes</li>
<li>1 KiB(kibibyte, kilo binary byte) &#x3D; 1024 bytes</li>
</ul>
</li>
<li>undifined behavior 未定义行为，编程语言标准中没有定义它，编译器爱怎么做都行，执行的结果就是不可预料的。</li>
<li>进制相关<ul>
<li>binary</li>
<li>octal &#x2F;ˈɒkt(ə)l&#x2F;　adj.八进制的</li>
<li>decimal adj. 十进制的</li>
<li>hexadecimal adj. 十六进制的</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>english</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>英文</tag>
        <tag>术语</tag>
      </tags>
  </entry>
  <entry>
    <title>英文词汇日常总结</title>
    <url>/english/daily/</url>
    <content><![CDATA[<ul>
<li>anode &#x2F;ˈænəʊd&#x2F;　n.阳极，（电解池）正极</li>
<li>cathode &#x2F;ˈkæθəʊd&#x2F;　n.阴极，（电解池）负极<ul>
<li>同kathode</li>
</ul>
</li>
<li>recursive adj.递归的，循环</li>
<li>melancholy &#x2F;ˈmelənkəli&#x2F;　n.忧郁，伤悲 adj.（令人）悲哀的，沮丧的</li>
<li>melody n.旋律；曲调；（尤指）主旋律</li>
<li>remark n.注意 v.察觉</li>
<li>introspection n.内省；反省</li>
<li>one..., the other...（总数量两个）<ul>
<li>one..., another...（总数量两个以上，another在此处自身代指的事物就表明超过一个）</li>
</ul>
</li>
<li>sugar buns infml.(主要美国和加拿大) 感情用语，同sweatheart</li>
<li>get it 明白了一些之前不明白的事情</li>
<li>got it 明白了某件事情的表达（事情的传达）</li>
<li>get wasted 喝醉了，烂醉如泥的<ul>
<li>形容微醺：tipsy buzzed</li>
<li>形容大醉：hammered blasted get plastered shit-faced（语气较重，看场合用）</li>
</ul>
</li>
<li>make yourself useful 让对方别闲着，干点事情</li>
</ul>
]]></content>
      <categories>
        <category>english</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>英文</tag>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>电力专业英文术语</title>
    <url>/english/electrical-pro/</url>
    <content><![CDATA[<h1 id="电路基础（Fundamentals-of-Electronic-Circuits）">1 &nbsp&nbsp<a href="#电路基础（Fundamentals-of-Electronic-Circuits）" class="headerlink" title="电路基础（Fundamentals of Electronic Circuits）"></a>电路基础（Fundamentals of Electronic Circuits）</h1><h2 id="电路原理（Circuit-Theory）">1.1 &nbsp&nbsp<a href="#电路原理（Circuit-Theory）" class="headerlink" title="电路原理（Circuit Theory）"></a>电路原理（Circuit Theory）</h2><ul>
<li>element n.成分，元件</li>
<li>interconnect vt.使互相连接</li>
<li>node n.节点</li>
<li>branch n.树枝，分枝，分部，支流，支脉 v.出现分岐</li>
<li>loop n.环，循环，线圈（绳），弯曲部分，回路，回线 vt.使成环，使成圈，以环相连 vi.打环，翻筋斗</li>
<li>topology n.拓扑，布局，拓扑学</li>
<li>configuration n.构造，结构，配置，外形</li>
<li>terminal n.终点站，终端，接线端</li>
<li>resistor n.[电]电阻器</li>
<li>independent n.独立自主者，无党派者 adj.独立自主的，不受约束的</li>
<li>series n.连续，系列，级数，串联</li>
<li>parallel adj.平行的，相同的，类似的，并联的 n.平行线，平行面，相似物 v.相应，平行</li>
<li>impedance n.[电&#x2F;物]阻抗，[物]全电阻</li>
<li>theorem n.定理，法则（数）</li>
</ul>
<h2 id="模电和数电（Analog-and-Digital-Circuits）">1.2 &nbsp&nbsp<a href="#模电和数电（Analog-and-Digital-Circuits）" class="headerlink" title="模电和数电（Analog and Digital Circuits）"></a>模电和数电（Analog and Digital Circuits）</h2><ul>
<li>analog n.(AmE)类似物；模拟 adj.(AmE)模拟的，指针式的<ul>
<li>analogue n.&#x2F;adj.(BrE)同上</li>
</ul>
</li>
<li>digital n.数字，数字式 adj.数字的，数位的</li>
<li>thermometer n.温度计，体温计</li>
<li>Fahrenheit n.华氏温度计 adj.华氏温度计的</li>
<li>drum n.鼓，鼓声，鼓形圆筒 vt.打鼓奏 vi.击鼓，做鼓声</li>
<li>discrete adj.不连续的，离散的</li>
<li>original adj.最初的，原始的，独创的，新颖的 n.原物，原作</li>
<li>remote adj.遥远的，偏僻的，细微的</li>
<li>bulb n.鳞茎，球形物</li>
<li>Morse code 莫尔斯电码</li>
<li>pulse n.脉搏，脉冲</li>
<li>buzzer n.蜂鸣器，信号手，嗡嗡作声的东西</li>
<li>manipulate vt.(熟练地)操作，使用（机器），操纵（人或市场、市场），利用，应付</li>
<li>destination n.目的地，[计]目的文件，目的单元格</li>
<li>humidity n.湿气，潮湿，湿度</li>
<li>comparator n.比较仪</li>
<li>trigger vt.引发，引起，触发 vi.转义，换车 n.扳机</li>
<li>sequence n.次序，顺序，序列</li>
<li>parallel n.平行的，相同的，类似的，并联的 n.平行线，平行面，相似物 v.相应，平行</li>
<li>serial adj.连续的，串行的，顺次</li>
<li>decoder n.解码器</li>
<li>reassemble vt.重新召集 vi.重新集合</li>
</ul>
<h2 id="三相电（Three-Phase-Circuits）">1.3 &nbsp&nbsp<a href="#三相电（Three-Phase-Circuits）" class="headerlink" title="三相电（Three-Phase Circuits）"></a>三相电（Three-Phase Circuits）</h2><ul>
<li>transformer n.变压器</li>
<li>single-phase 单相</li>
<li>pulsate vi.脉动</li>
<li>three-phase power 三相电源</li>
<li>three-phase circiut 三相电路</li>
<li>the parallelogram method 平行四边形法则</li>
<li>wye connection 星形连接</li>
<li>delta connection 三角形连接</li>
<li>phase voltage 相电压</li>
<li>line voltage 线电压</li>
<li>confuse vt.使混乱，使更难于理解，使困窘，使困惑 vi.使糊涂</li>
<li>voltmeter n.电压表</li>
<li>ammeter n.电流表</li>
<li>clamp-on ammeter 钳式安培表</li>
</ul>
<h1 id="电力电子（Power-Electronics）">2 &nbsp&nbsp<a href="#电力电子（Power-Electronics）" class="headerlink" title="电力电子（Power Electronics）"></a>电力电子（Power Electronics）</h1><ul>
<li>solid-state adj.固态的</li>
<li>computation n.计算，估计</li>
<li>integration n.结合，整合，一体化</li>
<li>dynamic adj.动态的，充满活力的，不断变化的 n.动态，动力学，活力</li>
<li>mercury-arc [医]汞弧<ul>
<li>Mercury n.水星</li>
</ul>
</li>
<li>valve n.阀，真空管，活栓 vt.装阀（于），以活门调节</li>
<li>semiconductor n.[物理]半导体</li>
<li>switching n.开关，转换，交换，配电 v.转换</li>
<li>diode n.二极管</li>
<li>inverter n.逆变器（反用换流器），变极器</li>
<li>thyristor n.半导体闸流管，硅可控整流器</li>
<li>inverter thyristor 晶体管逆变器，可控硅环流器，可控硅逆变器</li>
<li>transistor n.晶体管，晶体管收音机，半导体收音机</li>
<li>transmission n.播送，传送，信息，传动装置</li>
<li>substantial adj.结实的，牢固的，重大的 n.本质，重要材料</li>
<li>fluorescent lamp ballast 荧光灯镇流器</li>
<li>mercury n.水银，汞</li>
<li>therminoic adj.[物]热电子的，热离子的</li>
<li>HVDC transmission system 高压直流输电系统</li>
<li>induction motor 感应电动机</li>
<li>vacuum n.真空，空间 adj.真空的 vt.用真空吸尘器打扫</li>
<li>dissipate v.驱散，使（云&#x2F;雾&#x2F;疑虑）消散</li>
<li>rectifier n.纠正者，整顿者，整流器</li>
<li>triggered adj.触发的</li>
<li>thyratron n.[电]闸流管</li>
<li>ignitron n.引燃管，放电管</li>
<li>cycloconverter n.周波变换器，循环换流器，双向离子变频器</li>
<li>traic n.[电]三端双向可控硅开关元件</li>
<li>a scope of 一个范围</li>
<li>spectrum n.谱，光谱，范围，系列，幅度</li>
</ul>
]]></content>
      <categories>
        <category>english</category>
      </categories>
      <tags>
        <tag>英文</tag>
        <tag>术语</tag>
        <tag>电力</tag>
      </tags>
  </entry>
  <entry>
    <title>软件英文</title>
    <url>/english/software/</url>
    <content><![CDATA[<h1 id="CG术语">1 &nbsp&nbsp<a href="#CG术语" class="headerlink" title="CG术语"></a>CG术语</h1><ul>
<li>CG Computer Graphic 计算机图像</li>
<li>CGer 指使用计算机生成图像的用户</li>
<li>CGI Computer Graphic Image 计算机图像</li>
<li>DDC Digital Content Creation(Creating) 数字内容创作<ul>
<li>What is your favorite DCC tool?</li>
<li>What is the DCC tools you use?</li>
</ul>
</li>
<li>AOVs Arbitrary Output Variables 任意输出变量<ul>
<li>渲染分层：AO、渲染属性、灯光、速度、景深、法线、IDs、自定义的属性等（根据渲染和后期的实际需要）</li>
</ul>
</li>
</ul>
<h1 id="Blender-2-80-Fundamentals-Official-Video">2 &nbsp&nbsp<a href="#Blender-2-80-Fundamentals-Official-Video" class="headerlink" title="Blender 2.80 Fundamentals - Official Video"></a>Blender 2.80 Fundamentals - Official Video</h1><h2 id="第一集">2.1 &nbsp&nbsp<a href="#第一集" class="headerlink" title="第一集"></a>第一集</h2><ul>
<li>fantastic adj.出色的；极好的；很大的；怪诞的</li>
<li>be mostly known for sth. 以...而闻名；最出名的是...</li>
<li>modeling capabilities 建模能力</li>
<li>feature films 故事片</li>
<li>TV series 电视剧</li>
<li>a bunch of 一群；一束；一堆（许多）</li>
<li>as from... &#x2F;as of... 自...起（起始时间或日期）<ul>
<li>and as of recently 2d animation and real-time rendering（还有最近的2d动画和实时渲染）</li>
</ul>
</li>
<li>video series 视频系列</li>
<li>serve as 充当，担任<ul>
<li>serve as an encyclopedia of sorts for fundamentals of blender（作为一本blender各种基础知识的百科全书）</li>
</ul>
</li>
<li>veteran &#x2F;ˈvetərən&#x2F;　adj.老手，经验丰富的</li>
<li>centain adj.某事，某种，某人（不提及细节）<ul>
<li>I&#39;ll be going over cetain topics that should be helpful for both beginners and veteran blener users, especially with the recent update.（我将会仔细研究某些话题，应该会对新手和经验丰富的blender用户有所帮助，特别是在最近的更新下。）</li>
</ul>
</li>
</ul>
<h2 id="第二集">2.2 &nbsp&nbsp<a href="#第二集" class="headerlink" title="第二集"></a>第二集</h2><ul>
<li>intimidating adj.吓人的，令人胆怯的<ul>
<li>seem intimidating</li>
</ul>
</li>
<li>arguably adv.按理，可论证地</li>
<li>handy adj.易使用的；便利的 n.显示，显像（计算机屏幕）</li>
<li>gizmo n.小装置，小玩意儿（个人理解为控件widget）</li>
<li>axis n.轴，坐标轴，对称中心轴</li>
<li>respond to 响应，作出反应<ul>
<li>notice how it responds to our cursor floating above each axis（注意它是如何对鼠标浮动在每个坐标上面作出反应）</li>
</ul>
</li>
<li>indicator n.指针，指示器；指示信号，标志</li>
<li>perspective adj.透视的 n.视角，景观；透视法；态度；客观判断力</li>
<li>orthographic adj.正交的</li>
<li>snap v.移到某位置，打开，关上 exclamation 真巧（对于两件相同事物惊讶）</li>
<li>corresponding adj.符合的，相关的</li>
<li>achieve v.达到；完成<ul>
<li>achieve the same effect 达到相同效果</li>
<li>accomplish the same task</li>
</ul>
</li>
<li>cursor n.光标，游标（计算机屏幕）</li>
<li>pivot n.中心点，核心 v.使在枢轴上旋转</li>
<li>around adv. 围绕，环绕；周围，四周；出现；大约</li>
<li>particular adj.特指的；特别的</li>
<li>point n. 某地方，地点 v.指，指向<ul>
<li>point out 指出</li>
</ul>
</li>
<li>center&#x2F;centre v. 把...放在中央</li>
<li>frame v. 给...做框；给...镶边<ul>
<li>reframe your perspective to focus on the object or objects you have selected（重新构建视角以专注于选择的一个或多个物体）</li>
</ul>
</li>
<li>period n. 句点；周期；一段时间<ul>
<li>period key 句点键</li>
</ul>
</li>
<li>number pad&#x2F;numpad 数字键</li>
<li>self-explanatory adj.无须解释的；一目了然的</li>
<li>magnifying glass 放大镜</li>
<li>scroll n.卷轴 v.滚动<ul>
<li>scroll wheel 滑轮，滚轮</li>
</ul>
</li>
<li>plus n.加号；优势 adj.多，余；好的；零度以上 prep.加 conj.此外，况且</li>
<li>minus n.减号 adj.负的 prep.减去；零下，欠缺</li>
<li>bring you into the eyes of your camera 带你进入摄像机视角</li>
<li>eventually adv.最后，终于</li>
<li>alternatively adv.或者</li>
<li>go ahead 发生，进行；先走，走在前面<ul>
<li>I went ahead and setup up a scene here to maka it more obvious to you（在这里我提前设置好了一个场景，让你更容易理解）</li>
</ul>
</li>
<li>take sth. into account&#x2F;take account of sth. 考虑到...，顾及...</li>
<li>flatten v.变平，把...弄平</li>
<li>angle v.斜置，斜移</li>
<li>immensely adv. 极端地，非常，极大地</li>
<li>accurate adj. 准确的</li>
<li>in relation to (事物间)关系，关联（翻译常为「关于...」「在...方面」）<ul>
<li>say v. 比方说，假设</li>
<li>this is an unrealistic view but helps immensely with making models accurate especially in relation to say a 2d concept sketch（这不是一个真实视图，但对于制作精确模型有很大帮助，尤其是在2d概念草图方面）</li>
</ul>
</li>
</ul>
<h2 id="第三集">2.3 &nbsp&nbsp<a href="#第三集" class="headerlink" title="第三集"></a>第三集</h2><ul>
<li>flexible adj.灵活的，可变动的，柔韧的<ul>
<li>can be flexible enough to fit the workflow you need</li>
</ul>
</li>
<li>go over sth. 反复研究，仔细琢磨；仔细检查...</li>
<li>interpret v.领会；说明；口译；演绎（角色&#x2F;音乐）</li>
<li>interact v.相互作用，相互影响；交流，沟通，合作<ul>
<li>interact with sth. 与...互动</li>
</ul>
</li>
<li>let&#39;s go over some of the basics on how to interpret and interact with blender&#39;s UI. （让我们一起仔细研究一些关于如何领会及与blender UI交互的基础）</li>
<li>informative adj.提供有用信息的</li>
</ul>
]]></content>
      <categories>
        <category>english</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>英文</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Aegisub总结</title>
    <url>/software/aegisub/</url>
    <content><![CDATA[<p>油管的中英双语字幕，要先合并之后再导入aeg</p>
<p>自己自制的双语，可先将中文打轴，之后复制行，并将翻译好的英文从复制的起始处开始粘贴。</p>
<p>如果同一个样式的呈现的大小不一致，请重设分辨率再从样式库调用样式。</p>
<p>时间轴批量置零，全选，在设置框将开始时间、结束时间、持续时间全部置零</p>
<p>aegisub的频率模式（软件已经默认设置好缩放参数，即默认显示出来是人声频率左右的范围）</p>
<h1 id="字幕格式设置">1 &nbsp&nbsp<a href="#字幕格式设置" class="headerlink" title="字幕格式设置"></a>字幕格式设置</h1><p>双语主：思源黑体，粗体，黑色，大小56，边框1，阴影1.8，垂直边距75<br>双语次：思源黑体，非粗体，#EBA862，大小36，边框1，阴影1.8，垂直边距40<br>单字幕：双语主，取垂直边距50。样式修改时，和「双语主」同步，先复制一份，再改垂直边距50</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>aegisub</tag>
      </tags>
  </entry>
  <entry>
    <title>AI总结</title>
    <url>/software/ai/</url>
    <content><![CDATA[<h1 id="LLM大模型">1 &nbsp&nbsp<a href="#LLM大模型" class="headerlink" title="LLM大模型"></a>LLM大模型</h1><h2 id="Ollama安装教程">1.1 &nbsp&nbsp<a href="#Ollama安装教程" class="headerlink" title="Ollama安装教程"></a>Ollama安装教程</h2><ol>
<li>下载<a href="https://ollama.com/download">Ollama安装包</a></li>
<li>安装路径<ul>
<li>默认路径：不使用参数，直接运行安装的话，路径为<code>C:\Users\xxx\AppData\Local\Programs\Ollama</code></li>
<li>自定义路径安装：<code>OllamaSetup.exe /DIR=&quot;D:\ollama&quot;</code></li>
</ul>
</li>
<li>修改模型路径<ol>
<li>新建系统环境变量：变量名：<code>OLLAMA_MODELS</code>，变量值：<code>D:\ollama\models</code></li>
<li>若默认模型路径<code>C:\Users\xxx\.ollama\models</code>已经拉取下载存在模型文件的话，在添加了系统环境变量之后，将<code>C:\Users\xxx\.ollama\models</code>路径下的<code>blobs</code>和<code>manifests</code>两个子文件夹剪切移动至<code>D:\ollama\models</code>下即可</li>
<li>重启ollama后台进程，运行<code>ollama list</code>验证模型迁移是否成功。</li>
</ol>
</li>
</ol>
<p>常见的ollama命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line">  ollama [flags]</span><br><span class="line">  ollama [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  serve       Start ollama</span><br><span class="line">  create      Create a model from a Modelfile</span><br><span class="line">  show        Show information for a model</span><br><span class="line">  run         Run a model</span><br><span class="line">  stop        Stop a running model</span><br><span class="line">  pull        Pull a model from a registry</span><br><span class="line">  push        Push a model to a registry</span><br><span class="line">  list        List models</span><br><span class="line">  ps          List running models</span><br><span class="line">  cp          Copy a model</span><br><span class="line">  rm          Remove a model</span><br><span class="line">  help        Help about any command</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">  -h, --help      help for ollama</span><br><span class="line">  -v, --version   Show version information</span><br><span class="line"></span><br><span class="line">Use &quot;ollama [command] --help&quot; for more information about a command.</span><br></pre></td></tr></table></figure>

<h1 id="Stable-Diffusion">2 &nbsp&nbsp<a href="#Stable-Diffusion" class="headerlink" title="Stable Diffusion"></a>Stable Diffusion</h1><h2 id="ComfyUI本地手动安装">2.1 &nbsp&nbsp<a href="#ComfyUI本地手动安装" class="headerlink" title="ComfyUI本地手动安装"></a>ComfyUI本地手动安装</h2><ol>
<li>克隆ComfyUI仓库：<code>git clone https://github.com/comfyanonymous/ComfyUI.git</code></li>
<li>安装PyTorch：<code>pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu126</code></li>
<li>安装依赖：<code>pip install -r requirements.txt</code></li>
<li>SD模型存放路径：<code>models/checkpoints</code></li>
<li>VAE模型存放路径：<code>models/vae</code></li>
<li>安装ComfyUI-Manager：在<code>ComfyUI/custom_nodes</code>路径下运行：<code>git clone https://github.com/ltdrdata/ComfyUI-Manager.git</code>，并刷新网页。</li>
<li>运行ComfyUI：<code>python main.py --front-end-version Comfy-Org/ComfyUI_frontend@latest</code></li>
</ol>
<h2 id="Stable-Diffusion-Webui局域网多人共享">2.2 &nbsp&nbsp<a href="#Stable-Diffusion-Webui局域网多人共享" class="headerlink" title="Stable Diffusion Webui局域网多人共享"></a>Stable Diffusion Webui局域网多人共享</h2><p>默认情况下，Stable Diffusion Webui实现的局域网共享，无法实现多人队列提交，并且SD模型和VAE模型是全局设置，一人改变会导致后台改变，而网页端显示的值并未变化更新。</p>
<p>队列提交&#x2F;多人共享使用的一些插件实现：</p>
<ul>
<li><a href="https://github.com/ArtVentureX/sd-webui-agent-scheduler">sd-webui-agent-scheduler</a></li>
<li><a href="https://github.com/wolverinn/stable-diffusion-multi-user">stable-diffusion-multi-user</a></li>
</ul>
<p>多人共享使用的一些问题讨论：</p>
<ul>
<li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/11531">multiple users use it at the same time</a></li>
</ul>
<h2 id="Stable-Diffusion-Webui多卡算力">2.3 &nbsp&nbsp<a href="#Stable-Diffusion-Webui多卡算力" class="headerlink" title="Stable Diffusion Webui多卡算力"></a>Stable Diffusion Webui多卡算力</h2><p>当前Webui并未支持多卡同时加速计算，通过共享实例进程实现多人使用（队列提交）均衡多卡负载倒是可以实现。</p>
<h1 id="Yolo目标检测框架">3 &nbsp&nbsp<a href="#Yolo目标检测框架" class="headerlink" title="Yolo目标检测框架"></a>Yolo目标检测框架</h1><h2 id="毛囊检测">3.1 &nbsp&nbsp<a href="#毛囊检测" class="headerlink" title="毛囊检测"></a>毛囊检测</h2><ul>
<li>数据集：<ul>
<li><a href="https://universe.roboflow.com/project-0iwdt/hair-tootr/dataset/3">hair Image Dataset</a></li>
<li><a href="https://drive.google.com/file/d/1rMw8OzgxuTOSqKD8EBPN_BYXW18q9d3H/view">FDU_HairFollicleDataset.zip</a></li>
</ul>
</li>
<li>论文资料<ul>
<li><a href="https://dl.acm.org/doi/abs/10.1007/978-3-031-44207-0_4">A New Dataset for Hair Follicle Recognition and Classification in Robot-Aided Hair Transplantation</a></li>
<li>上一篇论文镜像链接（附有数据集下载链接，已明写在上一小节）<a href="https://link.springer.com/chapter/10.1007/978-3-031-44207-0_4">A New Dataset for Hair Follicle Recognition and Classification in Robot-Aided Hair Transplantation</a></li>
</ul>
</li>
</ul>
<h1 id="参考文献">4 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Accelerate doesn&#39;t use multi GPU with automatic1111[EB&#x2F;OL]. <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/13942">https://github.com/AUTOMATIC1111/stable-diffusion-webui/discussions/13942</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>SD</tag>
        <tag>stable diffusion</tag>
        <tag>stable diffusion webui</tag>
        <tag>AIGC</tag>
        <tag>AI</tag>
        <tag>yolo</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Arch Linux的踩坑记录总结</title>
    <url>/software/arch-linux/</url>
    <content><![CDATA[<h1 id="安装arch系统镜像">1 &nbsp&nbsp<a href="#安装arch系统镜像" class="headerlink" title="安装arch系统镜像"></a>安装arch系统镜像</h1><ol>
<li>下载镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/latest/">点击跳转</a>，使用PE U盘或者虚拟机加载CD方式加载系统镜像。</li>
<li>选择<code>Arch Linux install medium (x86_64, UEFI)</code>。</li>
<li>验证启动模式：<code>ls /sys/firmware/efi/efivars</code>。若正确输出目录且无错误，则证明是UEFI模式。</li>
<li>连接网络（由路由器DHCP自动下发分配IP），ping测试联网状态（<code>ip addr</code>查看IP），可用ssh连接完成后面的工作，方便复制粘贴命令（<code>systemctl status sshd</code>查看ssh保护进程运行状态），passwd修改当前环境root账户的密码。</li>
<li>重新设置镜像源mirrorlist，使用reflector获取速度最快的6个镜像，并保存至指定路径<code>/etc/pacman.d/mirrorlist</code>。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reflector -c China -a 6 --<span class="built_in">sort</span> rate --save /etc/pacman.d/mirrorlist</span><br><span class="line">reflector -c China -a 6 --<span class="built_in">sort</span> rate --save /mnt/etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure>
<p>手动设置镜像源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/pacman.d/mirrorlist</span><br><span class="line"><span class="comment"># 顶部添加如下镜像源</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br><span class="line">Server = https://repo.archlinuxcn.org/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>打开自动同步时间：<code>timedatectl set-ntp true</code>。检测命令生效情况：<code>timedatectl status</code>。</li>
<li><code>lsblk</code>或者<code>fdisk -l</code>查看硬盘情况（rom、loop、airoot的设备可忽略掉）。使用fdisk分区：<code>fdisk /dev/sda</code>，按<code>g</code>并回车将磁盘分区表设置为GPT格式，按<code>n</code>并回车新增一个分区，分区号默参直接回车，起始扇区默参直接回车，结束位置输入<code>+300M</code>并回车表示分区大小为300M。重复<code>n</code>命令三次，完成剩余的三个分区的工作。按<code>t</code>并回车更改分区类型，输入分区编号1并回车，输入分区类型1并回车（1代表EFI system partition）。重复<code>t</code>命令，将2、3、4号分区分别改为类型19（SWAP），类型23（Linux root (x86-64)），类型42（Linux home）。最后按<code>w</code>并回车保存分区表。<code>df -h</code>查看分区情况。</li>
<li>磁盘格式化</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs.fat -F 32 /dev/sda1</span><br><span class="line">mkswap /dev/sda2</span><br><span class="line">mkfs.ext4 /dev/sda3</span><br><span class="line">mkfs.ext4 /dev/sda4</span><br></pre></td></tr></table></figure>
<ol start="8">
<li>挂载文件系统<br>挂载boot</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sda3 /mnt</span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/home <span class="comment">#创建/mnt/home目录供挂载</span></span><br><span class="line">mount /dev/sda4 /mnt/home</span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/boot <span class="comment">#创建/mnt/boot目录供挂载</span></span><br><span class="line">mount /dev/sda1 /mnt/boot</span><br></pre></td></tr></table></figure>
<p>挂载swap：<code>swapon /dev/sda2</code><br>9. 安装系统：<code>pacstrap /mnt base linux linux-firmware nano</code><br>10. 生成fstab文件：<code>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code>。检查fstab文件内容：<code>cat /mnt/etc/fstab</code>。<br>11. 更换当前的根目录到安装到硬盘上的系统：<code>arch-chroot /mnt</code><br>12. 将时区设置为亚洲&#x2F;上海：<code>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code>。<br>13. 同步硬件时钟：<code>hwclock --systohc</code>。<br>14. 配置本地化设置：<code>nano /etc/locale.gen</code>，<code>ctrl+w</code>搜索，分别找到<code>#en_US</code>,<code>#zh_CN</code>带有UTF-8的两行，去掉前面的#号。<code>ctrl+o</code>并回车保存文件，<code>ctrl+x</code>并回车退出nano。生成配置：<code>locale-gen</code>。<br>15. 创建并修改&#x2F;etc&#x2F;locale.conf文件，填入<code>LANG=en_US.UTF-8</code>并保存。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> /etc/locale.conf</span><br><span class="line">nano /etc/locale.conf</span><br></pre></td></tr></table></figure>
<ol start="16">
<li>配置网络主机名：<code>echo &quot;archlinux&quot; &gt;&gt; /etc/hostname</code>，</li>
<li>设置root密码：<code>passwd</code>。</li>
<li>设置引导程序</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S dosfstools grub efibootmgr  <span class="comment"># 安装引导程序</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot --recheck  <span class="comment"># 将grub安装至EFI分区</span></span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg  <span class="comment"># 生成grub配置</span></span><br></pre></td></tr></table></figure>
<ol start="19">
<li>安装新系统必要的包：<code>pacman -S networkmanager network-manager-applet dhcpcd dialog os-prober mtools ntfs-3g base-devel linux-headers reflector git</code>。更新软件包缓存：<code>sudo pacman -Syy</code>。更新系统：<code>sudo pacman -Syu</code>。</li>
<li>开启dhcpcd</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start dhcpcd  <span class="comment"># 启动dhcpcd</span></span><br><span class="line">systemctl <span class="built_in">enable</span> dhcpcd  <span class="comment"># 使dhcpcd自启</span></span><br></pre></td></tr></table></figure>
<ol start="21">
<li>启用sshd服务并远程控制</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start sshd</span><br><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br><span class="line">nano /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 将其中PermitRootLogin前面#号去掉并且将值设置为yes</span></span><br><span class="line"><span class="comment"># 将其中PasswordAuthentication前面#号去掉并且将值设置为yes</span></span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>
<ol start="22">
<li>添加普通用户</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -m kin <span class="comment"># 添加用户名为kin的用户</span></span><br><span class="line">passwd kin <span class="comment"># 为用户kin设置密码</span></span><br><span class="line"><span class="comment"># 添加用户的更多选项</span></span><br><span class="line"><span class="comment"># useradd -m -G additional_groups -s login_shell username</span></span><br><span class="line">pacman -S <span class="built_in">sudo</span></span><br><span class="line">nao /etc/sudoers</span><br><span class="line"><span class="comment"># 打开/etc/sudoers文件后，在root ALL=(ALL:ALL) ALL一行下，添加kin ALL=(ALL:ALL) ALL。</span></span><br></pre></td></tr></table></figure>
<ol start="23">
<li>退出chroot环境，卸载掉挂载的硬盘并重启</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span>  <span class="comment"># 返回至arch-chroot之前的环境</span></span><br><span class="line">umount /mnt/home</span><br><span class="line">umount /mnt/boot</span><br><span class="line">umount /mnt</span><br><span class="line">reboot  <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure>

<p><strong>分区方案（列表顺序就是实际的分区顺序）</strong></p>
<ul>
<li><code>/boot/efi</code> 300M</li>
<li><code>swap</code>（内存大小×1.5）</li>
<li><code>/</code> 40G</li>
<li><code>/home</code> 剩余全部空间</li>
</ul>
<p><strong>Swap分区的大小分配推荐方案</strong></p>
<table>
<thead>
<tr>
<th>Amount of RAM in the system</th>
<th>Recommended swap space</th>
<th>Recommended swap space if allowing for hibernation</th>
</tr>
</thead>
<tbody><tr>
<td>⩽ 2GB</td>
<td>2 times the amount of RAM</td>
<td>3 times the amount of RAM</td>
</tr>
<tr>
<td>&gt; 2GB – 8GB</td>
<td>Equal to the amount of RAM</td>
<td>2 times the amount of RAM</td>
</tr>
<tr>
<td>&gt; 8GB – 64GB</td>
<td>At least 4 GB</td>
<td>1.5 times the amount of RAM</td>
</tr>
<tr>
<td>&gt; 64GB</td>
<td>At least 4 GB</td>
<td>Hibernation not recommended</td>
</tr>
</tbody></table>
<h1 id="安装KDE桌面环境">2 &nbsp&nbsp<a href="#安装KDE桌面环境" class="headerlink" title="安装KDE桌面环境"></a>安装KDE桌面环境</h1><ol>
<li>安装显示Xorg服务器：<code>sudo pacman -S xorg</code>。</li>
<li>安装KDE Plasma桌面环境和其他KDE软件包：<code>sudo pacman -S plasma kde-applications</code>。</li>
<li>安装显示管理器（开机图形界面登录）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S sddm</span><br><span class="line">systemctl <span class="built_in">enable</span> sddm.service <span class="comment"># 开机自启动sddm服务</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>进入桌面环境</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 手动进入桌面环境</span></span><br><span class="line">startx</span><br><span class="line"><span class="comment"># 修改当前帐户bash配置，让账户登录后自动进入桌面环境</span></span><br><span class="line">nano ~/.bash_profile</span><br><span class="line"><span class="comment"># 或者修改Shell的全局启动配置文件</span></span><br><span class="line">nano /etc/profile</span><br><span class="line"><span class="comment"># 文件末尾处添加如下内容</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$&#123;DISPLAY&#125;</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;XDG_VTNR&#125;</span>&quot;</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exec</span> startx</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h1 id="参考文献">3 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 在ProxmoxVE(PVE)7.0中安装ArchLinux[EB&#x2F;OL]. <a href="https://www.raobee.com/archives/343/">https://www.raobee.com/archives/343/</a>.<br>[2]  Arch Linux + KDE 的安装和配置[EB&#x2F;OL]. <a href="https://peoxin.github.io/blog/2022/05/01/Arch%20Linux%20+%20KDE%20%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/">https://peoxin.github.io/blog/2022/05/01/Arch%20Linux%20+%20KDE%20%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</a>.<br>[3] Installation guide[EB&#x2F;OL]. <a href="https://wiki.archlinux.org/title/Installation_guide">https://wiki.archlinux.org/title/Installation_guide</a>.<br>[4] How to Install Deepin Desktop in Arch Linux [Complete Guide][EB&#x2F;OL]. <a href="https://www.debugpoint.com/2021/01/deepin-arch-linux-install-20/">https://www.debugpoint.com/2021/01/deepin-arch-linux-install-20/</a>.<br>[5] Easy Step - Arch Linux ( EFI ) With Clover ( EFI )[EB&#x2F;OL]. <a href="https://www.insanelymac.com/forum/topic/294443-easy-step-arch-linux-efi-with-clover-efi/">https://www.insanelymac.com/forum/topic/294443-easy-step-arch-linux-efi-with-clover-efi/</a>.<br>[6] 10 Commands to Check Disk Partitions and Disk Space on Linux[EB&#x2F;OL]. <a href="https://www.binarytides.com/linux-command-check-disk-partitions/">https://www.binarytides.com/linux-command-check-disk-partitions/</a>.<br>[7] Can&#39;t establish an internet connection in Arch Linux[EB&#x2F;OL]. <a href="https://superuser.com/questions/751961/cant-establish-an-internet-connection-in-arch-linux">https://superuser.com/questions/751961/cant-establish-an-internet-connection-in-arch-linux</a>.<br>[8] Deepin Desktop Environment (简体中文)[EB&#x2F;OL]. <a href="https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Deepin_Desktop_Environment_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a>.<br>[9] Localization (简体中文)&#x2F;Simplified Chinese (简体中文)[EB&#x2F;OL]. <a href="https://wiki.archlinux.org/title/Localization_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Simplified_Chinese_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Localization_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Simplified_Chinese_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a>.<br>[10] VirtualBox&#x2F;Install Arch Linux as a guest[EB&#x2F;OL]. <a href="https://wiki.archlinux.org/title/VirtualBox/Install_Arch_Linux_as_a_guest">https://wiki.archlinux.org/title/VirtualBox/Install_Arch_Linux_as_a_guest</a>.<br>[11] How to enable a Virtualbox shared folder for Linux guest systems[EB&#x2F;OL]. <a href="https://averagelinuxuser.com/virtualbox-shared-folder/">https://averagelinuxuser.com/virtualbox-shared-folder/</a>.<br>[12] Recommended Partitioning Scheme[EB&#x2F;OL]. <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-x86">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-x86</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>arch</tag>
        <tag>virtualbox</tag>
        <tag>pve</tag>
      </tags>
  </entry>
  <entry>
    <title>Audacity总结</title>
    <url>/software/audacity/</url>
    <content><![CDATA[<h1 id="安装openvino-plugins-ai-audacity找不到组件">1 &nbsp&nbsp<a href="#安装openvino-plugins-ai-audacity找不到组件" class="headerlink" title="安装openvino-plugins-ai-audacity找不到组件"></a>安装openvino-plugins-ai-audacity找不到组件</h1><p>运行openvino-plugins-ai-audacity安装程序后，默认是没有启用组件的。</p>
<p>解决方法：编辑-&gt;偏好设置-&gt;模块-&gt;mod-openvino-&gt;已启用</p>
<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Installed in Program Files&#x2F;Audacity but does not show up in Audacity[EB&#x2F;OL]. <a href="https://github.com/intel/openvino%E2%80%91plugins%E2%80%91ai%E2%80%91audacity/issues/132">https://github.com/intel/openvino‑plugins‑ai‑audacity/issues/132</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>audacity</tag>
        <tag>音频</tag>
        <tag>后期处理</tag>
      </tags>
  </entry>
  <entry>
    <title>CG基础</title>
    <url>/software/cg-fundamentals/</url>
    <content><![CDATA[<h1 id="三维制作的规范">1 &nbsp&nbsp<a href="#三维制作的规范" class="headerlink" title="三维制作的规范"></a>三维制作的规范</h1><ol>
<li>模型的比例、单位、坐标：一般单位采用m，按实际规则和尺寸进行制作；场景或模型放在坐标轴原点处。如果默认单位不是m，制作时应注意缩放大小。</li>
<li>模型的命名：英文命名，若有重复模型，使用下划线_和数字序号以区分，如model_1.</li>
<li>模型面：动画用模型（特别是需要Skinning的有机体）尽量用Quad（四边面），静态物体时Triangle（三角面）和Quad都没有太大问题。</li>
<li>模型面数：单个面数以1500三角面以上，最高面数不超过8000三角面。室内场景一般总面数在80000三角面较佳。</li>
<li>模型法线：模型制作注意法线方向，不要出现法线翻转，以免法线的背面露在玩家视线之内，导致无法看到模型（Unity引擎对模型的显示是单面）</li>
<li>UV：贴图的摆放要根据实际模型上可以观察到的状况而定，玩家不能直接看到，或者被遮挡的部位的UV可以缩小点，而很主要的大面尺寸放大一些。在摆放的时候需要大家反复的尝试和修改，使之尽可能的填满整个UV。高级的UV则会有很多合理的重叠的地方，运用这些合理的重叠，可以大幅度提高UV的使用率，而且可以减少贴图绘制量，提高贴图的精度。对于新人来说，分的整齐是关键，一个是在UV视口中整齐的摆放，还有就是贴到物体上贴图的整齐。贴图的绘制方法多种多样，需要多种方法配合才能很快捷方便的完整贴图的绘制，为了方便之后的法线贴图和光照贴图的制作，在PS里要合理区分图层。最终导出的模型都会有两套UV。一套（UV1）用于漫反射贴图(DiffuseMap)、高光贴图(SpetMap)、法线贴图(NormalMap)；另一套（UV2）用于光照图(LightMap)。UV2不可重叠，但是可以将场景中的物体都展在同一张UV空间上。使其可以最大限度的利用贴图空间生成光照图。</li>
<li>贴图：贴图的漫反射贴图和高光贴图在同一个图片文件上，两张贴图用在同一张贴图的不同通道上，漫反射使用RGB通道，高光使用Alpha通道。这两张贴图使用UV1，贴图的最终大小应控制在256——1024之间，在一开始制作贴图的时候，在考虑整体画面的情况下应该适当的做分辨率高一些的贴图，格式为TGA或TIF（tif文件包含图层，方便PS调整）。 UV2使用的是光照图，大小应该控制在一个室内场景一张1024大小的图，格式为TGA或PNG。</li>
<li>材质：所有模型所使用的都应是默认材质，不需要调节材质球的参数，只需要将做好的贴图贴到模型上即可。注意模型、材质和贴图命名的一致性。</li>
<li>模型的导出：无论是从3Dmax或是Maya中导出的场景都应该是干净的，只包含模型和贴图。 摄影机和灯光等其余物件都不应该有。请注意场景的大纲视图是否简洁有序，并最终确认一次上述所有需要注意的要点，之后导出。格式推荐为FBX。</li>
<li>文件的存放格式，导出文件后，贴图文件放到命名为Texture的文件夹中，模型文件与Texture放到同一目录中。</li>
</ol>
<h2 id="关于模型面的一些分析">1.1 &nbsp&nbsp<a href="#关于模型面的一些分析" class="headerlink" title="关于模型面的一些分析"></a>关于模型面的一些分析</h2><p>DCC里面的Quad本质上是两个三角面，其中共享边被隐藏了。你仔细查看DCC的选项，一定会找到隐藏显示该条边的功能。</p>
<p>对于一般的3D建模，Quad的主要好处增强编辑的效率，方便复杂建模。Quad可以快速选择Loop或者Ring；可以使布线同模型本身的结构更加吻合，Skinning的时候更加容易控制。如果是Sub-division建模，Quad使得细分结果更加可预料和可控制。</p>
<p>最终进入渲染器或者游戏引擎，全部的面都会被拆成三角面进行处理（其实DCC都支持一个面拥有任意三条以上的边）。因为三角面是定义3D模型表面的最小单位，有很多处理上的方便之处。</p>
<p>回到问题，本质上所有3D模型都是三角面构成。Quad是我们为了增加编辑效率引入的。你可以使用三角面建模的角色进行动画，但是会给自己增添很多麻烦和不便。所以前人的经验就是动画用模型（特别是需要Skinning的有机体）尽量用Quad。</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>CG</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>FFmpeg</title>
    <url>/software/ffmpeg/</url>
    <content><![CDATA[<h1 id="基础">1 &nbsp&nbsp<a href="#基础" class="headerlink" title="基础"></a>基础</h1><p>ffmpeg -i input.avi -metadata key&#x3D;value -codec copy output.avi<br>ffprobe &quot;file&quot; #查看metadata</p>
<h2 id="查询命令">1.1 &nbsp&nbsp<a href="#查询命令" class="headerlink" title="查询命令"></a>查询命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -h -&gt; help.txt <span class="comment"># 打印帮助文件</span></span><br><span class="line">ffmpeg -h encoder=libx264</span><br><span class="line">ffmpeg -hwaccels <span class="comment"># 查看支持的硬件加速选项</span></span><br><span class="line">ffmpeg -codecs | grep cuvid <span class="comment"># 查看cuvid提供的GPU编解码器（grep为Linux命令）</span></span><br><span class="line">ffmpeg -f lavfi -i nullsrc -c:v nvenc -gpu list -f null none_output (-hwaccel_device N 和 -gpu N)</span><br></pre></td></tr></table></figure>

<h2 id="硬件编码">1.2 &nbsp&nbsp<a href="#硬件编码" class="headerlink" title="硬件编码"></a>硬件编码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-c:v h264_nvenc -rc:v vbr_hq -cq:v 19 -b:v 2500k -maxrate:v 5000k -profile:v high</span><br><span class="line">ffmpeg -hwaccel cuvid -c:v h264_cuvid -i &lt;input&gt; -c:v h264_nvenc -b:v 2048k -vf scale_npp=1280:-1 -y &lt;output&gt;</span><br><span class="line">ffmpeg -vsync 0 -hwaccel cuvid -c:v h264_cuvid -i input.mp4 -c:a copy -c:v h264_nvenc -b:v 5M output.mp4</span><br><span class="line">                -hwaccel cuda -hwaccel_output_format cuda</span><br><span class="line">ffmpeg -vsync 0 –hwaccel cuvid -c:v h264_cuvid –resize 1280x720 -i input.mp4 -c:a copy -c:v h264_nvenc -b:v 5M output.mp4</span><br><span class="line">ffmpeg -r 30 -f image2 -i %4d.jpg -r 30 -c:v h264_nvenc -profile:v high -level 5.1 -preset slow -rc:v vbr_hq -cq:v 19 -b:v 2500k -maxrate:v 5000k ../output.mp4</span><br></pre></td></tr></table></figure>

<h1 id="实战案例">2 &nbsp&nbsp<a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h1><h2 id="合并多个视频文件">2.1 &nbsp&nbsp<a href="#合并多个视频文件" class="headerlink" title="合并多个视频文件"></a>合并多个视频文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -f concat -i filelist.txt -c copy output.mp4</span><br><span class="line"><span class="comment"># filelist.txt</span></span><br><span class="line"><span class="comment"># file &#x27;1.flv&#x27;</span></span><br><span class="line"><span class="comment"># file &#x27;2.flv&#x27;</span></span><br><span class="line"><span class="comment"># file &#x27;3.flv&#x27;</span></span><br><span class="line"><span class="comment"># file &#x27;4.flv&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="常见知识点">3 &nbsp&nbsp<a href="#常见知识点" class="headerlink" title="常见知识点"></a>常见知识点</h1><ul>
<li>yuv420p的p代表planar</li>
<li>k和K都是表示$10^3&#x2F;2^{10}$，K之后的只有大写，比如M表示$10^6&#x2F;2^{20}$（详见<a href="https://ffmpeg.org/ffmpeg-utils.html#Expression-Evaluation">Expression Evaluation</a>。</li>
<li>bufsize配合maxrate参数使用可控制编码时的码率波动，例如264的cbr恒定码率编码中，同时设置b:v maxrate minrate bufsize(前三个都是设置为1M，bufsize设置为50k，最后编码出来的码率波动最小996kbit&#x2F;s，1001kbit&#x2F;s)。bufsize is the &quot;rate control buffer&quot;，即码率控制缓存。作用是每次达到bufsize大小，都是计算并调整到average平均码率。</li>
<li>filter chain之间的filter用分号，普通的filter之间用逗号</li>
<li>aac编码：网络视频128k；高质量192k</li>
</ul>
<h1 id="常见错误-警告">4 &nbsp&nbsp<a href="#常见错误-警告" class="headerlink" title="常见错误&#x2F;警告"></a>常见错误&#x2F;警告</h1><h2 id="时间戳问题">4.1 &nbsp&nbsp<a href="#时间戳问题" class="headerlink" title="时间戳问题"></a>时间戳问题</h2><p>常见于 Non-monotonous DTS in output stream</p>
<p>完美的解决方式暂未找到，网上的解决方法基本为：先转为 mts 文件，后转为 mp4。（本质是重新编码，确实可以解决时间戳错误，但也会劣化音质和画质。）</p>
<h2 id="deprecated-pixel-format-used-make-sure-you-did-set-range-correctly">4.2 &nbsp&nbsp<a href="#deprecated-pixel-format-used-make-sure-you-did-set-range-correctly" class="headerlink" title="deprecated pixel format used, make sure you did set range correctly"></a>deprecated pixel format used, make sure you did set range correctly</h2><p>This is just a warning, not an error. You can safely ignore it when using ffmpeg from the command-line, and you don&#39;t have to fix anything.</p>
<p>The warning occurs when converting from a yuv420p source to JPEG, which makes ffmpeg choose yuvj420p as output format. That format is required for writing files with the mjpeg encoder.</p>
<p>These two pixel formats have different color ranges: the former is from 16–235, which is &quot;limited range&quot; (also called &quot;MPEG&quot; range), the latter defaults to 0–255, which is &quot;full range&quot;. The warning is meant for using FFmpeg as a library in your own code (like here). See also the comments on this question.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
  </entry>
  <entry>
    <title>Inkscape总结</title>
    <url>/software/inkscape/</url>
    <content><![CDATA[<h1 id="案例">1 &nbsp&nbsp<a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="位图转SVG">1.1 &nbsp&nbsp<a href="#位图转SVG" class="headerlink" title="位图转SVG"></a>位图转SVG</h2><p>理想适用图像类型：简单的平面图，如何字母或logo；颜色不超过三种。</p>
<p>操作步骤：</p>
<ol>
<li>导入位图。（可适当放大后再操作）</li>
<li>使用“选择工具”选中位图。</li>
<li>菜单&gt;路径&gt;临摹位图轮廓。</li>
<li>启用“即时预览”。在“模式”中关闭“平滑”功能（平滑会添加模糊效果，不利于转3D）。</li>
<li>在“模式”中选择合适的“扫描算法”以创建路径。在“选项”中调整合适参数。</li>
<li>点击“确定”即可生成图形。</li>
<li>使用“选择工具”选中生成图形并拖动离开原图像。</li>
<li>使用“路径节点编辑”手动调节改善形状。</li>
<li>菜单&gt;文件&gt;另存为。（默认就是SVG）</li>
</ol>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>后期处理</tag>
        <tag>inkscape</tag>
      </tags>
  </entry>
  <entry>
    <title>给联想z500安装deepin linux（深度系统）</title>
    <url>/software/install-deepin-on-lenovo-z500/</url>
    <content><![CDATA[<h1 id="起因">1 &nbsp&nbsp<a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>前几日，老父亲向我反应：手提电脑在使用过程中，偶尔会出现不响应的状态。我一想，多半是机子的老配置跟不上win10了，于是回应说抽空我给换装另一个系统。</p>
<p>这个手提电脑是联想在2012年推出的erazer z500系列机型，大概是2013年或是2014年买的吧。用到现在，这个老本子大修过好几次，换过屏幕，换过电源适配器，换过电池……总之是遇到过不少大大小小的毛病。</p>
<p>印象中，这本子最初的系统是win7，后来换过win8和win8.1，现在用的是win10。不过整体配置确实是不太适合新版win10了，毕竟CPU是3代的i5，频率也不高，系统空载时占用的内存也不少。</p>
<h1 id="解决方案">2 &nbsp&nbsp<a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>既然是系统不太合适，那就更换系统呗！我凭借自身的知识储备，大致想出了如下的系统更换方案：</p>
<ol>
<li>老版的win10</li>
<li>精简版win10</li>
<li>win8.1</li>
<li>win7</li>
<li>linux</li>
</ol>
<p>方案1的老版win10换汤不换药，感觉很大机率还是会出现卡顿的现象，不作考虑。</p>
<p>方案2，网上论坛流传的精简版镜像基本都会添加私货（各种乱七八糟的预装软件，同时可能也会有后门软件，不安全），自己动手制作精简版镜像倒也行，不过现在都没啥精力折腾这些东西了，这个方案也pass。</p>
<p>方案3，网卡驱动会有问题，以前这本子用win8.1的时候就遇到过无法连接某些wifi信号，pass。</p>
<p>方案4的win7系统太老了，直接pass。</p>
<p>最后也就只剩方案5——linux系统。linux确实很适合老配置的机子，系统本身就不会消耗过多的硬件资源。不过，linux的软件生态和驱动远不如windows平台，并且发行版众多。现在暂且不考虑软件生态和驱动问题，如何选择linux的发行版呢？</p>
<span id="more"></span>

<p>arch？不行！没啥精力折腾了。</p>
<p>ubuntu？嗯，倒还行，不过有点臃肿，而且不太适合国内的使用习惯。</p>
<p>这个时候，deepin出现在我的脑海中。deepin和ubuntu都是基于debian，而且deepin的桌面gui比较符合国内使用习惯，虽然对硬件要求比ubuntu高，但我认为z500的配置应该足够了。</p>
<p>至于linux的软件生态问题，毕竟现在这老本子是家里长辈在使用，老父亲平时也就只用酷狗听一下歌。酷狗好像没有linux客户端，不过没关系，大不了用安卓版或是wine（应该能解决吧？(＞﹏＜)）。</p>
<p>至于驱动，应该是双显卡驱动和网卡驱动可能会有点问题。</p>
<p>多思无益，先安装再说吧，走一步，看一步！</p>
<h1 id="deepin的安装步骤">3 &nbsp&nbsp<a href="#deepin的安装步骤" class="headerlink" title="deepin的安装步骤"></a>deepin的安装步骤</h1><h2 id="备份数据">3.1 &nbsp&nbsp<a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h2><p>安装系统前，第一步当然是备份数据。数据无价，可别因为懒而导致丢失宝贵的数据。</p>
<h2 id="制作启动盘">3.2 &nbsp&nbsp<a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h2><ol>
<li>下载系统镜像和启动盘制作工具：<a href="https://www.deepin.org/zh/download/">点击跳转下载地址</a>。</li>
<li>准备一个大于2G的U盘，备份U盘数据。</li>
<li>利用启动盘制作工具，制作深度系统启动盘（格式化U盘制作）。</li>
</ol>
<h2 id="安装deepin">3.3 &nbsp&nbsp<a href="#安装deepin" class="headerlink" title="安装deepin"></a>安装deepin</h2><ol>
<li>插入U盘，开机，摁Fn+F12进入快速启动项（本机的BIOS开启了Fn功能键），选择U盘启动项。</li>
<li>按照提示进行安装，这里不一一列出。</li>
<li>安装时，勾选集成的闭源显卡驱动。</li>
<li>我是手动分区的（分区方案如下），不懂的朋友可以选择全盘安装。</li>
<li>完成安装，重启系统，拔出U盘。</li>
</ol>
<p><strong>分区方案（120G的固态硬盘，列表顺序就是实际的分区顺序）</strong></p>
<ul>
<li><code>/boot/efi</code> 300M</li>
<li><code>/boot</code> 1G</li>
<li><code>swap</code> 12G（8G×1.5）</li>
<li><code>/</code> 剩余的空间</li>
<li><code>/home</code> 40G</li>
</ul>
<h2 id="驱动安装">3.4 &nbsp&nbsp<a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h2><p><strong>安装显卡驱动</strong></p>
<ol>
<li>打开商店，搜索并安装「显卡驱动管理器」。</li>
<li>选择prime显卡方案。</li>
<li>按照提示重启系统。</li>
</ol>
<p><strong>安装蓝牙管理器</strong></p>
<ol>
<li>打开终端</li>
<li>输入命令：<code>sudo apt-get install blueman</code></li>
</ol>
<p>安装完显卡驱动和蓝牙管理器之后，驱动这方面基本没啥问题。</p>
<h2 id="几个值得注意的地方">3.5 &nbsp&nbsp<a href="#几个值得注意的地方" class="headerlink" title="几个值得注意的地方"></a>几个值得注意的地方</h2><ul>
<li><strong>不需要关闭BIOS的安全启动</strong>：deepin v20.2.2及之后的版本都能较好的支持安全启动，因此安装deepin不需要专门关闭BIOS的安全启动。</li>
<li><strong>未安装蓝牙管理器之前，不要使用无线鼠标</strong>：deepin默认状态下没有蓝牙管理器，因此，使用无线鼠标会出现一些莫名其妙的bug（例如，若不关闭安全启动，安装过程中则无法点击；即使关闭安全启动后安装系统时，点击操作也会导致UI变成外文语言；安装系统后初次启动时，无线鼠标使用正常，但重启后就会出现异常卡顿现象，甚至无法点击）。这些bug当时困扰了我许久，后来我想起无线鼠标的原理，才准确地定位出问题所在。只有安装蓝牙管理器之后，才能正常使用无线鼠标。</li>
</ul>
<h1 id="常规软件的安装和使用">4 &nbsp&nbsp<a href="#常规软件的安装和使用" class="headerlink" title="常规软件的安装和使用"></a>常规软件的安装和使用</h1><p>目前深度商店的软件应用数量已经比以前增加了很多，在商店中搜索并安装自己想用的软件即可。</p>
<p>让我最为惊喜的是，商店竟然有酷狗，而且不是网页版或者安卓版。这点不错，也省去了我手动折腾wine的麻烦。</p>
<p>至此，z500算是获得了新生。</p>
<h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 如何安装[EB&#x2F;OL]. <a href="https://www.deepin.org/zh/installation/">https://www.deepin.org/zh/installation/</a>.<br>[2] 蓝牙[EB&#x2F;OL]. <a href="https://wiki.deepin.org/wiki/%E8%93%9D%E7%89%99">https://wiki.deepin.org/wiki/%E8%93%9D%E7%89%99</a>.<br>[3] Recommended Partitioning Scheme[EB&#x2F;OL]. <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-x86">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-diskpartrecommend-x86</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>deepin</tag>
        <tag>深度系统</tag>
        <tag>联想</tag>
        <tag>lenovo</tag>
        <tag>z500</tag>
      </tags>
  </entry>
  <entry>
    <title>Krita总结</title>
    <url>/software/krita/</url>
    <content><![CDATA[<h1 id="软件基础">1 &nbsp&nbsp<a href="#软件基础" class="headerlink" title="软件基础"></a>软件基础</h1><p>多功能拾色器：三角形外环是色相环，点击&#x2F;拖动可选择三角形内部颜色，三角形显示内容随着对色相环的操作而变化。</p>
<h2 id="文件格式">1.1 &nbsp&nbsp<a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h2><ul>
<li>kra：krita文档，专用格式文件</li>
<li>jpg：有损压缩格式，导出时保持默认80%即可，平衡了画质和文件大小。</li>
<li>png：无损压缩格式，选择较小文件体积。</li>
</ul>
<h2 id="PPI和DPI">1.2 &nbsp&nbsp<a href="#PPI和DPI" class="headerlink" title="PPI和DPI"></a>PPI和DPI</h2><ul>
<li>PPI：ixels Per Inch，即每英寸像素数，也可以理解成像素&#x2F;英寸（pixels&#x2F;inch）</li>
<li>DPI：Dots Per Inch，即每英寸点数，也可以理解成点&#x2F;英寸（dots&#x2F;inch）<br>一般打印时，可认为图片ppi&#x3D;dpi。</li>
</ul>
<h2 id="快捷键">1.3 &nbsp&nbsp<a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul>
<li>手绘笔刷工具：B（橡皮擦也归类为笔刷）。按住V可以临时切换到直线工具拉直线。</li>
<li>调整笔刷大小：Shift+左右拖动</li>
<li>笔刷橡皮擦模式：E。把当前笔刷切换到橡皮擦模式，然后用来擦除。但不是橡皮擦，Krita中橡皮檫是笔刷。</li>
<li>切换到上一个使用的笔刷：&#x2F;。反复切换可在上一个和当前笔刷中切换。</li>
<li>调暗笔刷颜色：K</li>
<li>调亮笔刷颜色：L</li>
<li>降低不透明度：I</li>
<li>提高不透明度：O</li>
<li>临时吸色到前景色：Ctrl+左键</li>
<li>裁剪工具：C（也可以用于扩大&#x2F;缩小画布，确保勾选应用到图像，而不是图层）</li>
<li>撤销：Ctrl+Z</li>
<li>重做：Ctrl+Shift+Z</li>
<li>旋转画布：Shift+鼠标中键+移动（数字键：左旋4右旋6重置旋转5）</li>
<li>缩放画布：Ctrl+中键+上下移动。100%大小：1。缩放到视图大小：2。</li>
<li>移动画布：<code>按一下空格+按住左键拖动</code>&#x2F;<code>中键+移动</code></li>
<li>镜像显示：M</li>
<li>工具的右键功能<ul>
<li>手绘笔刷工具：有笔刷选择、拾色器、缩放、旋转、镜像显示等。</li>
<li>选区工具：有全选，取消选择，反选等。</li>
</ul>
</li>
<li>图层操作<ul>
<li>通过点击内容反向选中图层：按住R+点击内容（Shift+R可以连续选择多个）</li>
<li>新增颜料图层：Ins</li>
<li>新建图层组：Ctrl+G，会将当前选中的图层放进新建后的图层组内。</li>
<li>取消图层编组：Ctrl+Alt+G</li>
<li>向下合并图层：Ctrl+E</li>
<li>删除图层：Shift+Del</li>
<li>选择图层不透明区域：Ctrl+点击图层缩略图</li>
<li>建立剪贴编组（继承透明度）：Ctrl+Shift+G</li>
<li>单独显示图层&#x2F;图层组：ALT+左键点击图层，无需点击眼睛（右键图层，单独显示图层，然后选择对应图层即为该图层）</li>
</ul>
</li>
<li>选区（<strong>选区建立后只能在选区中绘制</strong>）<ul>
<li>矩形选区工具：Ctrl+R</li>
<li>多边形选区（多边形套索）</li>
<li>手绘轮廓选区（套索）：手绘轮廓选区中按住 Ctrl 后提起笔尖在下笔会临时切换到多边形选区</li>
<li>增加选区：按住 Shift 在已有选区上添加</li>
<li>减少选区：按住 Alt 在已有选区上减少</li>
<li>保留选区相交部分：按住 Shift+Alt 在已有选区上留下相交部分</li>
<li>反向选择：Ctrl+Shift+I</li>
<li>取消选择：Ctrl+Shift+A</li>
</ul>
</li>
<li>变形（调整已绘制好内容）：Ctrl+T，可用来移动<ul>
<li>调整位置：变形区域内，鼠标显示四向箭头，回车应用</li>
<li>调整旋转：变形区域外，鼠标显示相互追尾的箭头圆形，回车应用</li>
<li>调整宽高：四边可调整宽高，四角可同时调整宽高，回车应用</li>
<li>调整大小（等比缩放）：按住 Shift 来操作控制点可以等比缩放，回车应用</li>
<li>调整形状：对变形区域右键-液化变形（或其他变形方式）。或在变形工具的工具选项面板点击液化图标切换到液化变形。回车应用。</li>
</ul>
</li>
<li>移动图层：T</li>
<li>搜索功能：Ctrl+Enter</li>
<li>填充工具：F</li>
<li>删除当前选中内容：Del（若存在选区，则仅对选区内操作）</li>
</ul>
<h2 id="多功能右键">1.4 &nbsp&nbsp<a href="#多功能右键" class="headerlink" title="多功能右键"></a>多功能右键</h2><p>右键面板功能：</p>
<ul>
<li>选取颜色（色相环外边的一层是使用过的历史颜色）</li>
<li>选择笔刷（笔刷标签）</li>
<li>笔刷面板参数</li>
<li>镜像显示</li>
<li>旋转画布（右键面板最外边的一层）</li>
<li>缩放画布（滑轨）</li>
</ul>
<h2 id="图层">1.5 &nbsp&nbsp<a href="#图层" class="headerlink" title="图层"></a>图层</h2><ul>
<li>图层：从上往下遮盖合成显示（图层组内的图层优先合成，除非图层组设置为穿透混合模式）</li>
<li>图层混合模式：某些绘画方式会利用混合模式来进行一些操作。</li>
<li>图层不透明度：数值越低越透明，数值越高越不透明。</li>
<li>新建颜料图层：一般用于绘画的图层。</li>
<li>命名图层：双击图层名即可。</li>
<li>新建图层组：整理归纳图层，类似于文件夹。新建按钮下拉菜单-&gt;新增图层组</li>
<li>取消图层编组：右键选择图层组-&gt;图层组-&gt;取消图层编组</li>
<li>向下合并图层：右键选择图层组-&gt;向下合并图层</li>
<li>删除图层：垃圾桶按钮</li>
<li>隐藏&#x2F;显示图层：图层左边的眼睛图标（隐藏的图层不参与图层合成，Krita中透明会用灰白棋盘格表示）</li>
<li>调整图层所在层级：拖拽图层调整即可</li>
<li>锁定图层：图层右边的锁按钮（锁定的图层，除了隐藏&#x2F;显示图层，其他操作无法进行）</li>
<li>锁定透明：图层右边的灰白棋盘按钮。锁定透明是为了防止不小心涂到已有颜色区域外而存在的功能。例如启用锁定透明后，再进行绘画涂色会被限定在已有颜色的部分，不会影响画布其他空白区域。</li>
<li>继承透明：图层右边的<code>α</code>按钮。继承透明类似锁定透明，两者都可用来防止涂出已有颜色范围的。差别是继承透明不局限于单个图层，会按图层合成顺序继承透明。<ul>
<li>常见使用方式1：若启用继承透明的图层和被继承透明的图层都在图层组内，那么直接启用继承透明即可</li>
<li>常见使用方式2:：若启用继承透明的图层和被继承透明的图层不在图层组内<br>1、先建立图层组<br>2、移动底色图层进图层组<br>3、在图层组内，底色图层上新建图层<br>4、在新建的图层上启用继承透明<br>5、在新建的图层上绘制（此时就不会超出范围了）</li>
<li><strong>常见使用方式2便捷操作：选中底色图层，然后按下 Ctrl+Shift+G（建立剪贴编组），右键底色图层-图层组-建立剪贴编组，在新建的图层上绘制。</strong></li>
</ul>
</li>
</ul>
<h2 id="选区和变形（调整已绘制好内容）">1.6 &nbsp&nbsp<a href="#选区和变形（调整已绘制好内容）" class="headerlink" title="选区和变形（调整已绘制好内容）"></a>选区和变形（调整已绘制好内容）</h2><ol>
<li>通过点击内容反向选中图层：按住R+点击内容</li>
<li>切换到手绘轮廓选区工具选中想要调整的部分（若手绘选区不能形成一个封闭区，该工具可自行连接选区）</li>
<li>切换到变形工具（Ctrl+T）对选中部分进行调整（右键选区-变形-变形工具）</li>
<li>调整位置：变形区域内，鼠标显示四向箭头，回车应用</li>
<li>调整旋转：变形区域外，鼠标显示相互追尾的箭头圆形，回车应用</li>
<li>调整宽高：四边可调整宽高，四角可同时调整宽高，回车应用</li>
<li>调整大小（等比缩放）：按住 Shift 来操作控制点可以等比缩放，回车应用</li>
<li>调整形状：对变形区域右键-液化变形（或其他变形方式）。或在变形工具的工具选项面板点击液化图标切换到液化变形。回车应用。</li>
<li>调整好后需要切换回手绘笔刷工具（B）才能继续绘画。</li>
</ol>
<h2 id="线稿与填色技巧">1.7 &nbsp&nbsp<a href="#线稿与填色技巧" class="headerlink" title="线稿与填色技巧"></a>线稿与填色技巧</h2><ul>
<li>让线条平滑<ul>
<li>手绘笔刷工具的防抖和笔画平滑，笔刷选项中默认为「基本-只平滑笔画棱角」。</li>
<li>绘制长线条或者使用鼠标的时候，可以选则后两种，有额外的细调选项可调整。</li>
</ul>
</li>
<li>给线稿填色<ul>
<li>线稿无缺口：需确保线稿无缺口，有缺口会导致填充至外部。<ol>
<li>新建图层并命名</li>
<li>将线稿图层置顶，线稿图层置顶有助于获得良好的线稿效果</li>
<li>切换到填充工具（F）</li>
<li>调整填充工具选项以获得良好填充效果：<ul>
<li>采样图层：分图层进行填充时，推荐切换为所有图层</li>
<li>扩大&#x2F;缩小填充区域：1px或者更高的扩大数值让线稿边缘在填充后不会出现灰杂色。线稿不能非常细，否则这个会导致填充到线稿外面。</li>
<li>色差阈值：控制忽略颜色差异的程度，数值越大越把类似颜色当做一样的处理，例如数值越大，灰色线条和白色底色当做同色处理。</li>
</ul>
</li>
<li>选取想要使用的颜色对底色图层进行填充。</li>
<li>在底色填充完之后，新建图层进行相关细化，例如绘制阴影亮部之类细节。</li>
</ol>
</li>
<li>线稿有缺口：若想对存在缺口的线稿进行填充，可使用智能填色蒙版工具。</li>
</ul>
</li>
</ul>
<h1 id="快捷键优化设置">2 &nbsp&nbsp<a href="#快捷键优化设置" class="headerlink" title="快捷键优化设置"></a>快捷键优化设置</h1><ul>
<li>压感笔设置：鼠标右键，鼠标中键。</li>
</ul>
<h1 id="Krita优化设置">3 &nbsp&nbsp<a href="#Krita优化设置" class="headerlink" title="Krita优化设置"></a>Krita优化设置</h1><ul>
<li>软件的UI比例异常<ul>
<li>Windows系统设置-&gt;显示-&gt;缩放与布局</li>
<li>设置-&gt;配置 krita-&gt;常规-&gt;窗口-&gt;启用高分辨率（Hi-DPI）支持（该项目启用即代表同步Windows的缩放设置）</li>
</ul>
</li>
<li>设置-&gt;配置 krita-&gt;显示-&gt;首选渲染器-&gt;Direct3D 11 - 通过ANGLE转译</li>
<li>数位板相关设置<ul>
<li>确保数位板和显示屏映射比例为 1:1</li>
<li>确保数位板&#x2F;数位屏双击时笔尖间距为关闭（wacom 的设备需要关闭双击时笔尖间距，避免导致绘画线条变成直线）</li>
<li>设置-&gt;配置 krita-&gt;数位板设置-&gt;WinTab（如果数位板没有压感，可以切换此设置）</li>
</ul>
</li>
</ul>
<h1 id="实战案例">4 &nbsp&nbsp<a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h1><h2 id="按图层内容大小导出图层">4.1 &nbsp&nbsp<a href="#按图层内容大小导出图层" class="headerlink" title="按图层内容大小导出图层"></a>按图层内容大小导出图层</h2><ol>
<li>保存当前工作内容为 kra 格式文件</li>
<li>菜单-&gt;工具-&gt;脚本-&gt;图层导出工具</li>
<li>选中之前保存的 kra 文件</li>
<li>初始目录：处选择导出位置</li>
<li>勾选-&gt;按图层内容调整导出大小（图层内容可以超出画布！）</li>
<li>选择图像拓展名为 PNG（该格式才能保存透明通道）</li>
<li>点 OK 输出</li>
</ol>
<h2 id="导入PS的-abr-格式笔刷文件">4.2 &nbsp&nbsp<a href="#导入PS的-abr-格式笔刷文件" class="headerlink" title="导入PS的 abr 格式笔刷文件"></a>导入PS的 abr 格式笔刷文件</h2><p>所有能导入 PS 笔刷的其他软件都是有限度支持！因为不同软件的笔刷引擎不可能完全一样，无论什么其他软件都需要导入后手动调整来贴合原始效果。</p>
<p>目前只能从 PS 的 abr 格式笔刷文件导入画笔笔尖形状（PS 内叫法），之后需要自行设置相关参数调整。</p>
<h2 id="白底黑图片转透明底白图片">4.3 &nbsp&nbsp<a href="#白底黑图片转透明底白图片" class="headerlink" title="白底黑图片转透明底白图片"></a>白底黑图片转透明底白图片</h2><ol>
<li>导入图片</li>
<li>菜单&gt;滤镜&gt;颜色&gt;颜色转为透明度（不做遮罩，否则不好反相）</li>
<li>菜单&gt;滤镜&gt;调整&gt;反相</li>
<li>导出图片</li>
</ol>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>后期处理</tag>
        <tag>krita</tag>
      </tags>
  </entry>
  <entry>
    <title>英伟达Jetson开发板踩坑记录总结</title>
    <url>/software/nvidia-jetson/</url>
    <content><![CDATA[<div class="note info no-icon"><p>文章推荐：<a href="https://www.guyuehome.com/42097">Jetson nano 系统安装</a></p>
</div>

<div class="note danger no-icon"><p>本文绝大部分命令都是在<code>sudo -i</code>切换到root权限后操作的。</p>
</div>

<h1 id="测试项目">1 &nbsp&nbsp<a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h1><ul>
<li>人体骨架检测：<a href="https://github.com/facebookresearch/VideoPose3D">VideoPose3d</a></li>
<li>安卓版人体骨架检测，支持网络摄像头<a href="https://github.com/serviceberry3/videopose3d_android">videopose3d_android</a></li>
<li>人体骨架检测（多人追踪版）：<a href="https://github.com/LynnZhang9/VideoPose3D-for-multi-person-tracking">VideoPose3D-for-multi-person-tracking</a></li>
<li>谷歌的人体骨架检测：<a href="https://github.com/michellelychan/posenet-pytorch">posenet-pytorch</a></li>
<li>人脸年龄修改：<a href="https://github.com/InterDigitalInc/HRFAE">HRFAE</a></li>
</ul>
<h1 id="VideoPose3d">2 &nbsp&nbsp<a href="#VideoPose3d" class="headerlink" title="VideoPose3d"></a>VideoPose3d</h1><ul>
<li>Human3.6M数据集下载：<a href="https://zhuanlan.zhihu.com/p/425608868">Human3.6M全部数据集</a>和Human3.6M部分数据集</li>
</ul>
<h2 id="训练推理自定义视频">2.1 &nbsp&nbsp<a href="#训练推理自定义视频" class="headerlink" title="训练推理自定义视频"></a>训练推理自定义视频</h2><p>设置过程参见：<a href="https://github.com/facebookresearch/VideoPose3D/blob/main/INFERENCE.md">Inference in the wild</a></p>
<h3 id="安装ffmpeg">2.1.1 &nbsp&nbsp<a href="#安装ffmpeg" class="headerlink" title="安装ffmpeg"></a>安装ffmpeg</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install ffmpeg</span><br></pre></td></tr></table></figure>

<h3 id="安装detectron2">2.1.2 &nbsp&nbsp<a href="#安装detectron2" class="headerlink" title="安装detectron2"></a>安装detectron2</h3><div class="note danger no-icon"><p><a href="https://detectron2.readthedocs.io/en/latest/tutorials/install.html#install-pre-built-detectron2-linux-only">官方提供的whl安装包</a>并没有arm架构，因此需手动从源码构建安装。</p>
<p>也不要用命令安装最新版的detectron2：<code>python -m pip install &#39;git+https://github.com/facebookresearch/detectron2.git&#39;</code>，因为新版detectron2要求python3.8版本。问题参见：<a href="https://github.com/facebookresearch/detectron2/issues/4910">Cannot import name &#39;cached_property&#39;</a></p>
</div>

<p>配置流程参照：<a href="https://detectron2.readthedocs.io/en/latest/tutorials/install.html">Installation</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 方案1：直接pip安装</span></span><br><span class="line"><span class="comment"># 指定特定commit，安装适合python3.7的版本</span></span><br><span class="line">pip3.7 install <span class="string">&#x27;git+https://github.com/facebookresearch/detectron2.git@d779ea63faa54fe42b9b4c280365eaafccb280d6&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方案2：手动从源码构建安装</span></span><br><span class="line"><span class="comment"># 如果网络不佳，直接访问网页下载压缩包：https://github.com/facebookresearch/detectron2/tree/d779ea63faa54fe42b9b4c280365eaafccb280d6</span></span><br><span class="line"><span class="comment"># zip包链接：https://github.com/facebookresearch/detectron2/archive/d779ea63faa54fe42b9b4c280365eaafccb280d6.zip</span></span><br><span class="line">git <span class="built_in">clone</span> -b d779ea63faa54fe42b9b4c280365eaafccb280d6 https://github.com/facebookresearch/detectron2.git</span><br><span class="line">python3.7 -m pip install -e detectron2</span><br></pre></td></tr></table></figure>

<h3 id="下载预训练模型">2.1.3 &nbsp&nbsp<a href="#下载预训练模型" class="headerlink" title="下载预训练模型"></a>下载预训练模型</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果VideoPose3D目录下没有checkpoint文件夹的话，先mkdir checkpoint</span></span><br><span class="line"><span class="built_in">cd</span> checkpoint</span><br><span class="line">wget https://dl.fbaipublicfiles.com/video-pose-3d/pretrained_h36m_detectron_coco.bin</span><br></pre></td></tr></table></figure>

<h3 id="推理2D关键点">2.1.4 &nbsp&nbsp<a href="#推理2D关键点" class="headerlink" title="推理2D关键点"></a>推理2D关键点</h3><ol>
<li>在 inference 文件夹中新建两个文件夹 input_directory 和 output_directory，input_directory用来存放需要处理的自定义视频，output_directory用来存放程序生成的每个视频的2D关键点数据文件，后缀名是.npz。</li>
<li>将需要处理自定义视频放入VideoPose3D&#x2F;inference&#x2F;input_directory&#x2F;中，切记需要先放入视频后再执行后面的命令。若不提前放入视频，最后执行run.py是会出现报错：keyError:output.mp4。其中「推理2D关键点」步骤中不会有ffmpeg相关视频处理的日志输出，「创建自定义数据集」步骤中不会显示出处理了xxx.npz文件和处理了多少帧frame，只输出saving和done这两句简单的日志，并且这种情况在data目录中生成data_2d_custom_myvideos.npz的数据集文件只有798字节，不到1KB的大小，属于无效文件。</li>
<li>执行命令推理2D关键点</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> inference</span><br><span class="line">python3.7 infer_video_d2.py \</span><br><span class="line">    --cfg COCO-Keypoints/keypoint_rcnn_R_101_FPN_3x.yaml \</span><br><span class="line">    --output-dir output_directory \</span><br><span class="line">    --image-ext mp4 \</span><br><span class="line">    input_directory</span><br></pre></td></tr></table></figure>
<ol>
<li>创建自定义数据集：程序根据VideoPose3D&#x2F;inference&#x2F;output_directory&#x2F;的每个视频的2D关键点数据文件.npz，在data目录下生成自定义的data_2d_custom_myvideos.npz文件。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> data</span><br><span class="line">python3.7 prepare_data_2d_custom.py -i /home/nvidia/VideoPose3D/inference/output_directory/ -o myvideos</span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure>
<ol>
<li>渲染自定义视频并导出坐标：output.mp4是在VideoPose3D根目录下，不是inference&#x2F;output_directory&#x2F;。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3.7 run.py -d custom -k myvideos -arc 3,3,3,3,3 -c checkpoint --evaluate pretrained_h36m_detectron_coco.bin --render --viz-subject test_video.mp4 --viz-action custom --viz-camera 0 --viz-video /home/nvidia/VideoPose3D/inference/input_directory/test_video.mp4 --viz-output output.mp4 --viz-size 6</span><br><span class="line"><span class="comment"># 下面输入视频路径是绝对路径</span></span><br><span class="line"><span class="comment"># python3.7 run.py -d custom -k myvideos -arc 3,3,3,3,3 -c checkpoint --evaluate pretrained_h36m_detectron_coco.bin --render --viz-subject test_video.mp4 --viz-action custom --viz-camera 0 --viz-video /home/nvidia/VideoPose3D/inference/input_directory/test_video.mp4 --viz-output output.mp4 --viz-size 6</span></span><br></pre></td></tr></table></figure>

<h2 id="训练推理h36m视频">2.2 &nbsp&nbsp<a href="#训练推理h36m视频" class="headerlink" title="训练推理h36m视频"></a>训练推理h36m视频</h2><p>数据集设置步骤参考：<a href="https://github.com/facebookresearch/VideoPose3D/blob/main/DATASETS.md#2d-detections-for-human36m">Dataset setup</a></p>
<ol>
<li>准备数据文件：在data目录下新建h36m文件夹，传入3d数据集的压缩包，目录结构图如下</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">data/</span><br><span class="line">  └── h36m/</span><br><span class="line">    ├── Poses_D3_Positions_S1.tgz</span><br><span class="line">    ├── Poses_D3_Positions_S5.tgz</span><br><span class="line">    ├── Poses_D3_Positions_S6.tgz</span><br><span class="line">    ├── Poses_D3_Positions_S7.tgz</span><br><span class="line">    ├── Poses_D3_Positions_S8.tgz</span><br><span class="line">    ├── Poses_D3_Positions_S9.tgz</span><br><span class="line">    └── Poses_D3_Positions_S11.tgz</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>数据处理</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压数据集：</span></span><br><span class="line"><span class="built_in">cd</span> /home/nvidia/data/h36m/</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.tgz; <span class="keyword">do</span> tar -xvzf <span class="variable">$file</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/nvidia/data</span><br><span class="line">pip3.7 install cdflib</span><br><span class="line">python3.7 prepare_data_h36m.py --from-source-cdf /home/nvidia/data/h36m/</span><br><span class="line"><span class="comment"># 运行成功后，data目录下生成两个文件：data_3d_h36m.npz和data_2d_h36m_gt.npz。</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>下载预训练模型</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> checkpoint</span><br><span class="line"><span class="built_in">cd</span> checkpoint</span><br><span class="line">wget https://dl.fbaipublicfiles.com/video-pose-3d/pretrained_h36m_cpn.bin</span><br><span class="line">wget https://dl.fbaipublicfiles.com/video-pose-3d/pretrained_humaneva15_detectron.bin</span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>测试Human3.6M模型数据</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python run.py -k cpn_ft_h36m_dbb -arc 3,3,3,3,3 -c checkpoint --evaluate pretrained_h36m_cpn.bin</span><br></pre></td></tr></table></figure>

<h1 id="HRFAE">3 &nbsp&nbsp<a href="#HRFAE" class="headerlink" title="HRFAE"></a>HRFAE</h1><p>官方要求的依赖库（注意torch需要是cuda版本的，因为源码是使用cuda设备的方法）</p>
<ul>
<li>Python 3.7</li>
<li>Pytorch 1.1</li>
<li>Numpy</li>
<li>Opencv</li>
<li>TensorboardX</li>
<li>Tensorboard_logger</li>
</ul>
<p>别人测试成功的依赖库版本：参见<a href="https://blog.csdn.net/qq_52179028/article/details/127397877">成功运行HRFAE面部年龄编辑</a></p>
<ul>
<li>Python 3.7.13</li>
<li>Pytorch 1.10.2</li>
<li>Numpy 1.21.5</li>
<li>Opencv 4.6.0</li>
<li>Tensorboard 1.14.0</li>
<li>TensorboardX</li>
<li>Tensorboard-logger</li>
</ul>
<h2 id="预训练模型的配置步骤">3.1 &nbsp&nbsp<a href="#预训练模型的配置步骤" class="headerlink" title="预训练模型的配置步骤"></a>预训练模型的配置步骤</h2><ol>
<li>安装依赖库</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3.7 install TensorboardX Tensorboard_logger</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>修改test.py代码</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> HRFAE</span><br><span class="line">nano test.py</span><br><span class="line"><span class="comment"># 找到下面该行代码，将load函数，改成safe_load或者full_load</span></span><br><span class="line"><span class="comment"># config = yaml.load(open(&#x27;./configs/&#x27; + opts.config + &#x27;.yaml&#x27;, &#x27;r&#x27;))</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>下载预训练模型</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 科学网络条件好的，可以直接参考官方命令下载checkpoint</span></span><br><span class="line"><span class="built_in">cd</span> ./logs/001</span><br><span class="line">./download.sh</span><br><span class="line"><span class="comment"># 如果网络条件不行的话，直接使用链接下载后在传入logs目录，注意上传后记得修改属性权限755或者777</span></span><br><span class="line"><span class="comment"># https://partage.imt.fr/index.php/s/7DzqFHQggfJDw79/download</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>运行命令生成结果</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> HRFAE</span><br><span class="line"><span class="comment"># 年龄区间：20-70</span></span><br><span class="line">python3.7 test.py --config 001 --target_age 40</span><br></pre></td></tr></table></figure>

<h2 id="进程被Killed的故障排查">3.2 &nbsp&nbsp<a href="#进程被Killed的故障排查" class="headerlink" title="进程被Killed的故障排查"></a>进程被Killed的故障排查</h2><p>现象：终端输出一句「Killed」后，进程就闪退退出了。</p>
<p>原因：这是由于pytroch程序占用过多内存，引起系统OOM（Out of memory）机制。</p>
<p>解决方式：无。在我的尝试方法中，尝试了增加虚拟内存的大小至13GB，仍然是无法解决，依然是触发OOM了（即使我对pytorch进程禁用系统OOM killer，并观察内存占用情况，物理4GB全部吃满，虚拟内存zram占用到3.6GB后就整个系统卡死了）。推测可能还因为显存不足。</p>
<p>内存管理的相关命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看虚拟内存使用分配机制，vm.swappiness = 0：最大限度使用物理内存，vm.swappiness = 100：积极的使用交换空间</span></span><br><span class="line">sysctl -a| grep vm.swappiness</span><br><span class="line"><span class="comment"># vm.swappiness = 60</span></span><br><span class="line"><span class="comment"># 临时设置swappiness</span></span><br><span class="line"><span class="built_in">echo</span> 10 &gt; /proc/sys/vm/swappiness</span><br><span class="line"><span class="comment"># 查看内存使用率高的进程id</span></span><br><span class="line">top</span><br><span class="line"><span class="comment"># 对某个进程禁用系统OOM killer，$PID替换为进程ID数字即可</span></span><br><span class="line"><span class="built_in">echo</span> -17 &gt; /proc/<span class="variable">$PID</span>/oom_adj</span><br></pre></td></tr></table></figure>

<p>查看系统是否主动杀掉进程的日志排查：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看系统内核日志中最后7行</span></span><br><span class="line"><span class="built_in">sudo</span> dmesg | <span class="built_in">tail</span> -7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过以下三种命令查看系统是否主动杀死程序进程</span></span><br><span class="line"><span class="comment"># 将dmesg命令的输出通过管道传递给egrep命令进行过滤。egrep命令使用正则表达式&#x27;killed process&#x27;来匹配包含&quot;killed process&quot;的行，并且使用-i选项忽略大小写。-B100选项会在匹配到的行之前显示100行的上下文。</span></span><br><span class="line">dmesg | egrep -i -B100 <span class="string">&#x27;killed process&#x27;</span></span><br><span class="line"><span class="comment"># 在/var/log/messages文件中搜索包含&quot;killed process&quot;的行，并且使用-i选项忽略大小写</span></span><br><span class="line">egrep -i <span class="string">&#x27;killed process&#x27;</span> /var/log/messages</span><br><span class="line"><span class="comment"># 在/var/log目录及其子目录下递归地搜索包含&quot;killed process&quot;的行，并且使用-i选项忽略大小写</span></span><br><span class="line">egrep -i -r <span class="string">&#x27;killed process&#x27;</span> /var/log</span><br><span class="line"><span class="comment"># 将journalctl -xb命令的输出通过管道传递给egrep命令进行过滤。journalctl -xb命令用于查看系统启动时的日志，并且使用-i选项忽略大小写</span></span><br><span class="line">journalctl -xb | egrep -i <span class="string">&#x27;killed process&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果未发现/var/log/messages文件，编辑50-default.conf文件，取消注释一行内容</span></span><br><span class="line">nano /etc/rsyslog.d/50-default.conf</span><br><span class="line"><span class="comment">#       mail,news.none          -/var/log/messages</span></span><br></pre></td></tr></table></figure>

<h2 id="自训练模型的配置步骤">3.3 &nbsp&nbsp<a href="#自训练模型的配置步骤" class="headerlink" title="自训练模型的配置步骤"></a>自训练模型的配置步骤</h2><h2 id="Windows-x86版环境搭建">3.4 &nbsp&nbsp<a href="#Windows-x86版环境搭建" class="headerlink" title="Windows x86版环境搭建"></a>Windows x86版环境搭建</h2><ol>
<li>安装miniconda3：<a href="https://docs.conda.io/projects/miniconda/en/latest/">跳转下载</a></li>
<li>创建并切换新的虚拟环境</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda create -n hrfae python=3.7</span><br><span class="line">conda activate hrfae</span><br></pre></td></tr></table></figure>
<ol>
<li>先下载并安装torch和torchvision的cuda版whl（建议先关闭科学上网，避免浪费科学上网的流量），使用<code>pip install</code>即可：<a href="https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp37-cp37m-win_amd64.whl">torch-1.13.1+cu117-cp37-cp37m-win_amd64.whl</a>和<a href="https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp37-cp37m-win_amd64.whl">torchvision-0.14.1+cu117-cp37-cp37m-win_amd64.whl</a>。别使用<code>conda install torch</code>安装torch，否则易出现一些版本依赖的问题。例如：<code>解决python urllib3 v2.0 only supports OpenSSL 1.1.1+, currently</code>。这是因为openSSL版本太低，可以安装低版本解决：<code>pip install urllib3==1.23 -i https://pypi.tuna.tsinghua.edu.cn/simple</code>。</li>
<li>之后一一安装其他库，如果<code>conda install</code>找不到库，就使用<code>pip install</code>，例如<code>Tensorboard-logger</code>。</li>
</ol>
<h1 id="硬件型号">4 &nbsp&nbsp<a href="#硬件型号" class="headerlink" title="硬件型号"></a>硬件型号</h1><p>NVIDIA Jetson TX2 NX，16GB eMMC，额外挂载一个120G的固态盘。</p>
<h1 id="烧录系统">5 &nbsp&nbsp<a href="#烧录系统" class="headerlink" title="烧录系统"></a>烧录系统</h1><h2 id="烧录前准备">5.1 &nbsp&nbsp<a href="#烧录前准备" class="headerlink" title="烧录前准备"></a>烧录前准备</h2><ul>
<li>一台Ubuntu 18.00 LTS系统的PC（其他的jetson设备不能作为刷机主机，必须用ubuntu电脑。也不能用vbox或者vmware之类的虚拟机创建ubuntu刷机主机，因为虚拟机系统无法处理usb等底层的驱动，这会导致刷机时一直提示未正确进入刷机模式，但实际机器已经真正进入到刷机模式的）</li>
<li>一条micro-usb数据线</li>
<li>根据硬件型号选择<a href="https://developer.nvidia.com/embedded/jetson-linux-archive">对应版本</a>的<a href="https://developer.nvidia.com/downloads/embedded/l4t/r32_release_v7.4/t186/jetson_linux_r32.7.4_aarch64.tbz2">驱动包（BSP包）</a>和<a href="https://developer.nvidia.com/downloads/embedded/l4t/r32_release_v7.4/t186/tegra_linux_sample-root-filesystem_r32.7.4_aarch64.tbz2">示例根文件系统</a>（目前适配TX2 NX的最新版为<a href="https://developer.nvidia.com/embedded/linux-tegra-r3274">R32.7.4</a>）。</li>
</ul>
<h2 id="烧录步骤">5.2 &nbsp&nbsp<a href="#烧录步骤" class="headerlink" title="烧录步骤"></a>烧录步骤</h2><ol>
<li>在刷机主机ubuntu系统中启用ssh。</li>
<li>通过<a href="https://winscp.net/eng/download.php">WinSCP</a>将驱动包（BSP包）和示例根文件系统复制至刷机主机系统中的家目录<code>/home</code>。</li>
<li>刷机命令</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装必要库</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install qemu-user-static</span><br><span class="line"><span class="built_in">sudo</span> apt-get install python</span><br><span class="line"><span class="comment"># j为使用bzip2算法，x为解压，v为显示操作的详细信息，f为指定操作的文件</span></span><br><span class="line"><span class="built_in">sudo</span> tar -jxvf Jetson_Linux_R32.7.4_aarch64.tbz2</span><br><span class="line"><span class="built_in">cd</span> Linux_for_Tegra/rootfs</span><br><span class="line"><span class="comment"># p为于保留文件的权限和属性，即保持原有文件的权限模式和时间戳信息</span></span><br><span class="line"><span class="built_in">sudo</span> tar -jxpf ../../Tegra_Linux_Sample-Root-Filesystem_R32.7.4_aarch64.tbz2</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># 拷贝NVIDIA库文件到文件系统</span></span><br><span class="line"><span class="built_in">sudo</span> ./apply_binaries.sh</span><br><span class="line"><span class="built_in">cd</span> Linux_for_Tegra/tools</span><br><span class="line"><span class="comment"># u为用户名，p为密码</span></span><br><span class="line"><span class="built_in">sudo</span> ./l4t_create_default_user.sh -u nvidia -p nvidia</span><br><span class="line"><span class="comment"># NVIDIA Jetson是通过Micro USB接口烧录系统。Recovery模式下可以进行文件系统更新包含：内核Kernel，启动Bootloader，文件系统Rootfs等。</span></span><br><span class="line"><span class="comment"># 进入Recovery模式的步骤：</span></span><br><span class="line"><span class="comment"># 1）使用Micro USB 的数据线连接Jetson和Ubuntu Host主机(一端插在开发板的OTG口,一端插在Ubuntu Host主机的usb插口)；</span></span><br><span class="line"><span class="comment"># 2）连接开发板的电源;</span></span><br><span class="line"><span class="comment"># 3) 按住RECOVERY按键，同时按下RESET复位按键1-2秒后释放，等待3秒释放RECOVERY按键，此时开发板进入Recovery刷机模式 （可通过在Ubuntu Host主机上运行命令：lsusb查看是否有Nvidia Corporation 设备（不同Jetson模块USB VID/PID 不同）来确认是否进入正常）</span></span><br><span class="line"><span class="comment"># 执行刷机命令</span></span><br><span class="line"><span class="built_in">cd</span> Linux_for_Tegra</span><br><span class="line"><span class="built_in">sudo</span> ./flash.sh jetson-xavier-nx-devkit-tx2-nx mmcblk0p1</span><br></pre></td></tr></table></figure>

<h2 id="烧录后无法进入到桌面环境">5.3 &nbsp&nbsp<a href="#烧录后无法进入到桌面环境" class="headerlink" title="烧录后无法进入到桌面环境"></a>烧录后无法进入到桌面环境</h2><p>Jetson报错无法进到桌面环境： Failed to start nvpmode1 server. 和Failed to start load kernel modules</p>
<p>无桌面环境的条件下进入到终端操作的两种方式：</p>
<ul>
<li>ssh连接虚拟ip：jetson的usb有虚拟ip，可以通过ssh远程连接，用上位机通过USB数据线（有的USB线不能传数据只能充电，因为只有电源线和地线）连接jetson。打开上位机远程登陆开发板，登陆ip为：192.168.55.1：<code>ssh nvidia@192.168.55.1</code></li>
<li>按ctrl+alt+F1-F6等组合键切换命令窗口1-6</li>
</ul>
<p>Failed to start nvpmode1 server一般是桌面环境出问题引起的，重装桌面环境即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install nvidia-l4t-x11</span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure>

<p>Failed to start load kernel modules一般配置方面出问题，重新运行更新配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到root模式，并保留当前终端环境</span></span><br><span class="line"><span class="built_in">sudo</span> -i</span><br><span class="line">apt-get update</span><br><span class="line">dpkg --configure -a</span><br><span class="line">apt-get dist-upgrade</span><br><span class="line">apt-get -f install</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h2 id="为TX2-NX这种老硬件安装Ubuntu-20-04">5.4 &nbsp&nbsp<a href="#为TX2-NX这种老硬件安装Ubuntu-20-04" class="headerlink" title="为TX2 NX这种老硬件安装Ubuntu 20.04"></a>为TX2 NX这种老硬件安装Ubuntu 20.04</h2><p>为Jetson TX2 NX或者Jetson Nano这种老硬件安装Ubuntu 20.04（官方最新只支持Ubuntu 18.04）的两种方式：</p>
<ul>
<li>使用社区提供的三方系统ubuntu 20.04：<a href="https://qengineering.eu/install-pytorch-on-jetson-nano.html">Install PyTorch on Jetson Nano</a>和<a href="https://github.com/Qengineering/Jetson-Nano-Ubuntu-20-image">Jetson-Nano-Ubuntu-20-image</a>。这种方式需要烧录到SD卡，并且系统解压后高达19.1GB，建议是准备一个64GB容量的SD卡，即TF卡。</li>
<li>设置软件源更新（我尝试过按官方升级的方式修改源，并未成功，估计是连20.04也太老了）：<a href="https://www.guyuehome.com/36629">Jetson Nano 系统升级至Ubuntu 20.04</a></li>
</ul>
<h1 id="为开发板设置SSD固态为系统盘">6 &nbsp&nbsp<a href="#为开发板设置SSD固态为系统盘" class="headerlink" title="为开发板设置SSD固态为系统盘"></a>为开发板设置SSD固态为系统盘</h1><p>NVMe SSD固态硬盘仅作为系统盘（rootfs和用户区），系统的启动引导依然是通过SD卡或者内置EMMC的存储，比如升级设备树dtb仍然是在SD卡或者EMMC中。</p>
<ol>
<li>格式化硬盘：打开软件列表搜索disk，打开ubuntu自带的Disks工具，选择识别到的SSD，按Ctrl+F对硬盘进行快速格式化，点击Format（不覆盖已存在的数据），点击Format（只是弹窗查看确认该操作影响到的设备），输入密码提权操作。默认最大分区，直接下一步。分区名字填ssd，其他选项默认（Type：ext4），点击create创建。点击分区左下角的三角符号（▶）进行挂载（状态变化：Not Mounted -&gt; Mounted at &#x2F;media&#x2F;nvidia&#x2F;ssd）。</li>
<li>下载系统盘转换程序的源码：<code>git clone https://github.com/jetsonhacks/rootOnNVMe.git</code>。如果克隆仓库失败，访问网页下载压缩包，再解压通过WinSCP上传到开发板家目录（上传后记得将文件的权限设置为0755，否则运行程序时会提示无权限）。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> rootOnNVMe</span><br><span class="line"><span class="comment"># 这个过程耗时较久，请耐心等待执行完毕再执行下一步</span></span><br><span class="line"><span class="comment"># 建议是刚烧录好系统之后就执行这一步转换，否则EMMC数据一旦很多的话，这步操作的转换过程十分漫长</span></span><br><span class="line">./copy-rootfs-ssd.sh</span><br><span class="line">./setup-service.sh</span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>运行命令<code>df -h</code>：可以看到挂载根目录的分区大小已经是SSD固态硬盘的120G的容量，不是以前EMMC的16G。</li>
</ol>
<h1 id="Jetson-TX2更换软件源">7 &nbsp&nbsp<a href="#Jetson-TX2更换软件源" class="headerlink" title="Jetson TX2更换软件源"></a>Jetson TX2更换软件源</h1><p>备份并编辑软件源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份/etc/lib路径下的source.list文件，</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"><span class="comment"># i进入编辑模式。按esc键退出模式，先按gg（到达顶部），然后dG全部删除。:wq保存编辑并退出vi。</span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/apt/sources.list</span><br><span class="line"><span class="comment"># 编辑软件源后，更新拉取源表</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure>

<p>清华源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial main universe restricted</span><br><span class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial main universe restricted</span><br></pre></td></tr></table></figure>

<p>假如默认官方源被删除的话，可以用下面的可用官方源恢复：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic universe</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic universe</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates universe</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates universe</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic multiverse</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic multiverse</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates multiverse</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates multiverse</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line"><span class="comment"># deb http://archive.canonical.com/ubuntu bionic partner</span></span><br><span class="line"><span class="comment"># deb-src http://archive.canonical.com/ubuntu bionic partner</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security universe</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security universe</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security multiverse</span><br><span class="line">deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security multiverse</span><br></pre></td></tr></table></figure>

<h1 id="配置python">8 &nbsp&nbsp<a href="#配置python" class="headerlink" title="配置python"></a>配置python</h1><p>查看<a href="https://github.com/pytorch/vision#installation">torchvision的README页面</a>，可知torch和torchvision对应版本信息，以及所要求的python版本。</p>
<table>
<thead>
<tr>
<th align="left">torch</th>
<th align="left">torchvision</th>
<th align="left">Python</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1.10</td>
<td align="left">0.11</td>
<td align="left">&gt;&#x3D;3.6, &lt;&#x3D;3.9</td>
</tr>
</tbody></table>
<p>综合考虑，因为需要安装v1.10.2的pytorch，因此python选用v3.7（很多深度学习项目要求最低的python版本是v3.7），避免v3.8-v3.9可能会因此太新导致编译出错。</p>
<h2 id="pyton3-6">8.1 &nbsp&nbsp<a href="#pyton3-6" class="headerlink" title="pyton3.6"></a>pyton3.6</h2><p>系统自带pyton3.6.9，运行pip3报错：pip3:command not found</p>
<p>解决方法：<code>sudo apt install python3-pip</code></p>
<h2 id="pyton3-7">8.2 &nbsp&nbsp<a href="#pyton3-7" class="headerlink" title="pyton3.7"></a>pyton3.7</h2><p>pyton3.7版本需要手动编译。下载<a href="https://www.python.org/ftp/python/3.7.16/Python-3.7.16.tar.xz">python3.7.16源码压缩包</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过ssh连接到开发板系统，通过winscp上传python源码压缩包到开发板的家目录</span></span><br><span class="line">tar -xf Python-3.7.16.tar.xz</span><br><span class="line"><span class="comment"># 安装构建pyhon所需的包，使用清华源的话，安装libncurses5库可能会出现库依赖错误，这个需要用ubuntu官方源（bionic源）才能解决，其他库可以用清华源</span></span><br><span class="line"><span class="built_in">sudo</span> apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libbz2-dev liblzma-dev</span><br><span class="line"><span class="comment"># 或者build-dep参数让ubuntu自动搜索相关包。使用这个命令，记得apt list自行核对下其他额外包有无安装好，参照「系统缺乏库的一些报错」小节。</span></span><br><span class="line"><span class="comment"># 如果build-dep报错：Error :: You must put some &#x27;source&#x27; URIs in your sources.list，请启用/etc/apt/sources.list文件中的deb-src源，即取消注释。修改完成后重新运行sudo apt update。</span></span><br><span class="line"><span class="built_in">sudo</span> apt build-dep python3</span><br><span class="line"><span class="comment"># prefix配置安装路径，方便卸载时直接删除prefix的路径即可</span></span><br><span class="line">./configure --prefix=/usr/local/python3.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设使用conda创建虚拟环境的话，可以用以下方式配置安装路径</span></span><br><span class="line"><span class="comment"># 安装到miniconda环境（base）</span></span><br><span class="line">./configure --prefix=/root/miniconda3/lib/python3.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># npro查看处理器核心数，lscpu查看处理器详情，-j无参为使用所有核心，后面跟数字就是并行编译数量</span></span><br><span class="line">make -j</span><br><span class="line"><span class="comment"># 安装python</span></span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"><span class="built_in">cd</span> /usr/bin/</span><br><span class="line"><span class="comment"># 创建python3.7和pip3.7软链接</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/python3.7/bin/python3.7 python3.7</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/local/python3.7/bin/pip3.7 pip3.7</span><br><span class="line"><span class="comment"># 配置pip源</span></span><br><span class="line">pip3.7 config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment"># export bin目录到path</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/python3.7/bin</span><br></pre></td></tr></table></figure>

<h3 id="系统缺乏库的一些报错：">8.2.1 &nbsp&nbsp<a href="#系统缺乏库的一些报错：" class="headerlink" title="系统缺乏库的一些报错："></a>系统缺乏库的一些报错：</h3><ul>
<li>缺乏libssl-dev库：pip is configured with locations that require TLS&#x2F;SSL, however the ssl module in Python is not available。实际上</li>
<li>缺乏libffi-dev库：ModuleNotFoundError: No module named &#39;_ctypes&#39;</li>
<li>缺乏libbz2-dev库（Detectron2需要用到）：ModuleNotFoundError: No module named &#39;_bz2&#39;</li>
<li>缺乏liblzma-dev库（Detectron2需要用到）：ModuleNotFoundError: No module named &#39;_lzma&#39;</li>
</ul>
<h3 id="TLS-SSL报错的另类解决方式">8.2.2 &nbsp&nbsp<a href="#TLS-SSL报错的另类解决方式" class="headerlink" title="TLS&#x2F;SSL报错的另类解决方式"></a>TLS&#x2F;SSL报错的另类解决方式</h3><p>如果因为缺乏libssl-dev库，导致编译出来的python报错TLS&#x2F;SSL的话，实际上这个问题可以通过换pip源解决，必须是http源。</p>
<p>创建并编辑pip配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.pip</span><br><span class="line"><span class="built_in">cd</span> ~/.pip</span><br><span class="line"><span class="built_in">touch</span> pip.conf</span><br><span class="line">nano pip.conf</span><br></pre></td></tr></table></figure>
<p>pip源设置内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = http://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>

<h3 id="安装系统库时的依赖版本报错">8.2.3 &nbsp&nbsp<a href="#安装系统库时的依赖版本报错" class="headerlink" title="安装系统库时的依赖版本报错"></a>安装系统库时的依赖版本报错</h3><p>报错内容：libssl-dev : Depends: libssl1.0.0 (&#x3D; 1.0.2g-1ubuntu4) but 1.0.2g-1ubuntu4.15 is to be installed</p>
<p>报错原因：要装的库OpenSSL，它需要依赖的包是X，但需要的X是A版本，但是系统环境中已经存在另外的程序，它也需要的依赖X，并且需要的是X另外一个版本B，两个版本之间发生冲突了。所以无法安装。</p>
<p>解决方法：<code>sudo apt install libssl1.0.0=1.0.2g-1ubuntu4</code>，即安装推荐的折中版本（报错提示有给出）。</p>
<h2 id="pypi清华源">8.3 &nbsp&nbsp<a href="#pypi清华源" class="headerlink" title="pypi清华源"></a>pypi清华源</h2><ul>
<li>临时使用：<code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</code></li>
<li>设置默认 (版本需&gt;&#x3D;10.0.0) ：<code>pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</code></li>
<li>升级pip本体<ul>
<li>官方源升级pip：<code>python -m pip install --upgrade pip</code></li>
<li>清华源升级pip：<code>python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip</code></li>
</ul>
</li>
</ul>
<h1 id="解决报错「Illegal-instruction-core-dumped-」">9 &nbsp&nbsp<a href="#解决报错「Illegal-instruction-core-dumped-」" class="headerlink" title="解决报错「Illegal instruction (core dumped)」"></a>解决报错「Illegal instruction (core dumped)」</h1><p>为了防止出现 “Illegal instruction (core dumped)” 报错，需要在 ~&#x2F;.bashrc 最后添加如下语句，保存修改后，重启系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> OPENBLAS_CORETYPE=ARMV8</span><br></pre></td></tr></table></figure>

<p>若是export导出环境变量之后，仍是出现相同的报错的话，则可能是安装包版本问题或者程序包问题。</p>
<h1 id="安装jetson-stats查看开发板情况">10 &nbsp&nbsp<a href="#安装jetson-stats查看开发板情况" class="headerlink" title="安装jetson-stats查看开发板情况"></a>安装jetson-stats查看开发板情况</h1><p>安装<a href="https://pypi.org/project/jetson-stats/">jetson-stats</a>前记得把pip源更换为清华源：<code>sudo -H pip3.7 install -U jetson-stats</code></p>
<p>安装好jetson-stats之后，可以安装nvidia-jetpack包，使用jetson_release查看开发板信息（注意需提前装好jetson-stats）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install nvidia-jetpack</span><br><span class="line"><span class="built_in">sudo</span> jetson_release</span><br></pre></td></tr></table></figure>

<h2 id="The-jetson-stats-service-is-not-active">10.1 &nbsp&nbsp<a href="#The-jetson-stats-service-is-not-active" class="headerlink" title="The jetson_stats.service is not active"></a>The jetson_stats.service is not active</h2><p>报错情况，jtop（jetson_stats.service）不能运行，systemctl查看服务状态为activating：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The jetson_stats.service is not active. Please run:</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart jetson_stats.service</span><br></pre></td></tr></table></figure>

<p>解决方法：把pip源更换为清华源后，重新安装jetson-stats。</p>
<h1 id="为开发板安装CUDA、cuDNN、TensorRT库">11 &nbsp&nbsp<a href="#为开发板安装CUDA、cuDNN、TensorRT库" class="headerlink" title="为开发板安装CUDA、cuDNN、TensorRT库"></a>为开发板安装CUDA、cuDNN、TensorRT库</h1><p>示例根文件系统并未包含cuda等库，因此烧录系统之后，需要手动安装CUDA、cuDNN、TensorRT库。</p>
<ol>
<li>打开<a href="https://developer.nvidia.com/sdk-manager">sdk-manager</a>下载网站，注册英伟达开发者帐号（注意是developer.nvidia.com域名，搜索nvidia register关键字注册的域名可能是partner.nvidia.com，即nvonline）。</li>
<li>下载最新的deb安装包，当前最新的是NVIDIA SDK Manager 1.9.3.deb。</li>
<li>安装sdk-manager：<code>sudo apt install sdkmanager_1.9.3-10904_amd64.deb</code></li>
<li>运行sdk-manager：终端运行命令<code>sdk-manager</code>或者在应用程序列表中找到SDKManager图标打开。</li>
<li>登录帐号（developer开发者帐号会打开浏览器登录，nvonline是直接在软件内页面登录），建议勾选上「Stay logged in」，避免因为安装出错后重复打开应用又要重新登录。</li>
<li>sdk-manager第一步：等待程序自动检测出开发板信息，若没正确识别到开发板，请手动在Target Hardware选择正确的开发板型号（比如我的是TX2 NX型号）。剩余默认即可，附加SDK（DeepStreem）不需要勾选上。</li>
<li>sdk-manager第二步：HOST COMPONENTS设置的是烧录主机的环境（清华镜像源可装），TARGET COMPONENTS（开发板环境，Jetson OS不要勾选，因为前面的步骤已经烧录过了。其他的SDK Components全部勾上）（清华源无法安装，会报错：SDK Manager received errors while using apt commands on your system，需换回官方源，并且是需要编辑开发板上的sources.list，编辑host主机上的sources.list源是没用的）。用micro-usb线连接开发板和烧录主机，点击下一步，提示指定路径不存在，点击create完成创建即可，这里输入烧录主机的密码用来提权。之后弹出一个窗口设置开发板帐号密码信息： 确认开发板型号，IPv4用192.168.55.1（usb连接的虚拟ip），系统账户名和系统密码，其余默认，之后点击Install确认安装库。</li>
<li>sdk-manager第三步：安装过程。</li>
<li>sdk-manager第四步：exit退出。</li>
<li>设置环境变量：sdk-manager安装好库之后，会自动添加export环境变量语句到用户级的.bashrc配置文件中（注意只是添加而已，仍需手动source ~&#x2F;.bashrc，确保是在普通账户的终端下执行该命令）。但是root账户目录的.bashrc配置文件需手动配置</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 刷新bash配置，普通账户nvidia的终端下执行该命令</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 切换root权限</span></span><br><span class="line"><span class="built_in">sudo</span> -i</span><br><span class="line"><span class="comment"># 切换root权限后，工作目录会自动转到root的家目录下</span></span><br><span class="line">nano .bashrc</span><br><span class="line"><span class="comment"># 将以下两条命令添加到.bashrc的底部</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/local/cuda-10.2/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/local/cuda-10.2/lib64:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure>
<ol start="11">
<li>查看cuda库的安装状态的命令：<code>jtop</code>和<code>nvcc -V</code>&#x2F;<code>nvcc --version</code>。</li>
<li>配置 cuDNN：sdk-manager虽然安装了cuDNN，但没有将对应的头文件、库文件放到cuda目录。</li>
</ol>
<div class="note danger no-icon"><p>不配置这个也可以，但编译opencv with cuda时需要手动指定路径到&#x2F;usr&#x2F;include和&#x2F;usr&#x2F;lib&#x2F;aarch64-linux-gnu</p>
</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sdk-manager安装路径</span></span><br><span class="line"><span class="comment"># cuDNN 默认安装路径在 /usr/lib/aarch64-linux-gnu</span></span><br><span class="line"><span class="comment"># CUDA 默认安装路径在 /usr/local/cuda 下</span></span><br><span class="line"><span class="comment"># cuDNN的头文件在：/usr/include，库文件位于：/usr/lib/aarch64-linux-gnu</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制文件到cuda目录下</span></span><br><span class="line"><span class="built_in">cd</span> /usr/include &amp;&amp; <span class="built_in">sudo</span> <span class="built_in">cp</span> cudnn* /usr/local/cuda-10.2/include</span><br><span class="line"><span class="built_in">cd</span> /usr/lib/aarch64-linux-gnu &amp;&amp; <span class="built_in">sudo</span> <span class="built_in">cp</span> libcudnn* /usr/local/cuda-10.2/lib64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件权限，修改复制完的头文件与库文件的权限，所有用户都可读，可写，可执行：</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 777 /usr/local/cuda-10.2/include/cudnn.h</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 777 /usr/local/cuda-10.2/lib64/libcudnn*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 软链接移动之后就失效了，需重新软链接，这里的8.2.1和8对应安装的cudnn版本号和首数字</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/cuda-10.2/lib64</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn.so /etc/alternatives/libcudnn_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn.so.8.2.1 libcudnn.so.8</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_ops_train.so /etc/alternatives/libcudnn_ops_train_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_ops_train.so.8.2.1 libcudnn_ops_train.so.8</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_ops_infer.so /etc/alternatives/libcudnn_ops_infer_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_ops_infer.so.8.2.1 libcudnn_ops_infer.so.8</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_adv_train.so /etc/alternatives/libcudnn_adv_train_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_adv_train.so.8.2.1 libcudnn_adv_train.so.8</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_adv_infer.so /etc/alternatives/libcudnn_adv_infer_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_adv_infer.so.8.2.1 libcudnn_adv_infer.so.8</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_cnn_train.so /etc/alternatives/libcudnn_cnn_train_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_cnn_train.so.8.2.1 libcudnn_cnn_train.so.8</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_cnn_infer.so /etc/alternatives/libcudnn_cnn_infer_so</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -sf libcudnn_cnn_infer.so.8.2.1 libcudnn_cnn_infer.so.8</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> libcudnn_static.a /etc/alternatives/libcudnn_stlib</span><br><span class="line"><span class="comment"># 更新系统动态链接库</span></span><br><span class="line"><span class="built_in">sudo</span> ldconfig</span><br></pre></td></tr></table></figure>
<ol start="13">
<li>测试Cudnn（可选）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -r /usr/src/cudnn_samples_v8/ ~/</span><br><span class="line"><span class="built_in">cd</span> ~/cudnn_samples_v8/mnistCUDNN</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 777 ~/cudnn_samples_v8</span><br><span class="line"><span class="built_in">sudo</span> make clean &amp;&amp; <span class="built_in">sudo</span> make</span><br><span class="line">./mnistCUDNN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置成功输出：</span></span><br><span class="line"><span class="comment"># Result of classification: 1 3 5</span></span><br><span class="line"><span class="comment"># Test passed!</span></span><br></pre></td></tr></table></figure>

<h1 id="安装pytorch和pytorch-vision">12 &nbsp&nbsp<a href="#安装pytorch和pytorch-vision" class="headerlink" title="安装pytorch和pytorch vision"></a>安装pytorch和pytorch vision</h1><h2 id="pyton3-6-1">12.1 &nbsp&nbsp<a href="#pyton3-6-1" class="headerlink" title="pyton3.6"></a>pyton3.6</h2><h3 id="为python3-6安装pytorch">12.1.1 &nbsp&nbsp<a href="#为python3-6安装pytorch" class="headerlink" title="为python3.6安装pytorch"></a>为python3.6安装pytorch</h3><p>pyton3.6直接访问<a href="https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048">nvidia官网PyTorch for Jetson帖子</a>下载官方编译提供的版本：<a href="https://nvidia.box.com/shared/static/fjtbno0vpo676a25cgvuqc1wty0fkkg6.whl">点击跳转下载whl</a>，安装命令：<code>pip3.6 install torch-1.10.0-cp36-cp36m-linux_aarch64.whl</code></p>
<h3 id="为python3-6编译torchvision">12.1.2 &nbsp&nbsp<a href="#为python3-6编译torchvision" class="headerlink" title="为python3.6编译torchvision"></a>为python3.6编译torchvision</h3><p>同<a href="#%E4%B8%BApython3-7%E7%BC%96%E8%AF%91torchvision">为python3.7编译torchvision</a></p>
<h2 id="pyton3-7-1">12.2 &nbsp&nbsp<a href="#pyton3-7-1" class="headerlink" title="pyton3.7"></a>pyton3.7</h2><h3 id="为python3-7编译pytorch">12.2.1 &nbsp&nbsp<a href="#为python3-7编译pytorch" class="headerlink" title="为python3.7编译pytorch"></a>为python3.7编译pytorch</h3><div class="note danger no-icon"><p>注意：编译过程十分耗时，请耐心等待！我测试的机器型号为TX2 NX，编译耗时23个小时（大部分时间都是停留在编译caffe2仓库）。</p>
</div>

<p>由于英伟达官方只提供python3.6版本的pytorch安装包，并且<a href="https://download.pytorch.org/whl/torch_stable.html">torch库官方下载站</a>也没有arm芯片（aarch）的cu102版whl安装包，cpu版倒是有提供，因此pyton3.7的cuda版pytorch需要自行从源码编译。</p>
<p>编译步骤参考<a href="https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048">nvidia官网PyTorch for Jetson帖子</a>的Instructions小节的Build from Source内容。</p>
<ol>
<li>设置开发板功率模式</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置最大功率模式，CPU和GPU频率最大</span></span><br><span class="line"><span class="comment"># on Xavier NX, use -m 2  instead (15W 6-core mode)</span></span><br><span class="line"><span class="built_in">sudo</span> nvpmodel -m 0</span><br><span class="line"><span class="comment"># 开启最大性能（重启开发板就会自动失效），运行命令不加任何参数就是将CPU、GPU、EMC的频率设置到最大</span></span><br><span class="line"><span class="built_in">sudo</span> jetson_clocks</span><br><span class="line"><span class="comment"># 查询当前工作模式</span></span><br><span class="line"><span class="built_in">sudo</span> nvpmodel -q verbose</span><br><span class="line"><span class="comment"># 查看当前硬件频率情况</span></span><br><span class="line"><span class="built_in">sudo</span> jetson_clocks --show</span><br><span class="line"><span class="comment"># 如果是想要临时开启最大性能模式jetson_clocks</span></span><br><span class="line"><span class="comment"># 请在开启之前，运行sudo jetson_clocks --store记录普通状态的设置</span></span><br><span class="line"><span class="comment"># 之后运行sudo jetson_clocks开启最大性能</span></span><br><span class="line"><span class="comment"># 完成任务后运行sudo jetson_clocks --restore恢复普通状态的设置，就是关闭最大性能模式</span></span><br><span class="line"><span class="comment"># 如果开启最大性能模式之前没有sudo jetson_clocks --store记录状态，那么只能是重启机器，再运行设置</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>下载PyTorch源码（v1.10.2）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/nvidia</span><br><span class="line"><span class="comment"># 其实不推荐用--recursive递归克隆git子项目，容易出现克隆失败</span></span><br><span class="line">git <span class="built_in">clone</span> --recursive --branch v1.10.2 http://github.com/pytorch/pytorch</span><br><span class="line"><span class="comment"># 假如已经执行了上述命令，如果只有子项目报错的话，可以试试直接执行git submodule update --recursive</span></span><br><span class="line"><span class="comment"># 下面是pytorch官方README给出的方法</span></span><br><span class="line"><span class="comment"># if you are updating an existing checkout</span></span><br><span class="line">git submodule <span class="built_in">sync</span></span><br><span class="line">git submodule update --init --recursive --<span class="built_in">jobs</span> 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐方式，先克隆主项目，再克隆子项目</span></span><br><span class="line">git <span class="built_in">clone</span> --branch v1.10.2 http://github.com/pytorch/pytorch</span><br><span class="line"><span class="built_in">cd</span> pytorch</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"><span class="comment"># 如果出现失败，重复执行这条命令，直到克隆成功</span></span><br><span class="line">git submodule update --recursive</span><br><span class="line"><span class="comment"># 我的情况在克隆子项目时，无论是init还是update阶段，linux-syscall-support这个仓库总是克隆不下来，因为它是chromium.googlesource.com域名，没法裸连成功。在github上搜索到镜像仓库https://github.com/cpp-pm/linux-syscall-support（如果是其他的github上的镜像仓库，要注意查看该仓库是否及时从上游获取更新，确保包含有e1e7b0ad8ee99a875b272c8e33e308472e897660这个commit，否则递归处理会提示找不到这个commit）</span></span><br><span class="line"><span class="comment"># 在使用https://github.com/cpp-pm/linux-syscall-support镜像仓库时，我仍然出现了连接失败。奇怪的是，其他github链接可以正常连接，唯独这个库连接不上。没法子，通过ping github.com得到一个返回ip：20.205.243.166。手动指向ip的话，需要关闭ssl证书验证，不然很容易报错（尤其是http的ssl证书验证）</span></span><br><span class="line"><span class="comment"># 如果无法直接ping得到ip，访问网页：https://www.ipaddress.com/，输入对应域名，比如raw.githubusercontent.com，查看返回的真实ip。</span></span><br><span class="line"><span class="comment"># 设置git重定向仓库链接，直接指向ip地址</span></span><br><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br><span class="line">git config --global https.sslVerify <span class="literal">false</span></span><br><span class="line">git config --global url.<span class="string">&quot;https://20.205.243.166/cpp-pm/linux-syscall-support&quot;</span>.insteadOf <span class="string">&quot;https://chromium.googlesource.com/linux-syscall-support&quot;</span></span><br><span class="line"><span class="comment"># 或者编辑git配置文件，在.gitconfig文件中添加如下参数</span></span><br><span class="line"><span class="comment"># 如果仍然不起作用的话，可以在http类目下添加允许重定向：followRedirects = true。命令操作：git config --global http.followRedirects true</span></span><br><span class="line">nano ~/.gitconfig</span><br><span class="line">[http]</span><br><span class="line">        sslverify = <span class="literal">false</span></span><br><span class="line">[https]</span><br><span class="line">        sslverify = <span class="literal">false</span></span><br><span class="line">[url <span class="string">&quot;https://20.205.243.166/cpp-pm/linux-syscall-support&quot;</span>]</span><br><span class="line">        insteadOf = https://chromium.googlesource.com/linux-syscall-support</span><br><span class="line"></span><br><span class="line"><span class="comment"># chromium.googlesource.com还可以尝试Agora.io提供的镜像网站，具体参考内容https://webrtc.agora.io/mirror/</span></span><br><span class="line"><span class="comment"># 但我的情况设置了，依旧也是连接超时</span></span><br><span class="line"><span class="comment"># git config --global url.http://120.92.49.206:3232/chromiumsrc/linux-syscall-support.git.insteadOf https://chromium.googlesource.com/linux-syscall-support.git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设在克隆或者构建子项目出错时，想全部清除所有子项目的话，通过下面的命令完成（下面的目录是我对.gitmodules文件通过正则表达式处理得到的）</span></span><br><span class="line"><span class="comment"># cd pytorch</span></span><br><span class="line"><span class="comment"># rm third_party/pybind11 third_party/cub third_party/eigen third_party/googletest third_party/benchmark third_party/protobuf third_party/ios-cmake third_party/NNPACK third_party/gloo third_party/pthreadpool third_party/FXdiv third_party/FP16 third_party/psimd third_party/zstd third_party/cpuinfo third_party/python-enum third_party/python-peachpy third_party/python-six third_party/onnx third_party/onnx-tensorrt third_party/sleef third_party/ideep third_party/nccl/nccl third_party/gemmlowp/gemmlowp third_party/QNNPACK third_party/neon2sse third_party/fbgemm third_party/foxi third_party/tbb android/libs/fbjni third_party/XNNPACK third_party/fmt third_party/tensorpipe third_party/cudnn_frontend third_party/kineto third_party/pocketfft third_party/breakpad</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>根据<a href="https://gist.github.com/dusty-nv/ce51796085178e1f38e3c6a1663a93a1#file-pytorch-1-10-jetpack-4-5-1-patch">patch内容</a>手动为patch新修复的代码：就是根据patch文件内容查找对应文件的对应行数，同步改动的代码。如果懒得改动的话，直接下载我修改好的文件，上传替换就行。patch代码主要解决编译报错的问题（详见编译步骤参考帖子）</li>
</ol>
<ul>
<li><a href="/post-assets/nvidia-jetson/vec256_float_neon.h">vec256_float_neon.h</a></li>
<li><a href="/post-assets/nvidia-jetson/CUDAContext.cpp">CUDAContext.cpp</a></li>
<li><a href="/post-assets/nvidia-jetson/KernelUtils.h">KernelUtils.h</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> pytorch</span><br><span class="line"><span class="comment"># 因为WinSCP使用普通账户连接的rscp，权限不够，因此建议先直接用vscode编辑文件，之后再上传到家目录，用root权限替换掉对应文件。</span></span><br><span class="line"><span class="built_in">mv</span> aten/src/ATen/cpu/vec/vec256/vec256_float_neon.h aten/src/ATen/cpu/vec/vec256/vec256_float_neon.h.bak</span><br><span class="line"><span class="built_in">mv</span> ../vec256_float_neon.h aten/src/ATen/cpu/vec/vec256/vec256_float_neon.h</span><br><span class="line"><span class="built_in">mv</span> aten/src/ATen/cuda/CUDAContext.cpp aten/src/ATen/cuda/CUDAContext.cpp.bak</span><br><span class="line"><span class="built_in">mv</span> ../CUDAContext.cpp aten/src/ATen/cuda/CUDAContext.cpp</span><br><span class="line"><span class="built_in">mv</span> aten/src/ATen/cuda/detail/KernelUtils.h aten/src/ATen/cuda/detail/KernelUtils.h.bak</span><br><span class="line"><span class="built_in">mv</span> ../KernelUtils.h aten/src/ATen/cuda/detail/KernelUtils.h</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>设置构建参数的环境变量（如果有改变终端，记得重新export这些环境变量）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> USE_NCCL=0</span><br><span class="line"><span class="comment"># skip setting this if you want to enable OpenMPI backend</span></span><br><span class="line"><span class="built_in">export</span> USE_DISTRIBUTED=0</span><br><span class="line"><span class="built_in">export</span> USE_QNNPACK=0</span><br><span class="line"><span class="built_in">export</span> USE_PYTORCH_QNNPACK=0</span><br><span class="line"><span class="comment"># or &quot;7.2;8.7&quot; for JetPack 5 wheels for Xavier/Orin</span></span><br><span class="line"><span class="built_in">export</span> TORCH_CUDA_ARCH_LIST=<span class="string">&quot;5.3;6.2;7.2&quot;</span></span><br><span class="line"><span class="comment"># without the leading &#x27;v&#x27;, e.g. 1.3.0 for PyTorch v1.3.0</span></span><br><span class="line"><span class="built_in">export</span> PYTORCH_BUILD_VERSION=1.10.2</span><br><span class="line"><span class="built_in">export</span> PYTORCH_BUILD_NUMBER=1</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>安装构建必要的系统库：<code>sudo apt install cmake libopenblas-dev libopenmpi-dev</code>，这里我使用的ubuntu官方源。</li>
<li>编译源码构建程序（在构建之前建议先备份pytorch文件夹，毕竟克隆不容易：<code>cp -r pytorch pytorch.bak</code>）：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> pytorch</span><br><span class="line"><span class="comment"># 安装构建必要的pip3.7库</span></span><br><span class="line">pip3.7 install -r requirements.txt</span><br><span class="line">pip3.7 install scikit-build</span><br><span class="line">pip3.7 install ninja</span><br><span class="line"><span class="comment"># 开始编译源码构建程序，生成的安装包输出在dist文件夹：torch-1.10.2-cp37-cp37m-linux_aarch64.whl</span></span><br><span class="line">python3.7 setup.py bdist_wheel</span><br><span class="line"><span class="built_in">cd</span> dist</span><br><span class="line">pip3.7 install torch-1.10.2-cp37-cp37m-linux_aarch64.whl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在编译过程中，反复出现一个报错：c++: internal compiler error: 已杀死 (program cc1plus)</span></span><br><span class="line"><span class="comment"># 原因：swap交换空间不足，使用jtop命令查看当前开发板只有系统分配的1.9G的zram交换空间，需手动增加swap空间</span></span><br><span class="line"><span class="comment"># 弃用以下传统的swapfile方法，修改zram的大小就好</span></span><br><span class="line"><span class="comment"># 查看所有zram相关文件</span></span><br><span class="line">find / -name <span class="string">&quot;*zram*&quot;</span> 2&gt;/dev/null</span><br><span class="line"><span class="comment"># 编辑zram配置文件</span></span><br><span class="line">nano /etc/systemd/nvzramconfig.sh</span><br><span class="line"><span class="comment"># 修改前</span></span><br><span class="line">mem=$(((totalmem / <span class="number">2</span> / <span class="variable">$&#123;NRDEVICES&#125;</span>) * <span class="number">1024</span>))</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 修改后zram总大小为物理内存大小的三倍</span></span><br><span class="line">mem=$(((totalmem * <span class="number">3</span> / <span class="variable">$&#123;NRDEVICES&#125;</span>) * <span class="number">1024</span>))</span><br><span class="line"><span class="comment"># 查看zram情况</span></span><br><span class="line">zramctl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增swapfile文件大小自定义</span></span><br><span class="line"><span class="built_in">sudo</span> fallocate -l 8G /var/swapfile</span><br><span class="line"><span class="comment"># 配置该文件的权限</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 600 /var/swapfile</span><br><span class="line"><span class="comment"># 建立交换分区</span></span><br><span class="line"><span class="built_in">sudo</span> mkswap /var/swapfile</span><br><span class="line"><span class="comment"># 启用交换分区，再次运行jtop，可看到swap空间已经变成了10G</span></span><br><span class="line"><span class="built_in">sudo</span> swapon /var/swapfile</span><br><span class="line"><span class="comment"># 设置为自动启用swapfile</span></span><br><span class="line"><span class="built_in">sudo</span> bash -c <span class="string">&#x27;echo &quot;/var/swapfile swap swap defaults 0 0&quot; &gt;&gt; /etc/fstab&#x27;</span></span><br><span class="line"><span class="comment"># 关闭交换分区</span></span><br><span class="line"><span class="built_in">sudo</span> swapoff /var/swapfile</span><br><span class="line"><span class="comment"># 在现有的/var//swapfile后面追加30GB（增加容量后，请手动mkswap及swapon）</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/var/swapfile bs=1M count=30720 oflag=append conv=notrunc</span><br><span class="line"><span class="comment"># 删除交换分区文件</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /var/swapfile</span><br><span class="line"><span class="comment"># 删除fstab相关设置</span></span><br><span class="line">nano /etc/fstab</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>检测pytorch安装是否成功</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3.7</span><br><span class="line">import torch</span><br><span class="line"><span class="comment"># 输出True安装成功</span></span><br><span class="line">torch.cuda.is_available()</span><br><span class="line">torch.backends.cudnn.is_available()</span><br><span class="line"><span class="comment"># 查看cuda版本</span></span><br><span class="line"><span class="built_in">print</span>(torch.version.cuda)</span><br><span class="line"><span class="comment"># 查看cudnn版本</span></span><br><span class="line"><span class="built_in">print</span>(torch.backends.cudnn.version())</span><br></pre></td></tr></table></figure>

<h3 id="为python3-7编译torchvision">12.2.2 &nbsp&nbsp<a href="#为python3-7编译torchvision" class="headerlink" title="为python3.7编译torchvision"></a>为python3.7编译torchvision</h3><p>查看<a href="https://github.com/pytorch/vision#installation">torchvision的README页面</a>，可知torch和torchvision对应版本信息，以及所要求的python版本。</p>
<table>
<thead>
<tr>
<th align="left">torch</th>
<th align="left">torchvision</th>
<th align="left">Python</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1.10</td>
<td align="left">0.11</td>
<td align="left">&gt;&#x3D;3.6, &lt;&#x3D;3.9</td>
</tr>
</tbody></table>
<p>编译步骤参阅：<a href="https://github.com/pytorch/vision/blob/v0.11.3/CONTRIBUTING.md#development-installation">Development installation</a></p>
<p>下载及编译torchvision源码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我的网络环境没法直连github域名，手动指向cdn的ip（ping github.com得到ip），确保git的全局设置http的ssl证书验证关闭</span></span><br><span class="line"><span class="comment"># git clone -b v0.11.3 https://github.com/pytorch/vision.git torchvision</span></span><br><span class="line">git <span class="built_in">clone</span> -b v0.11.3 https://20.205.243.166/pytorch/vision.git torchvision</span><br><span class="line"><span class="built_in">cd</span> torchvision</span><br><span class="line"><span class="built_in">sudo</span> apt install libpng-dev libjpeg-turbo8-dev</span><br><span class="line"><span class="comment"># 设置编译的版本，避免生成的whl文件名不显示正确的版本名称（若不设置这个环境变量，生成的whl只有主版本号正确即v0.11，子版本号显示乱码，而不是显示3）</span></span><br><span class="line"><span class="built_in">export</span> BUILD_VERSION=0.11.3</span><br><span class="line"><span class="comment"># 开始编译源码构建程序，生成的安装包输出在dist文件夹：torchvision-0.11.3-cp37-cp37m-linux_aarch64.whl</span></span><br><span class="line">python setup.py bdist_wheel</span><br><span class="line"><span class="built_in">cd</span> dist</span><br><span class="line">pip3.7 install torchvision-0.11.3-cp37-cp37m-linux_aarch64.whl</span><br></pre></td></tr></table></figure>
<p>测试安装是否成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import torchvision</span><br><span class="line"><span class="built_in">print</span>(torchvision.__version__)</span><br></pre></td></tr></table></figure>

<h1 id="配置opencv-with-cuda">13 &nbsp&nbsp<a href="#配置opencv-with-cuda" class="headerlink" title="配置opencv with cuda"></a>配置opencv with cuda</h1><h2 id="python3-6环境">13.1 &nbsp&nbsp<a href="#python3-6环境" class="headerlink" title="python3.6环境"></a>python3.6环境</h2><p>使用python3.6环境，可以直接使用这个帖子给出的预编译的opencv包——<a href="https://zhuanlan.zhihu.com/p/392495001">官方隐藏资源：Jetson伪超频与CUDA版OpenCV</a>。</p>
<p>预构建好的deb文件：<a href="https://nvidia.box.com/shared/static/5v89u6g5rb62fpz4lh0rz531ajo2t5ef.gz">OpenCV-4.5.0-aarch64.tar.gz</a></p>
<p>可以先卸载系统自带的CPU版的opencv4.1.1，再执行安装deb包。</p>
<p>如果想自行从源码构建opencv with cuda，编译步骤可参考<a href="https://qengineering.eu/install-opencv-on-jetson-nano.html">Install OpenCV on Jetson Nano</a>。</p>
<h2 id="python3-7环境">13.2 &nbsp&nbsp<a href="#python3-7环境" class="headerlink" title="python3.7环境"></a>python3.7环境</h2><ol>
<li>卸载默认不带cuda的opencv</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt purge libopencv*</span><br><span class="line"><span class="built_in">sudo</span> apt autoremove</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保/usr/lib/中没有其他版本的openCV影响</span></span><br><span class="line">find / -name <span class="string">&quot;*opencv*&quot;</span> 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>下载opencv和opencv_contrib源码</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 访问网页离线下载</span></span><br><span class="line"><span class="comment"># https://github.com/opencv/opencv/releases/tag/4.1.1</span></span><br><span class="line"><span class="comment"># https://github.com/opencv/opencv_contrib/releases/tag/4.1.1</span></span><br><span class="line">curl -s -L -O https://github.com/opencv/opencv/archive/refs/tags/4.1.1.zip</span><br><span class="line">curl -s -L -O https://github.com/opencv/opencv_contrib/archive/refs/tags/4.1.1.zip</span><br><span class="line"><span class="built_in">sudo</span> apt install unzip</span><br><span class="line">upzip opencv-4.1.1.zip</span><br><span class="line">unzip opencv_contrib-4.1.1.zip</span><br><span class="line"><span class="comment"># 两个压缩包都放在同一个目录下</span></span><br><span class="line"><span class="built_in">cd</span> opencv-4.1.1</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>安装依赖库（参见<a href="https://qengineering.eu/install-opencv-on-jetson-nano.html">Install OpenCV on Jetson Nano</a>）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># reveal the CUDA location</span></span><br><span class="line"><span class="built_in">sudo</span> sh -c <span class="string">&quot;echo &#x27;/usr/local/cuda-10.2/lib64&#x27; &gt;&gt; /etc/ld.so.conf.d/nvidia-tegra.conf&quot;</span></span><br><span class="line"><span class="comment"># 更新动态链接库</span></span><br><span class="line"><span class="built_in">sudo</span> ldconfig</span><br><span class="line"><span class="comment"># third-party libraries</span></span><br><span class="line"><span class="built_in">sudo</span> apt install build-essential cmake git unzip pkg-config zlib1g-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libjpeg-dev libjpeg8-dev libjpeg-turbo8-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libpng-dev libtiff-dev libglew-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libavcodec-dev libavformat-dev libswscale-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libgtk2.0-dev libgtk-3-dev libcanberra-gtk*</span><br><span class="line"><span class="built_in">sudo</span> apt install python-dev python-numpy python-pip</span><br><span class="line"><span class="built_in">sudo</span> apt install python3-dev python3-numpy python3-pip</span><br><span class="line"><span class="built_in">sudo</span> apt install libxvidcore-dev libx264-dev libgtk-3-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libtbb2 libtbb-dev libdc1394-22-dev libxine2-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install gstreamer1.0-tools libgstreamer-plugins-base1.0-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libgstreamer-plugins-good1.0-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libv4l-dev v4l-utils v4l2ucp qv4l2</span><br><span class="line"><span class="built_in">sudo</span> apt install libtesseract-dev libxine2-dev libpostproc-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libavresample-dev libvorbis-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libfaac-dev libmp3lame-dev libtheora-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libopencore-amrnb-dev libopencore-amrwb-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install libopenblas-dev libatlas-base-dev libblas-dev</span><br><span class="line"><span class="built_in">sudo</span> apt install liblapack-dev liblapacke-dev libeigen3-dev gfortran</span><br><span class="line"><span class="built_in">sudo</span> apt install libhdf5-dev libprotobuf-dev protobuf-compiler</span><br><span class="line"><span class="built_in">sudo</span> apt install libgoogle-glog-dev libgflags-dev</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>配置cmake</li>
</ol>
<div class="note danger no-icon"><p>配置cmake一定要加上这项参数<code>-D CUDNN_VERSION=&quot;8.0&quot;</code>，否则会报错：Could NOT find CUDNN: Found unsuitable version &quot;..&quot;, but required is at least &quot;6&quot; (found &#x2F;usr&#x2F;lib&#x2F;aarch64-linux-gnu&#x2F;libcudnn.so.8.2.1)，即使是手动指定了库文件的绝对路径，仍然是会报这个错误。cudnn版本参见<a href="#%E4%B8%BA%E5%BC%80%E5%8F%91%E6%9D%BF%E5%AE%89%E8%A3%85CUDA%E3%80%81cuDNN%E3%80%81TensorRT%E5%BA%93">「为开发板安装CUDA、cuDNN、TensorRT库」</a>小节</p>
</div>
<div class="note info no-icon"><p>下载的源码压缩包不包含所有modules组件的源码，并且raw.githubusercontent.com是无法直连的，直接ping也无法得到ip，通过网页<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a>，得到ip：185.199.110.133。如果不修改hosts进行域名解析映射IP，大概率会报错：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">=======================================================================</span><br><span class="line">  Couldn<span class="string">&#x27;t download files from the Internet.</span></span><br><span class="line"><span class="string">  Please check the Internet access on this host.</span></span><br><span class="line"><span class="string">=======================================================================</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/hosts</span><br><span class="line">185.199.110.133 raw.githubusercontent.com</span><br><span class="line">20.205.243.166 github.com</span><br></pre></td></tr></table></figure>
<p>倘若修改了hosts文件进行域名解析映射IP之后，仍然是报错提示无法连接网络下载文件的话，先移除opencv_contrib-4.1.1目录。</p>
</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake \</span><br><span class="line">-D CMAKE_BUILD_TYPE=RELEASE \</span><br><span class="line">-D CMAKE_INSTALL_PREFIX=/usr/local \</span><br><span class="line">-D CMAKE_C_COMPILER=/usr/bin/gcc-7 \</span><br><span class="line">-D INSTALL_PYTHON_EXAMPLES=OFF \</span><br><span class="line">-D INSTALL_C_EXAMPLES=OFF \</span><br><span class="line">-D OPENCV_ENABLE_NONFREE=ON \</span><br><span class="line">-D BUILD_opencv_python3=ON \</span><br><span class="line">-D WITH_CUDA=ON \</span><br><span class="line">-D WITH_CUDNN=ON \</span><br><span class="line">-D CUDNN_VERSION=<span class="string">&quot;8.0&quot;</span> \</span><br><span class="line">-D WITH_TBB=ON \</span><br><span class="line">-D OPENCV_DNN_CUDA=ON \</span><br><span class="line">-D ENABLE_FAST_MATH=on \</span><br><span class="line">-D CUDA_FAST_MATH=on \</span><br><span class="line">-D CUDA_ARCH_BIN=6.2 \</span><br><span class="line">-D CUDA_ARCH_PTX=<span class="string">&quot;&quot;</span> \</span><br><span class="line">-D WITH_CUBLAS=on \</span><br><span class="line">-D OPENCV_GENERATE_PKGCONFIG=ON \</span><br><span class="line">-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.1/modules \</span><br><span class="line">-D PYTHON3_EXECUTABLE=/usr/local/python3.7/bin/python3.7m \</span><br><span class="line">-D PYTHON3_INCLUDE_DIR=/usr/local/python3.7/include/python3.7m \</span><br><span class="line">-D PYTHON3_LIBRARY=/usr/local/python3.7/lib/libpython3.7m.so \</span><br><span class="line">-D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/local/python3.7/lib/python3.7/site-packages/numpy/core/include \</span><br><span class="line">-D PYTHON3_PACKAGES_PATH=/usr/local/python3.7/lib/python3.7/site-packages \</span><br><span class="line">-D PYTHON_DEFAULT_EXECUTABLE=/usr/local/python3.7/bin/python3.7m \</span><br><span class="line">-D CUDNN_LIBRARY=/usr/local/cuda-10.2/lib64/libcudnn.so.8.2.1 \</span><br><span class="line">-D CUDNN_INCLUDE_DIR=/usr/local/cuda-10.2/include  \</span><br><span class="line">-D CUDA_CUDA_LIBRARY=/usr/local/cuda-10.2/targets/aarch64-linux/lib/stubs/libcuda.so \</span><br><span class="line">-D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-10.2/ \</span><br><span class="line">-D OPENCV_PYTHON3_INSTALL_PATH=/usr/local/python3.7/lib/python3.7/site-packages \</span><br><span class="line">-D WITH_WEBP=OFF \</span><br><span class="line">-D WITH_OPENCL=OFF \</span><br><span class="line">-D ETHASHLCL=OFF \</span><br><span class="line">-D ENABLE_CXX11=ON \</span><br><span class="line">-D BUILD_EXAMPLES=OFF \</span><br><span class="line">-D WITH_OPENGL=ON \</span><br><span class="line">-D WITH_GSTREAMER=ON \</span><br><span class="line">-D WITH_V4L=ON \</span><br><span class="line">-D WITH_LIBV4L=ON \</span><br><span class="line">-D WITH_QT=OFF \</span><br><span class="line">-D BUILD_opencv_python3=ON \</span><br><span class="line">-D BUILD_opencv_python2=OFF \</span><br><span class="line">-D WITH_FFMPEG=on \</span><br><span class="line">-D HAVE_opencv_python3=ON \</span><br><span class="line">-D EIGEN_INCLUDE_PATH=/usr/include/eigen3 \</span><br><span class="line">-D WITH_EIGEN=ON \</span><br><span class="line">-D ENABLE_NEON=ON \</span><br><span class="line">-D WITH_OPENMP=ON \</span><br><span class="line">-D BUILD_TIFF=ON \</span><br><span class="line">-D WITH_TBB=ON \</span><br><span class="line">-D BUILD_TBB=ON \</span><br><span class="line">-D BUILD_TESTS=OFF \</span><br><span class="line">-D WITH_PROTOBUF=ON \</span><br><span class="line">..</span><br></pre></td></tr></table></figure>
<p>如果cmake提示找不到OpenBLAS头文件和库文件的话，可以尝试方法修复：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -- Could not find OpenBLAS include. Turning OpenBLAS_FOUND off</span></span><br><span class="line"><span class="comment"># -- Could not find OpenBLAS lib. Turning OpenBLAS_FOUND off</span></span><br><span class="line"><span class="comment"># -- Could NOT find Atlas (missing: Atlas_CBLAS_LIBRARY Atlas_BLAS_LIBRARY)</span></span><br><span class="line"><span class="built_in">sudo</span> apt install libopenblas-dev libopenblas-base</span><br><span class="line"><span class="built_in">sudo</span> apt install liblapacke-dev</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">ln</span> -s /usr/include/lapacke.h /usr/include/x86_64-linux-gnu <span class="comment"># corrected path for the library</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Open_BLAS_INCLUDE_SEARCH_PATHS path:  /usr/include/x86_64-linux-gnu</span></span><br><span class="line"><span class="comment"># Open_BLAS_LIB_SEARCH_PATHS path: /usr/lib/x86_64-linux-gnu</span></span><br><span class="line"><span class="comment"># 将以上路径分别添加到opencv/cmake/OpenCVFindOpenBLAS.cmake文件中的SET(Open_BLAS_INCLUDE_SEARCH_PATHS和SET(Open_BLAS_LIB_SEARCH_PATHS中。</span></span><br></pre></td></tr></table></figure>

<ol>
<li>编译及安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用-j参数多线程编译时会报错（makefile文件引起的），可能是由于我修改了opencv/cmake/OpenCVFindOpenBLAS.cmake文件引起的</span></span><br><span class="line">make -j1</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新动态链接库</span></span><br><span class="line"><span class="built_in">sudo</span> ldconfig</span><br></pre></td></tr></table></figure>
<ol start="7">
<li>测试opencv安装情况</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 假设编译安装好系统opencv with cuda后，python没有找到cv2，则安装opencv-python包启用。</span></span><br><span class="line"><span class="comment"># pip install opencv-python</span></span><br><span class="line"></span><br><span class="line">python3.7</span><br><span class="line">import cv2</span><br><span class="line"><span class="comment"># 返回cuda设备，即cuda显卡的数量</span></span><br><span class="line"><span class="built_in">print</span>(cv2.cuda.getCudaEnabledDeviceCount())</span><br></pre></td></tr></table></figure>

<h1 id="配置conda（可选，但不推荐）">14 &nbsp&nbsp<a href="#配置conda（可选，但不推荐）" class="headerlink" title="配置conda（可选，但不推荐）"></a>配置conda（可选，但不推荐）</h1><p>不推荐配置，jetson tx2 nx型号能够安装成功的版本较老，并且创建虚拟环境后，默认的base环境一旦conda install任意包之后，再次运行conda的任何命令都会报错：<code>illegal instruction (core dump)</code>，pip可以正常工作。如果是新建其他名称的虚拟环境，则是pip会报错：<code>illegal instruction (core dump)</code>，而conda install可以正常工作。</p>
<p>anaconda下载：<br>miniconda下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/">点击跳转</a><br>Archiconda下载：<a href="https://github.com/Archiconda/build-tools/releases">点击跳转</a></p>
<p>tx2 nx硬件只有这个版本能成功安装：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py37_4.9.2-Linux-aarch64.sh">Miniconda3-py37_4.9.2-Linux-aarch64.sh</a>，而之后的新版本都会报错：<code>illegal instruction (core dump)</code>。</p>
<h2 id="conda基本操作">14.1 &nbsp&nbsp<a href="#conda基本操作" class="headerlink" title="conda基本操作"></a>conda基本操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建了名为xxx的虚拟环境，指定虚拟环境的 Python 版本为3.7</span></span><br><span class="line">conda create -n xxx python=3.7</span><br><span class="line"><span class="comment"># 激活名为xxx的虚拟环境</span></span><br><span class="line">conda activate xxx</span><br><span class="line"><span class="comment"># 退出当前虚拟环境</span></span><br><span class="line">conda deactivate</span><br><span class="line"><span class="comment"># 删除名为xxx的虚拟环境</span></span><br><span class="line">conda remove -n xxx --all</span><br><span class="line"><span class="comment"># 查看本地已有哪些虚拟环境</span></span><br><span class="line">conda info --<span class="built_in">env</span></span><br></pre></td></tr></table></figure>

<h2 id="修改conda源">14.2 &nbsp&nbsp<a href="#修改conda源" class="headerlink" title="修改conda源"></a>修改conda源</h2><p>参见<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">Anaconda 镜像使用帮助</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano ~/.condarc</span><br><span class="line"><span class="comment"># windows用户可以用下面的命令创建这个文件</span></span><br><span class="line"><span class="comment"># conda config --set show_channel_urls yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 为.condarc文件添加如下内容</span></span><br><span class="line">channels:</span><br><span class="line">  - defaults</span><br><span class="line">show_channel_urls: <span class="literal">true</span></span><br><span class="line">default_channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</span><br><span class="line">custom_channels:</span><br><span class="line">  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="line">  deepmodeling: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除索引缓存</span></span><br><span class="line">conda clean -i</span><br></pre></td></tr></table></figure>

<h2 id="使用yml配置文件创建虚拟环境报错（这个我实测没生效）">14.3 &nbsp&nbsp<a href="#使用yml配置文件创建虚拟环境报错（这个我实测没生效）" class="headerlink" title="使用yml配置文件创建虚拟环境报错（这个我实测没生效）"></a>使用yml配置文件创建虚拟环境报错（这个我实测没生效）</h2><p>现象：使用yml文件创建conda环境时出现Solving environment: failed 和 ResolvePackageNotFound 的错误</p>
<p>原因：因为部分包的版本详细是根据机器配置而定，导出来的版本不一定适用当前的机器</p>
<p>解决方法：剔除环境配置文件environment.yml中的版本信息，只需删除第二个等号之后的内容即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pytorch=1.1.0=py3.7_cuda10.0.130_cudnn7.5.1_0</span><br><span class="line"><span class="comment"># 例如上面这行的修改如下</span></span><br><span class="line">pytorch=1.1.0</span><br></pre></td></tr></table></figure>

<h1 id="参考文献">15 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Nvidia xavier NX 通过 flash.sh 烧录 linux 系统[EB&#x2F;OL]. <a href="https://blog.csdn.net/Yan_uuu/article/details/126947983">https://blog.csdn.net/Yan_uuu/article/details/126947983</a>.<br>[2] Jetson Xavier NX 镜像制作、烧录及克隆[EB&#x2F;OL]. <a href="https://blog.csdn.net/qhdd123/article/details/123815911">https://blog.csdn.net/qhdd123/article/details/123815911</a>.<br>[3] 解决 Jetson：Failed to start nvpmode1 server. 和 Failed to start load kernel modules[EB&#x2F;OL]. <a href="https://blog.csdn.net/alianfibakic/article/details/123807606">https://blog.csdn.net/alianfibakic/article/details/123807606</a>.<br>[4] Jetson TX2 更换软件源[EB&#x2F;OL]. <a href="https://blog.csdn.net/qlulibin/article/details/80271096">https://blog.csdn.net/qlulibin/article/details/80271096</a>.<br>[5] Ubuntu18.04 默认源恢复默认源恢复备份源[EB&#x2F;OL]. <a href="https://blog.csdn.net/ZeyiRTangent/article/details/114885286">https://blog.csdn.net/ZeyiRTangent/article/details/114885286</a>.<br>[6] PyPI 镜像使用帮助[EB&#x2F;OL]. <a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/">https://mirrors.tuna.tsinghua.edu.cn/help/pypi/</a>.<br>[7] Ubuntu 编译安装 python3.7.10, 解决‘_ctypes‘和 ssl 问题, 建立软链接 python3.7 和 pip3.7[EB&#x2F;OL]. <a href="https://blog.csdn.net/tmaccs/article/details/117029067">https://blog.csdn.net/tmaccs/article/details/117029067</a>.<br>[8] ubuntu18.04 下源码编译安装最新版本 Python3[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/62930419">https://zhuanlan.zhihu.com/p/62930419</a>.<br>[9] ubuntu pip is configured with locations that require TLS&#x2F;SSL[EB&#x2F;OL]. <a href="https://blog.csdn.net/a1007720052/article/details/107342695">https://blog.csdn.net/a1007720052/article/details/107342695</a>.<br>[10] libssl‑dev : Depends: libssl1.0.0 (&#x3D; 1.0.2g‑1ubuntu4) but 1.0.2g‑1ubuntu4.15 is to be installed[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_38890593/article/details/102783551">https://blog.csdn.net/weixin_38890593/article/details/102783551</a>.<br>[11] TX2开启最大功耗模式[EB&#x2F;OL]. <a href="https://www.cnblogs.com/gezhuangzhuang/p/11674062.html">https://www.cnblogs.com/gezhuangzhuang/p/11674062.html</a>.<br>[12] 使用git --recursive进行循环克隆，由于网络原因，出现克隆失败的情况。[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_43212651/article/details/116376103">https://blog.csdn.net/qq_43212651/article/details/116376103</a>.<br>[13] 解决c++: internal compiler error: 已杀死 (program cc1plus)[EB&#x2F;OL]. <a href="https://blog.csdn.net/chenmeng0508/article/details/122283442">https://blog.csdn.net/chenmeng0508/article/details/122283442</a>.<br>[14] Jetson nano增加Swap分区大小操作指南[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_33475105/article/details/108372878">https://blog.csdn.net/qq_33475105/article/details/108372878</a>.<br>[15] 玩转NVIDIA Jetson （25）--- jetson 安装pytorch和torchvision[EB&#x2F;OL]. <a href="https://blog.csdn.net/huiyuanliyan/article/details/126686036">https://blog.csdn.net/huiyuanliyan/article/details/126686036</a>.<br>[16] Ubuntu 安装PHP找不着BZip2[EB&#x2F;OL]. <a href="https://blog.csdn.net/handsome_926/article/details/77933926">https://blog.csdn.net/handsome_926/article/details/77933926</a>.<br>[17] ModuleNotFoundError: No module named &#39;_lzma&#39;[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/404162713">https://zhuanlan.zhihu.com/p/404162713</a>.<br>[18] Error :: You must put some &#39;source&#39; URIs in your sources.list[EB&#x2F;OL]. <a href="https://askubuntu.com/questions/496549/error-you-must-put-some-source-uris-in-your-sources-list">https://askubuntu.com/questions/496549/error-you-must-put-some-source-uris-in-your-sources-list</a>.<br>[19] 3d-pose-baseline[EB&#x2F;OL]. <a href="https://github.com/una-dinosauria/3d-pose-baseline">https://github.com/una-dinosauria/3d-pose-baseline</a>.<br>[20] How to stop jetson_clocks?[EB&#x2F;OL]. <a href="https://forums.developer.nvidia.com/t/how-to-stop-jetson-clocks/144713">https://forums.developer.nvidia.com/t/how-to-stop-jetson-clocks/144713</a>.<br>[21] VideoPose3d:环境搭建+制作自己的视频[EB&#x2F;OL]. <a href="https://blog.csdn.net/willbetter01/article/details/120906567">https://blog.csdn.net/willbetter01/article/details/120906567</a>.<br>[22] 【VideoPose3D】可视化自定义视频[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_44942539/article/details/121983187">https://blog.csdn.net/qq_44942539/article/details/121983187</a>.<br>[23] Windows下VideoPose3D成功运行记录2：运行自定义视频[EB&#x2F;OL]. <a href="https://www.bilibili.com/read/cv19291005/">https://www.bilibili.com/read/cv19291005/</a>.<br>[24] How to Use OpenCV with CUDA Support in Python[EB&#x2F;OL]. <a href="https://saturncloud.io/blog/how-to-use-opencv-with-cuda-support-in-python/">https://saturncloud.io/blog/how-to-use-opencv-with-cuda-support-in-python/</a>.<br>[25] Jetson Xavier NX OpenCV 安装[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/411901208">https://zhuanlan.zhihu.com/p/411901208</a>.<br>[26] Nvidia Jetson TX2 配置Cuda 加速的Opencv[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_62651190/article/details/129348245">https://blog.csdn.net/weixin_62651190/article/details/129348245</a>.<br>[27] Guide to build OpenCV from source with GPU support (CUDA and cuDNN)[EB&#x2F;OL]. <a href="https://gist.github.com/minhhieutruong0705/8f0ec70c400420e0007c15c98510f133">https://gist.github.com/minhhieutruong0705/8f0ec70c400420e0007c15c98510f133</a>.<br>[28] How to install OpenCV 4.2.0 with CUDA 10.0 in Ubuntu distro 18.04[EB&#x2F;OL]. <a href="https://gist.github.com/changx03/b4aa9bb2827217c3a6a7e08365441417">https://gist.github.com/changx03/b4aa9bb2827217c3a6a7e08365441417</a>.<br>[29] Jetson带CUDA编译的opencv4.5安装教程与踩坑指南，cmake配置很重要！[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_39298885/article/details/110851373">https://blog.csdn.net/weixin_39298885/article/details/110851373</a>.<br>[30] ubuntu 编译安装支持CUDA的OpenCV[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_44523137/article/details/124098406">https://blog.csdn.net/qq_44523137/article/details/124098406</a>.<br>[31] Install OpenCV on Jetson Nano[EB&#x2F;OL]. <a href="https://qengineering.eu/install-opencv-on-jetson-nano.html">https://qengineering.eu/install-opencv-on-jetson-nano.html</a>.<br>[32] 「解析」Jetson Orin NX 安装 CUDA&#x2F;cuDNN[EB&#x2F;OL]. <a href="https://blog.csdn.net/ViatorSun/article/details/129909317">https://blog.csdn.net/ViatorSun/article/details/129909317</a>.<br>[33] OpenCV 4.2.0 and CuDNN for Jetson Nano?[EB&#x2F;OL]. <a href="https://forums.developer.nvidia.com/t/opencv-4-2-0-and-cudnn-for-jetson-nano/112281?page=2">https://forums.developer.nvidia.com/t/opencv-4-2-0-and-cudnn-for-jetson-nano/112281?page=2</a>.<br>[34] Correction in OpenCV&#39;s default CMAKE search Path for OpenBLAS Library on Ubuntu-64bit Machines [Solution] [EB&#x2F;OL]. <a href="https://github.com/opencv/opencv/issues/12957">https://github.com/opencv/opencv/issues/12957</a>.<br>[35] jetson tx2 安装miniconda失败原因（illegal instruction (core dump）原因解析与简易安装miniconda[EB&#x2F;OL]. <a href="https://blog.csdn.net/buxiangyaomingzi/article/details/123297295">https://blog.csdn.net/buxiangyaomingzi/article/details/123297295</a>.<br>[36] TypeError: load() missing 1 required positional argument: &#39;Loader&#39; in Google Colab[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/69564817/typeerror-load-missing-1-required-positional-argument-loader-in-google-col">https://stackoverflow.com/questions/69564817/typeerror-load-missing-1-required-positional-argument-loader-in-google-col</a>.<br>[37] 解决创建conda环境时Solving environment: failed 和 ResolvePackageNotFound 的错误[EB&#x2F;OL]. <a href="https://blog.csdn.net/hshudoudou/article/details/126407029">https://blog.csdn.net/hshudoudou/article/details/126407029</a>.<br>[38] 关于Ubuntu下ZRAM的配置和使用[EB&#x2F;OL]. <a href="https://blog.xzr.moe/archives/88/">https://blog.xzr.moe/archives/88/</a>.<br>[39] 解决python urllib3 v2.0 only supports OpenSSL 1.1.1+, currently[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_43205308/article/details/130830307">https://blog.csdn.net/weixin_43205308/article/details/130830307</a>.<br>[40] 从TensorFlow被kill到增加Swap分区[EB&#x2F;OL]. <a href="https://www.zhihu.com/column/p/30562899">https://www.zhihu.com/column/p/30562899</a>.<br>[41] Linux运行程序时，程序进程莫名退出（被杀死）[EB&#x2F;OL]. <a href="https://blog.csdn.net/ispringmw/article/details/112719262">https://blog.csdn.net/ispringmw/article/details/112719262</a>.<br>[42] linux 环境下进程被 killed掉原因分析和解决方法[EB&#x2F;OL]. <a href="https://blog.csdn.net/ktigerhero3/article/details/80004315">https://blog.csdn.net/ktigerhero3/article/details/80004315</a>.<br>[43] Linux OOM Killer机制 以及防止被OOM Killer杀死的方法[EB&#x2F;OL]. <a href="https://blog.csdn.net/top_explore/article/details/107733974">https://blog.csdn.net/top_explore/article/details/107733974</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>英伟达</tag>
        <tag>nvidia</tag>
        <tag>jetson</tag>
        <tag>开发板</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
  <entry>
    <title>Office总结笔记</title>
    <url>/software/office/</url>
    <content><![CDATA[<h1 id="Word">1 &nbsp&nbsp<a href="#Word" class="headerlink" title="Word"></a>Word</h1><h2 id="页码排版问题">1.1 &nbsp&nbsp<a href="#页码排版问题" class="headerlink" title="页码排版问题"></a>页码排版问题</h2><ul>
<li>分页符前后的页眉页脚是一样的，分节符前后才有可能不一样。</li>
<li>分节符后面的页眉页脚一般都是默认继承前面的格式的，可以取消“链接到前一个”。</li>
<li>分节符用的下一页。</li>
</ul>
<p>关于分页符和分节符的删除：</p>
<ul>
<li>视图删除法：进入菜单「视图」&gt;「大纲视图」或者「草稿视图」等，找到想要删除的符号，按 delete 键进行删除。</li>
<li>在菜单「开始」的文字样式左边，显示&#x2F;隐藏编辑标记（箭头符号）。点击显示符号，然后 delete 删除。</li>
</ul>
<h2 id="格式刷">1.2 &nbsp&nbsp<a href="#格式刷" class="headerlink" title="格式刷"></a>格式刷</h2><ul>
<li>选中需要复制样式的文字，然后点击菜单「开始」&gt;「格式刷」。然后选中其他需要应用的文字。</li>
<li>单击时，只能使用一次。双击时，能多次使用。</li>
</ul>
<h2 id="自动目录">1.3 &nbsp&nbsp<a href="#自动目录" class="headerlink" title="自动目录"></a>自动目录</h2><p>在菜单「视图」&gt;「大纲视图」对需要生成目录的标题进行级别排版后，点击菜单「引用」&gt;「目录」&gt;「自动目录 1」。</p>
<h2 id="页眉页脚样式的删除，如下划线">1.4 &nbsp&nbsp<a href="#页眉页脚样式的删除，如下划线" class="headerlink" title="页眉页脚样式的删除，如下划线"></a>页眉页脚样式的删除，如下划线</h2><p>双击页眉页脚进入「设计模式」编辑。在「开始」&gt;「样式」下拉 &gt;「清除格式」</p>
<h2 id="LaTeX公式输入">1.5 &nbsp&nbsp<a href="#LaTeX公式输入" class="headerlink" title="LaTeX公式输入"></a>LaTeX公式输入</h2><p>插入公式的快捷键 alt+&#x3D;</p>
<p>几种模式的区别：</p>
<ul>
<li>&#x2F;Unicode：输入空格即可将当前 latex 语句转换成公式。</li>
<li>LaTeX：写完所有 LaTeX 语法，通过转换「当前‑专业」功能才能完成转换。（无法通过空格转换）</li>
</ul>
<p>P.S.「全部‑专业」功能会对当前文档使用转换功能</p>
<h2 id="在表格（最外框那种，占满整个页面）下方插入空行">1.6 &nbsp&nbsp<a href="#在表格（最外框那种，占满整个页面）下方插入空行" class="headerlink" title="在表格（最外框那种，占满整个页面）下方插入空行"></a>在表格（最外框那种，占满整个页面）下方插入空行</h2><ol>
<li>在表格的最下方一行按 TAB 键，生成第二页表格。</li>
<li>在第二页表格第一行，插入空白页。</li>
<li>之后删除表格页。</li>
</ol>
<h2 id="参考文献的引用及自动更新">1.7 &nbsp&nbsp<a href="#参考文献的引用及自动更新" class="headerlink" title="参考文献的引用及自动更新"></a>参考文献的引用及自动更新</h2><ol>
<li>创建文献编号，排版文献<ol>
<li>「开始」选项卡 &gt; 有序编号 &gt; 定义新编号格式（D）</li>
<li>在数值左右分别添加 [] 符号</li>
<li>对参考文献使用该格式进行排版</li>
</ol>
</li>
<li>交叉引用，插入引用编号<ol>
<li>「引用」选项卡 &gt; 交叉引用</li>
<li>编号项 + 段落编号 + 插入为超链接</li>
<li>选择所引用的参考文献</li>
</ol>
</li>
<li>自动更新域：右键插入的引用编号 &gt; 更新域（全局更新：ctrl+A 之后按 F9&gt; 更新页码）</li>
</ol>
<h1 id="Excel">2 &nbsp&nbsp<a href="#Excel" class="headerlink" title="Excel"></a>Excel</h1><h2 id="标准化统一整列数据的格式">2.1 &nbsp&nbsp<a href="#标准化统一整列数据的格式" class="headerlink" title="标准化统一整列数据的格式"></a>标准化统一整列数据的格式</h2><ul>
<li>无任何数据的初始列：设置单元格式</li>
<li>一列已有数据，包含数字格式、文本格式等不同格式：这个情况使用「设置单元格式」功能并不会对已有数据进行格式化修改。正确的方法是：选中该列数据，选择菜单栏“数据”选项卡---“分列”后单击下一步，再下一步，再如图的选项卡中，选择要把该列数据变更为“常规”还是“文本”或其他。如有特殊需求，可点击“高级”。</li>
</ul>
<h2 id="边框颜色修改问题">2.2 &nbsp&nbsp<a href="#边框颜色修改问题" class="headerlink" title="边框颜色修改问题"></a>边框颜色修改问题</h2><p>设置顺序：先选颜色，再在预设里选择边框样式（外边框和内部）。</p>
<p>注意顺序不能搞错，必须先选颜色，再选边框。</p>
<h1 id="安卓android-Office">3 &nbsp&nbsp<a href="#安卓android-Office" class="headerlink" title="安卓android Office"></a>安卓android Office</h1><ul>
<li>excel表格别用其中的创建自定义视图功能，这功能是创建一个新的视图，完完全全改变单元格的全部样式（对应视图）。如果只是需要修改单元格特定格式，在编辑模式下完成即可。</li>
</ul>
<h1 id="参考文献">4 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] EXCEL将一列不同格式的数据变成同一格式[EB&#x2F;OL]. <a href="https://jingyan.baidu.com/article/3ea51489faf0a252e61bba1e.html">https://jingyan.baidu.com/article/3ea51489faf0a252e61bba1e.html</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>笔记</tag>
        <tag>软件</tag>
        <tag>office</tag>
        <tag>excel</tag>
        <tag>word</tag>
        <tag>ppt</tag>
        <tag>powerpoint</tag>
        <tag>操作</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE+iKuai+OpenWrt+fnOS虚拟机折腾记录</title>
    <url>/software/pve/</url>
    <content><![CDATA[<h1 id="背景">1 &nbsp&nbsp<a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>早期因联通赠送的光猫性能不支持双lan口长时间同时上网，故从海鲜市场（小黄鱼）上淘了一块n3530小工控机（准系统，无内存条），计划用来安装pve虚拟机用以作软路由处理宽带拨号和网关ip分配，光猫仅作为一个光电信号转换器。</p>
<p>后面不断购新硬件摸索各类方案，目前本文已总结了笔者探索使用PVE的各种经验所得。</p>
<h1 id="机器配置">2 &nbsp&nbsp<a href="#机器配置" class="headerlink" title="机器配置"></a>机器配置</h1><h2 id="N3530工控机配置">2.1 &nbsp&nbsp<a href="#N3530工控机配置" class="headerlink" title="N3530工控机配置"></a>N3530工控机配置</h2><ul>
<li>CPU：Intel(R) Pentium(R) CPU N3530</li>
<li>内存：海力士DDR3L-8GB单根（从老笔记本电脑上拆一根DDR3条子给它用）</li>
<li>硬盘：海力士SH920 msata 256GB</li>
<li>网卡：千兆网卡Intel I211 *2+千兆网卡Realtek mini-pcie RTL8211E&#x2F;F（螃蟹卡，后期自己购买加装至mini pcie无线网卡口位置）</li>
</ul>
<h2 id="N3530工控机BIOS的优化设置">2.2 &nbsp&nbsp<a href="#N3530工控机BIOS的优化设置" class="headerlink" title="N3530工控机BIOS的优化设置"></a>N3530工控机BIOS的优化设置</h2><blockquote>
<p>快速启动菜单按键：F11键</p>
</blockquote>
<p>该N3530工控机BIOS是采用经典的<code>AMI(American Megatrends)</code>方案。</p>
<ul>
<li>设置来电自启：<code>Chipset-&gt;North Bridge-&gt;Restore AC Power Loss-&gt;Power on</code></li>
<li>启用CPU内置温度传感器：<code>Advanced-&gt;CPU Configuration-&gt;CPU Thermal Configuration-&gt;DTS-&gt;Enabled</code></li>
<li>启用VT-x：<code>Advanced-&gt;CPU Configuration-&gt;Intel Virtualization Technology-&gt;Enabled</code></li>
<li>设置自定义功率模式：<code>Advanced-&gt;CPU Configuration-&gt;Power Technology-&gt;Custom</code>。（默认是Efficient节能模式）</li>
</ul>
<h2 id="i5-12400-云星Matx-Z690-NAS主板配置">2.3 &nbsp&nbsp<a href="#i5-12400-云星Matx-Z690-NAS主板配置" class="headerlink" title="i5-12400+云星Matx-Z690 NAS主板配置"></a>i5-12400+云星Matx-Z690 NAS主板配置</h2><h2 id="云星Matx-Z690-NAS主板BIOS的优化设置">2.4 &nbsp&nbsp<a href="#云星Matx-Z690-NAS主板BIOS的优化设置" class="headerlink" title="云星Matx-Z690 NAS主板BIOS的优化设置"></a>云星Matx-Z690 NAS主板BIOS的优化设置</h2><blockquote>
<p>快速启动菜单按键：F11键</p>
</blockquote>
<h1 id="安装PVE">3 &nbsp&nbsp<a href="#安装PVE" class="headerlink" title="安装PVE"></a>安装PVE</h1><h2 id="PVE安装步骤">3.1 &nbsp&nbsp<a href="#PVE安装步骤" class="headerlink" title="PVE安装步骤"></a>PVE安装步骤</h2><ol>
<li>下载PVE系统镜像：<a href="https://www.proxmox.com/en/downloads/proxmox-virtual-environment/iso">点击跳转</a>（我的情况就是需要下载pve 7.4的iso镜像文件，因为安装pve 8.x会引起<code>bootloader setup errors</code>报错而导致安装PVE系统失败）</li>
<li>制作U盘启动项：<a href="https://github.com/ventoy/Ventoy/releases">ventoy</a>。拷贝镜像iso文件到U盘，启动选择pve镜像进入，选择图形安装界面。</li>
<li>同意协议。</li>
<li>点击option按钮，选择硬盘和ext4格式：<ol>
<li>swapsize&#x3D;8GB（交换分区请根据自己的硬盘容量和使用情况设置）</li>
<li>maxroot&#x3D;50GB（该分区对应PVE系统的local存储空间，主要用于存放ISO镜像和LXC模板（CT Templates），请根据自己的硬盘和使用情况设置）</li>
<li>minfree&#x3D;0GB（该分区是定义划分LVM卷组“pve”后剩余的可用空间量。当可用存储空间超过128GB时，其默认值为16GB。）<ul>
<li>一般是留出这闲置空间用于手动lvcreate逻辑分卷snapshot快照这种操作。但PVE是使用lvmthin，无需闲置空间作为lvmthin的快照存储，因此设置为0即可。</li>
<li>如果自己的需求有自行创建逻辑卷快照的需求，请留空使用默认值16GB即可。</li>
<li>LVM需要VG中的可用空间来创建快照，而lvmthin快照则不需要。</li>
</ul>
</li>
<li>maxvz&#x3D;留空（该分区是定义数据卷（data）的最大大小。计算公式：datasize &#x3D; hdsize - rootsize - swapsize - minfree）</li>
</ol>
</li>
<li>国家选择china，时区会自动修改为上海，键盘布局不改。</li>
<li>设置密码，邮箱随意。</li>
<li>管理网口，默认第一个做管理（enp1s0，pve系统里面识别的第一个网口，N3530工控机中靠近hdmi接口的rj45），第二个做wan口（方便后续维护）。域名hostname设置为pve.lan（这项随便填写都行，有能用的域名可填写上去，可解析到机器用域名管理pve虚拟机）；ip：192.168.1.2；掩码：255.255.255.0；网关：192.168.1.1（留给iKuai的地址），DNS：223.5.5.5。</li>
<li>查看确认已设置的内容（弹窗），确认安装。</li>
<li>访问WEB管理地址并登录：<a href="https://192.168.1.2:8006/">https://192.168.1.2:8006</a>。账户：root。密码：[前面步骤设置的密码]。</li>
<li>设置网卡并确保pve能联网。</li>
</ol>
<h2 id="PVE升级步骤（7-4-8-x）">3.2 &nbsp&nbsp<a href="#PVE升级步骤（7-4-8-x）" class="headerlink" title="PVE升级步骤（7.4-&gt;8.x）"></a>PVE升级步骤（7.4-&gt;8.x）</h2><h3 id="替换PVE-7-4的Debian系统软件源和PVE软件源">3.2.1 &nbsp&nbsp<a href="#替换PVE-7-4的Debian系统软件源和PVE软件源" class="headerlink" title="替换PVE 7.4的Debian系统软件源和PVE软件源"></a>替换PVE 7.4的Debian系统软件源和PVE软件源</h3><p>注：推荐中科大源，清华源可能会遇到大型NAT局域网宽带频繁访问而导致被禁用IP，从而导致出现403 Forbidden。</p>
<div class="tabs" id="74sources"><ul class="nav-tabs"><li class="tab active"><a href="#74sources-1">PVE 7.4的Debian系统软件源</a></li><li class="tab"><a href="#74sources-2">PVE 7.4的PVE软件源</a></li><li class="tab"><a href="#74sources-3">PVE 7.4的CEPH分布式源</a></li></ul><div class="tab-content"><div class="tab-pane active" id="74sources-1"><p>修改<code>/etc/apt/sources.list</code>文件内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<div class="tabs" id="74sourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#74sourcestype-1">PVE 7.4的Debian系统软件源（中科大源）</a></li><li class="tab"><a href="#74sourcestype-2">PVE 7.4的Debian系统软件源（清华源）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="74sourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#deb http://ftp.debian.org/debian bullseye main contrib</span></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line"></span><br><span class="line"><span class="comment">#deb http://ftp.debian.org/debian bullseye-updates main contrib</span></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line"><span class="comment"># security updates</span></span><br><span class="line"><span class="comment">#deb http://security.debian.org bullseye-security main contrib</span></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian-security bullseye-security main contrib non-free</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="74sourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#deb http://ftp.debian.org/debian bullseye main contrib</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span><br><span class="line"></span><br><span class="line"><span class="comment">#deb http://ftp.debian.org/debian bullseye-updates main contrib</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span><br><span class="line"><span class="comment"># security updates</span></span><br><span class="line"><span class="comment">#deb http://security.debian.org bullseye-security main contrib</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span><br></pre></td></tr></table></figure></div></div></div></div><div class="tab-pane" id="74sources-2"><p>删除pve-enterprise.list，新建pve-no-subscription.list。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak</span><br></pre></td></tr></table></figure>
<div class="tabs" id="74pvesourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#74pvesourcestype-1">PVE 7.4的PVE软件源（中科大源）</a></li><li class="tab"><a href="#74pvesourcestype-2">PVE 7.4的PVE软件源（清华源）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="74pvesourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bullseye pve-no-subscription &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="74pvesourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/pve bullseye pve-no-subscription &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure></div></div></div></div><div class="tab-pane" id="74sources-3"><p>修改<code>/etc/apt/sources.list.d/ceph.list</code>和<code>/usr/share/perl5/PVE/CLI/pveceph.pm</code>文件内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list.d/ceph.list /etc/apt/sources.list.d/ceph.list.bak</span><br><span class="line"><span class="built_in">cp</span> /usr/share/perl5/PVE/CLI/pveceph.pm /usr/share/perl5/PVE/CLI/pveceph.pm.bak</span><br><span class="line">sed -i <span class="string">&quot;s#http://download.proxmox.com#https://mirrors.ustc.edu.cn/proxmox#g&quot;</span> /usr/share/perl5/PVE/CLI/pveceph.pm</span><br></pre></td></tr></table></figure>
<div class="tabs" id="74cephsourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#74cephsourcestype-1">PVE 7.4的CEPH分布式源（中科大源）</a></li><li class="tab"><a href="#74cephsourcestype-2">PVE 7.4的CEPH分布式源（清华源）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="74cephsourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bullseye no-subscription &gt; /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="74cephsourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/ceph-quincy bullseye no-subscription &gt; /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></table></figure></div></div></div></div></div></div>
<h3 id="升级到PVE-7-4最新的版本">3.2.2 &nbsp&nbsp<a href="#升级到PVE-7-4最新的版本" class="headerlink" title="升级到PVE 7.4最新的版本"></a>升级到PVE 7.4最新的版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt dist-upgrade -y</span><br><span class="line">pveversion</span><br></pre></td></tr></table></figure>
<h3 id="检查版本升级的兼容性">3.2.3 &nbsp&nbsp<a href="#检查版本升级的兼容性" class="headerlink" title="检查版本升级的兼容性"></a>检查版本升级的兼容性</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pve7to8</span><br></pre></td></tr></table></figure>
<h3 id="替换PVE-8-x的Debian系统软件源和PVE软件源（国内镜像）">3.2.4 &nbsp&nbsp<a href="#替换PVE-8-x的Debian系统软件源和PVE软件源（国内镜像）" class="headerlink" title="替换PVE 8.x的Debian系统软件源和PVE软件源（国内镜像）"></a>替换PVE 8.x的Debian系统软件源和PVE软件源（国内镜像）</h3><p>注：推荐中科大源，清华源可能会遇到大型NAT局域网宽带频繁访问而导致被禁用IP，从而导致出现403 Forbidden。</p>
<div class="tabs" id="8xsources"><ul class="nav-tabs"><li class="tab active"><a href="#8xsources-1">PVE 8.x的Debian系统软件源</a></li><li class="tab"><a href="#8xsources-2">PVE 8.x的PVE软件源</a></li><li class="tab"><a href="#8xsources-3">PVE 8.x的CEPH分布式源</a></li></ul><div class="tab-content"><div class="tab-pane active" id="8xsources-1"><p>修改&#x2F;etc&#x2F;apt&#x2F;sources.list文件内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<div class="tabs" id="8xsourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#8xsourcestype-1">PVE 8.x的中科大镜像源</a></li><li class="tab"><a href="#8xsourcestype-2">PVE 8.x的清华镜像源</a></li></ul><div class="tab-content"><div class="tab-pane active" id="8xsourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># deb http://ftp.debian.org/debian bookworm main contrib</span></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb http://ftp.debian.org/debian bookworm-updates main contrib</span></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># security updates</span></span><br><span class="line"><span class="comment"># deb http://security.debian.org bookworm-security main contrib</span></span><br><span class="line">deb https://mirrors.ustc.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="8xsourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># deb http://ftp.debian.org/debian bookworm main contrib</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb http://ftp.debian.org/debian bookworm-updates main contrib</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># security updates</span></span><br><span class="line"><span class="comment"># deb http://security.debian.org bookworm-security main contrib</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure></div></div></div></div><div class="tab-pane" id="8xsources-2"><p>删除pve-enterprise.list，新建pve-no-subscription.list。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak</span><br></pre></td></tr></table></figure>
<div class="tabs" id="8xpvesourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#8xpvesourcestype-1">PVE 8.x的PVE软件源（中科大源）</a></li><li class="tab"><a href="#8xpvesourcestype-2">PVE 8.x的PVE软件源（清华源）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="8xpvesourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.ustc.edu.cn/proxmox/debian/pve bookworm pve-no-subscription &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="8xpvesourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/pve bookworm pve-no-subscription &gt; /etc/apt/sources.list.d/pve-no-subscription.list</span><br></pre></td></tr></table></figure></div></div></div></div><div class="tab-pane" id="8xsources-3"><p>修改<code>/etc/apt/sources.list.d/ceph.list</code>和<code>/usr/share/perl5/PVE/CLI/pveceph.pm</code>文件内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/apt/sources.list.d/ceph.list /etc/apt/sources.list.d/ceph.list.bak</span><br><span class="line"><span class="built_in">cp</span> /usr/share/perl5/PVE/CLI/pveceph.pm /usr/share/perl5/PVE/CLI/pveceph.pm.bak</span><br><span class="line">sed -i <span class="string">&quot;s#http://download.proxmox.com#https://mirrors.ustc.edu.cn/proxmox#g&quot;</span> /usr/share/perl5/PVE/CLI/pveceph.pm</span><br></pre></td></tr></table></figure>
<div class="tabs" id="8xcephsourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#8xcephsourcestype-1">PVE 8.x的CEPH分布式源（中科大源）</a></li><li class="tab"><a href="#8xcephsourcestype-2">PVE 8.x的CEPH分布式源（清华源）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="8xcephsourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription &gt; /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="8xcephsourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription &gt; /etc/apt/sources.list.d/ceph.list</span><br></pre></td></tr></table></figure></div></div></div></div></div></div>
<h3 id="替换LXC模板（CT-Templates）镜像源">3.2.5 &nbsp&nbsp<a href="#替换LXC模板（CT-Templates）镜像源" class="headerlink" title="替换LXC模板（CT Templates）镜像源"></a>替换LXC模板（CT Templates）镜像源</h3><p>修改<code>/usr/share/perl5/PVE/APLInfo.pm</code>文件内容，<strong>针对 <code>/usr/share/perl5/PVE/APLInfo.pm</code> 文件的修改，重启后生效。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/perl5/PVE/APLInfo.pm /usr/share/perl5/PVE/APLInfo.pm.bak</span><br></pre></td></tr></table></figure>
<div class="tabs" id="lxcsourcestype"><ul class="nav-tabs"><li class="tab active"><a href="#lxcsourcestype-1">PVE LXC模板（CT Templates）（中科大源）</a></li><li class="tab"><a href="#lxcsourcestype-2">PVE LXC模板（CT Templates）（清华源）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="lxcsourcestype-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s#http://download.proxmox.com/images#https://mirrors.ustc.edu.cn/proxmox/images#g&quot;</span> /usr/share/perl5/PVE/APLInfo.pm</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="lxcsourcestype-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s#http://download.proxmox.com/images#https://mirrors.tuna.tsinghua.edu.cn/proxmox/images#g&quot;</span> /usr/share/perl5/PVE/APLInfo.pm</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="开始正式升级">3.2.6 &nbsp&nbsp<a href="#开始正式升级" class="headerlink" title="开始正式升级"></a>开始正式升级</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt dist-upgrade -y</span><br></pre></td></tr></table></figure>
<div class="note info no-icon"><p>升级若遇到提示<code>Upgrade wants to remove package &#39;proxmox-ve&#39;</code>的话，在升级前尝试执行<code>apt remove linux-image-amd64</code>。</p>
</div>
<p>升级中会出现一些交互界面，下面是官网的建议（不清楚的选项，可以选择推荐参数）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/issue -&gt; Proxmox VE will auto-generate this file on boot, and it has only cosmetic effects on the login console.</span><br><span class="line">Using the default <span class="string">&quot;No&quot;</span> (keep your currently-installed version) is safe here.</span><br><span class="line"></span><br><span class="line">/etc/lvm/lvm.conf -&gt; Changes relevant <span class="keyword">for</span> Proxmox VE will be updated, and a newer config version might be useful.</span><br><span class="line">If you did not make extra changes yourself and are unsure it<span class="string">&#x27;s suggested to choose &quot;Yes&quot; (install the package maintainer&#x27;</span>s version) here.</span><br><span class="line"></span><br><span class="line">/etc/ssh/sshd_config -&gt; If you have not changed this file manually, the only differences should be a replacement of ChallengeResponseAuthentication no with KbdInteractiveAuthentication no and some irrelevant changes <span class="keyword">in</span> comments (lines starting with <span class="comment">#).</span></span><br><span class="line">If this is the <span class="keyword">case</span>, both options are safe, though we would recommend installing the package maintainer<span class="string">&#x27;s version in order to move away from the deprecated ChallengeResponseAuthentication option. If there are other changes, we suggest to inspect them closely and decide accordingly.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/etc/default/grub -&gt; Here you may want to take special care, as this is normally only asked for if you changed it manually, e.g., for adding some kernel command line option.</span></span><br><span class="line"><span class="string">It&#x27;</span>s recommended to check the difference <span class="keyword">for</span> any relevant change, note that changes <span class="keyword">in</span> comments (lines starting with <span class="comment">#) are not relevant.</span></span><br><span class="line">If unsure, we suggested to selected <span class="string">&quot;No&quot;</span> (keep your currently-installed version)</span><br></pre></td></tr></table></figure>
<h3 id="去除未订阅提示">3.2.7 &nbsp&nbsp<a href="#去除未订阅提示" class="headerlink" title="去除未订阅提示"></a>去除未订阅提示</h3><p><strong>完成如下文件内容修改后，注销浏览器当前的PVE登录信息，并重新登录就没有提示弹窗了。</strong></p>
<ul>
<li><code>/usr/share/pve-manager/js/pvemanagerlib.js</code></li>
<li><code>/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/pve-manager/js/pvemanagerlib.js /usr/share/pve-manager/js/pvemanagerlib.js.bak</span><br><span class="line"><span class="built_in">cp</span> /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js.bak</span><br><span class="line">sed -i <span class="string">&quot;s/data.status === &#x27;Active&#x27;/true/g&quot;</span> /usr/share/pve-manager/js/pvemanagerlib.js</span><br><span class="line">sed -i <span class="string">&quot;s/if (res === null || res === undefined || \!res || res/if(/g&quot;</span> /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</span><br><span class="line">sed -i <span class="string">&quot;s/.data.status.toLowerCase() !== &#x27;active&#x27;/false/g&quot;</span> /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js</span><br><span class="line">systemctl restart pveproxy</span><br></pre></td></tr></table></figure>
<div class="flex-column">
<img data-src="/images/pve/no_subscribe.webp">「无有效订阅」的提示弹窗</div>

<h3 id="后续PVE系统日常更新：">3.2.8 &nbsp&nbsp<a href="#后续PVE系统日常更新：" class="headerlink" title="后续PVE系统日常更新："></a>后续PVE系统日常更新：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt dist-upgrade -y</span><br></pre></td></tr></table></figure>

<h2 id="PVE安装和使用遇到的坑">3.3 &nbsp&nbsp<a href="#PVE安装和使用遇到的坑" class="headerlink" title="PVE安装和使用遇到的坑"></a>PVE安装和使用遇到的坑</h2><h3 id="PVE安装到99-时出现unable-to-install-the-EFI-boot-loader-on-dev-sda">3.3.1 &nbsp&nbsp<a href="#PVE安装到99-时出现unable-to-install-the-EFI-boot-loader-on-dev-sda" class="headerlink" title="PVE安装到99%时出现unable to install the EFI boot loader on &#39;&#x2F;dev&#x2F;sda&#39;"></a>PVE安装到99%时出现unable to install the EFI boot loader on &#39;&#x2F;dev&#x2F;sda&#39;</h3><p>报错信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bootloader setup errors:</span><br><span class="line">- failed to prepare EFI boot using Grub on &#x27;/dev/sda2&#x27;: unable to install the EFI boot loader on &#x27;/dev/sda&#x27;</span><br></pre></td></tr></table></figure>

<p>原因：PVE 8.0版本镜像īso不兼容N3530工控机，估计是bug。参考其他帖子说的只保留usb的uefi设备，依旧也会报错。并且因为机器的bios设置也比较繁琐，我反复尝试将其设置为csm模式，机器始终无法以csm模式启动，估计该主板的bios也是魔改过有bug的。因此导致也无法以csm模式安装pve。</p>
<p>解决方法：安装pve 7.4版本，再升级到pve 8.x。</p>
<h3 id="USB键盘一直插着时会无法响应的，无法进入并操控BIOS，只有CTRL-ALT-DELETE可以响应">3.3.2 &nbsp&nbsp<a href="#USB键盘一直插着时会无法响应的，无法进入并操控BIOS，只有CTRL-ALT-DELETE可以响应" class="headerlink" title="USB键盘一直插着时会无法响应的，无法进入并操控BIOS，只有CTRL+ALT+DELETE可以响应"></a>USB键盘一直插着时会无法响应的，无法进入并操控BIOS，只有CTRL+ALT+DELETE可以响应</h3><p>原因：推测为N3530工控机BIOS的驱动BUG。</p>
<p>解决方法：先不插键盘启动机器，看屏幕右下角等待主板自检代码走到99阶段，快速插上键盘，摁DEL键。如果一次不成功，就使用<code>CTRL+ALT+DELETE</code>强制重启，继续尝试该操作。</p>
<h3 id="hdmi屏幕不显bios">3.3.3 &nbsp&nbsp<a href="#hdmi屏幕不显bios" class="headerlink" title="hdmi屏幕不显bios"></a>hdmi屏幕不显bios</h3><p>N3530工控机主板BIOS内置驱动对普通HDMI小屏幕兼容性不好，只有成功启动PVE系统后才会正常显示画面，而在自检阶段和BIOS界面只会显示白屏或者花屏，接大屏驱动板兼容性好点。</p>
<h3 id="后面加装的RTL8211网卡不识别">3.3.4 &nbsp&nbsp<a href="#后面加装的RTL8211网卡不识别" class="headerlink" title="后面加装的RTL8211网卡不识别"></a>后面加装的RTL8211网卡不识别</h3><p>原因：因为安装pve系统之前未加装好螃蟹卡RTL8211，因此后续加装之后，pve系统并未识别到。</p>
<p>解决方法：重装pve系统。（驱动源码编译方案，也有编译报错，不好解决，推荐是重装pve，让pve自动打驱动）</p>
<h3 id="工控机重启bug，看门狗导致重启很长时间">3.3.5 &nbsp&nbsp<a href="#工控机重启bug，看门狗导致重启很长时间" class="headerlink" title="工控机重启bug，看门狗导致重启很长时间"></a>工控机重启bug，看门狗导致重启很长时间</h3><p>原因：未查明，只要一重启，就会长时间卡在看门狗的错误提示。</p>
<p>错误提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">watchgod: watchdog0: watchdog did<span class="string">&#x27;t did not stop!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">systemd-shutdown: Failed to finalzie DM services, ignorening.</span></span><br></pre></td></tr></table></figure>

<p>解决方法：无法解决，只能长时间等待完成重启或者强制关机重开。</p>
<p><strong>P.S. 尝试在主板BIOS中主动启用看门狗计时器设置<code>Advanced-&gt;SIO MISC Configuration-&gt;Watchdog Dog Timer-&gt;Enabled</code>仍无法解决，该问题暂未查明原因。</strong></p>
<h3 id="Repository-Debian-bookworm-changed-its-non-free-component-value-from-non-free-to-non-free-non-free-firmware">3.3.6 &nbsp&nbsp<a href="#Repository-Debian-bookworm-changed-its-non-free-component-value-from-non-free-to-non-free-non-free-firmware" class="headerlink" title="Repository &#39;Debian bookworm&#39; changed its &#39;non-free component&#39; value from &#39;non-free&#39; to &#39;non-free non-free-firmware&#39;"></a>Repository &#39;Debian bookworm&#39; changed its &#39;non-free component&#39; value from &#39;non-free&#39; to &#39;non-free non-free-firmware&#39;</h3><p>问题现象：运行<code>apt update</code>出现报错：Repository &#39;Debian bookworm&#39; changed its &#39;non-free component&#39; value from &#39;non-free&#39; to &#39;non-free non-free-firmware&#39;</p>
<p>问题原因：Debian 12版本（bookworm）的非自有固件包（如硬件驱动程序）不再放在non-free目录中，而是non-free-firmware目录。</p>
<p>解决方法1（修正<code>/etc/apt/sources.list</code>软件源）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保软件源中添加了non-free-firmware目录，而不仅仅只有non-free目录</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br></pre></td></tr></table></figure>

<p>解决方法2（直接屏蔽该错误）：<br>创建一个文件<code>/etc/apt/apt.conf.d/no-bookworm-firmware.conf</code>，写入内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">APT::Get::Update::SourceListWarnings::NonFreeFirmware <span class="string">&quot;false&quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="安装独立显卡的机器中PVE系统里面识别不到核显设备">3.3.7 &nbsp&nbsp<a href="#安装独立显卡的机器中PVE系统里面识别不到核显设备" class="headerlink" title="安装独立显卡的机器中PVE系统里面识别不到核显设备"></a>安装独立显卡的机器中PVE系统里面识别不到核显设备</h3><p>问题现象：华硕Z690-A Gaming WiFi D4主板在安装独立显卡后，运行<code>ls pci | grep VGA</code>找不到核显的VGA设备。</p>
<p>问题原因：主板BIOS未有开启核显。</p>
<p>解决方法：</p>
<ul>
<li>开启iGPU设置：<code>Advanced-&gt;System Agent (SA) Configuration-&gt;Graphics Configuration-&gt;iGPU Multi-Monitor-&gt;Enabled</code><ul>
<li>Intel 11代及以后的CPU核显不支持传统Legacy显示方式，如果看不到在主板BIOS中找不到iGPU设置选项的话，请设置关闭CSM：<code>BOOT-&gt;CSM (Compatibility Support Module)-&gt;Launch CSM-&gt;Disabled</code></li>
</ul>
</li>
<li>设置首选显示设备为核显：<code>Advanced-&gt;System Agent (SA) Configuration-&gt;Graphics Configuration-&gt;Primary Display-&gt;CPU Graphics</code><ul>
<li>一般其他主板型号可能有的选项值：<ul>
<li>Auto</li>
<li>CPU Graphics：核显</li>
<li>PEG Slot (PCI-e Graphics Device)：独立显卡</li>
<li>PCIE (PCI-e Graphics Device)</li>
<li>IGD (Internal Graphics Device)：一般多指核显，除非主板自带有北桥显示芯片</li>
<li>PCI (PCI Graphics Device)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="PVE概要页面利用率图标信息无法显示">3.3.8 &nbsp&nbsp<a href="#PVE概要页面利用率图标信息无法显示" class="headerlink" title="PVE概要页面利用率图标信息无法显示"></a>PVE概要页面利用率图标信息无法显示</h3><p>问题原因：rrdcached服务异常，某些情况下也可能会导致所有虚拟机显示「状态: unknown」。</p>
<p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop rrdcached</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/rrdcached/*</span><br><span class="line"><span class="comment"># 或者mv /var/lib/rrdcached /var/lib/rrdcached.bck</span></span><br><span class="line">systemctl start rrdcached</span><br></pre></td></tr></table></figure>

<h3 id="PVE面板节点和所有虚拟机显示「状态-unknown」，虚拟机正常运行">3.3.9 &nbsp&nbsp<a href="#PVE面板节点和所有虚拟机显示「状态-unknown」，虚拟机正常运行" class="headerlink" title="PVE面板节点和所有虚拟机显示「状态: unknown」，虚拟机正常运行"></a>PVE面板节点和所有虚拟机显示「状态: unknown」，虚拟机正常运行</h3><p>问题原因：pve的节点状态守护程序<code>pvestatd</code>异常。</p>
<p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看状态和重启服务</span></span><br><span class="line">systemctl status pvestatd</span><br><span class="line">systemctl restart pvestatd</span><br></pre></td></tr></table></figure>

<h3 id="使用ventoy引导安装PVE后，无法正常启动PVE">3.3.10 &nbsp&nbsp<a href="#使用ventoy引导安装PVE后，无法正常启动PVE" class="headerlink" title="使用ventoy引导安装PVE后，无法正常启动PVE"></a>使用ventoy引导安装PVE后，无法正常启动PVE</h3><p>问题：使用ventoy引导安装PVE后，安装完成重启，初次开机就卡在<code>loading initial ramdisk</code>或者黑屏</p>
<p>原因：因为ventoy偷偷给PVE添加启动内核参数<code>rdinit=/vtoy/vtoy</code>。据反复实验，在ventoy使用grub模式加载PVE镜像引导的话，这个参数百分百会被偷偷加入，使用正常UEFI模式加载偶尔会出现这种情况。测试使用的ventoy版本为v1.1.05。</p>
<p>解决方法：</p>
<ol>
<li>强制重启主机，在出现PVE引导菜单时，按E键，进入grub编辑模式</li>
<li>方向键定位到<code>linux</code>开头一行，删除<code>rdinit=/vtoy/vtoy</code>参数，Ctrl+X启动配置，进入系统引导加载启动。</li>
<li>登录PVE终端后台</li>
<li>查看并修改所有涉及内核参数的文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/default/grub</span><br><span class="line"><span class="comment"># 若有修改，执行更新</span></span><br><span class="line">update-grub</span><br><span class="line"></span><br><span class="line">nano /etc/kernel/cmdline</span><br><span class="line"><span class="comment"># 若有修改，执行更新</span></span><br><span class="line">proxmox-boot-tool refresh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果上述两个文件都不存在该参数，尝试检查以下文件</span></span><br><span class="line">/boot/grub/grub.cfg</span><br><span class="line">/etc/default/grub.d/init-select.cfg</span><br><span class="line">/etc/default/grub.d/installer.cfg</span><br><span class="line">/etc/default/proxmox-ve.cfg</span><br><span class="line">/etc/default/grub.ucf-dist</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>移除参数后，重启机器，PVE启动应该就能恢复正常</li>
</ol>
<h3 id="KVM和LXC被锁定lock无法启动">3.3.11 &nbsp&nbsp<a href="#KVM和LXC被锁定lock无法启动" class="headerlink" title="KVM和LXC被锁定lock无法启动"></a>KVM和LXC被锁定lock无法启动</h3><p>原因：回滚快照或者备份被异常中断都可能导致出现这种情况，对应的虚拟机状态可以看见一个被锁的图标。</p>
<p>解决方法：</p>
<ul>
<li>KVM虚拟机解锁命名：<code>qm unlock vmid</code>，例如<code>qm unlock 100</code>。</li>
<li>LXC虚拟机解锁命名：<code>pct unlock vmid</code>，例如<code>pct unlock 101</code>。</li>
</ul>
<h3 id="Intel-13-14代CPU搭建的PVE机器频繁宕机">3.3.12 &nbsp&nbsp<a href="#Intel-13-14代CPU搭建的PVE机器频繁宕机" class="headerlink" title="Intel 13&#x2F;14代CPU搭建的PVE机器频繁宕机"></a>Intel 13&#x2F;14代CPU搭建的PVE机器频繁宕机</h3><p>问题现象：Intel 13&#x2F;14代CPU搭建的PVE机器经常会出现宕机现象，基本每隔两天就会出现失联，ssh也无法正常连接到PVE。此外还有一个很严重的现象，即未设置任何硬件直通的内核启动参数情况下，仍然会导致十分随机的PVE系统启动卡住现象或者出现随机启动报错，包括并不仅限于：</p>
<ul>
<li><a href="https://blog.csdn.net/Magic_Engine/article/details/144424476">PVE启动卡在loading initial ramdisk</a></li>
<li><a href="https://forum.proxmox.com/threads/proxmox-stuck-in-dev-mapper-pve-root-clean.154567/">Proxmox stuck in &#x2F;dev&#x2F;mapper&#x2F;pve-root: clean</a>：光标在下一行，并且光标不会闪烁，就显示一个下划线<code>_</code>。</li>
<li><code>BUG: Bad page state in process init  pfn:11386d</code></li>
<li>启动虚拟机经常遇到：<a href="https://github.com/lxc/lxc/issues/2678">Failed to create the configured network</a>，从而导致无法启动</li>
<li>无法正常卸载分区，reboot系统也会卡住在<code>unmount filesystem xxxx</code>（xxxx指UUID）</li>
<li>导致PBS备份失败：<a href="#ERROR-Backup-of-VM-102-failed-lvcreate-snapshot-pve-snap-vm-102-disk-0-vzdump-error">ERROR: Backup of VM 102 failed - lvcreate snapshot &#39;pve&#x2F;snap_vm-102-disk-0_vzdump&#39; error</a></li>
</ul>
<p>问题原因：CPU缩缸（辣鸡Intel(ಥ﹏ಥ)）。相信我，修改grub引导参数设置<code>nomodeset</code>什么的都不管用的，仍然是随机崩溃宕机或者开机随机卡住。</p>
<p>解决方法：为CPU设置BIOS锁频和稳压，确保CPU可以稳定运行工作。</p>
<div class="note default no-icon"><p>如果是1265u的机器，可能是C状态的问题。编辑<code>/etc/default/grub</code>，在<code>GRUB_CMDLINE_LINUX_DEFAULT</code>追加<code>intel_idle.max_cstate=2</code>参数，然后<code>update-grub</code>，最后在BIOS中设置关闭C状态。</p>
</div>

<h3 id="PVE宕机故障的排查手段">3.3.13 &nbsp&nbsp<a href="#PVE宕机故障的排查手段" class="headerlink" title="PVE宕机故障的排查手段"></a>PVE宕机故障的排查手段</h3><ul>
<li>PVE管理后台-&gt;PVE节点-&gt;系统-&gt;系统日志</li>
<li>排障思路：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看系统版本</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看PVE版本</span></span><br><span class="line">pveversion -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看PVE启动日志</span></span><br><span class="line"><span class="built_in">cd</span> /var/log</span><br><span class="line">last</span><br></pre></td></tr></table></figure>

<h1 id="PVE硬件直通">4 &nbsp&nbsp<a href="#PVE硬件直通" class="headerlink" title="PVE硬件直通"></a>PVE硬件直通</h1><div class="note default no-icon"><p>如果机器本身就支持VT-X和VT-d等CPU虚拟化和直通硬件功能，则PVE启用IOMMU方面不需要额外设置。只需要设置好主板BIOS对应的CPU虚拟化和直通硬件功能即可，因为安装PVE系统阶段就会自动设置好启动IOMMU。</p>
</div>

<p>IOMMU允许系统设备在虚拟内存中进行寻址，也就是将虚拟内存地址映射为物理内存地址，让实体设备可以在虚拟的内存环境中工作，这样可以帮助系统扩充内存容量，提升性能。</p>
<p>换而言之，IOMMU可以使VM虚拟机能够接入一些物理设备，比如PCIe中的网卡、声卡、显卡，VM虚拟机可以直接或间接使用这些设备。</p>
<blockquote>
<p>在创建虚拟机时，芯片组一定要q35。因为Q35，才能PCIE直通，否则就是PCI直通。</p>
</blockquote>
<h2 id="检查硬件是否支持直通（BIOS内查看Advanced高级选项）">4.1 &nbsp&nbsp<a href="#检查硬件是否支持直通（BIOS内查看Advanced高级选项）" class="headerlink" title="检查硬件是否支持直通（BIOS内查看Advanced高级选项）"></a>检查硬件是否支持直通（BIOS内查看Advanced高级选项）</h2><ol>
<li>开启CPU虚拟化：Intel: VT-X(Intel Virtual Technology)。AMD: AMD-V(SVM, Secure Virtual Machine)。</li>
<li>开启硬件直通功能：Intel: Intel VT-d。AMD: IOMMU。</li>
<li>部分主板会有和Intel VT-d&#x2F;IOMMU相关联的<code>Memory Remap Feature</code>设置。</li>
</ol>
<div class="note danger no-icon"><p>如果主板BIOS中没有VT-d或者IOMMU功能选项，则很可能不支持直通硬件功能。一般确认CPU是否支持该特性即可，例如确认Intel CPU是否支持VT-d，请查询Intel 官方CPU SKU规格页面资料即可。</p>
</div>

<div class="note info no-icon"><p>若机器CPU明确支持VT-d特性，但在主板BIOS中却找不到该选项的话，则很可能是机器主板BIOS默认设置关闭，并隐藏了该设置选项（这种情况常见于笔记本主板或者工控机主板）。</p>
<p>解决方法：使用<code>UniversalAMDFormBrowser</code>工具查看隐藏设定并开启。</p>
<ol>
<li>下载<code>UniversalAMDFormBrowser</code>工具<ul>
<li><strong>方案1（推荐）</strong>：<a href="https://github.com/mio-19/UniversalAMDFormBrowser-Ventoy">UniversalAMDFormBrowser-Ventoy</a>的<code>UniversalAMDFormBrowser.img</code>文件：该方案只需要将img文件拷贝到ventoy引导盘即可。</li>
<li>方案2：<a href="https://github.com/DavidS95/Smokeless_UMAF">Smokeless_UMAF</a>的<code>UniversalAMDFormBrowser.zip</code>文件：该方案需要制作FAT32分区格式的U盘制作引导盘。</li>
</ul>
</li>
<li>重启机器，选择U盘启动项，引导加载<code>UniversalAMDFormBrowser</code>镜像。</li>
<li>在<code>UniversalAMDFormBrowser</code>中查看隐藏设定，例如隐藏的VT-d选项或者解除功耗限制选项等。</li>
</ol>
</div>

<h2 id="PVE提示No-IOMMU-detected">4.2 &nbsp&nbsp<a href="#PVE提示No-IOMMU-detected" class="headerlink" title="PVE提示No IOMMU detected"></a>PVE提示<code>No IOMMU detected</code></h2><p>当pve未启用IOMMU或者硬件不支持直通（即使手动设置PVE开启IOMMU）时，在ProxmoxVE(PVE)的VM&#x2F;VPS中添加PCI设备时候提示：<code>No IOMMU detected, please activate it.See Documentation for further information</code>.</p>
<p>解决方法：请确认自己的机器是否支持VT-X和VT-d等CPU虚拟化和直通硬件功能，并是否已开启IOMMU。若硬件不支持，建议更换支持这些功能特性的硬件设备。</p>
<h2 id="PVE启用IOMMU">4.3 &nbsp&nbsp<a href="#PVE启用IOMMU" class="headerlink" title="PVE启用IOMMU"></a>PVE启用IOMMU</h2><div class="note info no-icon"><p>内核版本为5.15或之前的，在ProxmoxVE(PVE)系统内核中，需要手动启用IOMMU。5.15版本以后的ProxmoxVE(PVE)系统内核自带默认开启了IOMMU支持。</p>
<p>但我的硬件（N3530工控机）本身不支持VT-d功能（<a href="https://www.intel.cn/content/www/cn/zh/products/sku/81074/intel-pentium-processor-n3530-2m-cache-up-to-2-58-ghz/specifications.html">N3530 SKU规格页面明确写到不支持VT-d</a>），因此安装PVE时并未自动启用IOMMU。</p>
</div>

<div class="tabs" id="引导类型"><ul class="nav-tabs"><li class="tab active"><a href="#引导类型-1">GRUD引导类型（PVE默认引导方式）</a></li><li class="tab"><a href="#引导类型-2">systemd-boot引导类型（非PVE现行版本常见引导方式）</a></li></ul><div class="tab-content"><div class="tab-pane active" id="引导类型-1"><ol>
<li>编辑grub文件：<code>nano /etc/default/grub</code></li>
<li>找到GRUB_CMDLINE_LINUX_DEFAULT这一行：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s &lt;strong&gt;2&lt;/strong&gt;&gt; /dev/null || echo Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>根据CPU类型修改</li>
</ol>
<div class="tabs" id="grub-cpu类型"><ul class="nav-tabs"><li class="tab active"><a href="#grub-cpu类型-1">Intel CPU</a></li><li class="tab"><a href="#grub-cpu类型-2">AMD CPU</a></li></ul><div class="tab-content"><div class="tab-pane active" id="grub-cpu类型-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="grub-cpu类型-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet amd_iommu=on&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div></div></div>
4. 更新grub：`update-grub`
5. 重启PVE</div><div class="tab-pane" id="引导类型-2"><ol>
<li>编辑cmdline：<code>nano /etc/kernel/cmdline</code>。（若不存在，则新建该文件）</li>
<li>根据CPU类型在第一行末尾添加：</li>
</ol>
<div class="tabs" id="systemd-boot-cpu类型"><ul class="nav-tabs"><li class="tab active"><a href="#systemd-boot-cpu类型-1">Intel CPU</a></li><li class="tab"><a href="#systemd-boot-cpu类型-2">AMD CPU</a></li></ul><div class="tab-content"><div class="tab-pane active" id="systemd-boot-cpu类型-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">quiet intel_iommu=on</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="systemd-boot-cpu类型-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">quiet amd_iommu=on</span><br></pre></td></tr></table></figure></div></div></div></div></div></div>

<h2 id="验证PVE的IOMMU是否启用">4.4 &nbsp&nbsp<a href="#验证PVE的IOMMU是否启用" class="headerlink" title="验证PVE的IOMMU是否启用"></a>验证PVE的IOMMU是否启用</h2><ol>
<li>查询命令：<code>dmesg | grep -e DMAR -e IOMMU</code>。输出显示<code>DMAR: IOMMU enabled</code>或者<code>DMAR: Intel(R) Virtualization Technology for Directed I/O</code>证明已启用。</li>
<li>实操验证：虚拟机分配PCI设备时可见。</li>
</ol>
<h2 id="PVE启用PT模式">4.5 &nbsp&nbsp<a href="#PVE启用PT模式" class="headerlink" title="PVE启用PT模式"></a>PVE启用PT模式</h2><div class="note info no-icon"><p>PT模式：会在IOMMU需要使用时候启动，适配器不需要使用 DMA 转换到内存，因此可以提高其他没有分配过设备的性能。</p>
</div>

<ol>
<li>编辑grub文件：<code>nano /etc/default/grub</code></li>
<li>找到GRUB_CMDLINE_LINUX_DEFAULT这一行：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s &lt;strong&gt;2&lt;/strong&gt;&gt; /dev/null || echo Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>附加参数iommu&#x3D;pt，Intel和AMD芯片均可使用这个参数。</li>
<li>添加模块设置（5.4内核需自行添加，现行版本自带有添加）：<code>nano /etc/modules</code>。没有如下内容需添加。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vfio</span><br><span class="line">vfio_iommu_type1</span><br><span class="line">vfio_pci</span><br><span class="line">vfio_virqfd</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>刷新 initramfs：<code>update-initramfs -u -k all</code></li>
<li>更新 grub：<code>update-grub</code></li>
</ol>
<h2 id="直通i9-13900K核显UHD770给虚拟机Windows11">4.6 &nbsp&nbsp<a href="#直通i9-13900K核显UHD770给虚拟机Windows11" class="headerlink" title="直通i9-13900K核显UHD770给虚拟机Windows11"></a>直通i9-13900K核显UHD770给虚拟机Windows11</h2><h3 id="Intel-核显直通-optionROM方案">4.6.1 &nbsp&nbsp<a href="#Intel-核显直通-optionROM方案" class="headerlink" title="Intel 核显直通 optionROM方案"></a>Intel 核显直通 optionROM方案</h3><div class="note danger no-icon"><p>QEMU 9.2.0后的版本无法使用igd的ROM直通核显。例如PVE8.3.1版本的QEMU就不支持。回退到9.1.3版本再操作直通核显：<code>apt install pve-qemu-kvm=9.1.2-3</code>。</p>
<p>注意BIOS设定：DVMT pre allocated，不要大过64M，64M对应x-igd-gms&#x3D;0x2，如果超过64M,x-igd-gms要加大！</p>
</div>
<ol>
<li>访问<a href="https://github.com/gangqizai/igd">igd</a>仓库，在仓库代码根路径下，下载<a href="https://github.com/gangqizai/igd/blob/main/gen12_gop.rom"><code>gen12_gop.rom</code></a>和<a href="https://github.com/gangqizai/igd/blob/main/gen12_igd.rom"><code>gen12_igd.rom</code></a>两个文件。</li>
<li>将这两个文件复制到<code>/usr/share/kvm/</code>目录下。</li>
<li>编辑Windows虚拟机配置文件（示例Windows虚拟机ID为103）：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/pve/qemu-server/103.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加下面三行</span></span><br><span class="line">args: -<span class="built_in">set</span> device.hostpci0.addr=02.0 -<span class="built_in">set</span> device.hostpci0.x-igd-gms=0x2 -<span class="built_in">set</span> device.hostpci0.x-igd-opregion=on -debugcon fil&gt;bios: ovmf</span><br><span class="line">hostpci0: 0000:00:02.0,legacy-igd=1,romfile=gen12_igd.rom</span><br><span class="line">hostpci1: 0000:00:1f.3,romfile=gen12_gop.rom</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下是测试工作正常的完整配置</span></span><br><span class="line">args: -<span class="built_in">set</span> device.hostpci0.addr=02.0 -<span class="built_in">set</span> device.hostpci0.x-igd-gms=0x2 -<span class="built_in">set</span> device.hostpci0.x-igd-opregion=on</span><br><span class="line">bios: ovmf</span><br><span class="line">boot: order=sata0</span><br><span class="line">cores: 16</span><br><span class="line">cpu: host</span><br><span class="line">efidisk0: local-lvm:vm-103-disk-0,efitype=4m,size=4M</span><br><span class="line">hostpci0: 0000:00:02.0,legacy-igd=1,romfile=gen12_igd.rom</span><br><span class="line">hostpci1: 0000:00:1f.3,romfile=gen12_gop.rom</span><br><span class="line">machine: pc-i440fx-8.0</span><br><span class="line">memory: 20480</span><br><span class="line">meta: creation-qemu=9.2.0,ctime=1744108457</span><br><span class="line">name: windows</span><br><span class="line">net0: virtio=BC:24:11:C9:53:72,bridge=vmbr1,firewall=1</span><br><span class="line">numa: 0</span><br><span class="line">onboot: 1</span><br><span class="line">ostype: win11</span><br><span class="line">sata0: local-lvm:vm-103-disk-1,size=200G,ssd=1</span><br><span class="line">sata1: win-hdd:103/vm-103-disk-0.raw,backup=0,size=1007G</span><br><span class="line">scsihw: virtio-scsi-single</span><br><span class="line">smbios1: uuid=eddc911c-c81f-4d48-9ae2-f8c7f6cee2c5</span><br><span class="line">sockets: 1</span><br><span class="line">startup: order=4,up=1</span><br><span class="line">tpmstate0: local-lvm:vm-103-disk-2,size=4M,version=v2.0</span><br><span class="line">vga: none</span><br><span class="line">vmgenid: dc473f54-0098-45f9-92b8-d99320460696</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>注意在启动前，将虚拟机-&gt;硬件-&gt;显示-&gt;设置为「无 (none)」，即对应虚拟机配置文件的参数：<code>vga: none</code></li>
<li>通过远程桌面连接RDP接入虚拟机系统，下载并安装最新的Intel的核显驱动（已测试正常的驱动版本<code>32.0.101.6732</code>，驱动程序日期：2025&#x2F;4&#x2F;1）。</li>
</ol>
<h1 id="创建PVE虚拟机">5 &nbsp&nbsp<a href="#创建PVE虚拟机" class="headerlink" title="创建PVE虚拟机"></a>创建PVE虚拟机</h1><blockquote>
<p>若机器硬件性能不太足够的话，不建议安装win系统，win系统极度消耗硬件性能（即便是空载待机状态也消耗很大），而这影响openwrt的性能。比如我的情况：安装了tiny10系统，千兆网线，宽带500M实测不到300Mbp&#x2F;s（这里是指用<a href="http://speed.unicomgd.com:8080/">广东联通宽带测速平台</a>测试的结果，实际iKuai主路由测试速率却又正常），局域网速率最高只能到700Mbp&#x2F;s的速率。关闭后tiny10后，实测宽带速率恢复正常，局域网速率跑到900Mbp&#x2F;s出头）</p>
</blockquote>
<h2 id="PVE基础设置">5.1 &nbsp&nbsp<a href="#PVE基础设置" class="headerlink" title="PVE基础设置"></a>PVE基础设置</h2><ol>
<li>访问WEB管理地址并登录：<a href="https://192.168.1.2:8006/">https://192.168.1.2:8006</a>，账户：root。密码：[前面安装步骤设置的密码]。</li>
<li>根据硬件网卡情况，添加并设置好虚拟网桥Linux Bridge：创建&gt;Linux Bridge&gt;桥接接口填写物理网口地址名称。以我的机器为例，机器三个物理网口，PVE新建5个网桥，前三个网桥和物理网口绑定，第四个网桥用作iKuai和OpenWrt之间的传输，第五个网桥用作其他虚拟机系统的传输。</li>
</ol>
<h2 id="安装爱快iKuai">5.2 &nbsp&nbsp<a href="#安装爱快iKuai" class="headerlink" title="安装爱快iKuai"></a>安装爱快iKuai</h2><ol>
<li>下载iKuai镜像：<a href="https://www.ikuai8.com/component/download">点击跳转</a></li>
<li>local-内容-上传：iKuai的安装镜像文件。</li>
<li>创建虚拟机，命名虚拟机名称iKuai，VM编号100。</li>
<li>CD&#x2F;DVD光盘镜像文件选择刚上传的ISO镜像。</li>
<li>主硬盘分配2G，额外添加EFI磁盘（不勾选添加密钥），CPU给4核（host），内存分配4G（64位iKuai要求4G内存），网卡模型选择VirtIO（半虚拟化）。</li>
<li>完成新建后，在硬件标签页中继续完成添加所有网桥，网桥的防火墙全部关掉（使用iKuai的），模型都选择半虚拟化。</li>
<li>在选项标签页中把「开机自启动」开启，启动顺序设置为1，引导顺序只开disk‘xxxx’磁盘，把网络启动关掉，CD启动上移到第一位。</li>
<li>点击启动虚拟机，完成安装即可。</li>
<li>iKuai内识别的第一个网卡设置为lan1。</li>
<li>输入字母o回车进入其「其他选项」，开启外网访问web。</li>
<li>访问WEB管理地址并登录：<a href="http://192.168.1.1/">http://192.168.1.1:80</a>。默认账户：admin。默认密码：admin。</li>
</ol>
<h2 id="安装OpenWrt（KVM虚拟机）">5.3 &nbsp&nbsp<a href="#安装OpenWrt（KVM虚拟机）" class="headerlink" title="安装OpenWrt（KVM虚拟机）"></a>安装OpenWrt（KVM虚拟机）</h2><h3 id="OpenWrt镜像的选择">5.3.1 &nbsp&nbsp<a href="#OpenWrt镜像的选择" class="headerlink" title="OpenWrt镜像的选择"></a>OpenWrt镜像的选择</h3><ul>
<li><a href="https://openwrt.mpdn.fun:8443/?dir=lede/x86_64">Bleach OpenWrt</a>：推荐（本教程使用该固件）。内置SmartDNS，软件包空间设置为1G，剩余五百多兆。</li>
<li><a href="https://drive.google.com/drive/folders/1PsS3c0P7a4A4KY8plQg4Fla8ZI-PGBb1">eSir GDQ 高大全</a>：eSir的高大全固件。不推荐。没有内置SmartDNS拓展（我测试时安装SmartDNS并未出现有服务项，无效）。并且相较于Blench版本，较为繁琐。软件包空间只剩余几兆，需自己手动扩盘。</li>
</ul>
<h3 id="安装步骤">5.3.2 &nbsp&nbsp<a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li>创建虚拟机，命名虚拟机名称openwrt，VM编号101。</li>
<li>CD&#x2F;DVD光盘镜像文件设置为无介质。</li>
<li>主硬盘随便分配（后续会删除），额外添加EFI磁盘（不勾选添加密钥），CPU给4核（KVM64），内存分配4G，网卡模型选择VirtIO（半虚拟化）。</li>
<li>网桥只选择第四个网桥（用作iKuai和OpenWrt之间的传输），网卡的防火墙全部关掉（使用iKuai的），模型选择半虚拟化。</li>
<li>下载OpenWrt镜像：<a href="#OpenWrt%E9%95%9C%E5%83%8F%E7%9A%84%E9%80%89%E6%8B%A9">见上一小节</a></li>
<li>local-内容-上传：OpenWrt的镜像文件。</li>
<li>向虚拟机导入OpenWrt镜像：<code>qm importdisk 101 /var/lib/vz/template/iso/bleach-plus-20230826-openwrt-x86-64-generic-squashfs-combined-efi.img local-lvm</code>。（直接写盘即可，无需安装）。</li>
<li>在pve管理页面中，加载刚才导入镜像生成的磁盘。</li>
<li>在选项标签页中把「开机自启动」开启，启动顺序设置为2，引导顺序只开disk‘xxxx’磁盘，把网络启动关掉。</li>
<li>点击启动虚拟机。</li>
<li>pve中用shell：<code>vi /etc/config/network</code>，将lan口ip改为<code>192.168.1.3</code>，<code>reboot</code>重启。vim编辑：按i进入修改模式，按esc退出编辑模式，输入 :wq回车保存修改。</li>
<li>访问WEB管理地址并登录：<a href="http://192.168.1.3/">http://192.168.1.3</a>。默认账户：root。默认密码：password。</li>
</ol>
<h2 id="安装OpenWrt（LXC容器）">5.4 &nbsp&nbsp<a href="#安装OpenWrt（LXC容器）" class="headerlink" title="安装OpenWrt（LXC容器）"></a>安装OpenWrt（LXC容器）</h2><h3 id="OpenWrt根文件镜像的选择">5.4.1 &nbsp&nbsp<a href="#OpenWrt根文件镜像的选择" class="headerlink" title="OpenWrt根文件镜像的选择"></a>OpenWrt根文件镜像的选择</h3><ul>
<li><a href="https://firmware-selector.immortalwrt.org/?target=x86/64&id=generic">ImmortalWrt</a>：推荐（本教程使用该固件）。选择<code>ROOTFS (SQUASHFS)</code>类型下载，编写教程时最新版本为<code>immortalwrt-24.10.1-x86-64-generic-squashfs-rootfs.img.gz</code>。</li>
<li><a href="https://downloads.openwrt.org/">OpenWrt官方固件</a></li>
</ul>
<h3 id="安装步骤-1">5.4.2 &nbsp&nbsp<a href="#安装步骤-1" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li>在PVE宿主机上安装<code>squashfs-tools</code>软件包：<code>apt install squashfs-tools</code>。</li>
<li>下载OpenWrt根文件镜像：<a href="#OpenWrt%E6%A0%B9%E6%96%87%E4%BB%B6%E9%95%9C%E5%83%8F%E7%9A%84%E9%80%89%E6%8B%A9">见上一小节</a></li>
<li>解压gz包：<code>gunzip immortalwrt-24.10.1-x86-64-generic-squashfs-rootfs.img.gz</code>（gunzip解压gz包之后会自动删除gz包的）。</li>
<li>解压img镜像文件：<code>unsquashfs openwrt-x86-64-generic-squashfs-rootfs.img</code>，解压路径为当前路径下的<code>squashfs-root</code>文件夹。</li>
<li>打包tar.gz格式，作为LXC模版：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> squashfs-root</span><br><span class="line">tar zcf /var/lib/vz/template/cache/immortalwrt-24.10.1-x86-64-generic-rootfs.tar.gz ./*</span><br><span class="line"><span class="comment"># 完成之后PVE的local的CT模板路径中就可以看到immortalwrt-24.10.1-x86-64-generic-rootfs.tar.gz文件了</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>手动创建LXC容器（这里不能用网页端选择LXC模板来创建，会报错），若需要后期编辑LXC虚拟机的配置项，使用命令编辑<code>nano /etc/pve/lxc/101.conf</code>。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pct create 101 /var/lib/vz/template/cache/immortalwrt-24.10.1-x86-64-generic-rootfs.tar.gz --rootfs local-lvm:2 --ostype unmanaged --hostname openwrt --<span class="built_in">arch</span> amd64 --cores 4 --memory 2048 --swap 0 -net0 bridge=vmbr4,name=eth0 -net1 bridge=vmbr4,name=eth1 --features nesting=1 --unprivileged 0</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>pct create 100</code>: 创建一个 ID 为 100 的容器。</li>
<li><code>/var/lib/vz/template/cache/openwrt-x86-64-generic-rootfs.tar.gz</code>: 指定要使用的根文件系统模板的路径。这里是 OpenWRT 的根文件系统。</li>
<li><code>--rootfs local-lvm:2</code>: 设置容器的根文件系统存储位置。local-lvm表示使用local-lvm的空间，2表示分配2GB的存储空间。</li>
<li><code>--ostype unmanaged</code>: 指定操作系统类型为&quot;unmanaged&quot;，表示 Proxmox 不会对已知操作系统进行特定优化。</li>
<li><code>--hostname openwrt</code>: 将容器的主机名设置为 openwrt。</li>
<li><code>--arch amd64</code>: 指定容器的架构为 64 位（amd64）。</li>
<li><code>--cores 4</code>: 分配 4 个 CPU 核心给容器。</li>
<li><code>--memory 2048</code>: 分配 2048 MB 的内存给容器。</li>
<li><code>--swap 0</code>: 分配 0 MB 的交换空间给容器。</li>
<li><code>--net0 bridge=vmbr0,name=eth0</code>: 配置第一个网络接口，连接到 vmbr0 桥接，并将接口命名为 eth0。</li>
<li><code>--features nesting=1</code>: 启用特定功能。nesting&#x3D;1 允许嵌套虚拟化。</li>
<li><code>--unprivileged 0</code>：表示使用特权模式（该选项一定要开启，否则OpenWrt的DNSMasq服务无法正常启动）</li>
</ul>
<ol start="7">
<li>为容器追加额外的参数设置<code>nano /etc/pve/lxc/101.conf</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lxc.cgroup2.devices.allow: a</span><br><span class="line">lxc.cap.drop:</span><br><span class="line">lxc.mount.auto: proc:mixed sys:ro cgroup:mixed</span><br><span class="line">lxc.mount.entry: /dev/net/tun dev/net/tun none <span class="built_in">bind</span>,create=file</span><br></pre></td></tr></table></figure>
<p>参数说明：这些配置项主要用于确保容器能够正常访问网络设备，并设置适当的权限和挂载点，以便 OpenWRT 能够正常工作。</p>
<ul>
<li><code>lxc.cgroup2.devices.allow: a</code>：允许容器访问所有设备。a 表示所有设备权限。</li>
<li><code>lxc.cap.drop:</code>：该参数用于指定要从容器中删除的 Linux 功能（capabilities）。如果没有指定任何功能，表示不删除任何功能。此项通常用于限制容器的特权。</li>
<li><code>lxc.mount.auto: proc:mixed sys:ro cgroup:mixed</code>：<ul>
<li><code>lxc.mount.auto</code> 用于自动挂载文件系统。</li>
<li><code>proc:mixed</code> 表示以混合模式挂载 <code>/proc</code> 文件系统，允许容器访问进程信息。</li>
<li><code>sys:ro</code> 表示以只读模式挂载 <code>/sys</code> 文件系统，容器可以读取系统信息但不能修改。</li>
<li><code>cgroup:mixed</code> 表示以混合模式挂载 <code>cgroup</code> 文件系统，用于管理资源限制。</li>
</ul>
</li>
<li><code>lxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file</code>：该参数用于手动挂载设备。<ul>
<li><code>/dev/net/tun</code> 是 TUN&#x2F;TAP 虚拟网络设备的路径。</li>
<li><code>dev/net/tun</code> 是容器内的挂载点。</li>
<li><code>none</code> 表示不指定文件系统类型。</li>
<li><code>bind</code> 表示将主机的设备绑定到容器中。</li>
<li><code>create=file</code> 表示如果挂载点不存在则创建它。</li>
</ul>
</li>
</ul>
<ol start="8">
<li>在PVE管理网页打开进入LXC的shell，修改固件的LAN口IP，让OpenWrt可以访问外网：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/config/network</span><br><span class="line">service network restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件内容（请按自己的网络拓扑需求进行修改）</span></span><br><span class="line">config interface <span class="string">&#x27;loopback&#x27;</span></span><br><span class="line">        option device <span class="string">&#x27;lo&#x27;</span></span><br><span class="line">        option proto <span class="string">&#x27;static&#x27;</span></span><br><span class="line">        option ipaddr <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">        option netmask <span class="string">&#x27;255.0.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line">config globals <span class="string">&#x27;globals&#x27;</span></span><br><span class="line">        option ula_prefix <span class="string">&#x27;fdbb:d148:dd0e::/48&#x27;</span></span><br><span class="line">        option packet_steering <span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line">config device</span><br><span class="line">        option name <span class="string">&#x27;br-lan&#x27;</span></span><br><span class="line">        option <span class="built_in">type</span> <span class="string">&#x27;bridge&#x27;</span></span><br><span class="line">        list ports <span class="string">&#x27;eth0&#x27;</span></span><br><span class="line"></span><br><span class="line">config interface <span class="string">&#x27;lan&#x27;</span></span><br><span class="line">        option device <span class="string">&#x27;br-lan&#x27;</span></span><br><span class="line">        option proto <span class="string">&#x27;static&#x27;</span></span><br><span class="line">        option ipaddr <span class="string">&#x27;10.10.11.1&#x27;</span></span><br><span class="line">        option netmask <span class="string">&#x27;255.255.255.0&#x27;</span></span><br><span class="line">        option ip6assign <span class="string">&#x27;60&#x27;</span></span><br><span class="line"></span><br><span class="line">config interface <span class="string">&#x27;wan&#x27;</span></span><br><span class="line">        option device <span class="string">&#x27;eth1&#x27;</span></span><br><span class="line">        option proto <span class="string">&#x27;static&#x27;</span></span><br><span class="line">        option ipaddr <span class="string">&#x27;10.10.10.3&#x27;</span></span><br><span class="line">        option netmask <span class="string">&#x27;255.255.255.0&#x27;</span></span><br><span class="line">        option gateway <span class="string">&#x27;10.10.10.1&#x27;</span></span><br><span class="line">        list dns <span class="string">&#x27;114.114.114.114&#x27;</span></span><br></pre></td></tr></table></figure>
<ol start="9">
<li>安装软件包：<ol>
<li>美化皮肤：<code>luci-i18n-argon-config-zh-cn</code></li>
<li>OpenClash：<code>luci-app-openclash</code></li>
</ol>
</li>
</ol>
<h2 id="安装飞牛私有云fnOS">5.5 &nbsp&nbsp<a href="#安装飞牛私有云fnOS" class="headerlink" title="安装飞牛私有云fnOS"></a>安装飞牛私有云fnOS</h2><ol>
<li>下载飞牛私有云fnOS镜像：<a href="https://www.fnnas.com/download">点击跳转</a></li>
<li>local-内容-上传：fnOS的安装镜像文件。</li>
<li>创建虚拟机，命名虚拟机名称fnOS，VM编号102。</li>
<li>CD&#x2F;DVD光盘镜像文件选择刚上传的ISO镜像。</li>
<li>主硬盘分配64G，额外添加EFI磁盘（不勾选添加密钥），CPU给4核（host），内存分配6G（fnOS系统内存需求还是有点大的），网卡模型选择VirtIO（半虚拟化）。<ul>
<li>其他硬盘后续自行根据需求添加。</li>
</ul>
</li>
<li>网桥只选择第五个网桥（用作iKuai和fnOS之间的传输），网卡的防火墙全部关掉（使用iKuai的），模型选择半虚拟化。</li>
<li>在选项标签页中把「开机自启动」开启，启动顺序设置为3，引导顺序只开disk‘xxxx’磁盘，把网络启动关掉，CD启动上移到第一位。</li>
<li>点击启动虚拟机。</li>
<li>选择<code>Graphical Install</code>进行图形化安装流程。</li>
<li>选择系统主硬盘进行安装。</li>
<li>系统分区大小：64GB；Swap大小：0GB。（有论坛帖子反馈开启<code>Swap cache</code>时，某些下载应用例如<code>QBittorrent</code>可能会引导硬盘持续读取和CPU的异常占用。永久禁用Swap还需要修改fstab文件。）</li>
<li>点击确认安装，选择网卡界面，直接默认选项确认即可。</li>
<li>安装完成后，点击确认开始重启。摁<code>ESC</code>键，进入虚拟机BIOS设置界面，重新选择硬盘分区作为启动项启动。（否则默认启动CD）</li>
<li>出现<code>Debian GNU/Linux</code>系统引导选项就是安装成功了</li>
<li>进入到传统Linux登录界面（无GUI），这里能看到WEB管理地址。若需要固定IP地址，在<code>iKuai</code>中找到对应MAC地址加入静态分配表即可。</li>
<li>访问WEB管理地址并登录：<a href="http://192.168.1.5:5666/">http://192.168.1.5:5666/</a>。首次访问会提示创建NAS<code>设备名称``超级管理员账号``密码``确认密码</code>。</li>
</ol>
<h3 id="飞牛私有云fnOS的硬件直通设置">5.5.1 &nbsp&nbsp<a href="#飞牛私有云fnOS的硬件直通设置" class="headerlink" title="飞牛私有云fnOS的硬件直通设置"></a>飞牛私有云fnOS的硬件直通设置</h3><p>新版PVE无需额外设置什么直通参数，系统内核自带默认开启了IOMMU支持。</p>
<p>需要额外注意的一点是：安装飞牛系统时先不要加PCI设备，照常安装飞牛fnOS系统，正常设置完成之后，再关闭虚拟机添加PCI设备，例如核显和sata控制器（添加PCI设备-&gt;原始设备时，按默认参数即可，也无需勾选「所有功能」）。</p>
<ul>
<li>核显设备：Alder Lake-S GT1 [UHD Graphics 730]</li>
<li>SATA控制器：Alder Lake-S PCH SATA Controller [AHCI Mode]</li>
</ul>
<h2 id="创建虚拟机遇到的坑">5.6 &nbsp&nbsp<a href="#创建虚拟机遇到的坑" class="headerlink" title="创建虚拟机遇到的坑"></a>创建虚拟机遇到的坑</h2><h3 id="添加EFI磁盘后，启动无法引导磁盘，出现shell界面。">5.6.1 &nbsp&nbsp<a href="#添加EFI磁盘后，启动无法引导磁盘，出现shell界面。" class="headerlink" title="添加EFI磁盘后，启动无法引导磁盘，出现shell界面。"></a>添加EFI磁盘后，启动无法引导磁盘，出现shell界面。</h3><p>原因：创建EFI磁盘时，勾选了添加密钥。</p>
<p>解决方法：创建EFI磁盘时，取消勾选添加密钥。</p>
<h3 id="安装windows镜像，无法识别找到磁盘">5.6.2 &nbsp&nbsp<a href="#安装windows镜像，无法识别找到磁盘" class="headerlink" title="安装windows镜像，无法识别找到磁盘"></a>安装windows镜像，无法识别找到磁盘</h3><p>原因：scsi不适合windows镜像，windows安装解决识别不到硬盘。</p>
<p>解决方法：创建硬盘时，总线&#x2F;设备选择：SATA硬盘或者IDE。</p>
<h3 id="安装windows镜像，网卡无驱动">5.6.3 &nbsp&nbsp<a href="#安装windows镜像，网卡无驱动" class="headerlink" title="安装windows镜像，网卡无驱动"></a>安装windows镜像，网卡无驱动</h3><p>现象：当网卡设置为virtio模型时，安装并进入到windows系统后，网卡无驱动。</p>
<p>原因：windows系统自带的驱动无此虚拟硬件的驱动。</p>
<p>解决方式：加载virtio镜像，并运行x64程序安装驱动即可。</p>
<p>VirtIO镜像下载地址：<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">点击跳转</a></p>
<h3 id="创建的Windows虚拟机运行一段时间自动挂起进入suspended状态">5.6.4 &nbsp&nbsp<a href="#创建的Windows虚拟机运行一段时间自动挂起进入suspended状态" class="headerlink" title="创建的Windows虚拟机运行一段时间自动挂起进入suspended状态"></a>创建的Windows虚拟机运行一段时间自动挂起进入suspended状态</h3><p>问题：创建的Windows虚拟机运行一段时间后，会自动挂起进入suspended状态，并且恢复resume系统状态会导致虚拟机内存占用瞬间吃满，然后无响应。</p>
<p>原因：虚拟机Windows系统自身有自动睡眠和关闭屏幕等设置，导致PVE的QEMU自动进入到挂起状态。</p>
<p>解决方法：关闭虚拟机Windows系统内电源设置的自动睡眠和自动关闭屏幕功能。</p>
<h2 id="创建LXC容器遇到的坑">5.7 &nbsp&nbsp<a href="#创建LXC容器遇到的坑" class="headerlink" title="创建LXC容器遇到的坑"></a>创建LXC容器遇到的坑</h2><h3 id="使用debian-12的CT模板创建LXC容器SSH终端中文乱码">5.7.1 &nbsp&nbsp<a href="#使用debian-12的CT模板创建LXC容器SSH终端中文乱码" class="headerlink" title="使用debian-12的CT模板创建LXC容器SSH终端中文乱码"></a>使用<code>debian-12</code>的CT模板创建LXC容器SSH终端中文乱码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install locales -y</span><br><span class="line"><span class="comment"># 需要重新设置语言的，也可以重新执行该命令</span></span><br><span class="line">dpkg-reconfigure locales</span><br><span class="line"><span class="comment"># 使用Page Up和Page Down翻页查找这两种语言，使用空格确认复选框，tab键切换「确认」，然后回车执行</span></span><br><span class="line"><span class="comment"># en_US.UTF-8 UTF-8</span></span><br><span class="line"><span class="comment"># zh_CN.UTF-8 UTF-8</span></span><br><span class="line"><span class="comment"># 然后重启机器</span></span><br><span class="line">init 6</span><br></pre></td></tr></table></figure>

<h3 id="非特权（unprivileged）LXC容器无法设置vm-max-map-count内核参数">5.7.2 &nbsp&nbsp<a href="#非特权（unprivileged）LXC容器无法设置vm-max-map-count内核参数" class="headerlink" title="非特权（unprivileged）LXC容器无法设置vm.max_map_count内核参数"></a>非特权（unprivileged）LXC容器无法设置<code>vm.max_map_count</code>内核参数</h3><p>报错提示：<code>error: permission denied on key &#39;vm.max_map_count&#39;</code></p>
<p>报错原因：因为非特权的LXC容器的<code>/proc/sys</code>是以只读方式挂载到容器里面，无法修改sysctl内核参数。</p>
<p>解决方法：在PVE宿主机上，使用<code>sysctl -w vm.max_map_count=2000000</code>命令设置<code>vm.max_map_count</code>内核参数。<code>max_map_count</code>默认值是262144。</p>
<ul>
<li>查看参数值：<code>sysctl vm.max_map_count</code></li>
</ul>
<h4 id="补充知识点：namespace化的sysctl内核参数">5.7.2.1 &nbsp&nbsp<a href="#补充知识点：namespace化的sysctl内核参数" class="headerlink" title="补充知识点：namespace化的sysctl内核参数"></a>补充知识点：namespace化的sysctl内核参数</h4><p><code>vm.max_map_count</code>属于内核参数，而<code>vm.*</code>参数并没有namespace化。只有namespace化的sysctl内核参数在容器内直接修改设置的时候，不会影响宿主机和其他容器。</p>
<p>已经namespace化的sysctl内核参数：</p>
<ul>
<li>kernel.shm*</li>
<li>kernel.msg*</li>
<li>kernel.sem</li>
<li>fs.mqueue.*</li>
<li>net.*<ul>
<li>net.netfilter.nf_conntrack_max（Linux 5.12.2之前并未namespace化）</li>
<li>net.netfilter.nf_conntrack_expect_max（Linux 5.12.2之前并未namespace化）</li>
</ul>
</li>
</ul>
<p>给LXC容器单独设置sysctl内核参数的方式：</p>
<ul>
<li>为LXC容器开启特权选项<code>--privileged</code>，对应<code>/proc</code>目录的挂载方式为<code>rw</code>，可以直接在容器内使用命令修改参数了。若修改的是<code>namespaced</code>参数，则不会影响宿主机和其他容器。</li>
<li>把<code>/proc/sys</code>bind到容器里面，该方式和<code>--privileged</code>效果类似。</li>
</ul>
<p>给docker容器单独设置sysctl内核参数的方式：</p>
<ul>
<li><code>--privileged</code>：<code>docker run --privileged -it ubuntu bash</code>，该方式启动后，可以通过命令任意修改sysctl参数。</li>
<li>把&#x2F;proc&#x2F;sys bind到容器里面，再具体写值，和上面的效果类似。<ol>
<li><code>docker run -v /proc/sys:/writable-sys -it ubuntu bash</code></li>
<li><code>echo 62 &gt; /writable-sys/net/ipv4/ip_default_ttl</code></li>
</ol>
</li>
<li><code>--sysctl</code>：<code>docker run -it --sysctl &#39;net.ipv4.ip_default_ttl=63&#39; ubuntu sysctl net.ipv4.ip_default_ttl</code>。<ul>
<li>只有namespaced参数才可以。否则会报错&quot;invalid argument...&quot;</li>
<li>这种方式只是在容器初始化过程中完成内核参数的修改，容器运行起来以后，&#x2F;proc&#x2F;sys仍然是以只读方式挂载的，在容器中不能再次修改sysctl内核参数。</li>
</ul>
</li>
</ul>
<h3 id="创建的LXC容器debian-12系统时间与宿主机时间不一致">5.7.3 &nbsp&nbsp<a href="#创建的LXC容器debian-12系统时间与宿主机时间不一致" class="headerlink" title="创建的LXC容器debian-12系统时间与宿主机时间不一致"></a>创建的LXC容器<code>debian-12</code>系统时间与宿主机时间不一致</h3><p>使用<code>debian-12</code>的CT模板默认使用的是世界时设置，比东八区时间慢八小时，因此需要手动设置时区。</p>
<ul>
<li>方法1：timedatectl set-timezone Asia&#x2F;Shanghai</li>
<li>方法2：dpkg-reconfigure tzdata</li>
</ul>
<p>验证修改是否成功：<code>timedatectl</code></p>
<h3 id="在PVE管理页面工具选择OpenWrt的自建LXC模板来创建LXC会报错">5.7.4 &nbsp&nbsp<a href="#在PVE管理页面工具选择OpenWrt的自建LXC模板来创建LXC会报错" class="headerlink" title="在PVE管理页面工具选择OpenWrt的自建LXC模板来创建LXC会报错"></a>在PVE管理页面工具选择OpenWrt的自建LXC模板来创建LXC会报错</h3><p>报错提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  Logical volume <span class="string">&quot;vm-101-disk-0&quot;</span> created.</span><br><span class="line">Creating filesystem with 524288 4k blocks and 131072 inodes</span><br><span class="line">Filesystem UUID: 0d6d0789-09cb-4564-95be-c04ba88481bb</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">    32768, 98304, 163840, 229376, 294912</span><br><span class="line">extracting archive <span class="string">&#x27;/var/lib/vz/template/cache/immortalwrt-24.10.1-x86-64-generic-rootfs.tar.gz&#x27;</span></span><br><span class="line">Total bytes <span class="built_in">read</span>: 39229440 (38MiB, 176MiB/s)</span><br><span class="line">unknown ID <span class="string">&#x27;immortalwrt&#x27;</span> <span class="keyword">in</span> /etc/os-release file, trying fallback detection</span><br><span class="line">  Logical volume <span class="string">&quot;vm-101-disk-0&quot;</span> successfully removed.</span><br><span class="line">TASK ERROR: unable to create CT 101 - unable to detect OS distribution</span><br></pre></td></tr></table></figure>

<p>报错原因：PVE管理页面工具无法识别该LXC模板的系统类型。</p>
<p>解决方法：使用<code>pct create</code>手动创建LXC容器。</p>
<h3 id="非特权模式的OpenWrt的LXC容器网络访问问题">5.7.5 &nbsp&nbsp<a href="#非特权模式的OpenWrt的LXC容器网络访问问题" class="headerlink" title="非特权模式的OpenWrt的LXC容器网络访问问题"></a>非特权模式的OpenWrt的LXC容器网络访问问题</h3><p>使用<code>unprivileged 1</code>非特权模式创建的LXC容器，OpenWrt的DNSMasq服务无法正常启动，这种模式下网络可以ping通IP，但无法解析域名，提示报错<code>ping: bad address &#39;qq.com&#39;</code>，因为DNSMasq服务异常。</p>
<p>临时解决方法：若需要在这种情况下临时访问外网，直接修改<code>/etc/resolv.conf</code>文件即可，追加可用的DNS服务器IP即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件内容</span></span><br><span class="line">search lan</span><br><span class="line">nameserver 127.0.0.1</span><br><span class="line">nameserver ::1</span><br><span class="line"><span class="comment"># 追加可用的DNS服务器</span></span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>

<h1 id="路由方案一：iKuai主路由-OpenWRT传统旁路由的网络拓扑">6 &nbsp&nbsp<a href="#路由方案一：iKuai主路由-OpenWRT传统旁路由的网络拓扑" class="headerlink" title="路由方案一：iKuai主路由+OpenWRT传统旁路由的网络拓扑"></a>路由方案一：iKuai主路由+OpenWRT传统旁路由的网络拓扑</h1><p>iKuai作为主路由，负责拨号及DHCP，OpenWRT做旁路由。SmartDNS+AdGuardHome设置分流与去广告。SmartDNS作为DNS管理并提供DNS缓存，实现国内国外DNS分流，彻底解决DNS污染问题、实现秒开网页。同时搭配AdGuardHome实现整个局域网去广告。</p>
<p>DNS转发流程：设置最核心的部分就是DNS转发端口的衔接，就是把DNSMASQ、Adguardhome、SmartDNS三个插件里的DNS服务器功能分成三个层级，实现层层转发。依次是第一级DNSMASQ，第二级Adguardhome，第三级SmartDNS，第四级OpenClash。</p>
<h2 id="iKuai的设置">6.1 &nbsp&nbsp<a href="#iKuai的设置" class="headerlink" title="iKuai的设置"></a>iKuai的设置</h2><ul>
<li><del>系统设置&gt;重启关机&gt;添加一个重启计划：每天05:00时重启。</del></li>
<li>网络设置&gt;内外网设置<ul>
<li>外网接口（选择iKuai识别到的第二个网口）：填入宽带拨号信息。</li>
<li>内网接口（iKuai识别到的第一个网口，IP地址192.168.1.1）：链路桥接（选择剩余的其他全部接口）</li>
</ul>
</li>
<li>DHCP设置&gt;DHCP服务端<ul>
<li>单iKuai版：<ul>
<li>客户端地址：192.168.1.10-192.168.1.254（1-9留给专用设备的管理地址）</li>
<li>子网掩码：255.255.255.0</li>
<li>网关：192.168.1.1</li>
<li>首选DNS：223.5.5.5</li>
<li>备选DNS：114.114.114.114</li>
</ul>
</li>
<li>iKuai+OpenWrt版本：<ul>
<li>客户端地址：192.168.1.10-192.168.1.254（1-9留给专用设备的管理地址）</li>
<li>子网掩码：255.255.255.0</li>
<li>网关：192.168.1.3</li>
<li>首选DNS：192.168.1.3</li>
<li>备选DNS：192.168.1.3</li>
</ul>
</li>
</ul>
</li>
<li>DNS设置&gt;DNS设置<ul>
<li>单iKuai版：<ul>
<li>首选DNS：223.5.5.5</li>
<li>备选DNS：114.114.114.114</li>
</ul>
</li>
<li>iKuai+OpenWrt版本：<ul>
<li>首选DNS：192.168.1.3</li>
<li>备选DNS：192.168.1.3</li>
</ul>
</li>
</ul>
</li>
<li>UPnP设置&gt;UPnP设置<ul>
<li>UPnP即插即用服务：开启</li>
<li>允许内网IP映射：0.0.0.0-255.255.255.255</li>
<li>默认线路设置：任意</li>
<li>掉线检测：开启</li>
<li>检测周期：2</li>
<li>定时重启：开启</li>
<li>重启周期：全选</li>
<li>重启时间：05:00。</li>
</ul>
</li>
</ul>
<h2 id="OpenWrt设置">6.2 &nbsp&nbsp<a href="#OpenWrt设置" class="headerlink" title="OpenWrt设置"></a>OpenWrt设置</h2><h3 id="定时重启">6.2.1 &nbsp&nbsp<a href="#定时重启" class="headerlink" title="定时重启"></a><del>定时重启</del></h3><p><del>系统&gt;定时重启：启用，设置每天05:00。</del></p>
<h3 id="网络">6.2.2 &nbsp&nbsp<a href="#网络" class="headerlink" title="网络"></a>网络</h3><h4 id="接口-LAN">6.2.2.1 &nbsp&nbsp<a href="#接口-LAN" class="headerlink" title="接口&gt;LAN"></a>接口&gt;LAN</h4><ul>
<li>IPv4地址：192.168.1.3。管理OpenWrt的地址。</li>
<li>和iKuai一致保证同一个网段。</li>
<li>IPv4网关：指向iKuai的网关。保证OpenWrt的上网数据传输到iKuai再传输到外网。</li>
<li>使用自定义的DNS服务器：223.5.5.5（初始先设置阿里云DNS保证设置过程的上网）。后面等设置好SmartDNS之后改由OpenWrt代理，即输入192.168.1.3。</li>
<li>关闭DHCP服务，统一由iKuai分配。</li>
<li>禁用掉IPv6服务。</li>
<li>物理设置：桥接接口。（因为选用的也是）</li>
<li>lan高级设置：不勾选IPv6，勾选【开启开机自动运行】和【强制链路】。</li>
</ul>
<h4 id="Turbo-ACC-加速">6.2.2.2 &nbsp&nbsp<a href="#Turbo-ACC-加速" class="headerlink" title="Turbo ACC 加速"></a>Turbo ACC 加速</h4><p>只开启前三个即可，DNS缓存后面由SmartDNS来管理。</p>
<h4 id="防火墙设置">6.2.2.3 &nbsp&nbsp<a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h4><ul>
<li>SYN-flood 防御：关闭（此项开启关闭都行）</li>
<li>丢弃无效数据包：启用（此项开启关闭都行）</li>
<li>启用FullCone-NAT：高性能模式</li>
<li>入站数据、出站数据、转发都设置为接受。</li>
<li>lan口开启：IP 动态伪装（只保留lan口的规格，其他接口全部删除）</li>
<li>防火墙自定义规则（一般默认就有前四条规则，没有需加上）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p udp —dport 53 -j REDIRECT —to-ports 53</span><br><span class="line">iptables -t nat -A PREROUTING -p tcp —dport 53 -j REDIRECT —to-ports 53</span><br><span class="line">[ -n “$(command -v ip6tables)” ] &amp;&amp; ip6tables -t nat -A PREROUTING -p udp —dport 53 -j REDIRECT —to-ports 53</span><br><span class="line">[ -n “$(command -v ip6tables)” ] &amp;&amp; ip6tables -t nat -A PREROUTING -p tcp —dport 53 -j REDIRECT —to-ports 53</span><br><span class="line">iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure>

<h3 id="SmartDNS">6.2.3 &nbsp&nbsp<a href="#SmartDNS" class="headerlink" title="SmartDNS"></a>SmartDNS</h3><div class="note info no-icon"><p>Bleach OpenWrt固件自带SmartDNS，eSir GDQ高大全固件需自行手动安装。</p>
</div>

<ul>
<li>基本设置<ul>
<li>启用</li>
<li>本地端口6053</li>
</ul>
</li>
<li>高级设置<ul>
<li>开启TCP服务器</li>
<li>勾选域名预加载</li>
<li>勾选缓存过期服务</li>
<li>缓存大小设为：1000000</li>
<li>域名TTL最大值设为：3600</li>
</ul>
</li>
<li>第二DNS服务器<ul>
<li>启用</li>
<li>本地端口5335</li>
<li>TCP服务器</li>
<li>服务器组：oversea</li>
<li>跳过测速</li>
<li>跳过address规则</li>
<li>跳过address SOA(#)规则</li>
<li>跳过双栈优选</li>
<li>跳过cache</li>
<li>停用IPV6地址解析</li>
</ul>
</li>
<li>上游服务器（添加DNS的设置里面可以设置服务器组）<ul>
<li>服务器组名称：china（10条左右，包含iKuai路由宽带拨号返回的两个宽带供应商提供的DNS）<ol>
<li>iKuai路由宽带拨号返回的宽带供应商提供的DNS1，udp协议</li>
<li>iKuai路由宽带拨号返回的宽带供应商提供的DNS2，udp协议</li>
<li>114dns，114.114.114.114，udp协议</li>
<li>114dns，114.114.115.115，udp协议</li>
<li>opener dns，42.120.21.30，udp协议</li>
<li>阿里dns，223.5.5.5，udp协议</li>
<li>阿里dns，223.6.6.6，udp协议</li>
<li>腾讯dns，119.29.29.29，udp协议</li>
<li>百度dns，180.76.76.76，udp协议</li>
<li>华为dns，122.112.208.1，udp协议</li>
</ol>
</li>
<li>服务器组名称：oversea（10条左右）<ol>
<li>google dns，8.8.8.8，udp协议</li>
<li>google dns，8.8.4.4，tls协议</li>
<li>CloudFlare，1.1.1.1，udp协议</li>
<li>IBM Quad9，9.9.9.9，udp协议</li>
<li>Norton ConnectSafe，199.85.126.10，udp协议</li>
<li>Norton ConnectSafe，199.85.127.10，udp协议</li>
<li>OpenDNS，208.67.222.222，tls协议</li>
<li>OpenDNS，208.67.220.220，udp协议</li>
<li>V2EX DNS，199.91.73.222，tls协议</li>
<li>V2EX DNS，178.79.131.110，tls协议</li>
</ol>
</li>
</ul>
</li>
<li>域名规则<ul>
<li>服务器组：china</li>
<li>域名分流设置：跳过测试</li>
</ul>
</li>
<li>自定义设置（只设置两条，其他全部注释掉）</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bind:6053 -group china</span><br><span class="line">bind:5335 -group oversea</span><br></pre></td></tr></table></figure>
<ul>
<li>保存&amp;应用</li>
</ul>
<h3 id="AdGuard-Home">6.2.4 &nbsp&nbsp<a href="#AdGuard-Home" class="headerlink" title="AdGuard Home"></a>AdGuard Home</h3><h4 id="手动更新内核">6.2.4.1 &nbsp&nbsp<a href="#手动更新内核" class="headerlink" title="手动更新内核"></a>手动更新内核</h4><ol>
<li>下载最新的AdGuardHome内核（AdGuardHome_linux_amd64.tar.gz）：<a href="https://github.com/AdguardTeam/AdGuardHome/releases">点击跳转</a></li>
<li>解压获取「AdGuardHome」文件。</li>
<li>使用WinSCP登录openwrt虚拟机，进入到路径<code>/usr/bin/AdGuardHome/</code>，上传「AdGuardHome」文件。右击属性，分配权限0755（rwxr-xr-x）。</li>
</ol>
<div class="note info no-icon"><p>能科学上网时，点击检查更新，直接更新核心即可。</p>
</div>

<h4 id="设置AdGuard-Home">6.2.4.2 &nbsp&nbsp<a href="#设置AdGuard-Home" class="headerlink" title="设置AdGuard Home"></a>设置AdGuard Home</h4><ul>
<li>启用</li>
<li>AdGuardHome重定向模式：作为dnsmasq的上游服务器</li>
<li>详细日志</li>
<li>开机后网络准备好时重启</li>
<li>在关机时备份工作目录文件（所有的选项）</li>
<li>打开192.168.1.3:3000地址并配置</li>
<li>网页管理界面&gt;监听接口&gt;所有接口，端口号设置为默认的3000</li>
<li>DNS 服务器&gt;监听接口&gt;所有接口，端口号设置为5351</li>
<li>网页管理界面登录密码</li>
<li>设置&gt;常规设置&gt;使用过滤器和Hosts文件以拦截指定域名（其他选项全部关闭）</li>
<li>设置&gt;DNS设置<ul>
<li>上游 DNS 服务器<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6053</span><br><span class="line">127.0.0.1:5335</span><br></pre></td></tr></table></figure>
<ul>
<li>并行请求</li>
<li>Bootstrap DNS：<code>127.0.0.1:6053</code></li>
<li>应用</li>
</ul>
</li>
<li>DNS服务配置<ul>
<li>速度限制：0</li>
<li>DNS 缓存配置：都空着（采用上游DNS服务器，让SmartDNS来管理）</li>
</ul>
</li>
</ul>
</li>
<li>设置&gt;过滤器&gt;DNS黑名单设置（将阻止匹配 DNS 拦截清单的域名）：综合性的规则列表启用几个即可。</li>
</ul>
<h3 id="DNSMASQ设置">6.2.5 &nbsp&nbsp<a href="#DNSMASQ设置" class="headerlink" title="DNSMASQ设置"></a>DNSMASQ设置</h3><p>打开网络&gt;DHCP&#x2F;DNS。主要是解除DNSMASQ的DNS功能，只保留转发功能，让DNSMASQ作为AdGuard Home的下级服务生效。</p>
<ul>
<li>DNS转发：<code>127.0.0.1#5351</code>。如果未自动设置成这个，手动强制改成这个。</li>
<li>HOSTS 和解析文件：忽略掉解析文件，不用DNSMASQ的解析。</li>
<li>高级设置<ul>
<li>DNS服务器端口：53</li>
<li>DNS查询缓存的大小：0</li>
<li>最大并发查询数：1500</li>
</ul>
</li>
<li>保存&amp;应用</li>
</ul>
<h3 id="OpenClash">6.2.6 &nbsp&nbsp<a href="#OpenClash" class="headerlink" title="OpenClash"></a>OpenClash</h3><div class="note danger no-icon"><p>实测，Meta内核因DNS转发问题，导致无法正常上网。例如GOOGLE可能会出现证书异常的问题，YOUTUBE点击视频后会存在一直转圈圈的情况，无法加载视频。现阶段稳定工作的模式为：Fake-IP的普通TUN模式，模型模式可调TUN或者混合（TUN模式需要有TUN内核支持）。代理模式使用规则上网即可。</p>
</div>

<div class="note info no-icon"><p><a href="https://github.com/vernesong/OpenClash/releases/tag/v0.46.014-beta">v0.46.014-beta</a>是最后一版支持TUN内核的版本，往后一版的<a href="https://github.com/vernesong/OpenClash/releases/tag/v0.46.031-beta">v0.46.031-beta</a>版本就开始移除Dev和TUN内核的支持，如果手动操作更新OpenClash版本，会自动移除Dev和TUN内核文件。即使手动通过WinSCP上传Dev和TUN内核文件，软件内也是无法识别到的。</p>
</div>

<h4 id="更新客户端">6.2.6.1 &nbsp&nbsp<a href="#更新客户端" class="headerlink" title="更新客户端"></a>更新客户端</h4><ol>
<li>下载客户端安装包：<a href="https://github.com/vernesong/OpenClash/releases">点击跳转</a></li>
<li>使用WinSCP登录openwrt虚拟机，进入到路径家目录home，上传安装包，运行安装<code>opkg install ./luci-app-openclash_0.46.014-beta_all.ipk</code>。如果报错，尝试<code>opkg update</code>。</li>
</ol>
<h4 id="手动更新内核-1">6.2.6.2 &nbsp&nbsp<a href="#手动更新内核-1" class="headerlink" title="手动更新内核"></a>手动更新内核</h4><p>内核下载地址：</p>
<ul>
<li>老的Release页面<ul>
<li><a href="https://github.com/vernesong/OpenClash/releases/tag/Clash">Dev 内核</a></li>
<li><a href="https://github.com/vernesong/OpenClash/releases/tag/TUN-Premium">Tun 内核</a></li>
<li><a href="https://github.com/vernesong/OpenClash/releases/tag/TUN">Tun 游戏内核</a></li>
</ul>
</li>
<li>当前发布的最新内核<ul>
<li><a href="https://github.com/vernesong/OpenClash/tree/core/master/dev">Dev 内核</a></li>
<li><a href="https://github.com/vernesong/OpenClash/tree/core/master/premium">Tun 内核</a></li>
<li><a href="https://github.com/vernesong/OpenClash/tree/core/master/meta">Meta 内核</a></li>
</ul>
</li>
</ul>
<div class="note danger no-icon"><p>新的内核只支持fake-ip，需要上传Meta内核。</p>
</div>

<div class="note info no-icon"><p>能科学上网时，点击检查并更新，直接更新核心即可。</p>
</div>

<p>更新步骤：</p>
<ol>
<li>下载内核。</li>
<li>使用WinSCP登录openwrt虚拟机，进入到路径<code>/etc/openclash/core</code>，上传内核文件。右击属性，分配权限0755（rwxr-xr-x）。</li>
</ol>
<p>内核对应的名称（压缩包解压出来的名称不一定对应，需手动修改）：</p>
<ul>
<li>Dev 内核: clash</li>
<li>Tun 内核: clash_tun</li>
<li>Meta 内核: clash_meta</li>
</ul>
<h4 id="OpenClash设置">6.2.6.3 &nbsp&nbsp<a href="#OpenClash设置" class="headerlink" title="OpenClash设置"></a>OpenClash设置</h4><ul>
<li>运行状态：启动OPENCLASH</li>
<li>插件设置<ul>
<li>模式设置&gt;运行模式：Fake-IP（TUN-混合）模式【UDP-TUN，TCP-转发】</li>
<li>DNS设置&gt;本地DNS劫持：停用</li>
<li>GEO数据库订阅：设置自动更新</li>
<li>大陆白名单订阅：设置自动更新</li>
</ul>
</li>
<li>配置订阅：设置自动更新，更新间隔60分钟</li>
</ul>
<h3 id="扩容Overlay软件安装空间">6.2.7 &nbsp&nbsp<a href="#扩容Overlay软件安装空间" class="headerlink" title="扩容Overlay软件安装空间"></a>扩容Overlay软件安装空间</h3><ol>
<li>关闭openwrt虚拟机。</li>
<li>硬件&gt;硬盘&gt;更多，调整磁盘大小（只能增加大小，按需增加所需硬盘的空间大小）。</li>
<li>打开openwrt虚拟机。</li>
<li>系统&gt;磁盘管理L：将新增磁盘大小新建一个分区并格式化为ext4，保存并应用</li>
<li>挂载刚才新增的分区，举例sda3：<code>mount /dev/sda3 /mnt/sda3</code>，保存并应用。</li>
<li>拷贝源overlay目录的文件到新分区内：<code>cp -r /overlay/* /mnt/sda3</code>。</li>
<li>系统&gt;挂载点：添加sda3挂载点为「作为外部overlay使用（&#x2F;overlay）」，保存并应用。</li>
<li>重启openwrt虚拟机，检查扩容情况。</li>
<li>根据情况可能需手动移除之前挂载的<code>/mnt/sda3</code>状态。</li>
</ol>
<h1 id="路由方案二：iKuai主路由-OpenWrt旁路由分流的网络拓扑">7 &nbsp&nbsp<a href="#路由方案二：iKuai主路由-OpenWrt旁路由分流的网络拓扑" class="headerlink" title="路由方案二：iKuai主路由+OpenWrt旁路由分流的网络拓扑"></a>路由方案二：iKuai主路由+OpenWrt旁路由分流的网络拓扑</h1><h2 id="iKuai主路由设置">7.1 &nbsp&nbsp<a href="#iKuai主路由设置" class="headerlink" title="iKuai主路由设置"></a>iKuai主路由设置</h2><p><a href="https://github.com/17mon/china_ip_list">大陆地区IP列表</a></p>
<h2 id="OpenWrt旁路有设置">7.2 &nbsp&nbsp<a href="#OpenWrt旁路有设置" class="headerlink" title="OpenWrt旁路有设置"></a>OpenWrt旁路有设置</h2><p>TODO</p>
<h2 id="构建本地机场订阅转换服务">7.3 &nbsp&nbsp<a href="#构建本地机场订阅转换服务" class="headerlink" title="构建本地机场订阅转换服务"></a>构建本地机场订阅转换服务</h2><p>相关核心项目：</p>
<ul>
<li>后端项目：<a href="https://github.com/tindy2013/subconverter">tindy2013&#x2F;subconverter</a></li>
<li>前端项目：<a href="https://github.com/CareyWang/sub-web">CareyWang&#x2F;sub-web</a></li>
<li>短链服务：<a href="https://github.com/CareyWang/MyUrls">CareyWang&#x2F;MyUrls</a></li>
</ul>
<h3 id="PVE新建一个debian虚拟机">7.3.1 &nbsp&nbsp<a href="#PVE新建一个debian虚拟机" class="headerlink" title="PVE新建一个debian虚拟机"></a>PVE新建一个debian虚拟机</h3><p>使用LXC模板（debian-12-standard），完成创建之后，并登录该debian虚拟机（可设置SSH连接）</p>
<ul>
<li>容器名称：sub-converter</li>
<li>内存：2GB（别分配1.5GB以下的内存，否则不够内存完成构建docker镜像）（构建完成docker镜像后，内存可以调整为512MB）</li>
<li>Swap：0B</li>
<li>核心：4核心（构建完成docker镜像后，核心可以调整为1）</li>
<li>根磁盘：5GB（别分配2GB以下的磁盘，否则不够空间完成构建docker镜像）</li>
<li>网络：选择已分配给主路由LAN口的网桥（我的情况是：vmbr4，IP静态地址：10.10.10.6&#x2F;24，网关：10.10.10.1）</li>
</ul>
<h3 id="设置优化debian虚拟机">7.3.2 &nbsp&nbsp<a href="#设置优化debian虚拟机" class="headerlink" title="设置优化debian虚拟机"></a>设置优化debian虚拟机</h3><ol>
<li>为debian修改apt镜像源：<a href="#%E6%9B%BF%E6%8D%A2PVE-8-x%E7%9A%84Debian%E7%B3%BB%E7%BB%9F%E8%BD%AF%E4%BB%B6%E6%BA%90%E5%92%8CPVE%E8%BD%AF%E4%BB%B6%E6%BA%90%EF%BC%88%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%EF%BC%89">替换PVE-8-x的Debian系统软件源和PVE软件源（国内镜像）</a></li>
<li>为debian安装docker：<a href="/code/docker/#%E4%BD%BF%E7%94%A8apt%E4%BB%93%E5%BA%93%E4%B8%BADebian%E5%AE%89%E8%A3%85docker">使用apt仓库为Debian安装docker</a></li>
<li>为debian系统设置时区：<a href="#%E5%88%9B%E5%BB%BA%E7%9A%84LXC%E5%AE%B9%E5%99%A8debian-12%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%97%B6%E9%97%B4%E4%B8%8D%E4%B8%80%E8%87%B4">创建的LXC容器debian-12系统时间与宿主机时间不一致</a></li>
<li>为debian系统设置UTF-8语言环境：<a href="#%E4%BD%BF%E7%94%A8debian-12%E7%9A%84CT%E6%A8%A1%E6%9D%BF%E5%88%9B%E5%BB%BALXC%E5%AE%B9%E5%99%A8SSH%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81">使用debian-12的CT模板创建LXC容器SSH终端中文乱码</a></li>
</ol>
<h3 id="手动重新构建前端docker镜像">7.3.3 &nbsp&nbsp<a href="#手动重新构建前端docker镜像" class="headerlink" title="手动重新构建前端docker镜像"></a>手动重新构建前端docker镜像</h3><ol>
<li>克隆前端项目</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/CareyWang/sub-web.git</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>进入对应仓库路径<code>cd sub-web</code></li>
<li>修改<code>.env</code>文件内容：<code>nano .env</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 找到以下三行内容，并修改自己的域名或者IP</span></span><br><span class="line"><span class="comment"># VUE_APP_SUBCONVERTER_DEFAULT_BACKEND = &quot;https://api.wcc.best&quot;</span></span><br><span class="line"><span class="comment"># VUE_APP_MYURLS_API = &quot;https://suo.yt/short&quot;</span></span><br><span class="line"><span class="comment"># VUE_APP_CONFIG_UPLOAD_API = &quot;https://oss.wcc.best/upload&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是笔者修改的配置</span></span><br><span class="line">VUE_APP_SUBCONVERTER_DEFAULT_BACKEND = <span class="string">&quot;http://10.10.10.6:25500&quot;</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>修改<code>Subconverter.vue</code>文件内容：<code>nano src/views/Subconverter.vue</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 搜索127.0.0.1内容，并修改为10.10.10.6（该IP是LXC容器debian使用的IP）</span></span><br><span class="line"><span class="comment"># placeholder=&quot;动动小手，（建议）自行搭建后端服务。例：http://127.0.0.1:25500/sub?&quot;&gt;</span></span><br><span class="line"><span class="comment"># backendOptions: [&#123; value: &quot;http://127.0.0.1:25500/sub?&quot; &#125;],</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是笔者修改的配置</span></span><br><span class="line">placeholder=<span class="string">&quot;动动小手，（建议）自行搭建后端服务。例：http://10.10.10.6:25500/sub?&quot;</span>&gt;</span><br><span class="line">backendOptions: [&#123; value: <span class="string">&quot;http://10.10.10.6:25500/sub?&quot;</span> &#125;],</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索remoteConfig: [</span></span><br><span class="line"><span class="comment"># 在下一行添加ACL4SSR的规则配置。</span></span><br><span class="line"><span class="comment"># 效果如下：</span></span><br><span class="line">remoteConfig: [</span><br><span class="line">  &#123;</span><br><span class="line">      label: <span class="string">&quot;ACL4SSR&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>ACL4SSR规则配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    label: <span class="string">&quot;ACL4SSR&quot;</span>,</span><br><span class="line">    options: [</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online 默认版 分组比较全 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_AdblockPlus 更多去广告 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_AdblockPlus.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_NoAuto 无自动测速 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoAuto.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_NoReject 无广告拦截规则 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoReject.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Mini 精简版 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Mini_AdblockPlus.ini 精简版 更多去广告 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_AdblockPlus.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Mini_NoAuto.ini 精简版 不带自动测速 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_NoAuto.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Mini_Fallback.ini 精简版 带故障转移 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_Fallback.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Mini_MultiMode.ini 精简版 自动测速、故障转移、负载均衡 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_MultiMode.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Full 全分组 重度用户使用 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Full_NoAuto.ini 全分组 无自动测速 重度用户使用 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_NoAuto.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Full_AdblockPlus 全分组 重度用户使用 更多去广告 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_AdblockPlus.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Online_Full_Netflix 全分组 重度用户使用 奈飞全量 (与Github同步)&quot;</span>,</span><br><span class="line">        value:</span><br><span class="line">          <span class="string">&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_Netflix.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR 本地 默认版 分组比较全&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Mini 本地 精简版&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_Mini.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Mini_NoAuto.ini 本地 精简版+无自动测速&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_Mini_NoAuto.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_Mini_Fallback.ini 本地 精简版+fallback&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_Mini_Fallback.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_BackCN 本地 回国&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_BackCN.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_NoApple 本地 无苹果分流&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_NoApple.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_NoAuto 本地 无自动测速 &quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_NoAuto.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_NoAuto_NoApple 本地 无自动测速&amp;无苹果分流&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_NoAuto_NoApple.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_NoMicrosoft 本地 无微软分流&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_NoMicrosoft.ini&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        label: <span class="string">&quot;ACL4SSR_WithGFW 本地 GFW列表&quot;</span>,</span><br><span class="line">        value: <span class="string">&quot;config/ACL4SSR_WithGFW.ini&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>重新构建docker本地镜像</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build -t subweb-local:latest .</span><br></pre></td></tr></table></figure>

<h3 id="在root账户用户路径下新建docker-compose-yml：nano-docker-compose-yml">7.3.4 &nbsp&nbsp<a href="#在root账户用户路径下新建docker-compose-yml：nano-docker-compose-yml" class="headerlink" title="在root账户用户路径下新建docker-compose.yml：nano docker-compose.yml"></a>在root账户用户路径下新建<code>docker-compose.yml</code>：<code>nano docker-compose.yml</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">  subc:</span><br><span class="line">    hostname: subc</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: subc</span><br><span class="line">    image: tindy2013/subconverter:latest</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;25500:25500&quot;</span></span><br><span class="line">  subweb:</span><br><span class="line">    hostname: subweb</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: subweb</span><br><span class="line">    image: subweb-local:latest</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;80:80&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="运行docker-compose">7.3.5 &nbsp&nbsp<a href="#运行docker-compose" class="headerlink" title="运行docker compose"></a>运行docker compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure>

<h3 id="验证服务是否运行成功">7.3.6 &nbsp&nbsp<a href="#验证服务是否运行成功" class="headerlink" title="验证服务是否运行成功"></a>验证服务是否运行成功</h3><p>访问前端页面：<a href="http://10.10.10.6/">http://10.10.10.6</a></p>
<p>通过tcping验证各个端口是否都正常：</p>
<ul>
<li><code>tcping 10.10.10.6 80</code></li>
<li><code>tcping 10.10.10.6 25500</code></li>
</ul>
<h1 id="PVE总结">8 &nbsp&nbsp<a href="#PVE总结" class="headerlink" title="PVE总结"></a>PVE总结</h1><h2 id="PVE-Proxmox-VE-虚拟机各硬件模型总结">8.1 &nbsp&nbsp<a href="#PVE-Proxmox-VE-虚拟机各硬件模型总结" class="headerlink" title="PVE(Proxmox VE)虚拟机各硬件模型总结"></a>PVE(Proxmox VE)虚拟机各硬件模型总结</h2><p>TODO</p>
<h2 id="PVE虚拟机磁盘容量调整">8.2 &nbsp&nbsp<a href="#PVE虚拟机磁盘容量调整" class="headerlink" title="PVE虚拟机磁盘容量调整"></a>PVE虚拟机磁盘容量调整</h2><ul>
<li>LXC容器的磁盘，在网页控制台设置增加大小，容器会自动增加对应的磁盘分区大小，无需手动在虚拟机系统格式化和挂载。</li>
</ul>
<h2 id="PVETOOLS脚本程序推荐">8.3 &nbsp&nbsp<a href="#PVETOOLS脚本程序推荐" class="headerlink" title="PVETOOLS脚本程序推荐"></a>PVETOOLS脚本程序推荐</h2><blockquote>
<p>新硬件主机不太推荐安装该脚本，CPU省电相关设置不一定能正常设置成功，恢复时也容易出问题。</p>
</blockquote>
<ul>
<li>PVETOOLS仓库地址：<a href="https://github.com/ivanhao/pvetools">点击跳转</a></li>
<li>安装步骤（PVE SHELL执行命令）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=en_US.UTF-8</span><br><span class="line">apt update &amp;&amp; apt -y install git &amp;&amp; git <span class="built_in">clone</span> https://github.com/ivanhao/pvetools.git</span><br><span class="line"><span class="built_in">cd</span> pvetools</span><br><span class="line">./pvetools.sh</span><br></pre></td></tr></table></figure>
<ul>
<li>执行脚本程序后，可以一键执行「安装配置CPU省电」「配置PVE的web界面显示传感器温度」「去除订阅提示」等功能。</li>
</ul>
<h1 id="PBS-Proxmox-Backup-Server-总结">9 &nbsp&nbsp<a href="#PBS-Proxmox-Backup-Server-总结" class="headerlink" title="PBS(Proxmox Backup Server)总结"></a>PBS(Proxmox Backup Server)总结</h1><h2 id="PBS备份计划">9.1 &nbsp&nbsp<a href="#PBS备份计划" class="headerlink" title="PBS备份计划"></a>PBS备份计划</h2><p>重要服务器虚拟机，可以将备份时间设置为半小时。</p>
<h2 id="PBS服务器备份精简计划">9.2 &nbsp&nbsp<a href="#PBS服务器备份精简计划" class="headerlink" title="PBS服务器备份精简计划"></a>PBS服务器备份精简计划</h2><p>PBS备份精简计划设置效果模拟器：<a href="https://pbs.proxmox.com/docs/prune-simulator/index.html">https://pbs.proxmox.com/docs/prune-simulator/index.html</a></p>
<p>保留设置：</p>
<ul>
<li>keep-last： 3 - 保留最近 3 次的备份。</li>
<li>keep-hourly: not set - 若设置了每日备份，这个选项一般无需设置</li>
<li>keep-daily： 13 - 与 keep-last 一起使用，确保至少有两周的每日备份</li>
<li>keep-weekly： 8 - 确保至少有两个月的每周备份</li>
<li>keep-monthly： 11 - 与之前的保留设置一起，这确保至少有一年的每月备份</li>
<li>keep-yearly： 9 - 确保至少 10 年的覆盖</li>
</ul>
<h2 id="PBS使用遇到的坑">9.3 &nbsp&nbsp<a href="#PBS使用遇到的坑" class="headerlink" title="PBS使用遇到的坑"></a>PBS使用遇到的坑</h2><h3 id="ERROR-Backup-of-VM-102-failed-lvcreate-snapshot-pve-snap-vm-102-disk-0-vzdump-error">9.3.1 &nbsp&nbsp<a href="#ERROR-Backup-of-VM-102-failed-lvcreate-snapshot-pve-snap-vm-102-disk-0-vzdump-error" class="headerlink" title="ERROR: Backup of VM 102 failed - lvcreate snapshot &#39;pve&#x2F;snap_vm-102-disk-0_vzdump&#39; error"></a>ERROR: Backup of VM 102 failed - lvcreate snapshot &#39;pve&#x2F;snap_vm-102-disk-0_vzdump&#39; error</h3><p>问题现象：PBS备份服务器或者PVE备份LXC虚拟机容器时出现失败，具体报错信息为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INFO: Starting Backup of VM 102 (lxc)</span><br><span class="line">INFO: Backup started at 2025-04-25 00:30:36</span><br><span class="line">INFO: status = running</span><br><span class="line">INFO: CT Name: <span class="built_in">test</span></span><br><span class="line">INFO: including mount point rootfs (<span class="string">&#x27;/&#x27;</span>) <span class="keyword">in</span> backup</span><br><span class="line">INFO: backup mode: snapshot</span><br><span class="line">INFO: ionice priority: 7</span><br><span class="line">INFO: create storage snapshot <span class="string">&#x27;vzdump&#x27;</span></span><br><span class="line">snapshot create failed: starting cleanup</span><br><span class="line">no lock found trying to remove <span class="string">&#x27;backup&#x27;</span>  lock</span><br><span class="line">ERROR: Backup of VM 102 failed - lvcreate snapshot <span class="string">&#x27;pve/snap_vm-102-disk-0_vzdump&#x27;</span> error:   Logical Volume <span class="string">&quot;snap_vm-102-disk-0_vzdump&quot;</span> already exists <span class="keyword">in</span> volume group <span class="string">&quot;pve&quot;</span></span><br><span class="line">INFO: Failed at 2025-04-25 00:30:36</span><br><span class="line">INFO: Backup job finished with errors</span><br><span class="line">INFO: notified via target `mail-to-root`</span><br><span class="line">TASK ERROR: job errors</span><br></pre></td></tr></table></figure>

<p>问题原因：有残留的同名逻辑卷<code>/dev/pve/snap_vm-102-disk-0_vzdump</code>，一般是上次备份成功之后的清理操作失败导致残留下来的逻辑卷，例如卸载操作失败<code>command &#39;umount -l -d /mnt/vzsnapo/ failed: got signal 11</code>。</p>
<p>解决方法：</p>
<ol>
<li>查看当前PVE系统中存在的逻辑卷：<code>lvdisplay</code>，可以查看到<code>/dev/pve/snap_vm-102-disk-0_vzdump</code>逻辑卷属性<code>LV Write Access        read only</code>是只读。其他查看命令<code>lvs</code>，<code>lvscan</code>。</li>
<li>清理残留的逻辑卷：<ul>
<li>方法一：<code>lvremove /dev/pve/snap_vm-102-disk-0_vzdump</code></li>
<li>方法二：PVE后台网页控制面板中，对应的虚拟机选项-&gt;快照，可以选中对应的vzdump快照删除。</li>
</ul>
</li>
</ol>
<p>若遇上报错：<code>lvremove /dev/pve/snap_vm-102-disk-0_vzdump&#39; error:   Logical volume pve/snap_vm-102-disk-0_vzdump contains a filesystem in use.</code>，请尝试</p>
<ul>
<li>方案1：重启PVE宿主机</li>
<li>方案2：添加<code>-f</code>参数强制删除，<code>lvremove -f /dev/pve/snap_vm-102-disk-0_vzdump</code></li>
</ul>
<h1 id="iKuai总结">10 &nbsp&nbsp<a href="#iKuai总结" class="headerlink" title="iKuai总结"></a>iKuai总结</h1><h2 id="iKuai爱快内网测试">10.1 &nbsp&nbsp<a href="#iKuai爱快内网测试" class="headerlink" title="iKuai爱快内网测试"></a>iKuai爱快内网测试</h2><p>iKuai爱快内置支持iperf3内网测试工具，但服务端默认并未开启。</p>
<p>开启服务端设置和测试的步骤</p>
<ol>
<li>在iKuai爱快中设置：应用工具-&gt;吞吐测试-&gt;服务端功能开关（勾选启用）</li>
<li>下载<a href="https://iperf.fr/iperf-download.php">iperf3</a>到客户端机器。</li>
<li>运行测试命令：<code>iperf3 -c 192.168.1.1</code></li>
</ol>
<p>客户端机器作为服务端的设置步骤：</p>
<ol>
<li>下载<a href="https://iperf.fr/iperf-download.php">iperf3</a>到客户端机器。</li>
<li>运行测试命令：<code>iperf3 -s -p 5201</code></li>
<li>在iKuai爱快的客户端工具连接客户端IP测试。</li>
</ol>
<h2 id="iKuai报错提示：写入数据失败-请检查你的配置">10.2 &nbsp&nbsp<a href="#iKuai报错提示：写入数据失败-请检查你的配置" class="headerlink" title="iKuai报错提示：写入数据失败,请检查你的配置!"></a>iKuai报错提示：写入数据失败,请检查你的配置!</h2><p>问题：调整iKuai设置，无法保存设置，并报错提示：写入数据失败，请检查你的配置！具体变现为修改配置后，刷新页面后发现设置跟以前一样，并且无法记录流量数据等日志。</p>
<p>原因：磁盘所有分区变成只读模式，没有读写权限，数据无法正常保存。</p>
<p>排查确认方法：iKuai管理后台-&gt;应用工具-&gt;健康检测。</p>
<p>解决方法：强制断电重启机器。若仍然无法识别到硬盘或者反复出现这种只读权限问题，很可能硬盘出故障，请尽快备份设备文件并更换新硬盘。</p>
<h2 id="局域网内双iKuai主路由的DHCP的设置">10.3 &nbsp&nbsp<a href="#局域网内双iKuai主路由的DHCP的设置" class="headerlink" title="局域网内双iKuai主路由的DHCP的设置"></a>局域网内双iKuai主路由的DHCP的设置</h2><p>局域网内若有两个iKuai主路由同时提供DCHP服务，并且两个主路由物理上联通的话（两接口分别归属于各自的LAN口），可以在网络设置-&gt;DHCP设置-&gt;DHCP服务端-&gt;关联接口-&gt;取消勾选两个路由互联的接口。避免两主路由互相跨网段提供DHCP服务，否则会有潜在的广播风暴问题。（该问题在iKuai路由体检功能也能发现）</p>
<h2 id="局域网内双iKuai主路由跨网段互相访问（静态路由）">10.4 &nbsp&nbsp<a href="#局域网内双iKuai主路由跨网段互相访问（静态路由）" class="headerlink" title="局域网内双iKuai主路由跨网段互相访问（静态路由）"></a>局域网内双iKuai主路由跨网段互相访问（静态路由）</h2><p>背景假设：一个iKuai地址为<code>192.168.1.1</code>，另一个iKuai地址为<code>192.168.2.1</code></p>
<ol>
<li>为网段1的iKuai新增扩展IP：网络设置-&gt;内外网设置-&gt;LAN1-&gt;高级设置-&gt;扩展IP-&gt;新增一个不归属于两个主路由网段的IP，例如<code>192.168.5.1</code>。<ul>
<li>同理，另外一个iKuai新增IP为<code>192.168.5.2</code>。</li>
</ul>
</li>
<li>为网段1的iKuai设置静态路由表：网络设置-&gt;静态路由-&gt;添加-&gt;目的地址：<code>192.168.2.0</code>，子网掩码<code>255.255.255.0 (24)</code>，网关：<code>192.168.5.1</code>。<ul>
<li>同理，另外一个iKuai置静态路由表：目的地址：<code>192.168.1.0</code>，子网掩码<code>255.255.255.0 (24)</code>，网关：<code>192.168.5.2</code>。</li>
<li>iKuai静态路由的网关就是指下一跳。</li>
</ul>
</li>
</ol>
<h1 id="OpenWrt总结">11 &nbsp&nbsp<a href="#OpenWrt总结" class="headerlink" title="OpenWrt总结"></a>OpenWrt总结</h1><h2 id="OpenClash报错all-DNS-requests-failed或者dns-resolve-failed">11.1 &nbsp&nbsp<a href="#OpenClash报错all-DNS-requests-failed或者dns-resolve-failed" class="headerlink" title="OpenClash报错all DNS requests failed或者dns resolve failed"></a>OpenClash报错<code>all DNS requests failed</code>或者<code>dns resolve failed</code></h2><p>问题：通过机场订阅配置后，发现部份被分流到海外的IP和域名无法正常访问。查看OpenClash后台的内核日志，是因为有大量的<code>all DNS requests failed</code>或者<code>dns resolve failed</code>错误提示。并且该现象只会出现在个别机场订阅上，有些机场订阅是正常工作。</p>
<p>原因：部份机场比较挑剔OpenClash的DNS设置。</p>
<p>解决方法：OpenClash-&gt;覆写设置-&gt;DNS设置<br>FallBack和Default-NameServer的DNS设置比较重要，对于笔者而言，<code>8.8.4.4, UDP</code>是能有效解决上述问题。</p>
<ul>
<li>【勾选】自定义上游DNS服务器</li>
<li>【勾选】追加上游DNS</li>
<li>【勾选】追加默认DNS</li>
<li>【勾选】Fallback-Filter</li>
<li>设置自定义上游 DNS 服务器（在上方设置中启用本功能后生效）<ul>
<li>NameServer<ul>
<li>223.5.5.5&#x2F;dns-query, HTTPS</li>
<li>223.6.6.6&#x2F;dns-query, HTTPS</li>
<li>8.8.8.8, UDP</li>
</ul>
</li>
<li>FallBack<ul>
<li>8.8.4.4, UDP</li>
</ul>
</li>
<li>Default-NameServer<ul>
<li>114.114.114.114, UDP</li>
<li>223.5.5.5, UDP</li>
<li>8.8.8.8, UDP</li>
<li>8.8.4.4, UDP</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="飞牛私有云fnOS（NAS总结）">12 &nbsp&nbsp<a href="#飞牛私有云fnOS（NAS总结）" class="headerlink" title="飞牛私有云fnOS（NAS总结）"></a>飞牛私有云fnOS（NAS总结）</h1><h2 id="下载应用例如QBittorrent在后台上传时可能会引导硬盘持续读取和CPU的异常占用。">12.1 &nbsp&nbsp<a href="#下载应用例如QBittorrent在后台上传时可能会引导硬盘持续读取和CPU的异常占用。" class="headerlink" title="下载应用例如QBittorrent在后台上传时可能会引导硬盘持续读取和CPU的异常占用。"></a>下载应用例如<code>QBittorrent</code>在后台上传时可能会引导硬盘持续读取和CPU的异常占用。</h2><p>问题原因：系统Swap cache功能引起引起硬盘持续读取和CPU的异常占用。</p>
<p>解决方法：永久禁用<code>Swap cache</code>功能。</p>
<ol>
<li>访问fnOS虚拟机控制台。</li>
<li>登录fnOS账户。</li>
<li><code>sudo vim /etc/fstab</code></li>
<li>摁<code>I</code>键进入vim编辑器编辑模式</li>
<li>找到<code>/swapfile none swap sw 0 0</code>一行内容并注释掉，即在行头加上<code>#</code>。</li>
<li>摁<code>ESC</code>键，摁<code>:</code>键然后输入<code>wq!</code>保存退出。</li>
<li><code>cat /etc/fstab</code>可以查看文件内容是否修改成功，输出内容如下：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">UUID=ea545bcc-cd3f-479f-902a-ab2b02db25 / ext4 errors=remount-ro 0 1</span><br><span class="line"><span class="comment"># /swapfile none swap sw 0 0</span></span><br><span class="line">UUID=676D-A1AF /boot/efi vfat <span class="built_in">umask</span>=0077 0 1</span><br></pre></td></tr></table></figure>

<h1 id="宽带网络总结">13 &nbsp&nbsp<a href="#宽带网络总结" class="headerlink" title="宽带网络总结"></a>宽带网络总结</h1><h2 id="会话数（连接数）">13.1 &nbsp&nbsp<a href="#会话数（连接数）" class="headerlink" title="会话数（连接数）"></a>会话数（连接数）</h2><p>会话数（连接数）在线测试工具：<a href="https://qps.itzmx.com/">https://qps.itzmx.com</a></p>
<p>连接数为应用产生的网络连接数，例如在爱快首页上看到连接数。并发连接数为 qps ，即每秒发起请求，等于在同一秒内，产生了 250 个请求。</p>
<p>会话数（连接数）的限制，一般普通线路带宽会有会话数限制，专线则没有该限制。触发限制的常见现象为：超过并发连接数上限后，此前已建立连接数的软件和网络请求可正常通信，并且期间ping一切正常，延迟没有任何抖动现象，但是新开软件则连不上网络。</p>
<h1 id="后记">14 &nbsp&nbsp<a href="#后记" class="headerlink" title="后记"></a>后记</h1><p><del>这光猫还是有断流情况，估计是过热导致掉线，后续考虑下加装小风扇。</del></p>
<p>断流降速故障已查明：虚拟网卡模型设置为<code>Intel E1000</code>导致的故障，重设为<code>VirtIO (半虚拟化)</code>即可解决。</p>
<div class="note info no-icon"><p>在这台工控机上实际使用openwrt内网测速工具发现，虚拟机网卡模型设置为<code>Intel E1000</code>或者<code>Realtek RTL8139</code>都无法正常发挥网卡的性能，<code>Intel E1000</code>大约测试性能为100Mbps~300Mbps不等，<code>Realtek RTL8139</code>模型是最为拉跨的，直接为10Mbps。使用<code>VirtIO (半虚拟化)</code>模型内网测速才能恢复到900Mbps以上的正常速度。</p>
</div>

<h1 id="All-in-One-All-in-Boom-机器硬件选型总结">15 &nbsp&nbsp<a href="#All-in-One-All-in-Boom-机器硬件选型总结" class="headerlink" title="All in One (All in Boom) 机器硬件选型总结"></a>All in One (All in Boom) 机器硬件选型总结</h1><h2 id="CPU选型对比">15.1 &nbsp&nbsp<a href="#CPU选型对比" class="headerlink" title="CPU选型对比"></a>CPU选型对比</h2><div class="note primary no-icon"><p>All in One用途大多是使用虚拟机方案实现各子系统，其中虚拟化直通硬件方案需要CPU中一个很重要的功能才能实现。对于Intel CPU来说，就是VT-d（该功能可以在Intel官方每个CPU SKU规格页面查看是否支持）；对于AMD CPU来说，就是IOMMU，也称AMD-Vi（暂未找到AMD官方资料特性说明，根据维基百科资料所言，所有 Ryzen 处理器均支持该功能）。</p>
</div>
<table>
<thead>
<tr>
<th align="center">CPU型号</th>
<th align="center">内核&#x2F;线程</th>
<th align="center">功耗&#x2F;W</th>
<th align="center">频率&#x2F;GHz</th>
<th align="center">核显最大分辨率</th>
<th align="center">最大内存规格&#x2F;GB</th>
<th align="center">VT-x</th>
<th align="center">VT-d</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/78867/intel-celeron-processor-j1900-2m-cache-up-to-2-42-ghz/specifications.html">赛扬®J1900</a></td>
<td align="center">4&#x2F;4</td>
<td align="center">10</td>
<td align="center">2~2.42</td>
<td align="center">未知</td>
<td align="center">2×8 DDR3L 1333MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">不支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/81074/intel-pentium-processor-n3530-2m-cache-up-to-2-58-ghz/specifications.html">奔腾®N3530</a></td>
<td align="center">4&#x2F;4</td>
<td align="center">4.5~7.5</td>
<td align="center">2.16~2.58</td>
<td align="center">未知</td>
<td align="center">2×8 DDR3L 1333MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">不支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/95591/intel-pentium-processor-j4205-2m-cache-up-to-2-60-ghz/specifications.html">奔腾®J4205</a></td>
<td align="center">4&#x2F;4</td>
<td align="center">10</td>
<td align="center">1.5~2.6</td>
<td align="center">未知</td>
<td align="center">2×8 LPDDR4 2400 MT&#x2F;s <br> DDR3L&#x2F;LPDDR3 1866 MT&#x2F;s;</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/197305/intel-celeron-processor-j4125-4m-cache-up-to-2-70-ghz/specifications.html">赛扬®J4125</a></td>
<td align="center">4&#x2F;4</td>
<td align="center">10</td>
<td align="center">2~2.7</td>
<td align="center">DP：4096x2160@60Hz <br> HDMI：4096x2160@30Hz <br> eDP：4096x2160@60Hz</td>
<td align="center">2×8 DDR4&#x2F;LPDDR4 2400MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/214758/intel-celeron-processor-j6412-1-5m-cache-up-to-2-60-ghz/specifications.html">赛扬®J6412</a></td>
<td align="center">4&#x2F;4</td>
<td align="center">10</td>
<td align="center">2~2.6</td>
<td align="center">DP：4096 x 2160@60Hz <br> eDP：4096 x 2160@60Hz</td>
<td align="center">4x32 LPDDR4&#x2F;x 3733MT&#x2F;s <br> 2x64 DDR4 3200MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/231803/intel-processor-n100-6m-cache-up-to-3-40-ghz/specifications.html">N100</a></td>
<td align="center">4&#x2F;4</td>
<td align="center">6</td>
<td align="center">3.4</td>
<td align="center">DP：4096 x 2160@60Hz <br> HDMI：4096 x 2160@60Hz</td>
<td align="center">16 DDR5 4800 MT&#x2F;s <br> 16 DDR4 3200 MT&#x2F;s <br> 16 LPDDR5 4800 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/226259/intel-core-i71255u-processor-12m-cache-up-to-4-70-ghz/specifications.html">酷睿™ i7-1255U</a></td>
<td align="center">10&#x2F;12</td>
<td align="center">12~55</td>
<td align="center">E核3.5 <br> P核4.7</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2304 @ 60Hz <br> eDP：4096 x 2304 @ 120Hz</td>
<td align="center">64 LDDR5 4800 MT&#x2F;s <br> 64 DDR4 3200 MT&#x2F;s <br> 64 LPDDR5 5200 MT&#x2F;s <br> 64 LPDDR4x 4267 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/134584/intel-core-i312100-processor-12m-cache-up-to-4-30-ghz/specifications.html">酷睿™ i3-12100</a></td>
<td align="center">4&#x2F;8</td>
<td align="center">60~89</td>
<td align="center">无E核 <br> P核3.3~4.3</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2160 @ 60Hz <br> eDP：5120 x 3200 @ 120Hz</td>
<td align="center">128 DDR5 4800 MT&#x2F;s <br> 128 DDR4 3200 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/223095/intel-core-i312300-processor-12m-cache-up-to-4-40-ghz/specifications.html">酷睿™ i3-12300</a></td>
<td align="center">4&#x2F;8</td>
<td align="center">60~89</td>
<td align="center">无E核 <br> P核3.5~4.4</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2160 @ 60Hz <br> eDP：5120 x 3200 @ 120Hz</td>
<td align="center">128 DDR5 4800 MT&#x2F;s <br> 128 DDR4 3200 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/134586/intel-core-i512400-processor-18m-cache-up-to-4-40-ghz/specifications.html">酷睿™ i5-12400</a></td>
<td align="center">6&#x2F;12</td>
<td align="center">65~117</td>
<td align="center">无E核 <br> P核2.5~4.4</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2160 @ 60Hz <br> eDP：5120 x 3200 @ 120Hz</td>
<td align="center">128 DDR5 4800 MT&#x2F;s <br> 128 DDR4 3200 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/230575/intel-core-i313100-processor-12m-cache-up-to-4-50-ghz/specifications.html">酷睿™ i3-13100</a></td>
<td align="center">4&#x2F;8</td>
<td align="center">60~110</td>
<td align="center">无E核 <br> P核3.4~4.5</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2160 @ 60Hz <br> eDP：5120 x 3200 @ 120Hz</td>
<td align="center">192 DDR5 4800 MT&#x2F;s <br> 192 DDR4 3200 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/236774/intel-core-i3-processor-14100-12m-cache-up-to-4-70-ghz/specifications.html">酷睿™ i3-14100</a></td>
<td align="center">4&#x2F;8</td>
<td align="center">60~110</td>
<td align="center">无E核 <br> P核3.5~4.7</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2160 @ 60Hz <br> eDP：5120 x 3200 @ 120Hz</td>
<td align="center">192 DDR5 4800 MT&#x2F;s <br> 192 DDR4 3200 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/134594/intel-core-i712700k-processor-25m-cache-up-to-5-00-ghz/specifications.html">酷睿™ i7-12700K</a></td>
<td align="center">12&#x2F;20</td>
<td align="center">125-190</td>
<td align="center">E核2.7~3.8 <br> P核3.6~4.9</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2160 @ 60Hz <br> eDP：5120 x 3200 @ 120Hz</td>
<td align="center">128 DDR5 4800 MT&#x2F;s <br> 128 DDR4 3200 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center"><a href="https://www.intel.cn/content/www/cn/zh/products/sku/226258/intel-core-i71265u-processor-12m-cache-up-to-4-80-ghz/specifications.html">酷睿™ i7-1265U</a></td>
<td align="center">10&#x2F;12</td>
<td align="center">12~55</td>
<td align="center">E核3.6 <br> P核4.8</td>
<td align="center">DP：7680 x 4320 @ 60Hz <br> HDMI：4096 x 2304 @ 60Hz <br> eDP：4096 x 2304 @ 120Hz</td>
<td align="center">64 DDR5 4800 MT&#x2F;s <br> 64 DDR4 3200 MT&#x2F;s <br> 64 LPDDR5 5200 MT&#x2F;s <br> 64 LPDDR4x 4267 MT&#x2F;s</td>
<td align="center">支持</td>
<td align="center">支持</td>
</tr>
</tbody></table>
<div class="note default no-icon"><p>BUG处理器的折腾性思考：小黄鱼上面流通不少Intel 12代ES测试版处理器，不同步进版本存在不同问题，例如CPU没有内建直连独立显卡的PCI-E通道，会导致所有主板上第一根直连独立显卡的PCI-E X16插槽无效。这类BUG CPU虽然价格看着很诱惑，但可能实际运行不稳定，因此不纳入All in One硬件选型考虑范围。</p>
</div>

<h2 id="主板选型对比">15.2 &nbsp&nbsp<a href="#主板选型对比" class="headerlink" title="主板选型对比"></a>主板选型对比</h2><table>
<thead>
<tr>
<th align="center">主板型号</th>
<th align="center">内存插槽</th>
<th align="center">供电</th>
<th align="center">网口情况</th>
<th align="center">SATA支持</th>
<th align="center">M.2支持</th>
<th align="center">PCIe通道</th>
<th align="center">显示接口</th>
<th align="center">PCB设计板层</th>
</tr>
</thead>
<tbody><tr>
<td align="center">云星Matx-Z690 NAS主板</td>
<td align="center">4 x DDR4内存槽<br>最大支持4 x 32G&#x3D;128G</td>
<td align="center">8+1+1相</td>
<td align="center">4 x Intel I226-V 2.5G</td>
<td align="center">8 x SATA 3.0</td>
<td align="center">2 x PCIe4.0 x4正面<br>2 x PCIe3.0 x4反面</td>
<td align="center">2 x PCIe4.0 x16插槽（x8带宽）<br>PCIe4.0 x4插槽（x4带宽）</td>
<td align="center">HDMI2.0<br>DP1.4</td>
<td align="center">6层</td>
</tr>
</tbody></table>
<h1 id="参考文献">16 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Installation Failing: &quot;Failed to prepare EFI boot using Grub&quot;[EB&#x2F;OL]. <a href="https://forum.proxmox.com/threads/installation-failing-failed-to-prepare-efi-boot-using-grub.122002/">https://forum.proxmox.com/threads/installation-failing-failed-to-prepare-efi-boot-using-grub.122002/</a>.<br>[2] 软路由科普系列 篇二：PVE安装iKuai OpenWrt 旁路由 基础设置 保姆级全教程[EB&#x2F;OL]. <a href="https://post.smzdm.com/p/awrx4lxm/">https://post.smzdm.com/p/awrx4lxm/</a>.<br>[3] ProxmoxVE 7.4 升级到 8.0，详细步骤[EB&#x2F;OL]. <a href="https://blog.margrop.net/post/pve-7-upgrade-to-8/">https://blog.margrop.net/post/pve-7-upgrade-to-8/</a>.<br>[4] PVE 联网及更换国内源[EB&#x2F;OL]. <a href="https://www.cnblogs.com/pdblogs/p/16218543.html">https://www.cnblogs.com/pdblogs/p/16218543.html</a>.<br>[5] Force update from unsigned repository[EB&#x2F;OL]. <a href="https://askubuntu.com/questions/732985/force-update-from-unsigned-repository">https://askubuntu.com/questions/732985/force-update-from-unsigned-repository</a>.<br>[6] ProxmoxVE(PVE) 启用 IOMMU[EB&#x2F;OL]. <a href="https://www.insilen.com/post/501.html">https://www.insilen.com/post/501.html</a>.<br>[7] Enable IOMMU or VT-d in your motherboard BIOS[EB&#x2F;OL]. <a href="https://us.informatiweb.net/tutorials/it/bios/enable-iommu-or-vt-d-in-your-bios.html">https://us.informatiweb.net/tutorials/it/bios/enable-iommu-or-vt-d-in-your-bios.html</a>.<br>[8] ProxmoxVE(PVE) 使用 IMG 镜像文件，img 转 qcow2[EB&#x2F;OL]. <a href="https://www.lxtx.tech/index.php/archives/65/">https://www.lxtx.tech/index.php/archives/65/</a>.<br>[9]『软路由踩坑指南』篇三：ESXi 8.0 虚拟机安装 iKuai 主路由及保姆级配置[EB&#x2F;OL]. <a href="https://post.smzdm.com/p/a5op28x7/">https://post.smzdm.com/p/a5op28x7/</a>.<br>[10]『软路由踩坑指南』篇四：ESXi 8.0 虚拟机安装 openWrt 路由系统终极指南[EB&#x2F;OL]. <a href="https://post.smzdm.com/p/a7ngxeel/">https://post.smzdm.com/p/a7ngxeel/</a>.<br>[11]『软路由踩坑指南』篇五：OpenWrt 旁路由进阶篇 SmartDNS+AdGuardHome 设置 DNS 分流、秒开网页、去广告[EB&#x2F;OL]. <a href="https://post.smzdm.com/p/axz6z7w9/">https://post.smzdm.com/p/axz6z7w9/</a>.<br>[12] [openwrt(x86)] OPenWRT 旁路由 +MosDNS+OpenClash+AdGuard Home 傻瓜配置图文教程[EB&#x2F;OL]. <a href="https://www.right.com.cn/forum/thread-8284982-1-1.html">https://www.right.com.cn/forum/thread-8284982-1-1.html</a>.<br>[13] OpenWrt 扩容 Overlay 和 Docker 软件安装空间教程（内置硬盘版）附：Samba 网络共享设置[EB&#x2F;OL]. <a href="https://www.right.com.cn/forum/thread-7470757-1-1.html">https://www.right.com.cn/forum/thread-7470757-1-1.html</a>.<br>[14] [OpenWrt] 使用 OpenClash 科学上网[EB&#x2F;OL]. <a href="http://suyu0925.github.io/blog/2022/07/25/openwrt-openclash/">http://suyu0925.github.io/blog/2022/07/25/openwrt-openclash/</a>.<br>[15] 镜像站使用帮助-Proxmox 软件仓库[EB&#x2F;OL]. <a href="https://mirrors.tuna.tsinghua.edu.cn/help/proxmox/">https://mirrors.tuna.tsinghua.edu.cn/help/proxmox/</a>.<br>[16] 开启直通[EB&#x2F;OL]. <a href="https://skyao.io/learning-pve/docs/pass-through/enable/">https://skyao.io/learning-pve/docs/pass-through/enable/</a>.<br>[17] [经验分享] 在线连接数测试网页，简单一键测试宽带并发连接数限制[EB&#x2F;OL]. <a href="https://bbs.ikuai8.com/thread-87196-1-1.html">https://bbs.ikuai8.com/thread-87196-1-1.html</a>.<br>[18] 禁用Swap cache[EB&#x2F;OL]. <a href="https://club.fnnas.com/forum.php?mod=viewthread&tid=2492">https://club.fnnas.com/forum.php?mod=viewthread&amp;tid=2492</a>.<br>[19] 镜像站使用帮助-Debian 软件源[EB&#x2F;OL]. <a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/">https://mirrors.tuna.tsinghua.edu.cn/help/debian/</a>.<br>[20] 第 5 章 bookworm 中需要注意的问题[EB&#x2F;OL]. <a href="https://www.debian.org/releases/bookworm//amd64/release-notes/ch-information.zh-cn.html">https://www.debian.org/releases/bookworm//amd64/release-notes/ch-information.zh-cn.html</a>.<br>[21] 【装机帮扶站】第881期：BUG处理器能选否？聊聊12代ES处理器[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/458166029">https://zhuanlan.zhihu.com/p/458166029</a>.<br>[22] 爱快ikuai和windows电脑使用iperf3测试内网传输速度[EB&#x2F;OL]. <a href="https://www.mulingyuer.com/archives/1073/">https://www.mulingyuer.com/archives/1073/</a>.<br>[23] PVE8.3.0折腾记（一）——PVE初次安装后更换国内源[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_52626278/article/details/144147244">https://blog.csdn.net/weixin_52626278/article/details/144147244</a>.<br>[24] 解决PVE安装独显后，核显消失，无法直通的问题。[EB&#x2F;OL]. <a href="http://157.0.230.2:8090/archives/owKXsHkN">http://157.0.230.2:8090/archives/owKXsHkN</a>.<br>[25] PVE下LXC ubuntu 中文乱码解决[EB&#x2F;OL]. <a href="https://blog.csdn.net/zyr920425/article/details/131126045">https://blog.csdn.net/zyr920425/article/details/131126045</a>.<br>[26] Proxmox VE常见问题以及解决办法（持续更新）[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_40858216/article/details/106784329">https://blog.csdn.net/qq_40858216/article/details/106784329</a>.<br>[27] Proxmox VE面板节点和虚拟机提示问号，节点状态 unknown,储存一直打不开，虚拟机正常的诊断思路[EB&#x2F;OL]. <a href="https://www.wjxy.net.cn/?p=2629">https://www.wjxy.net.cn/?p=2629</a>.<br>[28] 给容器设置内核参数[EB&#x2F;OL]. <a href="https://cloud.tencent.com/developer/article/1583736">https://cloud.tencent.com/developer/article/1583736</a>.<br>[29] Using sysctls in a Kubernetes Cluster[EB&#x2F;OL]. <a href="https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#listing-all-sysctl-parameters">https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#listing-all-sysctl-parameters</a>.<br>[30] setting key &quot;vm.max_map_count&quot;: Read-only file system[EB&#x2F;OL]. <a href="https://forum.proxmox.com/threads/setting-key-vm-max_map_count-read-only-file-system.28720/">https://forum.proxmox.com/threads/setting-key-vm-max_map_count-read-only-file-system.28720/</a>.<br>[31] After installation with Ventoy rdinit&#x3D;&#x2F;vtoy&#x2F;vtoy[EB&#x2F;OL]. <a href="https://forum.proxmox.com/threads/after-installation-with-ventoy-rdinit-vtoy-vtoy.153979/">https://forum.proxmox.com/threads/after-installation-with-ventoy-rdinit-vtoy-vtoy.153979/</a>.<br>[32] 升级至QEMU 9.2.0后直通失败[EB&#x2F;OL]. <a href="https://github.com/gangqizai/igd/issues/27">https://github.com/gangqizai/igd/issues/27</a>.<br>[33] 每过段时间修改编辑配置那些失效[EB&#x2F;OL]. <a href="https://bbs.ikuai8.com/forum.php?mod=viewthread&tid=146800&extra=page=1&filter=typeid&typeid=20">https://bbs.ikuai8.com/forum.php?mod=viewthread&amp;tid=146800&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D20</a>.<br>[34] proxmox安装定义磁盘分区大小[EB&#x2F;OL]. <a href="https://www.cnblogs.com/weihua2020/p/13723466.html">https://www.cnblogs.com/weihua2020/p/13723466.html</a>.<br>[35] minfree for lvm snapshots[EB&#x2F;OL]. <a href="https://forum.proxmox.com/threads/minfree-for-lvm-snapshots.28977/">https://forum.proxmox.com/threads/minfree-for-lvm-snapshots.28977/</a>.<br>[36] Backup fails with Logical Volume already exists in volume group[EB&#x2F;OL]. <a href="https://forum.proxmox.com/threads/backup-fails-with-logical-volume-already-exists-in-volume-group.42377/">https://forum.proxmox.com/threads/backup-fails-with-logical-volume-already-exists-in-volume-group.42377/</a>.<br>[37] PVE8.3.1 LXC下安装 OpenWRT 记录[EB&#x2F;OL]. <a href="https://www.cnblogs.com/airoot/p/18715211">https://www.cnblogs.com/airoot/p/18715211</a>.<br>[38] LXC容器中安装openwrt作为主路由[EB&#x2F;OL]. <a href="https://blog.jmal.top/s/lxc-openwrt-main-router">https://blog.jmal.top/s/lxc-openwrt-main-router</a>.<br>[39] ping: bad address ‘openwrt.org’[EB&#x2F;OL]. <a href="https://blog.axiaoke.cn/archives/1173.html">https://blog.axiaoke.cn/archives/1173.html</a>.<br>[40] Proxmox VE 容器或虚拟机被锁定解决办法[EB&#x2F;OL]. <a href="https://www.wort.cloud/post/notes/proxmox-ve-lxc%e5%ae%b9%e5%99%a8%e8%a2%ab%e9%94%81%e5%ae%9a%ef%bc%8c%e7%8a%b6%e6%80%81%e4%b8%barollback%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/">https://www.wort.cloud/post/notes/proxmox-ve-lxc%e5%ae%b9%e5%99%a8%e8%a2%ab%e9%94%81%e5%ae%9a%ef%bc%8c%e7%8a%b6%e6%80%81%e4%b8%barollback%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95/</a>.<br>[41] kyleflower&#x2F;clash_rules[EB&#x2F;OL]. <a href="https://github.com/kyleflower/clash_rules">https://github.com/kyleflower/clash_rules</a>.<br>[42] docker搭建MyUrls短链服务,可配合sub-web食用[EB&#x2F;OL]. <a href="http://213.35.110.223:8000/2024/08/1724228021116">http://213.35.110.223:8000/2024/08/1724228021116</a>.<br>[43] 自建Clash订阅转换 - Subconverter+Subweb+MyUrls搭建教程 (Docker版本)[EB&#x2F;OL]. <a href="https://crossbell.io/notes/59373-1">https://crossbell.io/notes/59373-1</a>.<br>[44] 自建Clash订阅转换 - Subconverter+Subweb+MyUrls搭建教程 - 全docker完成 - mihomo内核 避坑指南[EB&#x2F;OL]. <a href="https://imgki.com/archives/718.html">https://imgki.com/archives/718.html</a>.<br>[45] 自建Clash订阅转换[EB&#x2F;OL]. <a href="https://lwnlh.com/14_Self-built_Clash_Subscription_Conversion.html">https://lwnlh.com/14_Self-built_Clash_Subscription_Conversion.html</a>.<br>[46] .env 配置在 Docker 中不起作用[EB&#x2F;OL]. <a href="https://github.com/CareyWang/sub-web/issues/68">https://github.com/CareyWang/sub-web/issues/68</a>.<br>[47] [BUG] 使用 Clash Meta 内核开启tun模式出现 connect error: dns resolve failed: context deadline exceeded[EB&#x2F;OL]. <a href="https://github.com/clash-verge-rev/clash-verge-rev/issues/104">https://github.com/clash-verge-rev/clash-verge-rev/issues/104</a>.<br>[48] openclash &quot;all DNS requests failed, first error: dns: bad rdata&quot;错误解决[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/670131605">https://zhuanlan.zhihu.com/p/670131605</a>.<br>[49] 我的家里pve虚拟机经常死机原来是原因这导致的[EB&#x2F;OL]. <a href="https://blog.csdn.net/u010042660/article/details/139935170">https://blog.csdn.net/u010042660/article/details/139935170</a>.<br>[50] pve节点频繁宕机问题排查[EB&#x2F;OL]. <a href="https://www.cnblogs.com/nf01/p/16296724.html">https://www.cnblogs.com/nf01/p/16296724.html</a>.<br>[51] pve8.0 cpu是1265u经常死机，进不去，需要断电重启[EB&#x2F;OL]. <a href="https://tieba.baidu.com/p/8488486698">https://tieba.baidu.com/p/8488486698</a>.<br>[52] PBS 维护任务[EB&#x2F;OL]. <a href="https://www.cnblogs.com/varden/p/15251582.html">https://www.cnblogs.com/varden/p/15251582.html</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>pve系统</tag>
        <tag>软路由</tag>
        <tag>科学上网</tag>
        <tag>iKuai</tag>
        <tag>openwrt</tag>
        <tag>虚拟机</tag>
        <tag>fnOS</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器</title>
    <url>/software/server/</url>
    <content><![CDATA[<h1 id="云服务器">1 &nbsp&nbsp<a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h1><h2 id="取回过期未释放的阿里云服务器数据">1.1 &nbsp&nbsp<a href="#取回过期未释放的阿里云服务器数据" class="headerlink" title="取回过期未释放的阿里云服务器数据"></a>取回过期未释放的阿里云服务器数据</h2><p>取回方法：</p>
<ul>
<li>继续续费使用服务器</li>
<li>购买新的阿里云服务器或者转移到其他阿里云服务器</li>
<li>保存快照制作成镜像再上传到oss下载</li>
</ul>
<p>Linux云服务器可以通过制作镜像上传到oss下载。</p>
<ol>
<li>在轻量级应用服务器的管理页面创建一个快照。</li>
<li>创建自定义镜像：输入自定义的镜像描述和名称后点击确定。</li>
<li>创建好的镜像共享到ecs</li>
<li>阿里云控制台里进入ecs-&gt;选择镜像-&gt;选择共享镜像即可看见刚刚共享的轻量级服务器镜像。点击操作列上的复制镜像，填入信息后点击确定。</li>
<li>导出镜像：复制成功后就可以在自定义镜像列表看见镜像，选择操作列上的导出镜像，填入你的oss信息。oss创建过程大概就是开通oss服务再创建bucket，需注意创建bucket时地域需要和镜像所在地域一致。</li>
<li>下载镜像：在控制台进入oss-&gt;进入bucket列表，选择你刚刚导出镜像的bucket-&gt;进入文件管理页面即可看见导出的镜像，点击下载即可。这里会消耗oss流量，大约会花费几块钱费用。</li>
<li>本地虚拟机软件运行镜像。</li>
</ol>
<p>Windows云服务器：由于不支持导出Windows和来自镜像市场的镜像。因此无法导出上传到oss再下载。处理方法步骤是也和Linux云服务器一样，但在导出镜像步骤中，因为无法导出。可以选择操作列上的「创建实例」功能）——即按量付费购买一台esc。然后选按量付费，充值100块钱。快速备份好数据，再退订释放购买esc，等待退款（过程就看使用时长，越短时间花费越少，不到半个小时大概两三毛钱）。</p>
<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 取回过期未释放的阿里云服务器数据[EB&#x2F;OL]. <a href="https://www.lushihuan.com/archives/%E5%8F%96%E5%9B%9E%E8%BF%87%E6%9C%9F%E6%9C%AA%E9%87%8A%E6%94%BE%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE">https://www.lushihuan.com/archives/%E5%8F%96%E5%9B%9E%E8%BF%87%E6%9C%9F%E6%9C%AA%E9%87%8A%E6%94%BE%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E6%8D%AE</a>.<br>[2] 取回阿里云过期未释放服务器数据 Windows 系统[EB&#x2F;OL]. <a href="https://www.bilibili.com/read/cv13853339/">https://www.bilibili.com/read/cv13853339/</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
  </entry>
  <entry>
    <title>虚拟机总结</title>
    <url>/software/virtual-machine/</url>
    <content><![CDATA[<h1 id="VMware">1 &nbsp&nbsp<a href="#VMware" class="headerlink" title="VMware"></a>VMware</h1><h2 id="新版本Ubuntu虚拟机安装VMware-Tools（20-04之后版本）">1.1 &nbsp&nbsp<a href="#新版本Ubuntu虚拟机安装VMware-Tools（20-04之后版本）" class="headerlink" title="新版本Ubuntu虚拟机安装VMware Tools（20.04之后版本）"></a>新版本Ubuntu虚拟机安装VMware Tools（20.04之后版本）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install open-vm-tools open-vm-tools-desktop</span><br><span class="line"><span class="built_in">sudo</span> apt install open-vm-tools <span class="comment"># 仅基础功能（无GUI）</span></span><br><span class="line"><span class="built_in">sudo</span> reboot</span><br><span class="line">vmware-toolbox-cmd -v <span class="comment"># 验证安装，若输出显示版本号代表安装成功，如12.4.5.49651 (build-23787635)</span></span><br></pre></td></tr></table></figure>

<h2 id="VMware网卡端口转发实现连接ssh">1.2 &nbsp&nbsp<a href="#VMware网卡端口转发实现连接ssh" class="headerlink" title="VMware网卡端口转发实现连接ssh"></a>VMware网卡端口转发实现连接ssh</h2><h1 id="VirtualBox">2 &nbsp&nbsp<a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h1><h2 id="VirtualBox-NAT网卡端口转发实现连接ssh">2.1 &nbsp&nbsp<a href="#VirtualBox-NAT网卡端口转发实现连接ssh" class="headerlink" title="VirtualBox NAT网卡端口转发实现连接ssh"></a>VirtualBox NAT网卡端口转发实现连接ssh</h2><p>打开vbox虚拟机的设置-&gt;网络-&gt;高级-&gt;端口转发-&gt;新建规则：名称ssh，协议TCP，主机IP127.0.0.1，主机端口9191，子系统IP留空不填，子系统端口22。</p>
<h2 id="VirtualBox安装ubuntu-18-04虚拟机打不开terminal终端">2.2 &nbsp&nbsp<a href="#VirtualBox安装ubuntu-18-04虚拟机打不开terminal终端" class="headerlink" title="VirtualBox安装ubuntu 18.04虚拟机打不开terminal终端"></a>VirtualBox安装ubuntu 18.04虚拟机打不开terminal终端</h2><p>故障情况：VirtualBox新安装ubuntu 18.04虚拟机无法打开Terminal，从应用列表中单击Terminal，左上角任务栏会出现Terminal，并且鼠标转圈，但是过一会左上角Terminal消失，就像闪退一样。</p>
<p>解决方法：CTRL + ALT + F3 进入命令行模式（需要返回桌面时CTRL + ALT + F1）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/default</span><br><span class="line"><span class="built_in">sudo</span> nano locale</span><br><span class="line"><span class="comment"># 把文件中的 “en_US” 改成 “en_US.UTF-8”</span></span><br><span class="line"><span class="built_in">sudo</span> locale-gen --purge</span><br><span class="line">reboot <span class="comment">#重启虚拟机</span></span><br></pre></td></tr></table></figure>

<h2 id="VirtualBox运行虚拟机系统卡顿-缓慢">2.3 &nbsp&nbsp<a href="#VirtualBox运行虚拟机系统卡顿-缓慢" class="headerlink" title="VirtualBox运行虚拟机系统卡顿&#x2F;缓慢"></a>VirtualBox运行虚拟机系统卡顿&#x2F;缓慢</h2><p>可以观察下是否VirtualBox虚拟机底下状态栏是否出现了一个绿色海龟的图标，那证明当前VirtualBox运行在软件虚拟化模式，这确实会是十分缓慢的。而硬件虚拟化模式图标应该是蓝色的V。</p>
<p>问题原因：其他虚拟化技术软件启动hyper-v或者虚拟机平台功能引起，比如<a href="/troubleshooting/windows-troubleshooting/#%E5%AE%89%E8%A3%85Docker-Desktop%E9%9C%80%E8%A6%81%E5%90%AF%E7%94%A8WSL2%E5%8A%9F%E8%83%BD">安装Docker Desktop开启wsl2功能</a>后导致VirtualBox运行缓慢。</p>
<p>解决方法：</p>
<ol>
<li>控制面板「程序和功能」中禁用Hyper-V和Windows hypervisor后重启系统（以下功能选项全部取消勾选）。如果仍然不行，cmd终端执行命令：<code>bcdedit /set hypervisorlaunchtype off</code>，执行完bcd命令后需要重启系统。<ul>
<li>Containers</li>
<li>Hyper-V</li>
<li>Virtual Machine Platform</li>
<li>Windows Hypervisor Platform</li>
<li>Windows Sandbox</li>
<li>Windows Subsystem for Linux（WSL2是基于hyper-V架构的，但不是hyper-V本身）</li>
</ul>
</li>
<li>移除并重装vbox增强工具包（VirtualBox Guest Additions）</li>
</ol>
<h2 id="VirtualBox无法删除备份">2.4 &nbsp&nbsp<a href="#VirtualBox无法删除备份" class="headerlink" title="VirtualBox无法删除备份"></a>VirtualBox无法删除备份</h2><p>故障情况：删除备份时报错提示hard disk xxxx has more than one child hard disk 2。</p>
<p>解决方式：打开虚拟介质管理器，定位到虚拟硬盘页面，找到对应的硬盘，双击展开可以查看有一个子项目是不存在，失效导致删除备份失败，删除即可。</p>
<h1 id="QEMU的相关资料">3 &nbsp&nbsp<a href="#QEMU的相关资料" class="headerlink" title="QEMU的相关资料"></a>QEMU的相关资料</h1><ul>
<li><a href="https://wiki.archlinuxcn.org/wiki/QEMU">QEMU -  Arch Linux 中文维基</a></li>
<li><a href="https://wiki.qemu.org/Links#GUI_Front_Ends">GUI_Front_Ends</a></li>
<li><a href="https://gitlab.com/qtemu/gui">QtEmu</a></li>
<li><a href="https://www.yundongfang.com/Yun115717.html">如何在 QEMU 中安装 Windows 11</a></li>
<li><a href="https://bbs.kanxue.com/thread-262606-1.htm">[原创] QEMU的虚拟加速</a></li>
<li><a href="https://github.com/intel/haxm">haxm</a></li>
</ul>
<h1 id="安卓模拟器">4 &nbsp&nbsp<a href="#安卓模拟器" class="headerlink" title="安卓模拟器"></a>安卓模拟器</h1><ul>
<li>支持运行「123云盘」的安卓模拟器：mumu模拟器（雷神模拟器这些不支持）</li>
</ul>
<h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] VirtualBox_Ubuntu22.04 Terminal 无法打开[EB&#x2F;OL]. <a href="https://www.cnblogs.com/lifuqiang/articles/17167367.html">https://www.cnblogs.com/lifuqiang/articles/17167367.html</a>.<br>[2] VirtualBox下SSH通过端口转发连接Linux方法[EB&#x2F;OL]. <a href="https://blog.csdn.net/chengqiuming/article/details/83239413">https://blog.csdn.net/chengqiuming/article/details/83239413</a>.<br>[3] [已解决] 为什么VBOX有些备份会删除失败？[EB&#x2F;OL]. <a href="https://bbs.kafan.cn/thread-939721-1-1.html">https://bbs.kafan.cn/thread-939721-1-1.html</a>.<br>[4] FIX: VirtualBox Running Very Slow in Windows 10&#x2F;11. (Solved)[EB&#x2F;OL]. <a href="https://www.wintips.org/fix-virtualbox-running-very-slow-in-windows-10-11/">https://www.wintips.org/fix-virtualbox-running-very-slow-in-windows-10-11/</a>.<br>[5] How to get VirtualBox 6.0 and WSL working at the same time [closed][EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/58031941/how%E2%80%91to%E2%80%91get%E2%80%91virtualbox%E2%80%916%E2%80%910%E2%80%91and%E2%80%91wsl%E2%80%91working%E2%80%91at%E2%80%91the%E2%80%91same%E2%80%91time">https://stackoverflow.com/questions/58031941/how‑to‑get‑virtualbox‑6‑0‑and‑wsl‑working‑at‑the‑same‑time</a>.<br>[6] WSL2 breaks VirtualBox 6.1[EB&#x2F;OL]. <a href="https://github.com/MicrosoftDocs/WSL/issues/798">https://github.com/MicrosoftDocs/WSL/issues/798</a>.</p>
]]></content>
      <categories>
        <category>software</category>
      </categories>
  </entry>
  <entry>
    <title>Blender手册翻译进度</title>
    <url>/translations/blender-manual/</url>
    <content><![CDATA[<p>to-do：等待官方迁移至gitea结束。</p>
<table>
<thead>
<tr>
<th align="center">Blender手册链接</th>
<th align="center">我的DBO主页</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://docs.blender.org/manual/zh-hans/latest/">点击跳转</a></td>
<td align="center"><a href="https://projects.blender.org/1355093365">点击跳转</a></td>
</tr>
</tbody></table>
<p>以下记录我平时闲暇时间维护Blender手册简体中文翻译的进度，</p>
<h1 id="视频编辑">1 &nbsp&nbsp<a href="#视频编辑" class="headerlink" title="视频编辑"></a>视频编辑</h1><ul>
<li><input checked disabled type="checkbox"> 简介</li>
<li><input disabled type="checkbox"> 设置你的项目</li>
</ul>
]]></content>
      <categories>
        <category>translations</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>进度</tag>
        <tag>blender</tag>
        <tag>手册</tag>
      </tags>
  </entry>
  <entry>
    <title>翻译计划</title>
    <url>/translations/translation-plan/</url>
    <content><![CDATA[<h1 id="计划重启缘由">1 &nbsp&nbsp<a href="#计划重启缘由" class="headerlink" title="计划重启缘由"></a>计划重启缘由</h1><p>2018年末之际，我发布了一篇博文<a href="/translations/translation-roadmap/">「翻译规划（作废）」</a>，计划着翻译一些视频教程和文档等，但因诸多原因，一直未能有效按计划进行，后来也就不了了之，将此篇博文就此作废。现在看来，这个计划完成的进度可能都不及5%，真的是个巨难填补的巨坑啊，哈哈哈……</p>
<p>翻译本身就是无偿行为，毕竟原作品不是自己创作的，平台投稿时又无法投原创自制。一想到这个，就没啥了驱动力，毕竟没法总是为爱发电。</p>
<p>由于编写<a href="https://github.com/Mister-Kin/BatchTools">批处理工具</a>时需要进行测试，因此又接触到了视频压制和字幕处理。在测试的过程中，又有想法要重新开启翻译计划。</p>
<p>不过本次的计划重启，与上次那样庞大的目标的不同，这次的翻译目标仅限于自己的看过并感兴趣的视频。</p>
<h1 id="翻译计划表">2 &nbsp&nbsp<a href="#翻译计划表" class="headerlink" title="翻译计划表"></a>翻译计划表</h1><p><strong>注：点击列表中的英文视频名即可访问相应的视频链接。</strong></p>
<h2 id="Blender开放动画电影">2.1 &nbsp&nbsp<a href="#Blender开放动画电影" class="headerlink" title="Blender开放动画电影"></a>Blender开放动画电影</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">完成进度</th>
<th align="center">字幕下载</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/BV1eS4y1j7ay/">Sprite Fright</a></td>
<td align="center">惊悚小精灵</td>
<td align="center">已翻译</td>
<td align="center"><a href="https://github.com/Mister-Kin/OpenDocs/tree/master/translations/subtitles/blender_animation">点击跳转</a></td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/BV1iW4113786?p=4">The Daily Dweebs</a></td>
<td align="center">每日蠢事</td>
<td align="center">已翻译</td>
<td align="center"><a href="https://github.com/Mister-Kin/OpenDocs/tree/master/translations/subtitles/blender_animation">点击跳转</a></td>
</tr>
</tbody></table>
<h2 id="Blender-fundamental-教程">2.2 &nbsp&nbsp<a href="#Blender-fundamental-教程" class="headerlink" title="Blender fundamental 教程"></a>Blender fundamental 教程</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">完成进度</th>
<th align="center">字幕下载</th>
</tr>
</thead>
</table>
]]></content>
      <categories>
        <category>translations</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>计划</tag>
        <tag>字幕</tag>
      </tags>
  </entry>
  <entry>
    <title>翻译规划（作废）</title>
    <url>/translations/translation-roadmap/</url>
    <content><![CDATA[<div class="note danger no-icon"><p><strong>注：本文撰写进度：90%</strong></p>
</div>

<h1 id="计划声明">1 &nbsp&nbsp<a href="#计划声明" class="headerlink" title="计划声明"></a>计划声明</h1><p>开个大坑，期望自己能够一直坚持做下去吧！在此开个页面算是打卡吧，也方便大家了解进度及访问相应的链接。</p>
<h2 id="B站视频教程翻译">1.1 &nbsp&nbsp<a href="#B站视频教程翻译" class="headerlink" title="B站视频教程翻译"></a>B站视频教程翻译</h2><p>目前本人已暂停搬运教程，正在编写一个字幕处理程序，以此加快我翻译的速度。程序完成后，会重新开始译制教程，并在过往的投稿中选择我认为较为重要的机翻教程教程进行精翻。</p>
<div class="note info no-icon"><p>**程序完成进度：10%。**啊，无奈，缓慢的编写进度！ (ಥ﹏ಥ)</p>
</div>

<h2 id="文档翻译">1.2 &nbsp&nbsp<a href="#文档翻译" class="headerlink" title="文档翻译"></a>文档翻译</h2><span id="more"></span>

<h1 id="B站翻译计划表">2 &nbsp&nbsp<a href="#B站翻译计划表" class="headerlink" title="B站翻译计划表"></a>B站翻译计划表</h1><p><strong>注：点击列表中的英文视频名即可访问相应的B站链接。</strong></p>
<h2 id="未完成（已搬运）">2.1 &nbsp&nbsp<a href="#未完成（已搬运）" class="headerlink" title="未完成（已搬运）"></a>未完成（已搬运）</h2><h2 id="精翻熟肉">2.2 &nbsp&nbsp<a href="#精翻熟肉" class="headerlink" title="精翻熟肉"></a>精翻熟肉</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
<th align="center">待完成</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av22248395/">Too Busy to Learn Blender</a></td>
<td align="center">没时间学Blender？</td>
<td align="center">1P</td>
<td align="center">应评论第六楼朋友的要求，细调06：36左右的字幕</td>
</tr>
</tbody></table>
<h2 id="机翻（即未完成精翻）">2.3 &nbsp&nbsp<a href="#机翻（即未完成精翻）" class="headerlink" title="机翻（即未完成精翻）"></a>机翻（即未完成精翻）</h2><table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
<th align="center">完成进度</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av21352168/">Blender Inside Out</a></td>
<td align="center">从里到外学习Blender</td>
<td align="center">56P</td>
<td align="center">已精翻共7P（P1-P6），剩余机翻共48P（P7-P56）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23309388/">The Cycles Node Editor</a></td>
<td align="center">Blender Cycles节点编辑器教程</td>
<td align="center">3P</td>
<td align="center">已精翻共P1（P1），剩余机翻共2P（P2-P3）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22416165/">Lighting and Baking Workflow- Blender Tutorial</a></td>
<td align="center">照明和烘培的工作流 - Blender教程</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22437199/">18 Ways to Speed Up Blender Cycles Rendering</a></td>
<td align="center">18种加速 Blender Cycles 渲染的方法</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22518346/">Blender Tutorial Quick Water Animation</a></td>
<td align="center">Blender教程-快速流体动画</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22533845/">Smoke Simulation Tutorial - Blender Cycles</a></td>
<td align="center">Blender Cycles烟雾模拟教程</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22675108/">Introduction to Modeling in Blender</a></td>
<td align="center">Blender建模介绍</td>
<td align="center">24P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22696450/">Blender Blend&amp;Paint</a></td>
<td align="center">Blender贴图绘制</td>
<td align="center">22P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22732936/">Money doesn&#39;t interest me - Creator of Blender talks about its future</a></td>
<td align="center">我对钱不感兴趣 - Blender创造者谈及它的未来</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22800138/">How I learned to draw&#39; with RossDraws</a></td>
<td align="center">如何跟RossDraws学画画？【Ross Tran采访】</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22903574/">Official Blender Open Movies</a></td>
<td align="center">官方Blender开源电影</td>
<td align="center">9P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22909325/">Comic book tutorial - Krita</a></td>
<td align="center">漫画教程 - Krita</td>
<td align="center">7P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22915300/">A comicpage creator for Krita</a></td>
<td align="center">krita漫画模板生成工具</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22668940/">Auto-Flatting Comic with Krita (+Gmic plugin)</a></td>
<td align="center">Krita漫画自动上色 - Gmic插件</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23002211/">Natron for Beginners - Intro _ Overview</a></td>
<td align="center">Natron新手教程-介绍概述</td>
<td align="center">1P</td>
<td align="center">未精翻</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22529905/">A New FREE Render Engine!</a></td>
<td align="center">一个新的免费渲染引擎（Radeon Pro Render）</td>
<td align="center">1P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23636374/">AMD Radeon™ ProRender</a></td>
<td align="center">AMD Radeon™ ProRender 官方教程 - 无字幕</td>
<td align="center">17P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23634562/">Real-Time Ray Tracing with Radeon ProRender</a></td>
<td align="center">Radeon ProRender 实时光线追踪</td>
<td align="center">1P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av23635797/">Radeon™ ProRender Real Time Ray Tracing Explained</a></td>
<td align="center">Radeon™ ProRender 实时光线追踪解释</td>
<td align="center">1P</td>
<td align="center">未精翻（等支持BL 2.8后开始）</td>
</tr>
</tbody></table>
<h2 id="未搬运">2.4 &nbsp&nbsp<a href="#未搬运" class="headerlink" title="未搬运"></a>未搬运</h2><ul>
<li>暂无</li>
</ul>
<h2 id="已完成">2.5 &nbsp&nbsp<a href="#已完成" class="headerlink" title="已完成"></a>已完成</h2><p><strong><center>Blender 教程</center></strong></p>
<table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av22327776">Is Blender Actually Hard to Learn</a></td>
<td align="center">Blender真的很难学吗？</td>
<td align="center">1P</td>
</tr>
</tbody></table>
<p><strong><center>Blender 插件教程</center></strong></p>
<table>
<thead>
<tr>
<th align="center">视频名</th>
<th align="center">中译名</th>
<th align="center">视频总数量</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.bilibili.com/video/av21226233">VSE Quick Functions Demo 0.91</a></td>
<td align="center">Blender VSE快速功能演示</td>
<td align="center">1P</td>
</tr>
<tr>
<td align="center"><a href="https://www.bilibili.com/video/av22523468/">Radeon Pro Render</a></td>
<td align="center">Radeon Pro Render 官方宣传视频</td>
<td align="center">1P</td>
</tr>
</tbody></table>
<h1 id="文档翻译计划表">3 &nbsp&nbsp<a href="#文档翻译计划表" class="headerlink" title="文档翻译计划表"></a>文档翻译计划表</h1><h2 id="开源软件的参考文档翻译">3.1 &nbsp&nbsp<a href="#开源软件的参考文档翻译" class="headerlink" title="开源软件的参考文档翻译"></a>开源软件的参考文档翻译</h2><h2 id="已参与">3.2 &nbsp&nbsp<a href="#已参与" class="headerlink" title="已参与"></a>已参与</h2><ul>
<li><a href="https://docs.krita.org/en/">Krita文档翻译</a></li>
</ul>
<h2 id="未参与（计划）">3.3 &nbsp&nbsp<a href="#未参与（计划）" class="headerlink" title="未参与（计划）"></a>未参与（计划）</h2><ul>
<li><a href="https://docs.blender.org/manual/en/dev/">Blender文档</a></li>
<li><a href="https://docs.gimp.org/2.10/zh_CN/">GIMP文档</a></li>
</ul>
<h2 id="渲染器的参考文档翻译（未实施）">3.4 &nbsp&nbsp<a href="#渲染器的参考文档翻译（未实施）" class="headerlink" title="渲染器的参考文档翻译（未实施）"></a>渲染器的参考文档翻译（未实施）</h2><p>这些文档在官网上没有提供在线文档浏览，因此我有想法在Github上开个公共 Repo 来建立翻译的储存库，也方便文档有新内容时可以实时更新吧！有想法的朋友可以共同参与！</p>
<p>目前暂定两个文档：</p>
<ul>
<li><a href="https://www.amd.com/en/technologies/radeon-prorender-downloads">Redoen Pro Render 的文档</a></li>
<li><a href="http://www.mitsuba-renderer.org/docs.html">Mitsuba Render 的文档</a></li>
</ul>
]]></content>
      <categories>
        <category>translations</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>计划</tag>
      </tags>
  </entry>
  <entry>
    <title>Android系统排障总结</title>
    <url>/troubleshooting/android-troubleshooting/</url>
    <content><![CDATA[<h1 id="安卓系统免杀后台进程设置步骤（包含各个安卓系统）">1 &nbsp&nbsp<a href="#安卓系统免杀后台进程设置步骤（包含各个安卓系统）" class="headerlink" title="安卓系统免杀后台进程设置步骤（包含各个安卓系统）"></a>安卓系统免杀后台进程设置步骤（包含各个安卓系统）</h1><p><a href="https://dontkillmyapp.com/">https://dontkillmyapp.com/</a></p>
<h1 id="在保留root的情况下（保留Magisk）升级系统">2 &nbsp&nbsp<a href="#在保留root的情况下（保留Magisk）升级系统" class="headerlink" title="在保留root的情况下（保留Magisk）升级系统"></a>在保留root的情况下（保留Magisk）升级系统</h1><ol>
<li>更新到提示你“立即安装”这一步，先不要点</li>
<li>调出Magisk小窗，点Magisk旁边的安装，选择安装到未使用的槽位，然后会提示你重启，不要点重启，点“立即安装”会自动重启</li>
<li>重启后检查更新，检查Magisk、ROOT还在不在，再把模块都打开再重启一遍检查</li>
</ol>
<h1 id="参考资料">3 &nbsp&nbsp<a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] Realme真我GT Neo3更新系统会掉ROOT吗-怎么保留Magsik更新系统[EB&#x2F;OL]. <a href="http://m.romjd.com/reviews/content/6069">http://m.romjd.com/reviews/content/6069</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>维修</tag>
        <tag>系统</tag>
        <tag>计算机</tag>
        <tag>电脑</tag>
        <tag>维护</tag>
        <tag>故障</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统排障总结</title>
    <url>/troubleshooting/linux-troubleshooting/</url>
    <content><![CDATA[<h1 id="Bash终端符号输入控制">1 &nbsp&nbsp<a href="#Bash终端符号输入控制" class="headerlink" title="Bash终端符号输入控制"></a>Bash终端符号输入控制</h1><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">功能</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CTRL+C</td>
<td align="center">强行中断当前程序执行</td>
<td align="center">发送 SIGINT 信号给前台进程组中的所有进程。常用于终止正在运行的程序</td>
</tr>
<tr>
<td align="center">CTRL+Z</td>
<td align="center">停止输入</td>
<td align="center">任务中断维持挂起状态，任务仍在进程中运行，并没有结束（发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程）</td>
</tr>
<tr>
<td align="center">CTRL+D</td>
<td align="center">结束当前输入（用户不再给当前程序发出指令），系统通常会结束当前程序</td>
<td align="center">不是发送信号，而是表示一个特殊的二进制值，表示 EOF</td>
</tr>
</tbody></table>
<h1 id="Bash终端常用命令">2 &nbsp&nbsp<a href="#Bash终端常用命令" class="headerlink" title="Bash终端常用命令"></a>Bash终端常用命令</h1><table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">功能</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>init 0</code><br> <code>poweroff</code><br> <code>halt</code><br> <code>shutdown -h now</code></td>
<td align="center">关机</td>
<td align="center">init是所有进程的祖先，他是Linux系统操作中不可缺少的程序之一<br>它的进程号始终为1，所以发送TERM信号给init会终止所有的用户进程<br>init定义了8个运行级别(runlevel)，init 0为关机，init 6为重启<br>shutdown就是使用这种机制<br>halt和poweroff也是调用shutdown工具链实现</td>
</tr>
<tr>
<td align="center"><code>init 6</code><br> <code>reboot</code><br> <code>shutdown -r now</code></td>
<td align="center">重启</td>
<td align="center">root权限可使用</td>
</tr>
<tr>
<td align="center">blkid</td>
<td align="center">查看硬盘分区的UUID值</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">lsblk</td>
<td align="center">查看硬盘分区情况</td>
<td align="center"></td>
</tr>
</tbody></table>
<h1 id="包管理器">3 &nbsp&nbsp<a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h1><h2 id="apt">3.1 &nbsp&nbsp<a href="#apt" class="headerlink" title="apt"></a>apt</h2><h3 id="apt-update证书验证错误">3.1.1 &nbsp&nbsp<a href="#apt-update证书验证错误" class="headerlink" title="apt update证书验证错误"></a>apt update证书验证错误</h3><p>错误信息：Certificate verification failed: The certificate is NOT trusted.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install --reinstall ca-certificates</span><br></pre></td></tr></table></figure>

<h1 id="编译问题">4 &nbsp&nbsp<a href="#编译问题" class="headerlink" title="编译问题"></a>编译问题</h1><h2 id="编译环境的常规配置">4.1 &nbsp&nbsp<a href="#编译环境的常规配置" class="headerlink" title="编译环境的常规配置"></a>编译环境的常规配置</h2><p>以ubuntu举例，下载和更新相关的依赖：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade</span><br><span class="line">apt install linux‑headers‑amd64 <span class="comment"># 若失败，则先通过上面两条更新系统（因为/etc/apt/sources.list 源 repo 没有目前系统内核的 header，被移除了）除非换 repo branch</span></span><br><span class="line">apt install build‑essential</span><br></pre></td></tr></table></figure>

<h2 id="源码编译的程序的安装和卸载">4.2 &nbsp&nbsp<a href="#源码编译的程序的安装和卸载" class="headerlink" title="源码编译的程序的安装和卸载"></a>源码编译的程序的安装和卸载</h2><p>常规的编译安装过程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建议是添加prefix参数指定安装路径，日后卸载程序只需删除该目录以及删除软链接（如果有创建的话）</span></span><br><span class="line"><span class="built_in">sudo</span> ./configure --prefix=/path_to_install</span><br><span class="line"><span class="built_in">sudo</span> make -j32</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>卸载方式：</p>
<ul>
<li>反安装target： make uninstall&#x2F;distclean&#x2F;veryclean</li>
<li>make install之后目录下有一个install_mainfest.txt的文件记录安装的所有内容：<code>xargs rm &lt; install_manifest.txt</code></li>
<li>若未指定prefix且没有install_mainfest.txt，临时目录重新安装：<code>./configure --prefix=/tmp/to_remove &amp;&amp; make install</code>，遍历<code>/tmp/to_remove</code>内的文件，把最初安装诶只的文件删除（缺点：部分文件夹可能无法删除，无法确定是系统安装或者源码编译安装）</li>
<li>debian系列linux可尝试使用auto-apt 和 checkinstall：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install auto-apt checkinstall</span><br><span class="line"><span class="comment"># 构建生成deb包</span></span><br><span class="line">auto-apt run ./configure</span><br><span class="line">make</span><br><span class="line">checkinstall</span><br><span class="line"><span class="comment"># 完全卸载包，包名在checkinstall后有提示</span></span><br><span class="line">dpkg -r packagename</span><br><span class="line"><span class="comment"># 用生成的deb包重新安装</span></span><br><span class="line">dpkg -i ***.deb</span><br><span class="line"><span class="comment"># 列出包中安装的文件位置</span></span><br><span class="line">dpkg -L packagename</span><br><span class="line"><span class="comment"># 检查是否安装成功</span></span><br><span class="line">dpkg -l | grep packagename</span><br><span class="line"><span class="comment"># 同上</span></span><br><span class="line">apt list --installed | grep packagename</span><br></pre></td></tr></table></figure>

<h2 id="普通用户导致的编译问题">4.3 &nbsp&nbsp<a href="#普通用户导致的编译问题" class="headerlink" title="普通用户导致的编译问题"></a>普通用户导致的编译问题</h2><p>普通用户中如果在系统关键目录中，如<code>/opt</code>，执行<code>sudo make</code>可能会出现<code>xxx command not found</code>，这是因为有些命令在<code>sudo</code>下是不可见的，但如果不用<code>sudo</code>，<code>make</code>又无法在这些路径生成文件。</p>
<p>解决方式：使用<code>make -f</code>参数指定<code>makefile</code>文件，让它在有权限的路径中工作。例如，将工作路径切到<code>home</code>目录中，<code>make -f /opt/xxx/xxx/makefile</code>，<code>make</code>可在<code>home</code>路径中生成文件。</p>
<h2 id="常见编译错误">4.4 &nbsp&nbsp<a href="#常见编译错误" class="headerlink" title="常见编译错误"></a>常见编译错误</h2><ul>
<li>make &#x2F;lib&#x2F;modules&#x2F;xxx&#x2F;build no such file or directory：证明无 header</li>
<li>在新系统上编译老驱动可能会遇到&#39;SUBDIRS&#39; was removed in Linux 5.3 Use &#39;M&#x3D;&#39; or &#39;KBUILD_EXTMOD&#x3D;&#39; instead：这代表驱动太老了，驱动代码的编译流程已不适合新系统。</li>
</ul>
<h1 id="账户管理">5 &nbsp&nbsp<a href="#账户管理" class="headerlink" title="账户管理"></a>账户管理</h1><h2 id="删除账户">5.1 &nbsp&nbsp<a href="#删除账户" class="headerlink" title="删除账户"></a>删除账户</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">userdel [-r] [user_account] <span class="comment"># 切换到其他账户再执行，建议是root账户</span></span><br><span class="line">userdel -r kin <span class="comment"># 删除账户kin，-r参数是移除该账户的home目录和用户邮箱（mail spool）</span></span><br></pre></td></tr></table></figure>

<h2 id="自动root登录">5.2 &nbsp&nbsp<a href="#自动root登录" class="headerlink" title="自动root登录"></a>自动root登录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gedit /etc/gdm/custom.conf</span><br><span class="line"><span class="comment"># 在daemon下添加</span></span><br><span class="line">AutomaticLoginEnable=True</span><br><span class="line">AutomaticLogin=root</span><br></pre></td></tr></table></figure>

<h2 id="重置密码（ubuntu为例）">5.3 &nbsp&nbsp<a href="#重置密码（ubuntu为例）" class="headerlink" title="重置密码（ubuntu为例）"></a>重置密码（ubuntu为例）</h2><ol>
<li>进入到救援模式中，选择root选项（root  Drop to root shell prompt），敲一次回车enter键显示：<code>root@ubuntu:~#</code></li>
<li>重置密码命令：<code>passwd 系统账户名</code>，按提示输入两次密码确认</li>
<li>exit退出shell，选择resume回到正常启动中。</li>
</ol>
<h2 id="帐号和密码文件（-etc-passwd和-etc-shadow）">5.4 &nbsp&nbsp<a href="#帐号和密码文件（-etc-passwd和-etc-shadow）" class="headerlink" title="帐号和密码文件（&#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;shadow）"></a>帐号和密码文件（&#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;shadow）</h2><p>Linux系统中，所有用户（包括系统管理员root）的账号和密码存储在&#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;shadow这两个文件中。其中，passwd保存的是账号，shadow保存的是账号的密码等信息（&#x2F;etc&#x2F;passwd只有root才可以修改的，&#x2F;etc&#x2F;shadow只有root才能查看）</p>
<h3 id="etc-passwd">5.4.1 &nbsp&nbsp<a href="#etc-passwd" class="headerlink" title="&#x2F;etc&#x2F;passwd"></a>&#x2F;etc&#x2F;passwd</h3><p>示例：<code>root:x:0:0:root:/root:/bin/bash</code></p>
<p>上面每一行都代表一个用户，每一行又通过[:]分为7个部分。</p>
<ol>
<li>账号名称</li>
<li>为密码占位符（x表示该账户需要密码才能登录，为空时，账户无须密码即可登录）。原先用来保存密码的，现在密码都放在&#x2F;etc&#x2F;shadow中，所以这里显示x。</li>
<li>UID，也就是使用者ID。默认的系统管理员的UID为0，我们添加用户的时候最好使用1000以上的UID，1-1000范围的UID最好保留给系统用。</li>
<li>GID，也就是群组ID</li>
<li>关于账号的一些说明信息（暂时可以忽略）</li>
<li>账号的家目录，家目录就是你登陆系统后默认的那个目录</li>
<li>账号使用的shell。&#x2F;bin&#x2F;bash为可登录系统Shell，&#x2F;sbin&#x2F;nologin表示账户无法登录系统。</li>
</ol>
<h3 id="etc-shadow">5.4.2 &nbsp&nbsp<a href="#etc-shadow" class="headerlink" title="&#x2F;etc&#x2F;shadow"></a>&#x2F;etc&#x2F;shadow</h3><p>示例：<code>root:!:15324:0:99999:7:::</code></p>
<p>上面每一行都代表一个用户，每一行又通过[:]分为9个部分。</p>
<ol>
<li>账户名称（密码需要与账户对应的）</li>
<li>加密后的密码：如果这一栏的第一个字符为!或者*的话，说明这是一个不能登录的账户，从示例可看出ubuntu默认的就不启用root账户。（账户未设置密码时为空，设置密码后加密显示。!为无效哈希，系统会自动锁定这些账户并阻止登录，通过在&#x2F;etc&#x2F;passwd设置&#x2F;bin&#x2F;false或者&#x2F;sbin&#x2F;nologin实现禁止登录）</li>
<li>最近改动密码的日期：上次修改密码的时间距离1970年01月01日多少天</li>
<li>密码不可被变更的天数：设置了这个值，则表示从变更密码的日期算起，多少天内无法再次修改密码，如果是0的话，则没有限制</li>
<li>密码需要重新变更的天数：密码经常更换才能保证安全，为了提醒某些经常不更换密码的用户，可以设置一个天数，强制让用户更换密码，也就是说该用户的密码会在多少天后过期（默认位99999天，可以理解为永不过期）</li>
<li>密码过期预警天数：如果在5中设置了密码需要重新变更的天数，则会在密码过期的前多少天进行提醒，提示用户其密码将在多少天后过期</li>
<li>密码过期的宽恕时间：如果在5中设置的日期过后，用户仍然没有修改密码，则该用户还可以继续使用的天数</li>
<li>账号失效日期，过了这个日期账号就不能用了</li>
<li>保留未使用</li>
</ol>
<h3 id="etc-shadow文件中密码的加密方式">5.4.3 &nbsp&nbsp<a href="#etc-shadow文件中密码的加密方式" class="headerlink" title="&#x2F;etc&#x2F;shadow文件中密码的加密方式"></a>&#x2F;etc&#x2F;shadow文件中密码的加密方式</h3><p>示例：<code>root:$1$Bg1H/4mz$X89TqH7tpi9dX1B9j5YsF.:14838:0:99999:7:::</code></p>
<p>示例的密码域：<code>$1$Bg1H/4mz$X89TqH7tpi9dX1B9j5YsF.</code>，密码域密文也是由三部分组成的，即：$id$salt$encrypted，详细参见linux标准源文件passwd.c中的pw_encrypt函数。</p>
<p>加密算法：明文密码和一个叫salt的东西通过函数crypt()完成加密</p>
<div class="note info no-icon"><p>id为1时，采用md5进行加密；id为5时，采用SHA256进行加密；id为6时，采用SHA512进行加密。</p>
</div>

<p>得知加密方式，可以复制密文到相关工具上逆向破解：</p>
<h1 id="硬盘和分区管理">6 &nbsp&nbsp<a href="#硬盘和分区管理" class="headerlink" title="硬盘和分区管理"></a>硬盘和分区管理</h1><h2 id="挂载一个新硬盘">6.1 &nbsp&nbsp<a href="#挂载一个新硬盘" class="headerlink" title="挂载一个新硬盘"></a>挂载一个新硬盘</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsblk <span class="comment">#查看所有硬盘情况</span></span><br><span class="line"><span class="built_in">df</span> -lh <span class="comment">#查看硬盘占用情况，以及挂载位置</span></span><br><span class="line"><span class="built_in">sudo</span> fdisk -l <span class="comment">#查看硬盘分区情况</span></span><br><span class="line"><span class="built_in">sudo</span> fdisk /dev/sdb <span class="comment">#给硬盘sdb创建分区</span></span><br><span class="line"><span class="built_in">sudo</span> mkfs.ext4 /dev/sdb <span class="comment">#格式化硬盘sdb，并写入文件系统</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /mnt/pan <span class="comment">#创建目录</span></span><br><span class="line"><span class="built_in">sudo</span> mount /dev/sdb /mnt/pan <span class="comment">#将硬盘sdb挂载到 /mnt/pan 目录</span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/fstab <span class="comment"># 设置开机自动挂载，以下示例是写明挂载/dev/sdb，如果硬盘设备实际的路径更变后，例如变更硬盘实际物理接口，可能会导致挂载失败</span></span><br><span class="line">/dev/sdb /mnt/pan ext4 defaults 0 0</span><br><span class="line">blkid|grep /dev/新分区</span><br><span class="line"><span class="built_in">sudo</span> nano /etc/fstab <span class="comment"># 使用UUID挂载分区，即使变更硬盘实际物理接口，也不会导致挂载失败</span></span><br><span class="line"><span class="comment"># &lt;file system&gt; &lt;dir&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;</span></span><br><span class="line"><span class="comment"># options：defaults - 使用文件系统的默认挂载参数</span></span><br><span class="line"><span class="comment"># dump：0 - 不备份</span></span><br><span class="line"><span class="comment"># pass：0代表不检查。对于根目录/和efi目录/boot/efi，该值必需为1。其余分区可以设置为2。优先检查根目录后就会检查设置为2的其他分区。</span></span><br><span class="line">UUID=uuid值 /mnt/share ext4 defaults 0 2</span><br></pre></td></tr></table></figure>

<h2 id="将-home目录挂载到新分区（或新硬盘）">6.2 &nbsp&nbsp<a href="#将-home目录挂载到新分区（或新硬盘）" class="headerlink" title="将&#x2F;home目录挂载到新分区（或新硬盘）"></a>将&#x2F;home目录挂载到新分区（或新硬盘）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过包管理器安装 gparted，进行新建分区或者格式化硬盘等操作。</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /mnt/home</span><br><span class="line"><span class="built_in">sudo</span> mount /dev/新分区 /mnt/home <span class="comment"># 挂载新分区到/mnt/home</span></span><br><span class="line"><span class="built_in">sudo</span> rsync -aXS /home/ /mnt/home <span class="comment"># a归档模式（递归传输并保持文件属性），X保持扩展属性</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mv</span> /home /home_old</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /home</span><br><span class="line"><span class="built_in">sudo</span> umount /dev/新分区</span><br><span class="line"><span class="built_in">sudo</span> mount /dev/新分区 /home</span><br><span class="line">blkid|grep /dev/新分区 <span class="comment"># 查看新分区的uuid</span></span><br><span class="line"><span class="built_in">sudo</span> gedit /etc/fstab <span class="comment"># 将新分区的uuid填入fstab</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> -rf /home_old <span class="comment"># 重启无异常，即可删除旧home目录</span></span><br></pre></td></tr></table></figure>

<h2 id="查看硬盘是不是固态硬盘（SSD）">6.3 &nbsp&nbsp<a href="#查看硬盘是不是固态硬盘（SSD）" class="headerlink" title="查看硬盘是不是固态硬盘（SSD）"></a>查看硬盘是不是固态硬盘（SSD）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 0表明为ssd，1是机械</span></span><br><span class="line"><span class="built_in">cat</span> /sys/block/sda/queue/rotational</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0表明为ssd，1是机械</span></span><br><span class="line">lsblk -d -o name,rota</span><br></pre></td></tr></table></figure>

<h1 id="网络">7 &nbsp&nbsp<a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="查看网卡信息">7.1 &nbsp&nbsp<a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h2><p>查看ip信息：</p>
<ul>
<li>windows：ipconfig &#x2F;a</li>
<li>linux: ifconfig（配置网络接口）或者iwconfig（配置无线网络接口）</li>
</ul>
<p>网卡名称解析：</p>
<ul>
<li>lo：表示local</li>
<li>wl：表示wlan(Wireless Local Area Network)无线局域网</li>
<li>en：表示ethernet以太网</li>
<li>PCI接口的物理位置的坐标(bus, slot)，其中bus表示总线，slot表示插槽</li>
</ul>
<p>例子：</p>
<ul>
<li>wlp3s0表示，WLAN PCI接口位置：bus&#x3D;3, slot&#x3D;0。</li>
<li>enp2s0表示，Etnernet PCI接口位置：bus&#x3D;2, slot&#x3D;0。</li>
</ul>
<h2 id="ubuntu配置网卡">7.2 &nbsp&nbsp<a href="#ubuntu配置网卡" class="headerlink" title="ubuntu配置网卡"></a>ubuntu配置网卡</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/netplan/01-netcfg.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态ip设置示例</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">addresses:</span><br><span class="line">- 192.168.1.10/24</span><br><span class="line">gateway4: 192.168.1.1</span><br><span class="line">nameservers:</span><br><span class="line">addresses: [8.8.8.8, 8.8.4.4]</span><br><span class="line"></span><br><span class="line"><span class="comment"># DHCP设置示例</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">dhcp4: <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用网络配置</span></span><br><span class="line"><span class="built_in">sudo</span> netplan apply</span><br></pre></td></tr></table></figure>


<h2 id="ssh登录远程服务器">7.3 &nbsp&nbsp<a href="#ssh登录远程服务器" class="headerlink" title="ssh登录远程服务器"></a>ssh登录远程服务器</h2><div class="note info no-icon"><p>大部分系统都预装ssh程序客户端，方便连接其他ssh服务器使用，包括windows系统。如果需要设置作为被连接的ssh端，需要自行手动安装ssh的server。</p>
</div>
<p>连接命令：<code>ssh 系统账户名@远程服务器ip</code>，例如<code>ssh root@192.168.1.1</code></p>
<p>查看ssh版本：<code>ssh -V</code></p>
<h3 id="Ubuntu开启ssh服务及允许root登录">7.3.1 &nbsp&nbsp<a href="#Ubuntu开启ssh服务及允许root登录" class="headerlink" title="Ubuntu开启ssh服务及允许root登录"></a>Ubuntu开启ssh服务及允许root登录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install openssh-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改/etc/ssh/sshd_config文件</span></span><br><span class="line"><span class="built_in">sudo</span> nano /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改如下字段</span></span><br><span class="line"><span class="comment">#PermitRootLogin prohibit-password</span></span><br><span class="line">PermitRootLogin <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启sshd服务</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl restart sshd.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认情况下，在Ubuntu 20.04上未设置root用户的密码，当尝试以root用户身份进行SSH登录时，将显示错误消息Permission denied，please try again。因此，我们需要设置root用户的密码。出现提示时，输入当前用户密码，然后输入新的根密码：</span></span><br><span class="line"><span class="built_in">sudo</span> passwd</span><br><span class="line"><span class="comment"># 输入两次密码确定即可</span></span><br></pre></td></tr></table></figure>

<h4 id="系统自启ssh服务">7.3.1.1 &nbsp&nbsp<a href="#系统自启ssh服务" class="headerlink" title="系统自启ssh服务"></a>系统自启ssh服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开机自动启动ssh命令</span></span><br><span class="line"><span class="comment"># 注意在恢复模式中设置sshd自启服务，再次重启到恢复模式中的话，仍然是未启动的，但是按正常模式启动会自启（ubuntu18.04的实测结论）</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭ssh开机自动启动命令</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单次开启ssh</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单次关闭ssh</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl stop ssh</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看ssh是否启动，看到Active: active (running)即表示成功</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl status ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 SSH 守护进程是否已经运行</span></span><br><span class="line">systemctl status sshd</span><br></pre></td></tr></table></figure>

<h3 id="使用scp传递文件">7.3.2 &nbsp&nbsp<a href="#使用scp传递文件" class="headerlink" title="使用scp传递文件"></a>使用scp传递文件</h3><div class="note success no-icon"><p>windows和linux之间传输更推荐使用<a href="https://winscp.net/eng/download.php">WinSCP</a>工具。</p>
</div>
<ol>
<li>下载安装<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PuTTY</a></li>
<li>在PuTTY安装路径中打开终端窗口</li>
<li>拷贝命令：<code>pscp [Linux用户名]@[Linux服务器ip地址]:[Linux服务器源文件] [本地目标文件夹]</code>，示例：<code>pscp d:\Old\test.jpg root@ipaddress:/var/www/html/</code></li>
</ol>
<h1 id="远程控制软件">8 &nbsp&nbsp<a href="#远程控制软件" class="headerlink" title="远程控制软件"></a>远程控制软件</h1><h2 id="ubuntu-linux安装远程控制软件">8.1 &nbsp&nbsp<a href="#ubuntu-linux安装远程控制软件" class="headerlink" title="ubuntu linux安装远程控制软件"></a>ubuntu linux安装远程控制软件</h2><ul>
<li>根据系统类型下载<a href="https://www.todesk.com/linux.html">官方安装包</a></li>
<li>安装命令：<code>sudo apt-get install ./todesk-v4.7.2.0-amd64.deb</code></li>
<li>运行命令：<code>todesk</code></li>
</ul>
<h2 id="arch-linux安装远程控制软件">8.2 &nbsp&nbsp<a href="#arch-linux安装远程控制软件" class="headerlink" title="arch linux安装远程控制软件"></a>arch linux安装远程控制软件</h2><p>P.S.配置好arch的“国内源”和“社区源”，安装yay。</p>
<ul>
<li>安装todesk：亦可下载<a href="https://www.todesk.com/linux.html">官方安装包</a>手动执行安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装todesk</span></span><br><span class="line">yay -S todesk</span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start todeskd.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> todeskd.service</span><br></pre></td></tr></table></figure>
<ul>
<li>安装teamviewer</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装teamviewer</span></span><br><span class="line">yay -S teamviewer</span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line"><span class="built_in">sudo</span> teamviewer daemon start</span><br><span class="line"><span class="built_in">sudo</span> teamviewer daemon <span class="built_in">enable</span></span><br><span class="line"><span class="built_in">sudo</span> teamviewer daemon restart</span><br></pre></td></tr></table></figure>
<ul>
<li>安装向日葵</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装向日葵</span></span><br><span class="line">yay -S sunloginclient</span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl start runsunloginclient.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> runsunloginclient.service</span><br></pre></td></tr></table></figure>

<p>P.S.若遇到todesk打开系统就注销的问题，尝试下先删除teamviewer再重新安装一下，之后再打开todesk测试（yay社区编译版本的todesk和teamviewer可能存在冲突）。</p>
<h1 id="开机排障">9 &nbsp&nbsp<a href="#开机排障" class="headerlink" title="开机排障"></a>开机排障</h1><h2 id="ubuntu恢复模式（recovery-mode）-linux救援模式（rescue-mode）">9.1 &nbsp&nbsp<a href="#ubuntu恢复模式（recovery-mode）-linux救援模式（rescue-mode）" class="headerlink" title="ubuntu恢复模式（recovery mode）&#x2F;linux救援模式（rescue mode）"></a>ubuntu恢复模式（recovery mode）&#x2F;linux救援模式（rescue mode）</h2><p>救援模式相当于使用 SysV 作为默认的服务管理器的 Linux 发行版中的单用户模式。ubuntu和debian系列常用说法就是恢复模式，其他不同类的linux发行版更多常说救援模式。在救援模式下，将挂载所有本地文件系统，仅启动一些重要服务。但是，不会启动正常服务（例如网络服务）。一般系统无法正常启动时，进入该模式修复，例如重置root。</p>
<p>如果同时需要网络的话，在Recovery Menu中选择network模式即可。</p>
<ul>
<li>若硬盘挂载失败，会自动进入到救援模式中。修正fstab表中正确的硬盘uuid，之后正确恢复到</li>
<li>ubuntu摁一次esc键可以进入可grub选择界面，重复摁会导致无法进入的。进入到grub选择界面后，选择ubuntu的高级选项（Advanced options for Ubuntu）并选择recovery mode进入到救援模式。如果没有可选择的界面，尝试重启长摁SHIFT键或者shift+esc组合键看看，出现后可以使用上下方向键，防止自动读秒。</li>
</ul>
<p>编辑grub进去到救援模式：</p>
<ol>
<li>在grub选择菜单中，选择<code>Ubuntu</code>，按e键进入编辑模式</li>
<li>在以<code>linux</code>开头的一行末尾，删除字符串<code>$vt_handoff</code>并添加字符串<code>systemd.unit=rescue.target</code></li>
<li>修改完成后，按Ctrl+X或者F10，在救援模式中启动</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从救援模式切换到紧急模式</span></span><br><span class="line">systemctl emergency</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># exit退出恢复模式，并选择recovery菜单中的resume选项</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="ubuntu紧急模式">9.2 &nbsp&nbsp<a href="#ubuntu紧急模式" class="headerlink" title="ubuntu紧急模式"></a>ubuntu紧急模式</h2><p>在紧急模式中不启动任何东西。没有服务启动、没有挂载点、没有建立套接字，什么也没有。只是一个原始的 shell。</p>
<p>从紧急模式切换到救援模式：<code>systemctl rescue</code></p>
<p>编辑grub进去到救援模式：</p>
<ol>
<li>在grub选择菜单中，选择<code>Ubuntu</code>，按e键进入编辑模式</li>
<li>在以<code>linux</code>开头的一行末尾，删除字符串<code>$vt_handoff</code>并添加字符串<code>systemd.unit=emergency.target</code></li>
<li>修改完成后，按Ctrl+X或者F10，在救援模式中启动</li>
</ol>
<h2 id="开机出现initramfs-requires-a-manual-fsck">9.3 &nbsp&nbsp<a href="#开机出现initramfs-requires-a-manual-fsck" class="headerlink" title="开机出现initramfs(requires a manual fsck)"></a>开机出现initramfs(requires a manual fsck)</h2><p>问题常见于以下常见场景：</p>
<ul>
<li>异常断电或者关机引起文件数据损坏</li>
<li>系统无法启动</li>
<li>连接的驱动器（包括闪存驱动器&#x2F;SD卡这类设备）未按预期工作</li>
</ul>
<p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看提示中说明是哪个硬盘需要执行fsck修复（文件系统一致性检查），例如sda1</span></span><br><span class="line">fsck /dev/sda1 -y</span><br><span class="line"><span class="comment"># 等执行到出现FILE SYSTEM WAS MODIFIED即可reboot系统</span></span><br></pre></td></tr></table></figure>


<h1 id="显卡驱动">10 &nbsp&nbsp<a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h1><h2 id="ubuntu-20-04安装英伟达nvidia闭源驱动">10.1 &nbsp&nbsp<a href="#ubuntu-20-04安装英伟达nvidia闭源驱动" class="headerlink" title="ubuntu 20.04安装英伟达nvidia闭源驱动"></a>ubuntu 20.04安装英伟达nvidia闭源驱动</h2><h3 id="运行nvidia-smi可能出现的报错：Failed-to-initialize-NVML-Driver-library-version-mismatch-NVML-library-version">10.1.1 &nbsp&nbsp<a href="#运行nvidia-smi可能出现的报错：Failed-to-initialize-NVML-Driver-library-version-mismatch-NVML-library-version" class="headerlink" title="运行nvidia-smi可能出现的报错：Failed to initialize NVML: Driver&#x2F;library version mismatch NVML library version"></a>运行nvidia-smi可能出现的报错：Failed to initialize NVML: Driver&#x2F;library version mismatch NVML library version</h3><p>故障原因：系统检测到驱动和NVML版本不一致的原因导致的。</p>
<p>解决方法：<code>sudo reboot</code>重启系统即可。</p>
<h1 id="参考文献">11 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] ubuntu开机出现initramfs(requires a manual fsck)解决办法[EB&#x2F;OL]. <a href="https://www.cnblogs.com/yibeimingyue/p/14261416.html">https://www.cnblogs.com/yibeimingyue/p/14261416.html</a>.<br>[2] 如何在 Ubuntu 18.04 中启动到救援模式或紧急模式[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/53902139">https://zhuanlan.zhihu.com/p/53902139</a>.<br>[3] Linux下如何查看一块硬盘是不是固态硬盘（SSD）[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_42303254/article/details/89317618">https://blog.csdn.net/qq_42303254/article/details/89317618</a>.<br>[4] Ubuntu 18.04 apt update failed for https repository[EB&#x2F;OL]. <a href="https://askubuntu.com/questions/1229122/ubuntu%E2%80%9118%E2%80%9104%E2%80%91apt%E2%80%91update%E2%80%91failed%E2%80%91for%E2%80%91https%E2%80%91repository">https://askubuntu.com/questions/1229122/ubuntu‑18‑04‑apt‑update‑failed‑for‑https‑repository</a>.<br>[5] 将&#x2F;home 目录挂载到新分区（或新硬盘）[EB&#x2F;OL]. <a href="https://blog.51cto.com/runixcn/4605838">https://blog.51cto.com/runixcn/4605838</a>.<br>[6] ubuntu修改密码（详细版）「建议收藏」[EB&#x2F;OL]. <a href="https://cloud.tencent.com/developer/article/2159425">https://cloud.tencent.com/developer/article/2159425</a>.<br>[7] Linux账号和密码文件 &#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;shadow[EB&#x2F;OL]. <a href="https://www.cnblogs.com/fuyuanming/p/6519758.html">https://www.cnblogs.com/fuyuanming/p/6519758.html</a>.<br>[8] What means * and ! at second field of &#x2F;etc&#x2F;shadow?[EB&#x2F;OL]. <a href="https://superuser.com/questions/623881/what-means-and-at-second-field-of-etc-shadow">https://superuser.com/questions/623881/what-means-and-at-second-field-of-etc-shadow</a>.<br>[9] SSH and locked users[EB&#x2F;OL]. <a href="http://arlimus.github.io/articles/usepam/">http://arlimus.github.io/articles/usepam/</a>.<br>[10] Linux shadow文件中密码的加密方式[EB&#x2F;OL]. <a href="https://www.cnblogs.com/7-58/p/13328148.html">https://www.cnblogs.com/7-58/p/13328148.html</a>.<br>[11] 使用root ssh登录ubuntu22.4配置[EB&#x2F;OL]. <a href="https://www.cnblogs.com/waldron/p/16864613.html">https://www.cnblogs.com/waldron/p/16864613.html</a>.<br>[12] Windows连接ssh、scp到Ubuntu服务器[EB&#x2F;OL]. <a href="https://blog.csdn.net/renshy5/article/details/117735410">https://blog.csdn.net/renshy5/article/details/117735410</a>.<br>[13] Ubuntu下移动硬盘的分区、格式化、挂载操作[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/397440213">https://zhuanlan.zhihu.com/p/397440213</a>.<br>[14] Ubuntu ifconfig 查看网卡信息 lo enp2s0 wlp3s0 具体含义[EB&#x2F;OL]. <a href="https://blog.csdn.net/wuyujin1997/article/details/105460929">https://blog.csdn.net/wuyujin1997/article/details/105460929</a>.<br>[15] arch linux 安装teamviewer,todesk,向日葵,远程软件方法[EB&#x2F;OL]. <a href="https://www.jianshu.com/p/e4b61f754071">https://www.jianshu.com/p/e4b61f754071</a>.<br>[16] 怎么卸载用 make install 编译安装的软件？[EB&#x2F;OL]. <a href="https://www.zhihu.com/question/20092756">https://www.zhihu.com/question/20092756</a>.<br>[17] Ubuntu网络配置：使用DHCP自动配置网卡[EB&#x2F;OL]. <a href="https://blog.csdn.net/VqaEditor/article/details/133605050">https://blog.csdn.net/VqaEditor/article/details/133605050</a>.<br>[18] The Ultimate Guide to Recovery and Rescue Mode in Ubuntu[EB&#x2F;OL]. <a href="https://www.fosslinux.com/113044/the-ultimate-guide-to-recovery-and-rescue-mode-in-ubuntu.htm">https://www.fosslinux.com/113044/the-ultimate-guide-to-recovery-and-rescue-mode-in-ubuntu.htm</a>.<br>[19] 如何启动 Ubuntu 22.04 进入救援&#x2F;紧急模式[EB&#x2F;OL]. <a href="https://linux.cn/article-14750-1.html">https://linux.cn/article-14750-1.html</a>.<br>[20] 【已解决】Failed to initialize NVML: Driver&#x2F;library version mismatch NVML library version: 535.161[EB&#x2F;OL]. <a href="https://blog.csdn.net/BetrayFree/article/details/137608544">https://blog.csdn.net/BetrayFree/article/details/137608544</a>.<br>[21] Runlevel  运行级别[EB&#x2F;OL]. <a href="https://en.wikipedia.org/wiki/Runlevel">https://en.wikipedia.org/wiki/Runlevel</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>维修</tag>
        <tag>系统</tag>
        <tag>linux</tag>
        <tag>终端</tag>
        <tag>笔记</tag>
        <tag>计算机</tag>
        <tag>电脑</tag>
        <tag>维护</tag>
        <tag>故障</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>路由排障总结</title>
    <url>/troubleshooting/router-troubleshooting/</url>
    <content><![CDATA[<h1 id="联通光猫">1 &nbsp&nbsp<a href="#联通光猫" class="headerlink" title="联通光猫"></a>联通光猫</h1><h2 id="烽火HG6142A获取超级管理员密码">1.1 &nbsp&nbsp<a href="#烽火HG6142A获取超级管理员密码" class="headerlink" title="烽火HG6142A获取超级管理员密码"></a>烽火HG6142A获取超级管理员密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取光猫的mac地址，获取地址删除-就是实际mac信息</span></span><br><span class="line">arp -a 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋能telnet，成功使能后显示Open telnet success!</span></span><br><span class="line">http://192.168.1.1/telnet?<span class="built_in">enable</span>=1&amp;key=ACC4A9338800</span><br><span class="line"><span class="comment"># 部分型号使能命令：http://192.168.1.1/cgi-bin/telnetenable.cgi?telnetenable=1&amp;key=</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录telnet</span></span><br><span class="line">telnet 192.168.1.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录帐号</span></span><br><span class="line">admin/root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录密码：Fh@mac后六位</span></span><br><span class="line">Fh@338800</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果显示有路径就是成功登录了</span></span><br><span class="line">/var <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入工厂模式</span></span><br><span class="line">load_cli factory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示管理员密码命令，admin_pwd=字段就是超级密码</span></span><br><span class="line">show admin_pwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录光猫，注意192.168.1.1页面只能登录普通账户，user：p752hj44</span></span><br><span class="line">192.168.1.1/cu.html</span><br></pre></td></tr></table></figure>

<h1 id="参考文献">2 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 烽火HG6142A 破解超级管理员密码 改桥接[EB&#x2F;OL]. <a href="http://blog.yunduanzhuji.com/archives/1317/">http://blog.yunduanzhuji.com/archives/1317/</a>.<br>[2] 烽火HG6142A 破解超级管理员密码 改桥接[EB&#x2F;OL]. <a href="https://www.right.com.cn/forum/thread-8252962-1-1.html">https://www.right.com.cn/forum/thread-8252962-1-1.html</a>.<br>[2] 移动光猫HG6142A1烽火改桥接[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/648892946">https://zhuanlan.zhihu.com/p/648892946</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
  </entry>
  <entry>
    <title>运行库修复（Windows平台）</title>
    <url>/troubleshooting/runtime-library-repair-on-windows/</url>
    <content><![CDATA[<div class="note info no-icon"><p>请注意：本教程适用平台为Windows OS。</p>
</div>

<h1 id="什么是运行库">1 &nbsp&nbsp<a href="#什么是运行库" class="headerlink" title="什么是运行库"></a>什么是运行库</h1><h1 id="安装软件或运行软件时提示dll缺失等现象产生的原因">2 &nbsp&nbsp<a href="#安装软件或运行软件时提示dll缺失等现象产生的原因" class="headerlink" title="安装软件或运行软件时提示dll缺失等现象产生的原因"></a>安装软件或运行软件时提示dll缺失等现象产生的原因</h1><p>使用不同框架环境来开发的程序需要相对应的运行库才能正常工作，例如VC的程序需要VC运行库，VB的程序需要VB运行库，java程序需要Java Runtime一样，而使用 .Net 开发的程序需要在 .NET Framework下才能运行。</p>
<p>而纯净的windows系统是不自带有以上这些库或者内置一个版本的库。比如windows系统不自带VC库和java runtime；win10自带的.net框架一般为4.7（老版本的win10可能为4.6或者更早）；win10自带的dx则为dx12。当系统无法提供程序所需的库时，例如没有该库，或者内置库与程序所需的版本不一致，又或者相应库文件已损坏，那么便会弹出dll缺失等运行库问题的错误提示窗口。</p>
<h1 id="解决方法">3 &nbsp&nbsp<a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>请根据错误提示窗口的信息找对应的工具，「.dll缺失」一般排查DX或者VC库即可，「.net framework缺失」一般排查NET框架即可。</p>
<h1 id="DX库和VC库修复：">4 &nbsp&nbsp<a href="#DX库和VC库修复：" class="headerlink" title="DX库和VC库修复："></a>DX库和VC库修复：</h1><ul>
<li><a href="https://learn.microsoft.com/zh-cn/cpp/windows/latest-supported-vc-redist">VC库微软官方下载地址</a></li>
<li><a href="https://support.microsoft.com/zh-cn/windows/%E4%BF%AE%E5%A4%8D%E9%98%BB%E6%AD%A2%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%88%A0%E9%99%A4%E7%9A%84%E9%97%AE%E9%A2%98-cca7d1b6-65a9-3d98-426b-e9f927e1eb4d">微软故障排除程序</a></li>
<li><a href="https://blog.csdn.net/vbcom/article/details/7245186">VBcom大佬开发的DX修复工具（增强版）</a></li>
<li><a href="https://blog.csdn.net/vbcom/article/details/6962388">VBcom大佬开发的DX修复工具（标准版）</a></li>
</ul>
<p>注：请注意要下载增强版，增强版才含有VC库（上述链接便是增强版的）。</p>
<p><strong>DX修复工具修复VC失败的调试信息查看：</strong></p>
<ol>
<li>工具-&gt;选项-&gt;常规-&gt;（勾选）修复失败时启用调试信息</li>
<li>执行「检测并修复」</li>
<li>点击修复失败的项目（软件中会显示蓝色链接），如果有显示未修复文件的具体明细，右击文件选择「在线修复」。如果没有文件明细，只有针对某个C++具体版本的错误描述，右击选择「更多提示」，看完提示后再次右击项目，有可能出现「切换至详细列表」，这时候使用「在线修复」即可解决。</li>
</ol>
<h2 id="vc库安装时无限报错弹窗">4.1 &nbsp&nbsp<a href="#vc库安装时无限报错弹窗" class="headerlink" title="vc库安装时无限报错弹窗"></a>vc库安装时无限报错弹窗</h2><p>安装和卸载vc2017库出现弹窗，标题为<code>Microsoft Visual C++ 2017 x64 Minimum Runtime - 14.10.25008</code>，内容提示为 <code>vc_runtimeAdditional_x64.msi is not a valid installation package for product Microsoft Visual C++ 2017 x64 Minimum Runtime - 14.10.25008</code>。</p>
<p>解决方式：使用官方的<a href="https://support.microsoft.com/zh-cn/windows/%E4%BF%AE%E5%A4%8D%E9%98%BB%E6%AD%A2%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%88%A0%E9%99%A4%E7%9A%84%E9%97%AE%E9%A2%98-cca7d1b6-65a9-3d98-426b-e9f927e1eb4d">故障排除程序（troubleshooter）</a>先卸载掉已存在的残留安装信息，然后重新安装vc库。</p>
<h2 id="vc库安装提示「请确认C-ProgramData-Package-Cache文件夹存在并且有访问权限」">4.2 &nbsp&nbsp<a href="#vc库安装提示「请确认C-ProgramData-Package-Cache文件夹存在并且有访问权限」" class="headerlink" title="vc库安装提示「请确认C:\ProgramData\Package Cache文件夹存在并且有访问权限」"></a>vc库安装提示「请确认<code>C:\ProgramData\Package Cache</code>文件夹存在并且有访问权限」</h2><p>故障现象：安装vc2015-2022库失败，dx修复工具提示「请确认<code>C:\ProgramData\Package Cache</code>文件夹存在并且有访问权限」</p>
<p>解决方法：</p>
<ol>
<li>先执行常规的卸载，然后使用官方的<a href="https://support.microsoft.com/zh-cn/windows/%E4%BF%AE%E5%A4%8D%E9%98%BB%E6%AD%A2%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%88%96%E5%88%A0%E9%99%A4%E7%9A%84%E9%97%AE%E9%A2%98-cca7d1b6-65a9-3d98-426b-e9f927e1eb4d">故障排除程序（troubleshooter）</a>先卸载掉已存在的残留安装信息。</li>
<li>强制删除<code>C:\ProgramData\Package Cache</code>路径下的所有文件。</li>
<li>下载最新的<a href="https://learn.microsoft.com/zh-cn/cpp/windows/latest-supported-vc-redist">vc库安装包</a>安装，一般先装好x86，再装x64。</li>
</ol>
<h1 id="NET框架">5 &nbsp&nbsp<a href="#NET框架" class="headerlink" title=".NET框架"></a>.NET框架</h1><ul>
<li><a href="https://dotnet.microsoft.com/zh-cn/download">.NET框架微软官方下载地址（8.0&amp;9.0）</a></li>
<li><a href="https://dotnet.microsoft.com/download/dotnet-framework">.NET框架微软官方下载地址（3.5-4.8.1）</a></li>
<li><a href="https://support.microsoft.com/zh-cn/help/2698555/microsoft-net-framework-repair-tool-is-available">.NET框架修复工具微软官方下载地址</a></li>
</ul>
<p>注：请自己选择需要的版本下载并进行安装。建议安装或修复运行库后请重启系统。关于版本选择，请看以下说明！！！</p>
<h2 id="注意！！！-Net-Framework版本关系">5.1 &nbsp&nbsp<a href="#注意！！！-Net-Framework版本关系" class="headerlink" title="注意！！！.Net Framework版本关系"></a>注意！！！.Net Framework版本关系</h2><p>.Net版本并非完全独立，但也不支持向下兼容。目前为止微软推出了3个版本的CLR，分别是 1.1、2.0 、4.0。 .Net 4是基于CLR4的，而.Net 2.0 3.0 3.5都是基于 CLR2.0， 3.0 3.5其实只是在2.0的基础上增加了新的功能，并没有改变CLR。</p>
<p>换而言之，你的程序需要2.0&#x2F;3.0&#x2F;3.5之中的任意一个版本时，安装.Net 3.5 SP1就可以了。</p>
<p>所以，如果只是想扩展系统的运行库的话，以win10 OS为例，那么只需要选择安装.Net 3.5 SP1和.Net 4.8（最新的.Net 4.X的就行，4.8是我当初写该教程时最新的版本）</p>
<h3 id="Win10-Net-Framework-3-5-安装错误-0x800f0950-0x800F0954">5.1.1 &nbsp&nbsp<a href="#Win10-Net-Framework-3-5-安装错误-0x800f0950-0x800F0954" class="headerlink" title="Win10 .Net Framework 3.5 安装错误 0x800f0950 &#x2F; 0x800F0954"></a>Win10 .Net Framework 3.5 安装错误 0x800f0950 &#x2F; 0x800F0954</h3><p>问题：一般是系统更新程序WUserver无法争取获取更新文件，可能是由于精简或者相关服务项被禁用导致引起。</p>
<p>解决方法：</p>
<ol>
<li>使用离线方式安装（推荐此法）</li>
<li>恢复WUserver的正常运行，确保在线安装的功能可以正常获取更新文件</li>
</ol>
<p>离线方式安装步骤：</p>
<ol>
<li>下载当前系统版本所对应的系统镜像</li>
<li>把source文件夹中的sxs文件夹解压出来，例如<code>C:\path\sxs</code></li>
<li>管理员身份打开powershell，运行安装命令：<code>dism.exe /online /enable-feature /featurename:NetFX3 /Source:C:\path\sxs</code></li>
</ol>
<h1 id="参考文献">6 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] The Visual C++ missing error PLAGUE! Here’s how to fix that pesky missing .MSI file in 5 easy steps![EB&#x2F;OL]. <a href="https://www.youtube.com/watch?v=ybr5ExVOlqI">https://www.youtube.com/watch?v=ybr5ExVOlqI</a>.<br>[2] 安装.NET Framework 3.5 Error 0x800f0950 in Windows 10[EB&#x2F;OL]. <a href="https://blog.csdn.net/sinat_29315697/article/details/90438542">https://blog.csdn.net/sinat_29315697/article/details/90438542</a>.<br>[3] Win10 .Net Framework 3.5 安装错误 0x800F0954[EB&#x2F;OL]. <a href="https://blog.csdn.net/u012722571/article/details/106336899">https://blog.csdn.net/u012722571/article/details/106336899</a>.<br>[4] DirectX修复工具使用技巧之二——手动修复C++创建失败的文件[EB&#x2F;OL]. <a href="https://blog.csdn.net/VBcom/article/details/114080642">https://blog.csdn.net/VBcom/article/details/114080642</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>运行库</tag>
        <tag>修复</tag>
        <tag>DirectX</tag>
        <tag>NET Framework</tag>
        <tag>Microsoft Visual C++ Runtime</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机软件排障总结</title>
    <url>/troubleshooting/software-troubleshooting/</url>
    <content><![CDATA[<h1 id="AIDA64">1 &nbsp&nbsp<a href="#AIDA64" class="headerlink" title="AIDA64"></a>AIDA64</h1><h2 id="AIDA64提示注册信息已损坏">1.1 &nbsp&nbsp<a href="#AIDA64提示注册信息已损坏" class="headerlink" title="AIDA64提示注册信息已损坏"></a>AIDA64提示注册信息已损坏</h2><p>aida64在windows系统时钟与互联网时钟不正确的时候，会导致报错提示「注册信息已损坏」</p>
<h2 id="AIDA64检测不到CPU封装温度">1.2 &nbsp&nbsp<a href="#AIDA64检测不到CPU封装温度" class="headerlink" title="AIDA64检测不到CPU封装温度"></a>AIDA64检测不到CPU封装温度</h2><p>一般是软件版本并未适配主板型号（软件版本过旧或者主板型号过新），导致软件无法通过主板检测识别到对应的CPU封装温度。</p>
<h1 id="WinRAR">2 &nbsp&nbsp<a href="#WinRAR" class="headerlink" title="WinRAR"></a>WinRAR</h1><ul>
<li>开发商RARLAB官网地址：<a href="https://www.rarlab.com/">https://www.rarlab.com/</a></li>
<li>发行商win.rar GmbH官网地址：<a href="https://www.win-rar.com/">https://www.win-rar.com/</a></li>
<li>简体中文代理商官网地址：<a href="http://www.winrar.com.cn/">http://www.winrar.com.cn/</a></li>
<li>WinRAR 7.11.0简中下载地址<ul>
<li>wrr版（x64位）：<a href="https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20253103/wrr/winrar-x64-711sc.exe">https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20253103/wrr/winrar-x64-711sc.exe</a></li>
<li>rrlb版（x64位）：<a href="https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20253103/rrlb/winrar-x64-711sc.exe">https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20253103/rrlb/winrar-x64-711sc.exe</a></li>
</ul>
</li>
<li>WinRAR 7.1.0简中下载地址<ul>
<li>wrr版（x64位）：<a href="https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240528/wrr/winrar-x64-701sc.exe">https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240528/wrr/winrar-x64-701sc.exe</a></li>
<li>wrr版（x32位）：<a href="https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240528/wrr/winrar-x32-701sc.exe">https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240528/wrr/winrar-x32-701sc.exe</a></li>
</ul>
</li>
<li>WinRAR 7.0.0简中下载地址<ul>
<li>wrr版（x64位）：<a href="https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240306/wrr/winrar-x64-700sc.exe">https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240306/wrr/winrar-x64-700sc.exe</a></li>
<li>wrr版（x32位）：<a href="https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240306/wrr/winrar-x32-700sc.exe">https://www.win-rar.com/fileadmin/winrar-versions/sc/sc20240306/wrr/winrar-x32-700sc.exe</a></li>
</ul>
</li>
</ul>
<h2 id="rrlb和wrr链接版本的区别">2.1 &nbsp&nbsp<a href="#rrlb和wrr链接版本的区别" class="headerlink" title="rrlb和wrr链接版本的区别"></a>rrlb和wrr链接版本的区别</h2><ul>
<li>rrlb：官网公开的下载地址是带广告免费版本，并且下载的中文版本无论是否注册都会有广告（和国内代理的版本一样）。</li>
<li>wrr：官方暗链内部的无广告原版，wrr完成注册之后没有广告。</li>
</ul>
<h2 id="永久授权Winrar专用激活KEY方法-rarreg-key">2.2 &nbsp&nbsp<a href="#永久授权Winrar专用激活KEY方法-rarreg-key" class="headerlink" title="永久授权Winrar专用激活KEY方法(rarreg.key)"></a>永久授权Winrar专用激活KEY方法(rarreg.key)</h2><p>使用方法：将下列注册码保存为rarreg.key文件，和WinRAR的放置于一起，安装的时候程序自动拷贝rarreg.key的程序安装路径的根目录下。</p>
<ul>
<li>注册码1</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RAR registration data</span><br><span class="line">Admin</span><br><span class="line">Unlimited Company License</span><br><span class="line">UID=1d7426b0b166c91c21ab</span><br><span class="line">641221225021abd0925f7c70456ecd71f724a7f5a00b0a0f7d19ee</span><br><span class="line">45c5e20951dae2857c2960fce6cb5ffde62890079861be57638717</span><br><span class="line">7131ced835ed65cc743d9777f2ea71a8e32c7e593cf66794343565</span><br><span class="line">b41bcf56929486b8bcdac33d50ecf773996076c281ccab247f6153</span><br><span class="line">ed97a3e4a4cb9bffbf35ed364a5cc6908fd2cdc84e9f53a33cf463</span><br><span class="line">9d85cd75291397987399f5159745c84654dfd11e471ec7a360b22a</span><br><span class="line">bbaf66105e62e8afa2d5d154b0c164b1f5377d2975460025531542</span><br></pre></td></tr></table></figure>
<ul>
<li>注册码2</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RAR registration data</span><br><span class="line">Federal Agency for Education</span><br><span class="line">1000000 PC usage license</span><br><span class="line">UID=b621cca9a84bc5deffbf</span><br><span class="line">6412612250ffbf533df6db2dfe8ccc3aae5362c06d54762105357d</span><br><span class="line">5e3b1489e751c76bf6e0640001014be50a52303fed29664b074145</span><br><span class="line">7e567d04159ad8defc3fb6edf32831fd1966f72c21c0c53c02fbbb</span><br><span class="line">2f91cfca671d9c482b11b8ac3281cb21378e85606494da349941fa</span><br><span class="line">e9ee328f12dc73e90b6356b921fbfb8522d6562a6a4b97e8ef6c9f</span><br><span class="line">fb866be1e3826b5aa126a4d2bfe9336ad63003fc0e71c307fc2c60</span><br><span class="line">64416495d4c55a0cc82d402110498da970812063934815d81470829275</span><br></pre></td></tr></table></figure>

<h1 id="Adobe">3 &nbsp&nbsp<a href="#Adobe" class="headerlink" title="Adobe"></a>Adobe</h1><h2 id="Pr导出h265编码报错无法安装mc-enc-hevc">3.1 &nbsp&nbsp<a href="#Pr导出h265编码报错无法安装mc-enc-hevc" class="headerlink" title="Pr导出h265编码报错无法安装mc_enc_hevc"></a>Pr导出h265编码报错无法安装mc_enc_hevc</h2><p>提示报错信息：Unable to install:</p>
<ul>
<li>&quot;C:\User\Public\Documents\AdobeInstalledCodecsTier2\4.0\mc_enc_hevc.dll&quot;</li>
<li>&quot;C:\User\Public\Documents\AdobeInstalledCodecsTier2\3.0\mc_enc_hevc.dll&quot;</li>
<li>&quot;C:\Users\Public\Documents\AdobeInstalledCodecsTier2\2.0\mc_enc_hevc.dll&quot;</li>
</ul>
<p>原因：adobe的bug，实际就是因为无法在公共用户的Documents文件夹内生成mc_enc_hevc.dll文件。</p>
<p>解决方法：</p>
<ul>
<li>新建其他的系统账户，用pr导出h265编码，可以看到Public路径成功生成dll，再切换回去原系统账户，并使用火绒添加文件保护，避免再次被删除。（实测可用）</li>
<li>defender等杀毒软件添加dll路径的排除项（实测无效）</li>
</ul>
<p>相关故障报道：</p>
<ul>
<li><a href="https://community.adobe.com/t5/premiere-pro-discussions/unable-to-install-mc-enc-hevc-dll/td-p/12111305/page/2">https://community.adobe.com/t5/premiere-pro-discussions/unable-to-install-mc-enc-hevc-dll/td-p/12111305/page/2</a></li>
<li><a href="https://mavicpilots.com/threads/h265-hevc-in-premiere-pro-2020-does-not-work.87493/">https://mavicpilots.com/threads/h265-hevc-in-premiere-pro-2020-does-not-work.87493/</a></li>
<li><a href="https://community.adobe.com/t5/premiere-pro-bugs/unable-to-install-mc-enc-hevc-dll-for-hevc-decoding-encoding/idi-p/13590930">https://community.adobe.com/t5/premiere-pro-bugs/unable-to-install-mc-enc-hevc-dll-for-hevc-decoding-encoding/idi-p/13590930</a></li>
<li><a href="https://www.youtube.com/watch?v=jxShFDfbr7Y">https://www.youtube.com/watch?v=jxShFDfbr7Y</a></li>
</ul>
<h1 id="火绒">4 &nbsp&nbsp<a href="#火绒" class="headerlink" title="火绒"></a>火绒</h1><h2 id="关于近期explorer误报问题说明">4.1 &nbsp&nbsp<a href="#关于近期explorer误报问题说明" class="headerlink" title="关于近期explorer误报问题说明"></a>关于近期explorer误报问题说明</h2><p>火绒官方给出的解决方法：<a href="https://bbs.huorong.cn/thread-136360-1-1.html">https://bbs.huorong.cn/thread-136360-1-1.html</a></p>
<p>如果按照官方的方法操作后，在执行<code>start explorer.exe</code>依旧是提示找不到文件的话，证明后台依旧是被火绒强杀了。</p>
<p>解决方案：</p>
<ol>
<li><code>cd /d &quot;C:\Program Files (x86)\Huorong\Sysdiag\bin\HipsMain.exe&quot;</code></li>
<li>在火绒主界面恢复被误杀的explorer.exe文件，并添加白名单。</li>
<li><code>start explorer.exe</code></li>
</ol>
<p>事件来龙去脉分析：<a href="https://www.zhihu.com/question/642107690">https://www.zhihu.com/question/642107690</a></p>
<h1 id="剪映">5 &nbsp&nbsp<a href="#剪映" class="headerlink" title="剪映"></a>剪映</h1><h2 id="剪映电脑版（PC版）没有设置背景的选项？">5.1 &nbsp&nbsp<a href="#剪映电脑版（PC版）没有设置背景的选项？" class="headerlink" title="剪映电脑版（PC版）没有设置背景的选项？"></a>剪映电脑版（PC版）没有设置背景的选项？</h2><p>给视频加背景，需要将视频放入序列主轴上，才会出现背景选项。</p>
<p>背景设置有4种方式：</p>
<ol>
<li>模糊：常见于画面无法填充满画布时，用来创建模糊背景填充空白地方。</li>
<li>颜色</li>
<li>样式</li>
<li>品牌背景</li>
</ol>
<h1 id="WeGame腾讯平台游戏">6 &nbsp&nbsp<a href="#WeGame腾讯平台游戏" class="headerlink" title="WeGame腾讯平台游戏"></a>WeGame腾讯平台游戏</h1><h2 id="腾讯游戏-ACE-BASE-SYS-蓝屏">6.1 &nbsp&nbsp<a href="#腾讯游戏-ACE-BASE-SYS-蓝屏" class="headerlink" title="腾讯游戏 ACE BASE.SYS 蓝屏"></a>腾讯游戏 ACE BASE.SYS 蓝屏</h2><p>ACE Base.sys是腾讯反外挂的一个系统文件，当该文件出现不兼容的情况，腾讯系游戏都可能被该文件触发蓝屏。</p>
<p>解决方法：</p>
<ul>
<li>等wegame更新</li>
<li>重装游戏（确保清除老旧文件）</li>
<li>更新系统（重装系统）</li>
</ul>
<p>以往一种植入假体的解决方法：在系统盘的system32&#x2F;drivers文件夹下建立一个只读的假体，分别是ACE-BASE.sys和ACE-GAME.sys两个文件，设置只读，并禁用掉Administrator的继承权。该法实测无效，估计应该是作为bug很早就被修复过了，问题可能是这儿的。</p>
<h2 id="关于腾讯机器码">6.2 &nbsp&nbsp<a href="#关于腾讯机器码" class="headerlink" title="关于腾讯机器码"></a>关于腾讯机器码</h2><p>参考文章：<a href="https://tieba.baidu.com/p/7808678958">https://tieba.baidu.com/p/7808678958</a></p>
<h1 id="Steam">7 &nbsp&nbsp<a href="#Steam" class="headerlink" title="Steam"></a>Steam</h1><h2 id="找回原有的steam安装的游戏（无需重新安装）">7.1 &nbsp&nbsp<a href="#找回原有的steam安装的游戏（无需重新安装）" class="headerlink" title="找回原有的steam安装的游戏（无需重新安装）"></a>找回原有的steam安装的游戏（无需重新安装）</h2><p>steam客户端-&gt;设置-&gt;存储空间-&gt;添加驱动器（点击盘符即可出现下拉选项弹窗）-&gt;添加新的Steam库文件夹（点击盘符即可出现下拉选项弹窗）</p>
<p>P.S. 此法也可以定位到旧硬盘上的主steam程序本体路径下安装的游戏（非那种Steamlibrary目录），如果游戏较多较大，扫描时间会有点久，让它后台自行扫描。</p>
<h1 id="CS2">8 &nbsp&nbsp<a href="#CS2" class="headerlink" title="CS2"></a>CS2</h1><h2 id="CS2添加启动参数调出启动项选择国服-国际服">8.1 &nbsp&nbsp<a href="#CS2添加启动参数调出启动项选择国服-国际服" class="headerlink" title="CS2添加启动参数调出启动项选择国服&#x2F;国际服"></a>CS2添加启动参数调出启动项选择国服&#x2F;国际服</h2><p>游戏-&gt;属性-&gt;通用-&gt;启动选项：<code>-promptperfectworld</code></p>
<h1 id="浏览器">9 &nbsp&nbsp<a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><h2 id="视频网站产生大量的indexeddb-blob本地缓存">9.1 &nbsp&nbsp<a href="#视频网站产生大量的indexeddb-blob本地缓存" class="headerlink" title="视频网站产生大量的indexeddb.blob本地缓存"></a>视频网站产生大量的indexeddb.blob本地缓存</h2><p>故障表现：C盘中出现大量的indexeddb.blob本地缓存文件，急剧占用C盘系统盘空间。</p>
<p>目前遇到的平台：</p>
<ul>
<li>优酷网</li>
<li>腾讯短时频</li>
</ul>
<p>解决方案：</p>
<ol>
<li>使用spacesniffer应用查看具体文件占用的路径</li>
<li>手动删除indexeddb.blob文件（目前没有浏览器选项可以控制，本人猜测是视频网站使用了该功能作为视频缓存功能，这个技术理论上可以无限制地生成文件）。</li>
</ol>
<h1 id="Autodesk-3ds-Max">10 &nbsp&nbsp<a href="#Autodesk-3ds-Max" class="headerlink" title="Autodesk 3ds Max"></a>Autodesk 3ds Max</h1><p>3ds max已停止工作或者打开工程文件卡死无响应或者操作渲染时画面假死</p>
<ul>
<li>解决方法1：删除&#96;C:\users\Administrator\AppData\Local\Autodesk\3dsmax&#39;：移除所有崩溃信息和设置文件，即初始化至初始设置。</li>
<li>解决方法2：系统自带的非英输入法开启兼容性设置（不单只微软拼音有反馈记录，也有网友反馈日文输入法也同样遇到这种现象）</li>
<li>解决方法3：3Ds MAX安装根目录的dlcomponents文件夹内，找到DlComponentList_x64文件或者DlComponentList文件，删除并用删除文件的名称创建文件夹（作用原理就是win系统无法再二次生成同名称的文件，因为前面创建的文件夹名称一样且已存在）</li>
</ul>
<h1 id="企业微信">11 &nbsp&nbsp<a href="#企业微信" class="headerlink" title="企业微信"></a>企业微信</h1><h2 id="在线表格报错：文档状态有更新-40036">11.1 &nbsp&nbsp<a href="#在线表格报错：文档状态有更新-40036" class="headerlink" title="在线表格报错：文档状态有更新(40036)"></a>在线表格报错：文档状态有更新(40036)</h2><p>故障表现：</p>
<ol>
<li>首先弹出提示「文档已在另一个标签页中打开离线编辑，请关闭对应标签页后再重新加载。」</li>
<li>然后弹出报错「文档状态有更新(40036)」</li>
</ol>
<p>原因：qtCef缓存数据异常。</p>
<p>解决方法：打开企业微信的设置页面，查看具体数据保存路径。关闭企微，找到路径，删除里面的qtCef文件夹，让程序重新运行自动生成。例如，默认路径为<code>C:\Users\User name\Documents\WXWork\qtCef</code>。</p>
<h1 id="360系列软件">12 &nbsp&nbsp<a href="#360系列软件" class="headerlink" title="360系列软件"></a>360系列软件</h1><h2 id="360壁纸">12.1 &nbsp&nbsp<a href="#360壁纸" class="headerlink" title="360壁纸"></a>360壁纸</h2><p>360壁纸开关在360浏览器中设置，并不在360壁纸应用程序中。</p>
<h1 id="ToDesk远程软件">13 &nbsp&nbsp<a href="#ToDesk远程软件" class="headerlink" title="ToDesk远程软件"></a>ToDesk远程软件</h1><h2 id="受控端为精简版时，ToDesk会话数受限">13.1 &nbsp&nbsp<a href="#受控端为精简版时，ToDesk会话数受限" class="headerlink" title="受控端为精简版时，ToDesk会话数受限"></a>受控端为精简版时，ToDesk会话数受限</h2><p>提示报错：当前会话数受限，请前往个人中心购买</p>
<p>原因：ToDesk精简版出了新的限制（精简版界面标注内容：仅支持被控，免安装运行（该版本仅支持主控登录账号为VIP时连接使用））</p>
<p>解决方法：被控ToDesk下载安装全功能版或是操控端账号升级至VIP。</p>
<h1 id="LocalSend">14 &nbsp&nbsp<a href="#LocalSend" class="headerlink" title="LocalSend"></a>LocalSend</h1><h2 id="RhttpTimeoutException-Request-timed-out">14.1 &nbsp&nbsp<a href="#RhttpTimeoutException-Request-timed-out" class="headerlink" title="RhttpTimeoutException: Request timed out"></a>RhttpTimeoutException: Request timed out</h2><p>问题：手机往PC Windows系统传数据时，报错<code>RhttpTimeoutException: Request timed out</code>，但是PC往手机传数据正常。</p>
<p>原因：Windows防火墙屏蔽了出口端口。一般是由于网络类型引起，例如网络类型被设置为「公用网络」。</p>
<p>解决方法：将Windows的网络类型从「公用网络」切换为「专用网络」。</p>
<h1 id="华硕软件">15 &nbsp&nbsp<a href="#华硕软件" class="headerlink" title="华硕软件"></a>华硕软件</h1><h2 id="关于华硕GPUTweakIII卸载一坨大垃圾残留日志">15.1 &nbsp&nbsp<a href="#关于华硕GPUTweakIII卸载一坨大垃圾残留日志" class="headerlink" title="关于华硕GPUTweakIII卸载一坨大垃圾残留日志"></a>关于华硕GPUTweakIII卸载一坨大垃圾残留日志</h2><p>2025-05-23T22:41:33+08:00通过SpaceSniffer查看分析C盘的文件，发现已卸载的华硕GPUTweakIII仍在C盘占用多达4.4GB的存储空间。进一步分析发现全是残留下来的日志文件。最大的日志文件<code>VenderLog.txt</code>大小高达1.64GB，真是一坨大屎。</p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/software-troubleshooting/asus_gputweaker_file1.webp">SpaceSniffer显示的大小</div>
<div class="flex-column">
<img data-src="/images/software-troubleshooting/asus_gputweaker_file2.webp">GPUTweakIII残留文件内容</div>
<div class="flex-column">
<img data-src="/images/software-troubleshooting/asus_gputweaker_file3.webp">GPUTweakIII的Logs文件夹属性</div>
<div class="flex-column">
<img data-src="/images/software-troubleshooting/asus_gputweaker_file4.webp">GPU Tweak III-0.log文件属性</div>
</div>

<h1 id="参考文献">16 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 腾讯游戏 ACE BASE.SYS 蓝屏.[EB&#x2F;OL]. <a href="https://easu.net/lol-acebase-sys/">https://easu.net/lol-acebase-sys/</a>.<br>[2] “https_v.youku.com_0.indexeddb.blob”文件夹产生大量本地缓存.[EB&#x2F;OL]. <a href="https://baijiahao.baidu.com/s?id=1702083151817006833&wfr=spider&for=pc">https://baijiahao.baidu.com/s?id=1702083151817006833&amp;wfr=spider&amp;for=pc</a>.<br>[3] 永久授权Winrar专用激活KEY方法(rarreg.key).[EB&#x2F;OL]. <a href="https://www.cnblogs.com/Gantz/p/17692420.html">https://www.cnblogs.com/Gantz/p/17692420.html</a>.<br>[4] [应用软件] WinRAR 7.00 Final 正式版 压缩解压 2024-02-29.[EB&#x2F;OL]. <a href="https://bbs.pcbeta.com/viewthread-1994791-1-1.html">https://bbs.pcbeta.com/viewthread-1994791-1-1.html</a>.<br>[5] 3Ds Max安装与使用问题解决办法有哪些.[EB&#x2F;OL]. <a href="https://www.bilibili.com/read/cv21725210/">https://www.bilibili.com/read/cv21725210/</a>.<br>[6] Keyboard Inputs freeze 3DS MAX.[EB&#x2F;OL]. <a href="https://forums.autodesk.com/t5/3ds-max-forum/keyboard-inputs-freeze-3ds-max/td-p/9634148">https://forums.autodesk.com/t5/3ds-max-forum/keyboard-inputs-freeze-3ds-max/td-p/9634148</a>.<br>[7] RhttpTimeoutException: Request timed out[EB&#x2F;OL]. <a href="https://github.com/localsend/localsend/issues/2121">https://github.com/localsend/localsend/issues/2121</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>维修</tag>
        <tag>软件</tag>
        <tag>计算机</tag>
        <tag>电脑</tag>
        <tag>维护</tag>
        <tag>故障</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机硬件排障总结</title>
    <url>/troubleshooting/hardware-troubleshooting/</url>
    <content><![CDATA[<h1 id="PC组件常见品牌质保信息查询">1 &nbsp&nbsp<a href="#PC组件常见品牌质保信息查询" class="headerlink" title="PC组件常见品牌质保信息查询"></a>PC组件常见品牌质保信息查询</h1><p>见「<a href="/bookmark/#%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6%E5%93%81%E7%89%8C%E8%B4%A8%E4%BF%9D%E6%9F%A5%E8%AF%A2">电脑硬件品牌质保查询</a>」</p>
<h1 id="CPU">2 &nbsp&nbsp<a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><h2 id="CPU超频超频的设置">2.1 &nbsp&nbsp<a href="#CPU超频超频的设置" class="headerlink" title="CPU超频超频的设置"></a>CPU超频超频的设置</h2><ul>
<li>Multi Core Enhancement：强制所有核心运行在最高频率，关闭这个选项可以省电</li>
<li>PU Ratio：CPU倍频，通常会有几个选项，Auto，AllCore，Per Core，Specific Per core；Auto就是默认的CPU倍频变化，可以再AIDA64中的CPUID子页面中看到单核最大睿频，双核最大睿频，四核最大睿频等。All Core 对于超频用户来说是经常选择的选项，也就是所有核心同时设定倍频的频率。PerCore就可以设置在不同的负载下有多少核心的倍频有多大，就像Auto一样。Specific Per Core是给极限玩家用的，你可以分别尝试并分配每个独立核心最高可以达到多少倍频。</li>
<li>CPU Cache Ratio：CPU环形总线倍频，也是CPU缓存频率，北桥频率。<ul>
<li>注：环形总线是所有核心L3缓存沟通的桥梁，通常不需要太高频率，够用就好。也就是CPU-Z当中的NB Frequency。</li>
</ul>
</li>
<li>Minimum CPU Cache Ratio：最低CPU缓存倍频。如字面意思，防止CPU缓存自动降低。</li>
<li>BCLK Frequency：外频。 CPU与缓存的频率&#x3D;外频*倍频。</li>
<li>BCLK Spread Spectrum：外频扩展频谱，超频请务必关闭。<ul>
<li>注：当主板上的时钟发生器工作时，脉冲的峰值会产生电磁干扰（EMI），展频技术可以降低脉冲发生器所产生的电磁干扰。在没有遇到电磁干扰问题时，应将此类项目的值全部设为“Disabled”，这样可以优化系统性能，提高系统稳定性；如果遇到电磁干扰问题，则应将该项设为“Enabled”以便减少电磁干扰。在将处理器超频时，最好将该项设置为“Disabled”，因为即使是微小的峰值飘移也会引起时钟的短暂突发，这样会导致超频后的处理器被锁死。</li>
</ul>
</li>
<li>Boot Performance Mode：进入Windows之前的CPU性能。通常会有Max Battery也就是CPU最节能性能，通常CPU会工作在最低倍频的状态下，直到进入Windows，设置为Max Non-Turbo时CPU就会工作在自动倍频下，设置为Turbo Performance时CPU会运行在最大速度下。</li>
<li>Reliability Stress Restrictor：可靠性应力限制。CPU会提交给Windows一些参数被记录在日志，通常用来防止损坏的主板或CPU运行。而Windows会将某些CPU超频现象归类为“错误”从而扼杀CPU速度。</li>
<li>FCLK Frequency：System（Home） Agent频率。CPU系统代理通常运行在800Mhz，如果CPU外频设置在200Mhz，那么这个参数一般设置为400Mhz，因为200*4&#x3D;800Mhz。最高可以运行在1Ghz。（Intel也曾经建议Skylake以上的台式机最好提高FCLK到1Ghz）</li>
<li>System（Home） Agent是什么东东呢？ 它包含PCIE、DMI总线、内存控制器、显示引擎等，它还包含CPU电力管理单元，与CPU环形总线智能集成。</li>
<li>AVX Ratio Offset：AVX倍频补偿。超频玩家最喜闻乐见的参数，可以大幅度提高超频稳定性，建议设置在3。设置在1可以让CPU在浮点运算的时候比整数低100Mhz，比如你的CPU一般情况下跑在4.5Ghz，那么在跑AVX指令集时就会降低到4.4Ghz，如果设置为3就会降低300Mhz，以此类推。这个选项对于超频十分重要，因为AVX指令集调用时，CPU的功耗发热都非常大，适当降低AVX频率有助于超频成功率的提升。</li>
<li>BCLK Aware Adaptive Voltage：外频&#x2F;电压比率调整。当启用时，CPU通常会小心计算外频与电压之间的比率，这个选项通常适用于外频超频而防止电压过高。</li>
<li>Ring to Core Ratio Offset：环形总线与核心倍频比自动调整。如果你手动设置了缓存频率，这个选项通常不管用。</li>
<li>Intel SpeedStep Technology：Intel CPU节电技术。CPU会根据处理器任务量自动调整频率和电压。如果禁用，那么Windows电源管理的“最小CPU速度”不起作用。</li>
<li>Intel Turbo Boost Technology：CPU睿频。一般超频的时候这个选项不起作用。</li>
<li>Intel Speed Shift Technology：Intel CPU 节电技术、状态调整。启用后会暴露CPU的CPPC接口给Windows，出现在第六代酷睿上。以前CPU核心从深度睡眠的C7状态下激活需要很长时间，这个延迟通常比内存延迟要大得多，至少需要30毫秒。而这个技术可以大大提高响应速度，官方介绍只需要说1毫秒。<ul>
<li>一般推荐可以禁用Speed shift，因为实际没啥用（详见<a href="https://forums.tomshardware.com/threads/what-does-intel-speed-shift-do.3574107/#post-21577515">What does Intel Speed Shift do?</a>），但SpeedStep需要开启，因为是重要的性能和功率调整选项。</li>
</ul>
</li>
<li>Long Duration Power Limit：长期CPU功耗限制。对于超频来说，有多大调多大（直接无限输入数字9）。</li>
<li>Long Duration Maintained：当CPU长期功耗限制的周期时间。对于超频来说，同样是有多大调多大。</li>
<li>Short Duration Power Limit：短时间CPU功耗限制。对于超频来说，还是有多大调多大。</li>
<li>CPU Core Current Limit：CPU核心电流限制。对于超频来说，一样，有多大调多大。</li>
</ul>
<h2 id="ZEN3的whea18错误">2.2 &nbsp&nbsp<a href="#ZEN3的whea18错误" class="headerlink" title="ZEN3的whea18错误"></a>ZEN3的whea18错误</h2><p>系列通病，也看批次，若测试频繁复现whea18，建议走售后换新。</p>
<h2 id="Intel-13-14代高端U的缺陷">2.3 &nbsp&nbsp<a href="#Intel-13-14代高端U的缺陷" class="headerlink" title="Intel 13&#x2F;14代高端U的缺陷"></a>Intel 13&#x2F;14代高端U的缺陷</h2><p>关于问题原因可详看Intel官方公告内容。</p>
<p>Intel官方公告：</p>
<ul>
<li><a href="https://community.intel.com/t5/Processors/July-2024-Update-on-Instability-Reports-on-Intel-Core-13th-and/m-p/1617113">July 2024 Update on Instability Reports on Intel Core 13th and 14th Gen Desktop Processors</a></li>
<li><a href="https://community.intel.com/t5/Processors/Additional-Warranty-Updates-on-Intel-Core-13th-14th-Gen-Desktop/m-p/1620853">Additional Warranty Updates on Intel Core 13th&#x2F;14th Gen Desktop Processors</a>：延长2年质保的公告（包括盒装、散片、OEM）</li>
</ul>
<p>相关网络报道：</p>
<ul>
<li><a href="https://www.chiphell.com/thread-2585702-1-1.html">「[CPU] 英特尔第 13&#x2F;14 代处理器设备运行虚幻引擎游戏崩溃？原因找到了」</a></li>
<li><a href="https://www.techspot.com/news/102555-intel-finally-investigating-reports-high-end-13th-14th.html">「Intel is finally investigating reports of high-end 13th&#x2F;14th-gen CPUs causing game crashes」</a></li>
<li><a href="https://www.chiphell.com/thread-2619808-1-1.html">英特尔第13、14代CPU不稳定的问题迫使Alderon Games改用AMD，并建议客户也这么做</a></li>
<li><a href="https://wccftech.com/intel-14th-gen-13th-gen-cpu-instability-issues-forces-game-studio-to-switch-to-amd-advises-customers-same/">Intel’s 14th Gen &amp; 13th Gen CPU Instability Issues Forces Game Studio “Alderon Games” To Switch To AMD, Advises Customers The Same</a></li>
<li><a href="https://www.chiphell.com/thread-2617819-1-1.html">[CPU] 现阶段避坑intel 13 14代处理器不稳定问题的，针对游戏用户intel处理器选购和使用建议</a></li>
</ul>
<p><del>原因：RAD 公司隶属于 Epic Games 公司，负责开发 Bink 视频编解码器和 Oodle 数据压缩技术。RAD 公司表示，导致游戏崩溃的原因并非 Oodle 或 Unreal，而是过于乐观的 BIOS 设置，导致一小部分处理器在高负载情况下超出预设的时钟频率和功耗上限，并错误地执行指令。</del></p>
<p>解决方法：需要锁倍频到54x或者53x。（非最终解决手段，原因可详看Intel官方公告内容）</p>
<h1 id="内存">3 &nbsp&nbsp<a href="#内存" class="headerlink" title="内存"></a>内存</h1><h2 id="关于内存的术语">3.1 &nbsp&nbsp<a href="#关于内存的术语" class="headerlink" title="关于内存的术语"></a>关于内存的术语</h2><p>1DPC的意思是，每个通道1根内存<br>2DPC的意思是，每个通道2根内存<br>1R的意思是，单面颗粒内存<br>2R的意思是，双面颗粒内存</p>
<h2 id="内存运行不稳定的异常排查">3.2 &nbsp&nbsp<a href="#内存运行不稳定的异常排查" class="headerlink" title="内存运行不稳定的异常排查"></a>内存运行不稳定的异常排查</h2><p>常见因素：</p>
<ul>
<li>内存高温</li>
<li>内存体质不佳，超频不稳定</li>
</ul>
<h3 id="内存高温引起LMZX压缩报错">3.2.1 &nbsp&nbsp<a href="#内存高温引起LMZX压缩报错" class="headerlink" title="内存高温引起LMZX压缩报错"></a>内存高温引起LMZX压缩报错</h3><p>在以往排障的案例中，有遇到过一例内存高温导致使用<code>UUP dump</code>脚本合成Windows镜像时，并且只在WIM转换为ESD的LMZX压缩过程中出现错误。具体报错为：<code>Errors were reported during export. Discarding install.esd</code>。这个机器由于搭配的CPU为13900K，一开始排障方向并未考虑到内存因素，后来反复测试CPU稳定性查找不出原因，排除了CPU缩缸的可能性，然后测试TM5压测，发现为内存高温引起的这个报错。</p>
<p>解决方法：添加风扇给内存降温即可解决。</p>
<h2 id="内存超频">3.3 &nbsp&nbsp<a href="#内存超频" class="headerlink" title="内存超频"></a>内存超频</h2><p><a href="https://zhuanlan.zhihu.com/p/77104030">原来内存超频这么简单——intel平台DDR4内存超频教程</a></p>
<h2 id="AM4-AM5平台内存自检慢">3.4 &nbsp&nbsp<a href="#AM4-AM5平台内存自检慢" class="headerlink" title="AM4&#x2F;AM5平台内存自检慢"></a>AM4&#x2F;AM5平台内存自检慢</h2><p>主要问题是在于memory context restore这个选项，大部分主板默认是disable。</p>
<p>解决方法：一般是设置开启「memory context restore」即可，如有异常或者华硕主板，可能需要设置「power down enable」（华硕主板设置memory context restore时会自动设置power down enable）。以下是微星AMD主板的设置位置：</p>
<ul>
<li>overclocking-&gt;memory context restore&#x3D;auto改为enabled</li>
<li>overclocking-&gt;advanced dram configuration-&gt;misc item-&gt;power down enable&#x3D;auto改为enabled</li>
</ul>
<p>P.S. 以MAG B650M MORTAR WIFI主板实测，「power down enable」不设置，保持「auto」自动值使用也未遇到问题。</p>
<h1 id="不开机-自检不过">4 &nbsp&nbsp<a href="#不开机-自检不过" class="headerlink" title="不开机&#x2F;自检不过"></a>不开机&#x2F;自检不过</h1><h2 id="华硕主板Power-LED功能排查自检状况">4.1 &nbsp&nbsp<a href="#华硕主板Power-LED功能排查自检状况" class="headerlink" title="华硕主板Power LED功能排查自检状况"></a>华硕主板Power LED功能排查自检状况</h2><ul>
<li>开机后Power LED快闪,1秒闪烁4次（提示没有内存或内存错误）</li>
<li>开机后Power LED慢闪,2秒闪烁1次（提示没有显示适配器或显示适配器错误）</li>
<li>开机后Power LED超慢闪,灯亮4秒，灯灭4秒（提示无开机设备或开机设备错误）</li>
</ul>
<h2 id="部分华硕混血ROG主板的自动掉电状态">4.2 &nbsp&nbsp<a href="#部分华硕混血ROG主板的自动掉电状态" class="headerlink" title="部分华硕混血ROG主板的自动掉电状态"></a>部分华硕混血ROG主板的自动掉电状态</h2><p>部分华硕混血ROG主板搭配华硕雷神&#x2F;雷鹰电源系列，可能出现突然掉电，按开机键无任何反应。甚至于拔电源线，扣电池都无任何反应（cmos设置甚至都无法清除，拔插24pin供电恢复正常供电后可观测到CMOS设置无变化）。</p>
<p>解决方法：若拔电源线扣电池都无任何反应的话，可尝试拔插主板24pin。拔插后主板即可恢复正常上电。</p>
<p>目前观测到存在该现象的主板型号：</p>
<ul>
<li>z790-h</li>
<li>z790-a s</li>
</ul>
<h2 id="内存接触不良导致自启后直接掉电">4.3 &nbsp&nbsp<a href="#内存接触不良导致自启后直接掉电" class="headerlink" title="内存接触不良导致自启后直接掉电"></a>内存接触不良导致自启后直接掉电</h2><p>老式机子不亮机：大多是内存条接触不良引起，可尝试重新拔插（擦拭金手指）</p>
<h2 id="机箱前置IO跳线反接引起的无线重启，无法通过主板自检">4.4 &nbsp&nbsp<a href="#机箱前置IO跳线反接引起的无线重启，无法通过主板自检" class="headerlink" title="机箱前置IO跳线反接引起的无线重启，无法通过主板自检"></a>机箱前置IO跳线反接引起的无线重启，无法通过主板自检</h2><p>部分机箱前置IO跳线设计方面不合理，前置重启键跳线一旦反接（即文字丝印朝上），可能会引起主板无线重启，无法正常通过自检，在华硕主板的powerled功能上可观测到电源指示灯表现为：开机后Power LED快闪，1秒闪烁4次，闪烁4次后会灭灯停顿约半秒，之后重复这个闪烁状态（有点类似无内存自检不过的情况）。</p>
<p>解决方法：按照正规方式，连接前置IO跳线，即文字丝印朝下。</p>
<h2 id="走M-2-插槽-Key-E-通道的无线网卡短路引起主板无法通过自检开机">4.5 &nbsp&nbsp<a href="#走M-2-插槽-Key-E-通道的无线网卡短路引起主板无法通过自检开机" class="headerlink" title="走M.2 插槽 (Key E)通道的无线网卡短路引起主板无法通过自检开机"></a>走M.2 插槽 (Key E)通道的无线网卡短路引起主板无法通过自检开机</h2><p>部份主板提供一个 M.2 插槽 (Key E)，可支持 2230 Wi-Fi&#x2F;BT 和 Intel® CNVi (集成 Wi-Fi&#x2F;BT) 模块，例如Intel Wireless-AC 9560（M.2 2230）模块，当该网卡发生短路时，会导致主板无法开机黑屏，具体会卡在自检阶段中的外设检测阶段，例如Power LED超慢闪,灯亮4秒，灯灭4秒（提示无开机设备或开机设备错误）。</p>
<h1 id="主板">5 &nbsp&nbsp<a href="#主板" class="headerlink" title="主板"></a>主板</h1><h2 id="华硕主板的CPU-FAN接口和CPU-OPT接口的区别">5.1 &nbsp&nbsp<a href="#华硕主板的CPU-FAN接口和CPU-OPT接口的区别" class="headerlink" title="华硕主板的CPU_FAN接口和CPU_OPT接口的区别"></a>华硕主板的CPU_FAN接口和CPU_OPT接口的区别</h2><p>CPU_FAN是CPU风扇，CPU_OPT则是备选接口，一般是给双风扇散热器的第二个风扇使用（例如双风扇的塔式风冷，而且没有一分二线）。CPU_FAN和CPU_OPT的转速策略是相同的，共享控制，OPT是optional（可选）的缩写，OPT的转速不能单独设置，在Q-Fan控制中，都是由CPU_FAN接管设置，详见《ROG MAXIMUS Z790 HERO 用户手册》的P29。备选的也可以插水冷头的供电，但是一般来说这两个口的供电都只有1A，电压12V，因此支持最大功率为12W。部分高端主板会有W_PUMP接口，这个是专门给水冷头用的，能提供3A的供电。</p>
<h2 id="华硕主板可寻址第二代LED接针">5.2 &nbsp&nbsp<a href="#华硕主板可寻址第二代LED接针" class="headerlink" title="华硕主板可寻址第二代LED接针"></a>华硕主板可寻址第二代LED接针</h2><p>可寻址第二代LED接针可用来个别连接可寻址RGB（ARBG）WS2812B指示灯条或基于WS2812的指示灯条。6-Pin可寻第二代LED接针连接1对2ARGB分接线，可连接最多2条LED灯条。</p>
<p>可寻址第二代LED接针支持可寻址RGB指示灯条（5V&#x2F;Data&#x2F;Groud），灯条总输出电流限制为3A（5V），因此支持最大功率为15W。可寻址接针在Gen1模式下可支持每个接针最多120颗LED灯，在Gen2模式下可支持最多500颗LED灯。</p>
<p>大约实际表现为最多可支持串联5个外设设备灯条（例如风扇和水冷头），如果超过5个设备的话，基本上都会出现供电电流不足，导致灯条在白光模式下（白光模式下设备灯条功率最大）变淡或者某些设备灯条出现绿光或者橙光。有些主板用料批次可能次一些，导致一个5V接针接口串接4个或者5个设备灯光就会出现供电电流不足的情况了。</p>
<h1 id="华硕奥创">6 &nbsp&nbsp<a href="#华硕奥创" class="headerlink" title="华硕奥创"></a>华硕奥创</h1><p>关于系统残存的奥创配置影响吹雪主板的灯光闪烁，使用新系统的奥创配置（比如利用新硬盘的系统）先设置无灯光初始化硬件参数。</p>
<h2 id="在非华硕主板上安装华硕奥创软件">6.1 &nbsp&nbsp<a href="#在非华硕主板上安装华硕奥创软件" class="headerlink" title="在非华硕主板上安装华硕奥创软件"></a>在非华硕主板上安装华硕奥创软件</h2><p>在非华硕主板上安装华硕奥创软件，除了无法接管主板之外，其余组件或者外设，诸如内存，水冷（有通过9针USB接口传输数据的冷头屏幕）都是能被检测识别并控制。一般地，安装华硕奥创软件之后，内存的灯控接管权会被奥创抢夺，其他灯控软件则无法对其控制了。</p>
<h2 id="完整清除奥创的步骤">6.2 &nbsp&nbsp<a href="#完整清除奥创的步骤" class="headerlink" title="完整清除奥创的步骤"></a>完整清除奥创的步骤</h2><ol>
<li>使用<a href="https://dlsvr04.asus.com.cn/pub/ASUS/mb/14Utilities/Armoury_Crate_Uninstall_Tool.zip?model=Armoury%20Crate">奥创官方卸载工具</a>执行卸载操作。</li>
<li>手动移除奥创残留的服务进程和残留文件夹。</li>
<li><code>regedit</code>打开注册表：搜索「Asus」（注意选择全字匹配），删除搜索到的结果项目。（BIOS选项底下和硬件底下都不用删除）</li>
<li>使用<a href="https://dlsvr04.asus.com.cn/pub/ASUS/mb/14Utilities/ArmouryCrateInstallTool.zip?model=Armoury%20Crate">奥创在线安装包</a>安装或者<a href="https://dlsvr04.asus.com.cn/pub/ASUS/mb/14Utilities/Armoury_Crate_Full_Installation_Package.zip?model=Armoury%20Crate">奥创官方离线包</a>重新安装。（如果这步执行到最后显示安装不完成，直接打开Amoury Crate的UWP应用进行更新安装即可）</li>
</ol>
<p>可以解决的问题：</p>
<ul>
<li>离线包安装没有主板选项可勾选（奥创扫描硬件信息并在注册表中保存，如果没清除干净，奥创安装会校验已有信息，认为之前已经安装过的）</li>
<li>各种离奇的安装报错</li>
</ul>
<h2 id="无法识别内存组件">6.3 &nbsp&nbsp<a href="#无法识别内存组件" class="headerlink" title="无法识别内存组件"></a>无法识别内存组件</h2><p>安装其他的内存灯控软件，比如芝奇灯控<a href="https://www.gskill.com/download/1502180912/1551690847/Trident-Z--Trident-Z5--Ripjaws-M5-RGB-Family">Trident Z Lighting Control</a>。设置开机自启，然后奥创就可以识别。</p>
<h2 id="无法识别正确的主板型号">6.4 &nbsp&nbsp<a href="#无法识别正确的主板型号" class="headerlink" title="无法识别正确的主板型号"></a>无法识别正确的主板型号</h2><p>故障原因：使用改机器码的工具修改了主板名称，比如AMIBIOS DMI EDITOR。</p>
<p>解决方法：使用工具改回原来的值。</p>
<h2 id="奥创同步海盗船内存灯光">6.5 &nbsp&nbsp<a href="#奥创同步海盗船内存灯光" class="headerlink" title="奥创同步海盗船内存灯光"></a>奥创同步海盗船内存灯光</h2><ol>
<li>BIOS设置关闭SPD保护<ul>
<li>BIOS高级模式（F7切换模式）-&gt;AI Tweaker&#x2F;Extreme Tweaker-&gt;Tweaker&#39;s Paradise-&gt;SPD Write Disable-&gt;FALSE</li>
</ul>
</li>
<li>卸载奥创本体（如果提前有安装）</li>
<li>安装iCue奥创插件</li>
<li>安装iCue本体</li>
<li>安装奥创本体</li>
</ol>
<h1 id="显卡">7 &nbsp&nbsp<a href="#显卡" class="headerlink" title="显卡"></a>显卡</h1><h2 id="专业检测工具-MASTS">7.1 &nbsp&nbsp<a href="#专业检测工具-MASTS" class="headerlink" title="专业检测工具-MASTS"></a>专业检测工具-MASTS</h2><p>工具官方论坛链接：<a href="https://vlab.su/viewtopic.php?t=124090">MATS&#x2F;MODS 400&#x2F;455&#x2F;520 Тест видеопамяти nVidia для флешки</a></p>
<p>直接下载最新的ISO镜像，用<a href="https://rufus.ie/zh/">Rufus</a>直接写入U盘即可。</p>
<h2 id="13-14代酷睿CPU搭配显卡出现显卡驱动掉驱现象">7.2 &nbsp&nbsp<a href="#13-14代酷睿CPU搭配显卡出现显卡驱动掉驱现象" class="headerlink" title="13&#x2F;14代酷睿CPU搭配显卡出现显卡驱动掉驱现象"></a>13&#x2F;14代酷睿CPU搭配显卡出现显卡驱动掉驱现象</h2><p>故障原因：CPU的pcie控制器有瑕疵，导致显卡驱动掉驱现象。</p>
<h1 id="声卡">8 &nbsp&nbsp<a href="#声卡" class="headerlink" title="声卡"></a>声卡</h1><h2 id="插前置3-5mm音频接口，Realtek声卡无音频输出">8.1 &nbsp&nbsp<a href="#插前置3-5mm音频接口，Realtek声卡无音频输出" class="headerlink" title="插前置3.5mm音频接口，Realtek声卡无音频输出"></a>插前置3.5mm音频接口，Realtek声卡无音频输出</h2><p>故障情况：常见于<code>ROG STRIX Z790-H GAMING WIFI</code>主板的声卡驱动，将耳机插入前置3.5mm音频接口，Realtek声卡无音频输出。</p>
<p>故障原因：Realtek设置的插孔检测设置引起的问题。</p>
<p>解决方法：</p>
<ol>
<li>若如果是首次安装好官网原版的声卡驱动，先重启系统。</li>
<li>打开UWP应用<code>Realtek Audio Control</code>。</li>
<li>禁用前面板插孔检测-&gt;设置为“开”（即禁用前面板插孔检测）</li>
<li>前面板插孔设置-&gt;将绿色的插孔设置从“耳机”切换为“前喇叭”。</li>
<li>设置完成后即可测试音频输出。</li>
</ol>
<h1 id="无线网卡">9 &nbsp&nbsp<a href="#无线网卡" class="headerlink" title="无线网卡"></a>无线网卡</h1><h2 id="板载无线网卡芯片的蓝牙信号">9.1 &nbsp&nbsp<a href="#板载无线网卡芯片的蓝牙信号" class="headerlink" title="板载无线网卡芯片的蓝牙信号"></a>板载无线网卡芯片的蓝牙信号</h2><p>板载无线网卡芯片的蓝牙信号大多都是通过USB通道传输（直观一点，有一些PCIe接口的无线网卡设备，蓝牙信号就是通过9针USB接口传输的），通过主板BIOS控制关闭板载无线芯片的蓝牙功能的话，保存设置可同时观察到BIOS会同时禁用一个USB信号接口（例如<code>USB2 Port #13： [Enabled]-&gt;[Disabled]</code>）</p>
<h2 id="2-4GHz无线设备的频率干扰问题">9.2 &nbsp&nbsp<a href="#2-4GHz无线设备的频率干扰问题" class="headerlink" title="2.4GHz无线设备的频率干扰问题"></a>2.4GHz无线设备的频率干扰问题</h2><p>具体故障表现：无线鼠标会有停顿感，或是无线键盘输入的速度变慢或无反应，甚至是无线传输的距离缩短。</p>
<p>可能存在的干扰源：</p>
<ul>
<li>接收器附近的USB3.0设备（参阅<a href="https://rog.asus.com.cn/support/faq/1004004/">同时使用USB3.0和2.4GHz的USB无线设备可能会发生频率干扰的问题</a>和<a href="https://blog.csdn.net/civilman/article/details/52929755">USB 3.0 对无线鼠标的干扰问题</a>）<ul>
<li>解决方案：远离usb3.0的接口，换接到usb2.0的接口上，或者usb延长器延展出来再连接无线键鼠的接收器。</li>
</ul>
</li>
<li>WIFI：因为无线路由器发射的功率较之无线键鼠更大，因此一般是2.4GHz的WiFi会对其进行干扰，部分好的无线设备可以屏蔽WiFi的干扰。（参阅「​<a href="https://ngabbs.com/read.php?tid=29996516&rand=38">老哥们的无线鼠标会影响wifi吗？</a>」）<ul>
<li>解决方案：关闭路由器WiFi的2.4GHz频段或者更换WiFi信道。</li>
</ul>
</li>
</ul>
<p>小记：在无线信号覆盖范围内的各种无线网络设备应该尽量使用不同的信道，以避免信号之间的干扰。</p>
<h2 id="板载-PCIE-M-2无线网卡芯片无法正常工作">9.3 &nbsp&nbsp<a href="#板载-PCIE-M-2无线网卡芯片无法正常工作" class="headerlink" title="板载&#x2F;PCIE&#x2F;M.2无线网卡芯片无法正常工作"></a>板载&#x2F;PCIE&#x2F;M.2无线网卡芯片无法正常工作</h2><p>故障现象：板载&#x2F;PCIE&#x2F;M.2无线网卡无法正常工作，例如操作系统中无法识别WiFi设备，但可以识别到蓝牙设备。</p>
<p><strong>排障思路：</strong></p>
<ol>
<li>部份主板BIOS可以控制是否启用集成外设，优先从这方面设置排查：Integrated Peripherals（集成外设）-&gt; Onboard Wi-Fi&#x2F;BT Module Control-&gt; Auto&#x2F;Wi-Fi Only&#x2F;BT Only&#x2F;Wi-Fi+BT Off。</li>
<li>若第一步思路排查无果，并且Windows系统中设备管理器检测不到任何异常设备。应该考虑是硬件电路的上电异常，导致无法正常工作，并因此无法在系统中被检测到。解决方案：拔掉电源线，静置放电。之后再插上电源线，看看能否正常恢复上电工作。</li>
<li>若第二步思路排查无果，证明硬件电路异常涉及cmos设置，即需要放电清空主板cmos设置（主板BIOS设置）。解决方案：拔掉电源线，扣掉主板cmos电池，静置放电。之后再插上电源线，看看能否正常恢复上电工作。</li>
</ol>
<h1 id="有线网卡">10 &nbsp&nbsp<a href="#有线网卡" class="headerlink" title="有线网卡"></a>有线网卡</h1><h2 id="常规网卡设置">10.1 &nbsp&nbsp<a href="#常规网卡设置" class="headerlink" title="常规网卡设置"></a>常规网卡设置</h2><table>
<thead>
<tr>
<th>网卡品牌</th>
<th>参数名称(中英文对照)</th>
<th></th>
<th>设置建议</th>
</tr>
</thead>
<tbody><tr>
<td>Realtek</td>
<td>EEE</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>巨型帧&#x2F;Jumboframe</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>流控制&#x2F;FlowControl</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>大量传送负载&#x2F;OffloadLargesend</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>环保节能&#x2F;GreenEthernet</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>硬件效验和&#x2F;OffloadChksum</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td>Intel</td>
<td>TCP&#x2F;IP分载选项</td>
<td>分载接收IP效验和&#x2F;ChecksumRxIp</td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td></td>
<td>分载接收TCP效验和&#x2F;ChecksumRxTcp</td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td></td>
<td>分载传输IP效验和&#x2F;ChecksumTxIp</td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td></td>
<td>分载传输TCP效验和&#x2F;ChecksumTxTcp</td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td></td>
<td>分载TCP分段&#x2F;TcpSegmentation</td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>流程控制&#x2F;FlowControl</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>适应性帧间距调整&#x2F;AdaptiveIFS</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>中断节流率&#x2F;InterruptThrottleRate</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>巨帧数据包&#x2F;JumboPacket</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td>Marvell</td>
<td>巨帧包&#x2F;JumboPacket</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>卸载 TCP&#x2F;UDP 校验和(IPv4)&#x2F;TCPUDPChecksumOffloadIPv4</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>大量传送负载 (IPv4)&#x2F;LsoV1IPv4</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>中断模式&#x2F;InterruptModeration</td>
<td></td>
<td>建议默认</td>
</tr>
<tr>
<td></td>
<td>流控制&#x2F;FlowControl</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>能量之星&#x2F;WakeUpSpeed</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td>Atheros</td>
<td>流控制&#x2F;Flow Control</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>中断调整&#x2F;Interrupt Moderation</td>
<td></td>
<td>建议默认</td>
</tr>
<tr>
<td></td>
<td>每秒最大中断&#x2F;Max IRQ per Second</td>
<td></td>
<td>30000</td>
</tr>
<tr>
<td></td>
<td>接收缓冲区&#x2F;Number of Receive Buffers</td>
<td></td>
<td>512</td>
</tr>
<tr>
<td></td>
<td>任务卸载&#x2F;Task Offload</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>Broadcom</td>
<td>硬件效验和&#x2F;ChksumOffload</td>
<td></td>
</tr>
<tr>
<td></td>
<td>流控制&#x2F;FlowControl</td>
<td></td>
<td>建议关闭</td>
</tr>
<tr>
<td></td>
<td>大量发送卸载&#x2F;Large Send Offload</td>
<td></td>
<td>建议关闭</td>
</tr>
</tbody></table>
<p><em>Marvell网卡关闭中断模式后可能会出现客户机开机后出现白色箭头。但是由于每款主板或驱动可能会有细微差别，因此对于中断模式方面设置，建议保持默认。如果出现问题了，可以首先对该选项进行调整，例如关闭或开启。</em></p>
<h1 id="电源">11 &nbsp&nbsp<a href="#电源" class="headerlink" title="电源"></a>电源</h1><h2 id="PC电源的保持时间">11.1 &nbsp&nbsp<a href="#PC电源的保持时间" class="headerlink" title="PC电源的保持时间"></a>PC电源的保持时间</h2><ul>
<li>英特尔制定的ATX 12V规范，其要求PC电源在100%负载的情况下，各路输出保持时间不低于16毫秒</li>
<li>SSI EPS12V 2.92服务器电源设计指导，其要求电源在75%的负载下各路输出的保持时间应该大于18毫秒，而Power-OK信号的保持时间则是大于17毫秒。</li>
</ul>
<h2 id="异常断电的硬盘断电保护措施">11.2 &nbsp&nbsp<a href="#异常断电的硬盘断电保护措施" class="headerlink" title="异常断电的硬盘断电保护措施"></a>异常断电的硬盘断电保护措施</h2><p>一般硬盘的断电保护通常是企业级的专利，部分消费级硬盘也具备断电保护，但只具备基本的保护功能，无法保护内存中的用户数据。</p>
<p>PC电源的保持时间只是提供一个缓冲的时间告诉各个硬件要断电了，具体的断电保护措施还是需要看硬件自身的设计。</p>
<h2 id="关于线材的拔插寿命">11.3 &nbsp&nbsp<a href="#关于线材的拔插寿命" class="headerlink" title="关于线材的拔插寿命"></a>关于线材的拔插寿命</h2><p>线材协议的制定者是PCI-SIG联盟，其相关测试寿命是在30次左右。其实8pin寿命也只有30次的，超过只是达不到初始稳定性，PCI SIG测试报告拔插超过40次可能就有风险。</p>
<h2 id="冗余电源">11.4 &nbsp&nbsp<a href="#冗余电源" class="headerlink" title="冗余电源"></a>冗余电源</h2><ul>
<li>ATX规格冗余电源设计：<a href="https://www.silverstonetek.com/cn/product/info/power-supplies/gm900a_gf/">银欣Gemini 900A Gold</a></li>
<li>1U电源</li>
</ul>
<h1 id="屏幕">12 &nbsp&nbsp<a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h1><p>屏幕不断闪，并且可以看到总是选定一个东西：键位被卡住，一直在输入键值</p>
<p>屏幕的常见故障：</p>
<ul>
<li>竖线：一般是脱焊。</li>
<li>束带：坏cof，压屏更换。</li>
</ul>
<h2 id="AC97与HD-Audio前置音频连接针脚定义">12.1 &nbsp&nbsp<a href="#AC97与HD-Audio前置音频连接针脚定义" class="headerlink" title="AC97与HD-Audio前置音频连接针脚定义"></a>AC97与HD-Audio前置音频连接针脚定义</h2><p><a href="https://www.docin.com/p-2418893040.html">https://www.docin.com/p-2418893040.html</a></p>
<h1 id="硬盘">13 &nbsp&nbsp<a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h1><h2 id="测试工具">13.1 &nbsp&nbsp<a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><p>固态：</p>
<ul>
<li><a href="https://crystalmark.info/en/software/crystaldiskinfo/">CrystalDiskInfo</a>和<a href="https://crystalmark.info/en/software/crystaldiskmark/">CrystalDiskMark</a></li>
<li><a href="https://www.alex-is.de/PHP/fusion/infusions/downloads/downloads.php">AS SSD Benchmark</a></li>
<li>三星固态：<a href="https://semiconductor.samsung.com/cn/consumer-storage/support/tools/">三星魔术师软件（Magician）</a></li>
<li>系统自带工具winsat：测试C盘：<code>winsat disk -drive C</code>。WinSAT 工具运行整体系统测试命令：<code>winsat formal -v</code>。</li>
</ul>
<h2 id="固件更新：">13.2 &nbsp&nbsp<a href="#固件更新：" class="headerlink" title="固件更新："></a>固件更新：</h2><ul>
<li>三星固态<ul>
<li><a href="https://semiconductor.samsung.com/cn/consumer-storage/support/tools/">三星魔术师</a></li>
<li>U盘方案：<a href="https://semiconductor.samsung.com/cn/consumer-storage/support/tools/">下载ISO固件</a>，使用ventoy加载镜像。</li>
</ul>
</li>
</ul>
<h2 id="硬盘-系统启动项">13.3 &nbsp&nbsp<a href="#硬盘-系统启动项" class="headerlink" title="硬盘&#x2F;系统启动项"></a>硬盘&#x2F;系统启动项</h2><p>华硕主板有Hard Drive BBS Priorities（硬盘BBS属性，需要开启CSM保存重启进入BIOS界面才能看到），专门针对硬盘设置启动项，若不开启CSM，只能识别到UEFI的系统windows boot manager项（UEFI需要安装好系统和创建好引导，BIOS才能正常识别到）。</p>
<p>USB设备也有BBS设置。</p>
<h2 id="磁盘分区表格式">13.4 &nbsp&nbsp<a href="#磁盘分区表格式" class="headerlink" title="磁盘分区表格式"></a>磁盘分区表格式</h2><p>一般来说，磁盘分区表有两种格式：MBR和GPT。</p>
<h3 id="MBR">13.4.1 &nbsp&nbsp<a href="#MBR" class="headerlink" title="MBR"></a>MBR</h3><p>MBR分区表在windows操作系统下最多支持4个主分区或3个主分区+1个扩展分区（包含多个逻辑分区），扩展分区必须划分为逻辑分区才能使用，1个扩展分区可以划分多个逻辑分区。MBR分区表不支持容量大于2.2TB的分区(一些硬盘制造商将他们的容量较大的磁盘升级到了4KB的扇区，这意味着MBR的有效容量上限提升到了16 TB)</p>
<h3 id="GPT">13.4.2 &nbsp&nbsp<a href="#GPT" class="headerlink" title="GPT"></a>GPT</h3><p>GPT分区表对分区数量没有限制，没有主分区和逻辑分区之分，但在windows系统上最多只能读取128个分区。</p>
<h2 id="引导模式">13.5 &nbsp&nbsp<a href="#引导模式" class="headerlink" title="引导模式"></a>引导模式</h2><p>UEFI的引导文件为winload.efi，而Legacy的引导文件为winload.exe。</p>
<h3 id="UEFI-BIOS">13.5.1 &nbsp&nbsp<a href="#UEFI-BIOS" class="headerlink" title="UEFI BIOS"></a>UEFI BIOS</h3><p>基本引导原理：UEFIBIOS-&gt;EFI系统分区（FAT32格式的分区）-&gt;\efi\Microsoft\boot\bootmgfw.efi-&gt;efi\Microsoft\BCD-&gt;\Windows\system32\winload.efi</p>
<h3 id="Legacy-BIOS">13.5.2 &nbsp&nbsp<a href="#Legacy-BIOS" class="headerlink" title="Legacy BIOS"></a>Legacy BIOS</h3><p>基本引导原理：LegacyBIOS-&gt;MBR-&gt;“活动的主分区”-&gt;\bootmgr-&gt;\Boot\BCD-&gt;\Windows\system32\winload.exe</p>
<h2 id="磁盘分区表和引导模式的组合">13.6 &nbsp&nbsp<a href="#磁盘分区表和引导模式的组合" class="headerlink" title="磁盘分区表和引导模式的组合"></a>磁盘分区表和引导模式的组合</h2><ul>
<li>Legacy BIOS+MBR：传统引导最常见的组合方式。</li>
<li>UEFI BIOS+GPT：UEFI引导最常见的组合方式。</li>
<li>UEFI BIOS+MBR：windows镜像自带的安装引导工具不支持。开启CSM模式或者将UEFI设置成Legacy模式（传统模式），调整设置后本质上就是Legacy BIOS+MBR组合。</li>
<li>Legacy BIOS+GPT：windows镜像自带的安装引导工具不支持。windows不可用，无法正常引导开启系统，本质上是bootmgr读不了GPT格式，其实可以通过更换三方引导工具实现引导。Legacy BIOS + GPT + GRUB + Linux是可行的。</li>
</ul>
<h2 id="无分区直接使用硬盘">13.7 &nbsp&nbsp<a href="#无分区直接使用硬盘" class="headerlink" title="无分区直接使用硬盘"></a>无分区直接使用硬盘</h2><ul>
<li>windows10&#x2F;11：无法实现。</li>
<li>linux：直接mkfs使用就是无分区格式化，并且常见win pe内部工具均无法识别这种形式的数据，会被认为无数据盘。</li>
</ul>
<p>术语概念：</p>
<ul>
<li>MBR - Master Boot Record，在硬盘的0扇区，包含引导程序和分区表；</li>
<li>PBR - Partition Boot Record，在分区的0扇区，是文件系统的起点，也包含一定的引导程序。</li>
</ul>
<p>无分区情况。在U盘上，是比较常见的。U盘启动的时候，会有HDD和FDD两种模式：</p>
<ul>
<li>HDD - Hard Disk Drive，硬盘驱动器</li>
<li>FDD - Floppy Disk Drive，软盘驱动器（软盘的0扇区就是PBR）</li>
</ul>
<h2 id="数据恢复">13.8 &nbsp&nbsp<a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h2><p>专业数据恢复软件：PC3000</p>
<ul>
<li>机械盘：删除后无写入操作大多可正常恢复。</li>
<li>ssd：因为存在trim机制。基本很难恢复。SSD TRIM一个过程，有助于随着时间的推移继续保持固态硬盘的性能。Trim的工作原理是定期擦除不再使用的数据块。标记TRIM后的数据并不总是直接删除，因为需要一个复杂的过程来确定何时删除（由硬盘GC机制控制）。而定期trim，不仅可以释放硬盘空间，还可以帮助SSD性能更好，寿命更长（固态的设计结构所致）。</li>
</ul>
<h1 id="打印机">14 &nbsp&nbsp<a href="#打印机" class="headerlink" title="打印机"></a>打印机</h1><h2 id="安装打印机驱动">14.1 &nbsp&nbsp<a href="#安装打印机驱动" class="headerlink" title="安装打印机驱动"></a>安装打印机驱动</h2><p>部分hp高端型号，比如打印机扫描机一体的大型机，安装驱动时，可以直接点击设置主页-&gt;设备-&gt;打印机和扫描机-&gt;添加打印机或者扫描机（windows会自动安装驱动，包括扫描机驱动）</p>
<h1 id="其它类别">15 &nbsp&nbsp<a href="#其它类别" class="headerlink" title="其它类别"></a>其它类别</h1><h2 id="电脑维修级别">15.1 &nbsp&nbsp<a href="#电脑维修级别" class="headerlink" title="电脑维修级别"></a>电脑维修级别</h2><p>计算机维修可分为两个级别,即一级维修和二级维修。一级指替换配件测试维修，二级指芯片级维修。</p>
<h1 id="参考文献">16 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 華碩電腦股份有限公司. ROG MAXIMUS Z790 HERO 用户手册[M&#x2F;OL]. 第三版. 2022: 29. <a href="https://dlsvr04.asus.com.cn/pub/ASUS/mb/LGA1700/ROG_MAXIMUS_Z790_HERO/C21512_ROG_MAXIMUS_Z790_HERO_V3_WEB.pdf?model=ROG%20MAXIMUS%20Z790%20HERO">https://dlsvr04.asus.com.cn/pub/ASUS/mb/LGA1700/ROG_MAXIMUS_Z790_HERO/C21512_ROG_MAXIMUS_Z790_HERO_V3_WEB.pdf?model=ROG%20MAXIMUS%20Z790%20HERO</a>.<br>[2] 回复：cup‑fan 和 cpu‑opt 有啥区别？？？[EB&#x2F;OL]. <a href="https://tieba.baidu.com/p/6018187267?pn=2">https://tieba.baidu.com/p/6018187267?pn=2</a>.<br>[3] No q‑fan control for cpu_opt R4BE[EB&#x2F;OL]. <a href="https://rog.asus.com/forum/showthread.php?43080%E2%80%91No%E2%80%91q%E2%80%91fan%E2%80%91control%E2%80%91for%E2%80%91cpu_opt%E2%80%91R4BE">https://rog.asus.com/forum/showthread.php?43080‑No‑q‑fan‑control‑for‑cpu_opt‑R4BE</a>.<br>[4] zen3的whea18错误个人见解[EB&#x2F;OL]. <a href="https://tieba.baidu.com/p/7213032582#/">https://tieba.baidu.com/p/7213032582#/</a>.<br>[5] 网卡参数设置建议与各个网卡参数含义详解[EB&#x2F;OL]. <a href="https://blog.csdn.net/Windgs_YF/article/details/104893741">https://blog.csdn.net/Windgs_YF/article/details/104893741</a>.<br>[6] 无需三方工具，Windows 命令行轻松实现 SSD 测速[EB&#x2F;OL]. <a href="https://www.sysgeek.cn/windows-ssd-speed-test/">https://www.sysgeek.cn/windows-ssd-speed-test/</a>.<br>[7] 硬盘不分区，直接格式化，硬盘第一个扇区里面会变成什么样子？还存在分区表吗？[EB&#x2F;OL]. <a href="https://www.zhihu.com/question/531775025">https://www.zhihu.com/question/531775025</a>.<br>[8] [显卡] ATX3.0 16pin的供电线插拔寿命真的只有30次吗？[EB&#x2F;OL]. <a href="https://www.chiphell.com/thread-2453340-1-1.html">https://www.chiphell.com/thread-2453340-1-1.html</a>.<br>[9] 微星Z490-A PRO每个内存槽支持不同最高频率的疑惑. <a href="https://nga.178.com/read.php?tid=22378405&rand=676">https://nga.178.com/read.php?tid=22378405&amp;rand=676</a>.<br>[10] 华硕奥创软件重新安装无法识别主板问题解决.[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/672994457">https://zhuanlan.zhihu.com/p/672994457</a>.<br>[11] 华硕奥创中心无法识别主板问题.[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/576492004">https://zhuanlan.zhihu.com/p/576492004</a>.<br>[12] [主板] 开新帖说明AM5开机自检慢的解决方法.[EB&#x2F;OL]. <a href="https://www.chiphell.com/thread-2504587-1-1.html">https://www.chiphell.com/thread-2504587-1-1.html</a>.<br>[13] Memory Context Restore. Causing blue screens?.[EB&#x2F;OL]. <a href="https://forum-en.msi.com/index.php?threads/memory-context-restore-causing-blue-screens.388576/">https://forum-en.msi.com/index.php?threads/memory-context-restore-causing-blue-screens.388576/</a>.<br>[14] [硬件求助] 开机一分钟，自检50秒，DDR5的锅还是主板的锅？(已解决，快了1倍).[EB&#x2F;OL]. <a href="https://g.nga.cn/read.php?tid=36577093&rand=242">https://g.nga.cn/read.php?tid=36577093&amp;rand=242</a>.<br>[15] 华硕主板如何设置开机第一启动项方法大全[EB&#x2F;OL]. <a href="https://www.zhihu.com/tardis/zm/art/67107055">https://www.zhihu.com/tardis/zm/art/67107055</a>.<br>[16] 小科普 | BIOS设置选项详细解释①——CPU核心篇[EB&#x2F;OL]. <a href="https://www.bilibili.com/read/cv253846/">https://www.bilibili.com/read/cv253846/</a>.<br>[17] UEFI+GPT、Legacy+MBR引导模式介绍 &amp; 引导修复[EB&#x2F;OL]. <a href="https://blog.csdn.net/dglxlcl/article/details/85085901">https://blog.csdn.net/dglxlcl/article/details/85085901</a>.<br>[18] BIOS + GPT + GRUB + Linux + Windows 折腾笔记[EB&#x2F;OL]. <a href="https://blog.csdn.net/o_alpha/article/details/102959192">https://blog.csdn.net/o_alpha/article/details/102959192</a>.<br>[19] [主板]华硕 Power LED故障排除不上电&#x2F;不开机&#x2F;无显示[EB&#x2F;OL]. <a href="https://rog.asus.com.cn/support/faq/1046157/">https://rog.asus.com.cn/support/faq/1046157/</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>硬件</tag>
        <tag>总结</tag>
        <tag>维修</tag>
        <tag>计算机</tag>
        <tag>电脑</tag>
        <tag>维护</tag>
        <tag>故障</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统排障总结</title>
    <url>/troubleshooting/windows-troubleshooting/</url>
    <content><![CDATA[<h1 id="Windows系统版本发布日志">1 &nbsp&nbsp<a href="#Windows系统版本发布日志" class="headerlink" title="Windows系统版本发布日志"></a>Windows系统版本发布日志</h1><table>
<thead>
<tr>
<th align="center"><a href="https://learn.microsoft.com/zh-cn/windows/release-health/windows-message-center">Windows消息中心</a></th>
<th align="center"><a href="https://learn.microsoft.com/zh-cn/windows/release-health/windows11-release-information">Windows 11版本发布日志</a></th>
<th align="center"><a href="https://learn.microsoft.com/zh-cn/windows/release-health/release-information">Windows 10版本发布日志</a></th>
</tr>
</thead>
</table>
<h1 id="Windows常用工具命令">2 &nbsp&nbsp<a href="#Windows常用工具命令" class="headerlink" title="Windows常用工具命令"></a>Windows常用工具命令</h1><ul>
<li>网络相关<ul>
<li>网络管理（控制面板项）：<code>ncpa.cpl</code></li>
<li>测试：ping</li>
</ul>
</li>
</ul>
<h1 id="运行库">3 &nbsp&nbsp<a href="#运行库" class="headerlink" title="运行库"></a>运行库</h1><p>详看<a href="/troubleshooting/runtime-library-repair-on-windows">《Windows平台的运行库修复》</a></p>
<h1 id="微软账户">4 &nbsp&nbsp<a href="#微软账户" class="headerlink" title="微软账户"></a>微软账户</h1><h2 id="退出系统登录的微软账号">4.1 &nbsp&nbsp<a href="#退出系统登录的微软账号" class="headerlink" title="退出系统登录的微软账号"></a>退出系统登录的微软账号</h2><p>设置步骤：设置-&gt;设置-&gt;账户-&gt;你的信息-&gt;改用本地账户登录（停止登录）。</p>
<h2 id="无法登录微软帐号或者出现0x80190001错误提示">4.2 &nbsp&nbsp<a href="#无法登录微软帐号或者出现0x80190001错误提示" class="headerlink" title="无法登录微软帐号或者出现0x80190001错误提示"></a>无法登录微软帐号或者出现0x80190001错误提示</h2><ul>
<li>解决方法1：<ol>
<li>打开网卡设置属性设置</li>
<li>关闭ipv6</li>
<li>ipv4的DNS设置<code>4.2.2.1</code>，备用<code>4.2.2.2</code></li>
<li>cmd终端执行命令刷新dns缓存：<code>ipconfig /flushdns</code></li>
<li>重启系统，重新尝试登录（<strong>登录成功后建议还原网络设置</strong>）</li>
</ol>
</li>
<li>解决方法2：科学上网代理到外网服务器。</li>
</ul>
<h1 id="微软商店应用">5 &nbsp&nbsp<a href="#微软商店应用" class="headerlink" title="微软商店应用"></a>微软商店应用</h1><h2 id="下载微软商店应用离线安装包">5.1 &nbsp&nbsp<a href="#下载微软商店应用离线安装包" class="headerlink" title="下载微软商店应用离线安装包"></a>下载微软商店应用离线安装包</h2><p>微软商店应用下载地址解析站点（下载通道一般选默认的RP）：<a href="https://store.rg-adguard.net/">https://store.rg-adguard.net/</a></p>
<p>微软商店应用在线链接：</p>
<table>
<thead>
<tr>
<th align="center">程序名称</th>
<th align="left">程序链接</th>
<th align="center">开发者</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">应用安装程序</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9NBLGGH4NNS1?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9NBLGGH4NNS1?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Windows</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Microsoft Store</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfjbmp?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfjbmp?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center">微软商店本体</td>
</tr>
<tr>
<td align="center">Windows 计算器</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9WZDNCRFHVN5?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9WZDNCRFHVN5?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Armoury Crate</td>
<td align="left"><a href="https://apps.microsoft.com/detail/armoury-crate/9PM9DFQRDH3F?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/armoury-crate/9PM9DFQRDH3F?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">ASUSTeK COMPUTER INC.</td>
<td align="center">华硕奥创</td>
</tr>
<tr>
<td align="center">WinDbg</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9pgjgd53tn86?hl=zh-CN&gl=CN">https://apps.microsoft.com/detail/9pgjgd53tn86?hl=zh-CN&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Microsoft Defender</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9p6pmztm93lr?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9p6pmztm93lr?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Xbox 控制台小帮手</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfjbd8?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfjbd8?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center">微软宣布停用</td>
</tr>
<tr>
<td align="center">邮件和日历</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfhvqm?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfhvqm?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">电影和电视</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfj3p2?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfj3p2?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">截图和草图</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9mz95kl8mr0l?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9mz95kl8mr0l?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Windows 闹钟和时钟</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfj3pr?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfj3pr?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">反馈中心</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9nblggh4r32n?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9nblggh4r32n?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">获取帮助</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9pkdzbmv1h3t?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9pkdzbmv1h3t?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Windows</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Microsoft 使用技巧</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrdtbjj?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrdtbjj?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Windows</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Windows 录音机</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfhwkn?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfhwkn?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Windows 相机</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfjbbg?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9wzdncrfjbbg?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Microsoft 便笺</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9nblggh4qghw?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9nblggh4qghw?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Microsoft 照片</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9wzdncrfjbh4?hl=zh-CN&gl=CN">https://apps.microsoft.com/detail/9wzdncrfjbh4?hl=zh-CN&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Xbox</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9mv0b5hzvk9z?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9mv0b5hzvk9z?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Xbox Game Bar</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9nzkpstsnw4p?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9nzkpstsnw4p?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Windows</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Paint</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9pcfs5b6t72h?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9pcfs5b6t72h?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center">Windows 11独占</td>
</tr>
<tr>
<td align="center">NVIDIA Control Panel</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9nf8h0h7wmlt?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9nf8h0h7wmlt?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">NVIDIA Corp.</td>
<td align="center">英伟达控制面板</td>
</tr>
<tr>
<td align="center">Xbox Game Bar Plugin</td>
<td align="left"><a href="https://apps.microsoft.com/detail/9nblggh537c2?hl=zh-cn&gl=CN">https://apps.microsoft.com/detail/9nblggh537c2?hl=zh-cn&amp;gl=CN</a></td>
<td align="center">Microsoft Corporation</td>
<td align="center">不安装也能正常截图和录屏<br>暂未查明该组件实际作用</td>
</tr>
</tbody></table>
<h2 id="重装微软预装UWP应用">5.2 &nbsp&nbsp<a href="#重装微软预装UWP应用" class="headerlink" title="重装微软预装UWP应用"></a>重装微软预装UWP应用</h2><h3 id="依据AppXManifest-xml重装">5.2.1 &nbsp&nbsp<a href="#依据AppXManifest-xml重装" class="headerlink" title="依据AppXManifest.xml重装"></a>依据<code>AppXManifest.xml</code>重装</h3><p>cmd命令行终端运行：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">@REM 如果office365hub有打开的话，则强制关闭该进程，通过WWAHost关闭</span></span><br><span class="line">powershell -command &quot;Get-AppxPackage -AllUsers | Foreach &#123;<span class="keyword">if</span> (Get-Process -Name \&quot;WWAHost\&quot; -ErrorAction SilentlyContinue) &#123; Stop-Process -Name \&quot;WWAHost\&quot; -Force &#125; ; Add-AppxPackage -DisableDevelopmentMode -Register -ForceApplicationShutdown \&quot;$($_.InstallLocation)\AppXManifest.xml\&quot; &#125;&quot;</span><br></pre></td></tr></table></figure>

<p>powershell终端运行（allUsers参数是针对系统所有账户，verbose参数是输出每条日志信息）：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Get-AppXPackage -AllUsers -Name Microsoft.MicrosoftEdge | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot; -Verbose&#125;</span><br></pre></td></tr></table></figure>

<h3 id="根据离线包重装">5.2.2 &nbsp&nbsp<a href="#根据离线包重装" class="headerlink" title="根据离线包重装"></a>根据离线包重装</h3><p>cmd命令行终端运行（install_uwp_apps函数提供多个参数，可以安装相应依赖包）：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">:ps_add_appxpackage</span><br><span class="line"><span class="comment">@REM 如果office365hub有打开的话，则强制关闭该进程</span></span><br><span class="line">tasklist | <span class="built_in">find</span> &quot;WWAHost.exe&quot; &gt;<span class="built_in">nul</span> &amp;&amp; <span class="built_in">taskkill</span> /f /im &quot;WWAHost.exe&quot; &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">echo</span> 开始安装「%~<span class="number">1</span>」</span><br><span class="line">powershell -command &quot;Add-AppxPackage -ForceApplicationShutdown &#x27;<span class="variable">%SystemDrive%</span>\Sysprep\%~<span class="number">1</span>&#x27;&quot;</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="keyword">exit</span> /b</span><br><span class="line"></span><br><span class="line">:install_uwp_apps</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">1</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="built_in">echo</span> 开始安装/更新「%~<span class="number">1</span>」</span><br><span class="line">    <span class="built_in">echo</span>.</span><br><span class="line">    <span class="keyword">call</span> :draw_line &quot;-&quot;</span><br><span class="line">    <span class="built_in">echo</span>.</span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">    <span class="keyword">exit</span> /b</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">2</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">2</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">3</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">3</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">4</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">4</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">5</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">5</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">6</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">6</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">7</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">7</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> &quot;%~<span class="number">8</span>&quot; <span class="keyword">NEQ</span> &quot;&quot; (</span><br><span class="line">    <span class="keyword">call</span> :ps_add_appxpackage &quot;%~<span class="number">8</span>&quot;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">call</span> :draw_line &quot;=&quot;</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="keyword">exit</span> /b</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> :install_uwp_apps &quot;微软商店&quot; &quot;Microsoft.UI.Xaml.<span class="number">2</span>.<span class="number">8</span>_8.<span class="number">2310</span>.<span class="number">30001</span>.<span class="number">0</span>_x64__8wekyb3d8bbwe.Appx&quot; &quot;Microsoft.<span class="built_in">NET</span>.Native.Framework.<span class="number">2</span>.<span class="number">2</span>_2.<span class="number">2</span>.<span class="number">29512</span>.<span class="number">0</span>_x64__8wekyb3d8bbwe.Appx&quot; &quot;Microsoft.<span class="built_in">NET</span>.Native.Runtime.<span class="number">2</span>.<span class="number">2</span>_2.<span class="number">2</span>.<span class="number">28604</span>.<span class="number">0</span>_x64__8wekyb3d8bbwe.Appx&quot; &quot;Microsoft.VCLibs.<span class="number">140</span>.<span class="number">00</span>_14.<span class="number">0</span>.<span class="number">33519</span>.<span class="number">0</span>_x64__8wekyb3d8bbwe.Appx&quot; &quot;Microsoft.VCLibs.<span class="number">140</span>.<span class="number">00</span>.UWPDesktop_14.<span class="number">0</span>.<span class="number">33519</span>.<span class="number">0</span>_x64__8wekyb3d8bbwe.Appx&quot; &quot;Microsoft.WindowsStore_22403.<span class="number">1401</span>.<span class="number">3</span>.<span class="number">0</span>_neutral_~_8wekyb3d8bbwe.Msixbundle&quot;</span><br></pre></td></tr></table></figure>

<h2 id="xbox手柄插入提示：无法打开此-ms-gamebar-链接">5.3 &nbsp&nbsp<a href="#xbox手柄插入提示：无法打开此-ms-gamebar-链接" class="headerlink" title="xbox手柄插入提示：无法打开此&quot;ms-gamebar&quot;链接"></a>xbox手柄插入提示：无法打开此&quot;ms-gamebar&quot;链接</h2><p>解决方法：</p>
<ol>
<li>重新卸载并安装xbox game bar</li>
<li>注册表禁用</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg add &quot;HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR&quot; /v &quot;AppCaptureEnabled&quot; /t &quot;REG_DWORD&quot; /d &quot;0&quot; /f</span><br><span class="line">reg add &quot;HKCU\System\GameConfigStore&quot; /v &quot;GameDVR_Enabled&quot; /t &quot;REG_DWORD&quot; /d &quot;0&quot; /f</span><br></pre></td></tr></table></figure>

<h2 id="Windows-LTSC安装微软商店MicrosoftStore">5.4 &nbsp&nbsp<a href="#Windows-LTSC安装微软商店MicrosoftStore" class="headerlink" title="Windows LTSC安装微软商店MicrosoftStore"></a>Windows LTSC安装微软商店MicrosoftStore</h2><p>解决方法：</p>
<ul>
<li>CMD&#x2F;PowerShell：<code>wsreset -i</code></li>
<li>PowerShell：<code>Get-AppxPackage -AllUsers -Name Microsoft.WindowsStore | Foreach &#123;Add-AppxPackage -DisableDevelopmentMode -Register &quot;$($_.InstallLocation)\AppXManifest.xml&quot;&#125;</code></li>
</ul>
<h1 id="系统更新">6 &nbsp&nbsp<a href="#系统更新" class="headerlink" title="系统更新"></a>系统更新</h1><h2 id="无法连接到更新服务。我们将稍后再试，你也可以立即进行检查。如果问题仍然存在，请确保你已连接到-Internet">6.1 &nbsp&nbsp<a href="#无法连接到更新服务。我们将稍后再试，你也可以立即进行检查。如果问题仍然存在，请确保你已连接到-Internet" class="headerlink" title="无法连接到更新服务。我们将稍后再试，你也可以立即进行检查。如果问题仍然存在，请确保你已连接到 Internet"></a>无法连接到更新服务。我们将稍后再试，你也可以立即进行检查。如果问题仍然存在，请确保你已连接到 Internet</h2><ul>
<li>解决方法1：执行系统自带诊断程序：<code>C:\Windows\diagnostics\system\WindowsUpdate\DiagPackage.diagpkg</code></li>
<li>解决方法2:<ol>
<li>查看相关服务项是否正常开启：windows update，Cryptographic Services，Background Intelligent Transfer Service，Windows Installer。</li>
<li>尝试将网络的dns修改至4.2.2.2或4.2.2.1。</li>
<li>清理win更新缓存文件夹：先关闭windows update服务，删除<code>C:\Windows\SoftwareDistribution</code>目录下的Download和DataStore文件夹，然后重新开启windows update服务。</li>
</ol>
</li>
</ul>
<h1 id="注册表">7 &nbsp&nbsp<a href="#注册表" class="headerlink" title="注册表"></a>注册表</h1><p><a href="https://pecmd.net/thread-68.htm">教程：了解和掌握Windows操作系统注册表，包括在线和离线修改方法</a></p>
<h2 id="查询程序对应修改前后的注册表项">7.1 &nbsp&nbsp<a href="#查询程序对应修改前后的注册表项" class="headerlink" title="查询程序对应修改前后的注册表项"></a>查询程序对应修改前后的注册表项</h2><p>参考文章：</p>
<ul>
<li><a href="https://blog.csdn.net/l1040515635/article/details/106003400">https://blog.csdn.net/l1040515635/article/details/106003400</a></li>
<li><a href="https://blog.csdn.net/babytiger/article/details/128649481">https://blog.csdn.net/babytiger/article/details/128649481</a></li>
</ul>
<h3 id="方法一：对比修改前后所有注册表项">7.1.1 &nbsp&nbsp<a href="#方法一：对比修改前后所有注册表项" class="headerlink" title="方法一：对比修改前后所有注册表项"></a>方法一：对比修改前后所有注册表项</h3><ol>
<li>注册表导出命令：<code>Gpresult /scope computer /v  &gt;1.txt</code></li>
<li>应用修改前先用命令导出注册表项</li>
<li>修改组策略或者执行应用完成修改</li>
<li>应用修改后再次用命令导出注册表项</li>
<li>比较前后即可得出修改的注册表项</li>
</ol>
<h3 id="方法二：火绒剑查看日志">7.1.2 &nbsp&nbsp<a href="#方法二：火绒剑查看日志" class="headerlink" title="方法二：火绒剑查看日志"></a>方法二：火绒剑查看日志</h3><p>运行gpedit.msc，实际是mmc.exe打开gpedit.msc。</p>
<p>火绒剑增加mmc.exe的过滤，查看具体修改项。</p>
<h2 id="默认应用的修改">7.2 &nbsp&nbsp<a href="#默认应用的修改" class="headerlink" title="默认应用的修改"></a>默认应用的修改</h2><p>部分地区的Windows在安装2024年2月份的更新补丁（Windows 10 (KB5034763) and Windows 11 (KB5034765)）后，有一个新增的保护驱动<code>c:\windows\system32\drivers\UCPD.sys</code>可能会锁定注册表的值，导致无法通过修改注册表的值来修改默认应用的值，诸如<code>SetUserFTA</code>和<code>SetDefaultBrowser</code>都会失效。</p>
<p>解决方法：</p>
<ul>
<li>禁用驱动后<code>SetUserFTA</code>就可以正常使用，powershell运行命令：</li>
</ul>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">New-ItemProperty -<span class="built_in">Path</span> “HKLM:\SYSTEM\CurrentControlSet\Services\UCPD” -Name “<span class="built_in">Start</span>” -Value <span class="number">4</span> -PropertyType DWORD -Force</span><br></pre></td></tr></table></figure>
<ul>
<li>改用dism方式修改默认应用值，详看<a href="https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/export-or-import-default-application-associations?view=windows-11">Export or Import Default Application Associations</a></li>
</ul>
<h1 id="Windows域管理">8 &nbsp&nbsp<a href="#Windows域管理" class="headerlink" title="Windows域管理"></a>Windows域管理</h1><p>常见的三方域管理软件：</p>
<ul>
<li>卓豪域管理</li>
</ul>
<h1 id="网络">9 &nbsp&nbsp<a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="网络连通性测试">9.1 &nbsp&nbsp<a href="#网络连通性测试" class="headerlink" title="网络连通性测试"></a>网络连通性测试</h2><div class="note info no-icon"><p>ping命令是属于网络层的ICMP协议的，用于检查IP的连通性或网络连接速度，是无法用于检测IP的端口状态。</p>
</div>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 验证本机 TCP/IP 协议是否安装好</span></span><br><span class="line">ping 127.0.0.1</span><br><span class="line"><span class="comment"># 验证本机 IP 地址是否配置完成或者网卡物理属性是否完好</span></span><br><span class="line">ping 192.168.1.55</span><br><span class="line"><span class="comment"># 验证从本机到网关的物理线路是否连通</span></span><br><span class="line">ping 192.168.1.1/192.168.0.1</span><br><span class="line"><span class="comment"># 目标地址查看电脑与目标机器工作是否正常。</span></span><br><span class="line">ping</span><br><span class="line"><span class="comment"># 目标地址跟踪数据包到达目的主机的路径，可以探测网络故障是发生在哪一个位置</span></span><br><span class="line">Tracert</span><br><span class="line"><span class="comment"># 首先 localhost 是一个域名，在过去它指向 127.0.0.1 这个 IP 地址。在操作系统支持 ipv6 后，它同时还指向 ipv6 的地址 [::1] 。</span></span><br></pre></td></tr></table></figure>

<h2 id="网络端口测试">9.2 &nbsp&nbsp<a href="#网络端口测试" class="headerlink" title="网络端口测试"></a>网络端口测试</h2><ul>
<li>telnet：应用层协议命令，用于远程登录，也可用于检测IP的端口状态，但无法查看ping值和实现监控。<ul>
<li>Windows系统有自带，但默认未启用，需要在「启用或关闭Windows功能」中勾选启用<code>Telnet Client</code>。</li>
</ul>
</li>
<li>tcping：传输层协议命令（通过TCP的握手和挥手的时间差来判断端口的打开与延迟），可用于检测IP端口状态和查看ping值，即使源地址禁用ICMP协议的ping，也可以通过tcping来监控网络状态。如下有一些三方实现的tcping仓库链接。<ul>
<li><a href="https://github.com/pouriyajamshidi/tcping">pouriyajamshidi&#x2F;tcping</a></li>
<li><a href="https://github.com/cloverstd/tcping">cloverstd&#x2F;tcping</a></li>
<li><a href="https://elifulkerson.com/projects/tcping.php">elifulkerson&#x2F;tcping</a></li>
</ul>
</li>
</ul>
<h2 id="win10-ssh文件路径">9.3 &nbsp&nbsp<a href="#win10-ssh文件路径" class="headerlink" title="win10 ssh文件路径"></a>win10 ssh文件路径</h2><ul>
<li>SSH程序主目录：<code>C:\Windows\System32\OpenSSH</code></li>
<li>SSH配置文件目录：<code>%PROGRAMDATA%\ssh\sshd_config</code></li>
<li>SSH数据文件路径：<code>%USERPROFILE%\.ssh</code></li>
</ul>
<h2 id="win10-ssh客户端">9.4 &nbsp&nbsp<a href="#win10-ssh客户端" class="headerlink" title="win10 ssh客户端"></a>win10 ssh客户端</h2><p>win10 1803之后版本自带安装ssh客户端并自动启用，可检查是否已正确设置启用。</p>
<p>命令使用方式：<code>ssh username@ip</code></p>
<h3 id="SSH连接时提示继续连接，在输错选项后一直提示报错Connection-closed-by-192-168-2-72-port-22">9.4.1 &nbsp&nbsp<a href="#SSH连接时提示继续连接，在输错选项后一直提示报错Connection-closed-by-192-168-2-72-port-22" class="headerlink" title="SSH连接时提示继续连接，在输错选项后一直提示报错Connection closed by 192.168.2.72 port 22"></a>SSH连接时提示继续连接，在输错选项后一直提示报错<code>Connection closed by 192.168.2.72 port 22</code></h3><p>问题现象：在使用<code>ssh username@ip</code>命令时，一般会有交互提示。倘若此步骤输错选项，会导致一直提示报错<code>Connection closed by 192.168.2.72 port 22</code>，重复尝试<code>ssh username@ip</code>仍然会提示这个错误。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span><br><span class="line">Please <span class="built_in">type</span> &#x27;yes&#x27;, &#x27;no&#x27; or the fingerprint: �Hyes</span><br><span class="line"><span class="function">Warning: <span class="title">Permanently</span> <span class="title">added</span> &#x27;192.168.2.72&#x27; (<span class="title">ED25519</span>) <span class="title">to</span> <span class="title">the</span> <span class="title">list</span> <span class="title">of</span> <span class="title">known</span> <span class="title">hosts</span>.输入错误。</span></span><br><span class="line"><span class="function"><span class="title">Connection</span> <span class="title">closed</span> <span class="title">by</span> 192.168.2.72 <span class="title">port</span> 22</span></span><br></pre></td></tr></table></figure>

<p>问题原因：在输入错误的选项之后，ssh程序记录了当前IP到SSH数据文件<code>known_hosts</code>中，但由于这个缓存的数据有错误，因此ssh在尝试发起连接时会出现异常。</p>
<p>解决方法：定位到SSH数据文件路径：<code>%USERPROFILE%\.ssh</code>，编辑文件<code>known_hosts</code>，删除此前错误连接IP的那行内容，然后保存文件，重新使用<code>ssh username@ip</code>发起连接。</p>
<h2 id="win10-ssh服务端并允许空密码连接登录">9.5 &nbsp&nbsp<a href="#win10-ssh服务端并允许空密码连接登录" class="headerlink" title="win10 ssh服务端并允许空密码连接登录"></a>win10 ssh服务端并允许空密码连接登录</h2><p>虽说新版win10已自带安装ssh客户端，但服务端需自行安装设置。</p>
<ol>
<li><p>下载安装OpenSSH</p>
<ul>
<li>方式1：使用系统的可选功能安装：<ol>
<li>设置-&gt;应用-&gt;应用和功能：可选功能</li>
<li>添加功能：<code>OpenSSH服务器</code>，选择安装</li>
</ol>
</li>
<li>方式2：下载离线安装包进行安装——<a href="https://github.com/PowerShell/Win32-OpenSSH/releases">Win32-OpenSSH</a>，使用离线包方式安装成功的话，可选功能列表中仍然也会是未勾选安装哈，因为是相互独立的。</li>
</ul>
</li>
<li><p>编辑文件：<code>C:\ProgramData\ssh\sshd_config</code>，修改如下参数，实现允许空密码登录。（若<code>C:\ProgramData\ssh</code>路径下不存在任何文件，先运行<code>net start sshd</code>开启<code>sshd</code>服务）</p>
<blockquote>
<p>若在修改<code>sshd_config</code>之前，已启动了ssh服务。记得在修改好文件后，关闭并重新开启<code>sshd</code>服务，否则修改的设置无法生效。</p>
</blockquote>
<p> 修改前：</p>
 <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># To disable tunneled clear text passwords, change to no here!</span><br><span class="line">#PasswordAuthentication yes</span><br><span class="line">#PermitEmptyPasswords no</span><br></pre></td></tr></table></figure>
<p> 修改后：</p>
 <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># To disable tunneled clear text passwords, change to no here!</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line">PermitEmptyPasswords yes</span><br></pre></td></tr></table></figure></li>
<li><p>打开本地安全策略窗口，WIN+R：secpol.msc。本地策略 -&gt; 安全选项：在右侧选中「帐户: 使用空白密码的本地帐户只允许进行控制台登录双击进行编辑」。选择禁用选项确认。</p>
</li>
<li><p>管理员权限终端，关闭和开启<code>sshd</code>服务</p>
 <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">net</span> stop sshd   # 关闭</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> sshd  # 开启</span><br></pre></td></tr></table></figure></li>
<li><p>设置ssh服务自启</p>
<ul>
<li>方式1：任务管理器&gt;服务&gt;打开服务，将「OpenSSH SSH Server」服务设置为「自动」，即代表开机自启。</li>
<li>方式2：PowerShell命令设置<code>Set-Service sshd -StartupType Automatic</code></li>
</ul>
</li>
</ol>
<h3 id="在可选功能中勾选安装了OpenSSH服务器，但服务开启失败">9.5.1 &nbsp&nbsp<a href="#在可选功能中勾选安装了OpenSSH服务器，但服务开启失败" class="headerlink" title="在可选功能中勾选安装了OpenSSH服务器，但服务开启失败"></a>在可选功能中勾选安装了OpenSSH服务器，但服务开启失败</h3><p>问题现象：使用<code>系统-&gt;可选功能</code>安装了OpenSSH服务器，但运行<code>net start sshd</code>命令尝试开启服务，提示如下报错信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">服务没有响应控制功能。</span><br><span class="line">请键入 NET HELPMSG 2186 以获得更多的帮助。</span><br></pre></td></tr></table></figure>

<p>问题原因：推测是使用<code>系统-&gt;可选功能</code>在安装OpenSSH时，后台服务项未正常配置好安装，出现了异常。</p>
<p>解决方法：下载<code>OpenSSH</code>离线安装包，重新覆盖安装或者右击安装包运行修复。</p>
<h3 id="系统可选功能勾选安装OpenSSH服务器报错：0x80072EE6">9.5.2 &nbsp&nbsp<a href="#系统可选功能勾选安装OpenSSH服务器报错：0x80072EE6" class="headerlink" title="系统可选功能勾选安装OpenSSH服务器报错：0x80072EE6"></a>系统可选功能勾选安装<code>OpenSSH服务器</code>报错：0x80072EE6</h3><p>问题现象：使用<code>系统-&gt;可选功能</code>勾选安装<code>OpenSSH服务器</code>时，提示<code>无法添加</code>。错误代码：0x80072EE6。</p>
<p>解决方法：下载<code>OpenSSH</code>离线安装包，进行安装。</p>
<h3 id="OpenSSH服务器已配置好，并且后台sshd服务也正常开启运行，其他机器仍然无法通过ssh-username-ip登录">9.5.3 &nbsp&nbsp<a href="#OpenSSH服务器已配置好，并且后台sshd服务也正常开启运行，其他机器仍然无法通过ssh-username-ip登录" class="headerlink" title="OpenSSH服务器已配置好，并且后台sshd服务也正常开启运行，其他机器仍然无法通过ssh username@ip登录"></a><code>OpenSSH服务器</code>已配置好，并且后台<code>sshd</code>服务也正常开启运行，其他机器仍然无法通过<code>ssh username@ip</code>登录</h3><p>问题现象：<code>ssh username@ip</code>登录时，报错信息如下：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">ssh: <span class="title">connect</span> <span class="title">to</span> <span class="title">host</span> 192.168.2.72 <span class="title">port</span> 22: <span class="title">Connection</span> <span class="title">timed</span> <span class="title">out</span></span></span><br></pre></td></tr></table></figure>

<p>问题原因：此问题基本都是防火墙设置引起，例如防火墙导致OpenSSH服务器端主机的22端口是关闭状态。</p>
<p>解决方法：使用工具检测OpenSSH服务器端主机的22端口状态是否开启，例如<code>tcping</code>。若22端口连接失败，可通过「允许应用通过Windows防火墙」打开查看<code>OpenSSH Server</code>的设置情况，一般情况，系统只会针对<code>专用</code>类型网络默认开启端口，<code>公用</code>类型网络默认禁用端口。若当前机器网络是<code>公用</code>类型，并且无法设置到<code>专用</code>网络类型的话，可设置允许<code>OpenSSH Server</code>在<code>公用</code>类型启用端口。使用「高级安全Windows Defender防火墙」可以更为详细地查看和设置各应用协议端口设置。</p>
<h2 id="win公用网络切换为专用网络">9.6 &nbsp&nbsp<a href="#win公用网络切换为专用网络" class="headerlink" title="win公用网络切换为专用网络"></a>win公用网络切换为专用网络</h2><p>部分情况「公用网络」的权限缩紧，不少端口都被屏蔽禁用。</p>
<ol>
<li>打开本地安全策略窗口：WIN+R：secpol.msc</li>
<li>网络列表管理器策略</li>
<li>找到需要修改的网路名称，属性窗口的网络位置标签</li>
<li>选择位置类型为「专用（R）」，用户权限为「用户不可以更改位置（S）」</li>
</ol>
<h2 id="win防火墙开启后无法被ping通">9.7 &nbsp&nbsp<a href="#win防火墙开启后无法被ping通" class="headerlink" title="win防火墙开启后无法被ping通"></a>win防火墙开启后无法被ping通</h2><p>两种方案：</p>
<ul>
<li>关闭防火墙：控制面板-&gt;系统和安全-&gt;Windows Defender 防火墙-&gt;启用或关闭Windows Defender防火墙-&gt;全部选择关闭Windows Defender防火墙-&gt;点击确定即可。</li>
<li>配置防火墙规则：控制面板-&gt;系统和安全-&gt;Windows Defender 防火墙-&gt;高级设置-&gt;入站规则-&gt;右键点击「虚拟机监控（回显请求）」所对应的两条记录（或者只启用ICMPv4-In，不启用ICMPv6-In）-&gt;点击启用规则。（如果仍然不行，继续启用「文件和打印机共享（回显请求）」，共四条）</li>
</ul>
<h2 id="空密码无密码账户远程桌面连接出错提示用户账户限制">9.8 &nbsp&nbsp<a href="#空密码无密码账户远程桌面连接出错提示用户账户限制" class="headerlink" title="空密码无密码账户远程桌面连接出错提示用户账户限制"></a>空密码无密码账户远程桌面连接出错提示用户账户限制</h2><p>使用远程桌面功能时，报错：&#96;用户账户限制(例如，时间限制)会阻止你登录。请与系统管理员或技术支持联系以获取帮助。</p>
<p>问题原因：因为被控端的远程系统的用户密码为空，且系统默认只允许空白密码的本地账户进行控制台登录。</p>
<p>解决方式（在被控端操作）：</p>
<ol>
<li>打开本地安全策略窗口，WIN+R：secpol.msc</li>
<li>本地策略 -&gt; 安全选项：在右侧选中「帐户: 使用空白密码的本地帐户只允许进行控制台登录双击进行编辑」</li>
<li>选择禁用选项确认。</li>
</ol>
<h2 id="win10开启远程桌面功能">9.9 &nbsp&nbsp<a href="#win10开启远程桌面功能" class="headerlink" title="win10开启远程桌面功能"></a>win10开启远程桌面功能</h2><p>设置&gt;系统&gt;远程桌面&gt;启用远程桌面</p>
<p>P.S. 本质上和win7的设置一样，只是在win10的设置中提供了一个接口设置。</p>
<h2 id="win7启用远程桌面">9.10 &nbsp&nbsp<a href="#win7启用远程桌面" class="headerlink" title="win7启用远程桌面"></a>win7启用远程桌面</h2><p>系统&gt;设置&gt;远程设置&gt;允许远程协助连接这台计算机+允许运行任意版本远程桌面的计算机连接（较不安全）。</p>
<p>如果依旧被拦截，点击「选择用户」，将用户名加入。</p>
<h2 id="删除远程桌面连接记录">9.11 &nbsp&nbsp<a href="#删除远程桌面连接记录" class="headerlink" title="删除远程桌面连接记录"></a>删除远程桌面连接记录</h2><ol>
<li>WIN+R键：regedit</li>
<li>注册表编辑器的地址栏输入地址：<code>计算机\HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default</code></li>
<li>删除不要的记录</li>
</ol>
<h2 id="连接SMB提示：不允许一个用户使用一个以上用户名与服务器或共享资源的多重连接">9.12 &nbsp&nbsp<a href="#连接SMB提示：不允许一个用户使用一个以上用户名与服务器或共享资源的多重连接" class="headerlink" title="连接SMB提示：不允许一个用户使用一个以上用户名与服务器或共享资源的多重连接"></a>连接SMB提示：不允许一个用户使用一个以上用户名与服务器或共享资源的多重连接</h2><p>问题现象：访问SMB共享文件夹时，提示报错：不允许一个用户使用一个以上用户名与服务器或共享资源的多重连接。中断与此服务器或共享资源的所有连接，然后再试一次。</p>
<p>问题原因：Windows后台Workstation服务异常。</p>
<p>解决方法：</p>
<ul>
<li>方法1：计算机管理-&gt;服务和应用程序-&gt;服务，找到并重启<code>Workstation</code>服务。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sc stop LanmanWorkstation</span><br><span class="line">sc start LanmanWorkstation</span><br></pre></td></tr></table></figure>
<ul>
<li>方法2：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看已经绑定缓存</span></span><br><span class="line">net use</span><br><span class="line"><span class="comment"># 删除指定连接</span></span><br><span class="line">net use \\共享IP\文件夹路径  /delete</span><br><span class="line"><span class="comment"># 删除所有当前的网络连接</span></span><br><span class="line">net use * /delete /y</span><br></pre></td></tr></table></figure>
<ul>
<li>方法3：管理Windows凭据-&gt;重新创建Windows凭据</li>
</ul>
<h1 id="多语言设置">10 &nbsp&nbsp<a href="#多语言设置" class="headerlink" title="多语言设置"></a>多语言设置</h1><h2 id="切换系统显示语言（包括欢迎屏幕）">10.1 &nbsp&nbsp<a href="#切换系统显示语言（包括欢迎屏幕）" class="headerlink" title="切换系统显示语言（包括欢迎屏幕）"></a>切换系统显示语言（包括欢迎屏幕）</h2><div class="note danger no-icon"><p>这个设置并非完美的，像是设置&gt;游戏设置界面就有可能存在部分元素没法正确切换第二种语言。但99%的系统界面元素基本是能正常切换的。最完美的方案其实还是使用对应语言的系统镜像文件，进行全新安装。</p>
</div>

<p>设置界面入口：设置&gt;时间和语言&gt;语言</p>
<ol>
<li>添加第二种语言，并将「Windows显示语言」选项设置为自己所需要的语言。</li>
<li>管理语言设置&gt;欢迎屏幕和新用户账户&gt;复制设置&gt;将当前设置复制到：勾选「欢迎屏幕和系统账户」（这个不设置的话，欢迎屏幕语言无法切换成第二种语言）</li>
<li>管理语言设置&gt;非Unicode程序的语言&gt;更改系统区域设置&gt;设定「当前系统区域设置」（这个可以根据实际情况调整）</li>
</ol>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/windows10-troubleshooting/setting-language-zones.webp">区域语言设置</div>
<div class="flex-column">
<img data-src="/images/windows10-troubleshooting/setting-language-welcom-screen.webp">欢迎屏幕设置</div>
</div>

<h2 id="程序界面语言乱码">10.2 &nbsp&nbsp<a href="#程序界面语言乱码" class="headerlink" title="程序界面语言乱码"></a>程序界面语言乱码</h2><p>一些非Unicode程序的语言，如果开启「（beta版）使用Unicode UTF-8提供全球语言支持」选项，可能会导致程序本身界面语言出现乱码。</p>
<p>解决方法：设置&gt;时间和语言&gt;语言&gt;管理语言设置&gt;非Unicode程序的语言&gt;更改系统区域设置&gt;取消勾选「（beta版）使用Unicode UTF-8提供全球语言支持」。</p>
<h1 id="蓝屏（BSOD）">11 &nbsp&nbsp<a href="#蓝屏（BSOD）" class="headerlink" title="蓝屏（BSOD）"></a>蓝屏（BSOD）</h1><p>内存转储文件存储路径：</p>
<ul>
<li>小型内存转储文件：<code>%SystemRoot%\Minidump\</code></li>
<li>完整内存转储文件：<code>%SystemRoot%\Memory.dmp</code></li>
</ul>
<p>关于蓝屏内存转储文件的分析：WinDbg（微软商店搜索安装），文件-&gt;Open dump file-&gt;加载dmp文件（如果小型转储文件不够信息分析，可以选择其他内存转储类型），相关命令分析如下：</p>
<ul>
<li><code>!analyze -v</code>：立即查看IMAGE_NAME可知是哪个程序搞的死机&#x2F;蓝屏&#x2F;重启（打开dmp文件就可以看到这个标蓝的命令，双击即可执行）</li>
<li><code>!process</code>：查看是哪个进程调用了程序导致崩溃</li>
<li><code>!process 0 0</code>：列出系统内的所有进程</li>
<li><a href="https://learn.microsoft.com/zh-cn/windows-hardware/drivers/debugger/analyzing-a-kernel-mode-dump-file-with-windbg">其他调试命令</a></li>
</ul>
<h2 id="蓝屏代码">11.1 &nbsp&nbsp<a href="#蓝屏代码" class="headerlink" title="蓝屏代码"></a>蓝屏代码</h2><p>代码相关链接帖子：</p>
<ul>
<li><a href="https://learn.microsoft.com/zh-cn/windows-hardware/drivers/debugger/bug-check-code-reference2">错误检查代码参考（微软官网文档）</a></li>
<li><a href="https://www.cnblogs.com/zhaijiahui/p/10184146.html">win10蓝屏的一些解决办法</a></li>
<li><a href="https://www.chinafix.com/thread-1345259-1-1.html">[系统故障] Windows蓝屏代码及解决方案最全合集</a></li>
</ul>
<h2 id="蓝屏重启：为设备-ROOT-DISPLAY-0000-加载驱动程序-Driver-WudfRd-失败">11.2 &nbsp&nbsp<a href="#蓝屏重启：为设备-ROOT-DISPLAY-0000-加载驱动程序-Driver-WudfRd-失败" class="headerlink" title="蓝屏重启：为设备 ROOT\DISPLAY\0000 加载驱动程序 \Driver\WudfRd 失败"></a>蓝屏重启：为设备 ROOT\DISPLAY\0000 加载驱动程序 \Driver\WudfRd 失败</h2><p>查看：事件管理器-&gt;Windows日志-&gt;系统</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">警告	2023/10/13 22:24:23	Kernel-PnP	219	(212)</span><br><span class="line">为设备 ROOT\DISPLAY\0000 加载驱动程序 \Driver\WudfRd 失败。</span><br><span class="line"></span><br><span class="line">关键	2023/10/13 22:24:23	Kernel-Power	41	(63)</span><br><span class="line">系统已在未先正常关机的情况下重新启动。如果系统停止响应、发生崩溃或意外断电，则可能会导致此错误。</span><br></pre></td></tr></table></figure>

<p>原因：向日葵远程控制软件引起的故障。经过设备管理器查看向日葵模拟的显卡设备，是会调用Driver\WUDFRd（Windows 用户模式驱动程序框架）。从相关帖子反馈得知，AMD CPU的机器会出现蓝屏重启问题，Intel CPU机器则只会出现报错，但不会重启。</p>
<p>疑似相关帖子：</p>
<ul>
<li><a href="https://www.zhihu.com/question/456561684">为设备加载驱动程序 \Driver\WudfRd 失败，怎么解决？</a></li>
<li><a href="https://blog.csdn.net/wnk1997/article/details/132630745">电脑莫名其妙重启 为设备 ROOT\DISPLAY\0000 加载驱动程序 \Driver\WUDFRd 失败</a></li>
<li><a href="https://tieba.baidu.com/p/8467586463#147882518791l">官方进来看下，我每次异常重启的原因找到了！！！！</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/667269889">最近电脑频繁蓝屏的解决方法-2023&#x2F;11&#x2F;16</a></li>
</ul>
<p><a href="https://www.cuanjibang.com/dngz/45261.html">可能的解决方法</a>：设置-&gt;安全-&gt;关闭「启用黑屏」。</p>
<p>P.S. 向日葵还可能导致调用显卡设备异常，例如三维软件无法显示模型或者3d mark测试一直报错。详见<a href="https://www.bilibili.com/read/cv24627629/">关于（贝锐）向日葵远程可能导致显卡驱动失效的解决方案</a>。</p>
<h2 id="双显卡笔记本（Intel核显-NVIDIA独显）卸载核显驱动后无限蓝屏，无法正常启动系统">11.3 &nbsp&nbsp<a href="#双显卡笔记本（Intel核显-NVIDIA独显）卸载核显驱动后无限蓝屏，无法正常启动系统" class="headerlink" title="双显卡笔记本（Intel核显+NVIDIA独显）卸载核显驱动后无限蓝屏，无法正常启动系统"></a>双显卡笔记本（Intel核显+NVIDIA独显）卸载核显驱动后无限蓝屏，无法正常启动系统</h2><p>故障现象：如果在已有Intel核显驱动和NVIDIA独显驱动的情况下，在仅卸载Intel核显之后，会导致Windows 10&#x2F;11系统无限蓝屏，无法正常启动系统。</p>
<p>问题原因：在部份型号较老的笔记本中，例如联想<code>erazer z500</code>，推测BIOS固件都是调用核显处理屏幕的显示，缺少核显驱动会导致冲突异常。</p>
<p>解决方法：让Windows系统自行尝试修复，等提示修复失败之后，通过交互菜单进入高级启动选项，进入安全模式。然后使用DDU工具完整清除NVIDIA独显驱动，然后重启就可以正常启动系统了。正常启动后，先安装Intel核显驱动，再安装NVIDIA独显驱动。</p>
<h1 id="显卡">12 &nbsp&nbsp<a href="#显卡" class="headerlink" title="显卡"></a>显卡</h1><h2 id="任务管理器检测不到cuda引擎">12.1 &nbsp&nbsp<a href="#任务管理器检测不到cuda引擎" class="headerlink" title="任务管理器检测不到cuda引擎"></a>任务管理器检测不到cuda引擎</h2><p>若Windows10和Windows11中的任务管理器均检测不到cuda引擎（系统实际也是从Direct 3D接口读取），则是因为系统开启「硬件加速GPU计划」功能。</p>
<p>解决方法：系统设置-&gt;系统-&gt;屏幕-&gt;图形设置-&gt;关闭「硬件加速GPU计划」。Windows11默认开启这个功能，Windows10默认禁用该功能。</p>
<h1 id="屏幕">13 &nbsp&nbsp<a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h1><h2 id="多屏扩展模式的界面显示">13.1 &nbsp&nbsp<a href="#多屏扩展模式的界面显示" class="headerlink" title="多屏扩展模式的界面显示"></a>多屏扩展模式的界面显示</h2><p>通常所有的软件都是默认在主屏的界面打开，但在调整屏幕主次的之前，还有一个规则是优先出现在上一次显示的屏幕中。一般的调整方法如下：</p>
<ol>
<li>win+shift+上&#x2F;下箭头（部分人是左&#x2F;右，待验证）：将程序界面在主副屏之间切换；</li>
<li>打开某一个程序后，把其界面拖到副屏上，下次该程序的界面就会默认在副屏打开。</li>
</ol>
<h2 id="高刷显示器闪屏、黑屏">13.2 &nbsp&nbsp<a href="#高刷显示器闪屏、黑屏" class="headerlink" title="高刷显示器闪屏、黑屏"></a>高刷显示器闪屏、黑屏</h2><p>硬件参数举例：PG27UQR，4K160HZ</p>
<p>引起原因：G-Sync功能，高刷信号的DSC数据压缩协议的重新握手，n卡面板中设置关闭。</p>
<p>案例说明：</p>
<ul>
<li><a href="https://www.chiphell.com/thread-2568585-1-1.html">https://www.chiphell.com/thread-2568585-1-1.html</a></li>
<li><a href="https://ngabbs.com/read.php?tid=38300253&rand=119">https://ngabbs.com/read.php?tid=38300253&amp;rand=119</a></li>
<li><a href="https://tieba.baidu.com/p/8492652851">https://tieba.baidu.com/p/8492652851</a></li>
</ul>
<h1 id="系统信息查看">14 &nbsp&nbsp<a href="#系统信息查看" class="headerlink" title="系统信息查看"></a>系统信息查看</h1><h2 id="系统安装日期">14.1 &nbsp&nbsp<a href="#系统安装日期" class="headerlink" title="系统安装日期"></a>系统安装日期</h2><p>每个大版本号安装都会修改这个值，如果是使用本地镜像文件mct安装覆盖系统的话，同样会修改这个值。</p>
<p>在BIOS时间未正常同步的情况下，若非联网就全新安装和部署系统时，这个系统安装日期可能不准确。</p>
<p>查看方式：</p>
<ol>
<li>设置主页-&gt;系统-&gt;关于-&gt;安装日期</li>
<li>命令行终端运行命令：<code>powershell -c &quot;(Get-CimInstance -ClassName Win32_OperatingSystem).InstallDate</code></li>
</ol>
<h1 id="Windows安全中心">15 &nbsp&nbsp<a href="#Windows安全中心" class="headerlink" title="Windows安全中心"></a>Windows安全中心</h1><h2 id="Windows打开病毒防护功能时提示报错页面不可用-你的IT管理员已经限制对此应用的某些区域的访问">15.1 &nbsp&nbsp<a href="#Windows打开病毒防护功能时提示报错页面不可用-你的IT管理员已经限制对此应用的某些区域的访问" class="headerlink" title="Windows打开病毒防护功能时提示报错页面不可用-你的IT管理员已经限制对此应用的某些区域的访问"></a>Windows打开病毒防护功能时提示报错<code>页面不可用-你的IT管理员已经限制对此应用的某些区域的访问</code></h2><p>问题现象：在打开病毒防护功能时出现提示报错：<code>页面不可用-你的IT管理员已经限制对此应用的某些区域的访问，并且你尝试访问的项目不可用。有关详细信息，请与IT支持人员联系。</code></p>
<p>问题原因：可能是某些版本系统重置此电脑或全新安装系统后，会出现安全中心无法打开的情况，页面显示空白或者提示页面不可用。</p>
<p>解决方法：下载<a href="https://apps.microsoft.com/detail/9p6pmztm93lr?hl=zh-cn&gl=CN">Microsoft Defender</a>离线安装包，重新覆盖安装即可解决。</p>
<h1 id="系统账户">16 &nbsp&nbsp<a href="#系统账户" class="headerlink" title="系统账户"></a>系统账户</h1><h2 id="报错提示：User-Profile-Service或ProfSvc服务登录失败">16.1 &nbsp&nbsp<a href="#报错提示：User-Profile-Service或ProfSvc服务登录失败" class="headerlink" title="报错提示：User Profile Service或ProfSvc服务登录失败"></a>报错提示：User Profile Service或ProfSvc服务登录失败</h2><p>故障原因：常见是系统Default目录缺失或者缺少文件</p>
<p>详细解释：在C盘用户文件目录下，存在着每个用户的登录桌面文件夹，同时还有一个隐藏显示的Default文件夹。当我们进行登录电脑时，系统会做如下逻辑判断：</p>
<ol>
<li>先判断是否存在该登录用户的用户文件夹；</li>
<li>存在登录用户文件夹，则使用该文件夹的桌面配置进行登录；若文件夹内容损坏，则会提示错误；</li>
<li>不存在登录用户文件夹，则系统会根据Default文件夹复制生成该登录用户的桌面文件夹 进行登录。若Default文件内容损坏，则会提示错误。</li>
</ol>
<p>解决方法：看看安全模式下能否进入。如果不行，只能是U盘Pe的环境下执行修复。</p>
<ol>
<li>删掉登录用户的文件夹，重新进行远程连接，若成功连接，则表示仅仅是登录用户文件损坏；若还无法进行远程登录，则需进行以下步操作。</li>
<li>删掉登录用户文件夹，删掉Default文件夹，从其他相同系统的服务器拷贝一个Default文件到本服务器。</li>
<li>为了防止以前的登录信息影响则可以删除注册表中\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\相关登录用户的注册文件。（如果有相同名称.bak文件夹，和另外没有bak文件夹互换名称，重启电脑）</li>
<li>重启电脑，则重新使用该用户进行登录远程即可。</li>
</ol>
<h1 id="用户账户控制（UAC）">17 &nbsp&nbsp<a href="#用户账户控制（UAC）" class="headerlink" title="用户账户控制（UAC）"></a>用户账户控制（UAC）</h1><h2 id="快捷键以管理员身份启动应用">17.1 &nbsp&nbsp<a href="#快捷键以管理员身份启动应用" class="headerlink" title="快捷键以管理员身份启动应用"></a>快捷键以管理员身份启动应用</h2><p>win+s搜索&gt;搜索应用名称&gt;ctrl+shift+enter快捷启动，同意uac提权请求</p>
<h1 id="声音">18 &nbsp&nbsp<a href="#声音" class="headerlink" title="声音"></a>声音</h1><h2 id="主板麦克风声音小">18.1 &nbsp&nbsp<a href="#主板麦克风声音小" class="headerlink" title="主板麦克风声音小"></a>主板麦克风声音小</h2><p>安装官网的声卡驱动，声音设备的增强开启最大<br>华硕主板：sonic studio应用中sonic studio effects这个效果关闭。<br>奥创 AI 降噪：<a href="https://www.asus.com/hk/support/faq/1043498/">https://www.asus.com/hk/support/faq/1043498/</a></p>
<h1 id="USB设备">19 &nbsp&nbsp<a href="#USB设备" class="headerlink" title="USB设备"></a>USB设备</h1><h2 id="插上U盘不识别，驱动未安装，报错28">19.1 &nbsp&nbsp<a href="#插上U盘不识别，驱动未安装，报错28" class="headerlink" title="插上U盘不识别，驱动未安装，报错28"></a>插上U盘不识别，驱动未安装，报错28</h2><ol>
<li>设备管理器，右键异常驱动设备</li>
<li>更新驱动程序</li>
<li>浏览我的电脑以查找驱动程序(R)</li>
<li>选择加载<code>C:\Windows\System32\DriverStore</code>，勾选包含子文文件夹。</li>
</ol>
<p>P.S.一般手动指定加载后，后续重新拔插相同设备也无需再二次加载。</p>
<h1 id="电源计划">20 &nbsp&nbsp<a href="#电源计划" class="headerlink" title="电源计划"></a>电源计划</h1><h2 id="Windows电源计划">20.1 &nbsp&nbsp<a href="#Windows电源计划" class="headerlink" title="Windows电源计划"></a>Windows电源计划</h2><h3 id="隐藏的处理器电源计划设置">20.1.1 &nbsp&nbsp<a href="#隐藏的处理器电源计划设置" class="headerlink" title="隐藏的处理器电源计划设置"></a>隐藏的处理器电源计划设置</h3><p>通过<code>powercfg</code>命令设置显示（终端管理员身份运行），恢复隐藏使用<code>+ATTRIB_HIDE</code>即可，更多的选项参见「<a href="https://www.bilibili.com/read/cv22139721/">Windows10和11隐藏的处理器电源管理选项</a>」：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">@REM 显示（处理器性能核心放置最小核心数量）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">0</span>cc5b647-c1df-<span class="number">4637</span>-<span class="number">891</span>a-dec35c318583 -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（针对第1类处理器电源效率的处理器性能核心放置最小核心数量）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">0</span>cc5b647-c1df-<span class="number">4637</span>-<span class="number">891</span>a-dec35c318584 -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（生效的异类策略）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">7</span>f2f5cfa-f10c-<span class="number">4823</span>-b5e1-e93ae85f46b5 -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（异类线程调度策略）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">93</span>b8b6dc-<span class="number">0698</span>-<span class="number">4</span>d1c-<span class="number">9</span>ee4-<span class="number">0644</span>e900c85d -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（异类短运行线程调度策略）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR bae08b81-<span class="number">2</span>d5e-<span class="number">4688</span>-ad6a-<span class="number">13243356654</span>b -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（延迟敏感度提示处理器性能）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">619</span>b7505-<span class="number">003</span>b-<span class="number">4</span>e82-b7a6-<span class="number">4</span>dd29c300971 -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（针对第 1 类处理器电源效率的延迟敏感度提示处理器性能）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">619</span>b7505-<span class="number">003</span>b-<span class="number">4</span>e82-b7a6-<span class="number">4</span>dd29c300972 -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（允许节流状态）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">3</span>b04d4fd-<span class="number">1</span>cc7-<span class="number">4</span>f23-ab1c-d1337819c4bb -ATTRIB_HIDE</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@REM 显示（处理器性能核心放置过度利用阈值）</span></span><br><span class="line">powercfg -attributes SUB_PROCESSOR <span class="number">943</span>c8cb6-<span class="number">6</span>f93-<span class="number">4227</span>-ad87-e9a3feec08d1 -ATTRIB_HIDE</span><br></pre></td></tr></table></figure>

<h3 id="处理器电源管理参数的设置说明">20.1.2 &nbsp&nbsp<a href="#处理器电源管理参数的设置说明" class="headerlink" title="处理器电源管理参数的设置说明"></a>处理器电源管理参数的设置说明</h3><p>不同的系统的平衡模式下，对处理器的调度有所不同，Windows Server不需要休眠，而Windows10和Windows11都偏向节能和性能的均衡设定，以下对处理器电源管理的部分设定做进一步的说明：</p>
<ol>
<li>处理器性能核心放置最小核心数量：此项设定小核心（高效处理器）的休眠设定（在任务管理器中显示该核心为已停止状态），如果设置为100%，代表小核心不再休眠，Windows 10中设置为100%，主要的缘故在于Window10发行时，没有12、13、14代处理器，所以该项设置默认为所有小核不休眠，但Windows11 中设置为4%，代表支持小核心休眠。</li>
<li>针对第1类处理器电源效率的处理器性能核心放置最小核心数量：此项设定大核心（高性能处理器和超线程）的休眠设定（在任务管理器中显示该核心或超线程为已停止状态），如果设置为100%，代表大核不再休眠，如果设置为50%代表休眠超线程，如果设置为0%代表所有的大核随机休眠。</li>
<li>生效的异类策略：此项设定为关键设定，Windows提供了4种默认设定：<ul>
<li>使用异类策略0：此项设定为Windows11的默认策略。代表所有核心都会休眠，睡眠顺序为优先休眠超线程 -&gt; 小核 -&gt; 大核。如果使用12、13、14代处理器，无论是哪种系统，最好都设为此项策略，可以获得最好的能效处理。</li>
<li>使用异类策略1：此项设定更依赖前面处理器性能核心放置最小核心数量与针对第1类处理器电源效率的处理器性能核心放置最小核心数量，处理器性能放置最小核心数量 负责小核睡眠，针对第1类处理器电源效率的处理器性能核心放置最小核心数量负责大核+超线程睡眠。</li>
<li>使用异类策略2：此设定为大核休眠，只使用小核心</li>
<li>使用异类策略3：此项设定为小核休眠，只使用大核心，选择此项，相当于在BIOS中关闭小核心。</li>
<li>使用异类策略4：此项设定Windows10与WindowsServer的默认设定，为自动随机休眠核心，但如果使用12、13、14代处理器，因为Windows10与Windows Server并没有对大小核心提供支持，因此会经常出现有大核休眠，小核围观的尴尬局面。</li>
</ul>
</li>
<li>异类线程调度策略&#x2F;异类短运行线程调度策略<ul>
<li>0 所有处理器（平均分配）：不建议</li>
<li>1 高性能处理器（只用大核）：如果不想使用小核，可以设定为此项</li>
<li>2 首选高性能处理器（大核忙的时候用小核）：推荐该项设定，配合前面生效的异类策略0与策略1</li>
<li>3 高效处理器（只用小核）：不建议，除非使用12、13、14代处理器但只想用小核。</li>
<li>4 首选高效处理器（小核忙的时候用大核）：此项设定也可以选择，平时使用小核，能效方面有好处，但是高负载的时候也会调用大核，选择此项，能获得更好的节能与性能的平衡，但生产力与游戏环境不推荐。</li>
<li>5 自动：此项设定为Windows10与Windows11的默认设定，但如果是12、13、14代处理器，若使用Windows10或Windows Server，不建议设定为自动，因为Windows10与Server都没办法默认处理大小核的自动调度。</li>
</ul>
</li>
<li>延迟敏感度提示处理器性能&#x2F;针对第 1 类处理器电源效率的延迟敏感度提示处理器性能：此两项设定主要设定小核&#x2F;大核的休眠与唤醒的敏感程度，12、13、14代处理器建议设置为Windows11的默认设置99%。能够快速唤醒已停止的处理器核心参与工作，也可以快速让没负载的核心快速的进入停止状态。如果是不希望核心进入休眠状态，随时都打满鸡血，那可以直接设定所有核心与超线程不休眠，永远处于亢奋状态。</li>
</ol>
<h3 id="处理器电源管理参数的设置">20.1.3 &nbsp&nbsp<a href="#处理器电源管理参数的设置" class="headerlink" title="处理器电源管理参数的设置"></a>处理器电源管理参数的设置</h3><blockquote>
<p><a href="https://forums.guru3d.com/threads/windows-power-plan-settings-explorer-utility.416058/">GUI界面设置程序：PowerSettingsExplorer</a></p>
</blockquote>
<p>通过<code>powercfg</code>命令设置（终端管理员身份运行）：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 显示（处理器性能核心放置最小核心数量）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPMINCORES <span class="number">25</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPMINCORES <span class="number">25</span></span><br><span class="line"><span class="comment">rem 显示（针对第 1 类处理器电源效率的处理器性能核心放置最小核心数量）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPMINCORES1 <span class="number">25</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPMINCORES1 <span class="number">25</span></span><br><span class="line"><span class="comment">rem 显示（（生效的异类策略）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR HETEROPOLICY <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR HETEROPOLICY <span class="number">0</span></span><br><span class="line"><span class="comment">rem 显示 （异类线程调度策略）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR <span class="number">4</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR <span class="number">4</span></span><br><span class="line"><span class="comment">rem 显示（异类短运行线程调度策略）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR SHORTSCHEDPOLICY <span class="number">4</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR SHORTSCHEDPOLICY <span class="number">4</span></span><br><span class="line"><span class="comment">rem 显示（延迟敏感度提示处理器性能）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR LATENCYHINTPERF <span class="number">99</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR LATENCYHINTPERF <span class="number">99</span></span><br><span class="line"><span class="comment">rem 显示 （针对第 1 类处理器电源效率的延迟敏感度提示处理器性能 ）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR LATENCYHINTPERF1 <span class="number">99</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR LATENCYHINTPERF1 <span class="number">99</span></span><br><span class="line"><span class="comment">rem 显示 （允许节流状态）</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR THROTTLING <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR THROTTLING <span class="number">1</span></span><br><span class="line"><span class="comment">rem 处理器能源性能首选项策略</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFEPP <span class="number">100</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFEPP <span class="number">100</span></span><br><span class="line"><span class="comment">rem 处理器性能降低策略</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFDECPOL <span class="number">2</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFDECPOL <span class="number">2</span></span><br><span class="line"><span class="comment">rem 停用已停用性能状态的处理器性能核心</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPPERF <span class="number">2</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPPERF <span class="number">2</span></span><br><span class="line"><span class="comment">rem 处理器性能增强策略</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFBOOSTPOL <span class="number">50</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFBOOSTPOL <span class="number">50</span></span><br><span class="line"><span class="comment">rem 处理器性能提升策略</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFINCPOL <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFINCPOL <span class="number">0</span></span><br><span class="line"><span class="comment">rem 处理器忙闲度</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFDUTYCYCLING <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFDUTYCYCLING <span class="number">1</span></span><br><span class="line"><span class="comment">rem 处理器闲置禁用</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR IDLEDISABLE <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR IDLEDISABLE <span class="number">0</span></span><br><span class="line"><span class="comment">rem 处理器闲置阈值调整</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR IDLESCALING <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR IDLESCALING <span class="number">1</span></span><br><span class="line"><span class="comment">rem 处理器性能核心放置减小策略</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPDECREASEPOL <span class="number">2</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPDECREASEPOL <span class="number">2</span></span><br><span class="line"><span class="comment">rem 处理器性能自主模式</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFAUTONOMOUS <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFAUTONOMOUS <span class="number">1</span></span><br><span class="line"><span class="comment">rem 处理器空闲状态最大值</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR IDLESTATEMAX <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR IDLESTATEMAX <span class="number">0</span></span><br><span class="line"><span class="comment">rem 最小处理器状态</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PROCTHROTTLEMIN <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PROCTHROTTLEMIN <span class="number">0</span></span><br><span class="line"><span class="comment">rem 最大处理器状态</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PROCTHROTTLEMAX <span class="number">100</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PROCTHROTTLEMAX <span class="number">100</span></span><br><span class="line"><span class="comment">rem 处理器性能提升时间</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFINCTIME <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFINCTIME <span class="number">1</span></span><br><span class="line"><span class="comment">rem 处理器性能下降时间</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFDECTIME <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFDECTIME <span class="number">1</span></span><br><span class="line"><span class="comment">rem 处理器性能提升模式</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFBOOSTMODE <span class="number">3</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR PERFBOOSTMODE <span class="number">3</span></span><br><span class="line"><span class="comment">rem 处理器性能核心放置增加策略</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPINCREASEPOL <span class="number">2</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPINCREASEPOL <span class="number">2</span></span><br><span class="line"><span class="comment">rem 处理器性能核心放置最大核心数量</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPMAXCORES <span class="number">50</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR CPMAXCORES <span class="number">50</span></span><br><span class="line"><span class="comment">rem 唤醒时不需要密码</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 CONSOLELOCK <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 CONSOLELOCK <span class="number">0</span></span><br><span class="line"><span class="comment">rem 从不关闭硬盘</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_DISK DISKIDLE <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_DISK DISKIDLE <span class="number">0</span></span><br><span class="line"><span class="comment">rem JavaScript 计时器频率最高性能</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">02</span>f815b5-a5cf-<span class="number">4</span>c84-bf20-<span class="number">649</span>d1f75d3d8 <span class="number">4</span>c793e7d-a264-<span class="number">42</span>e1-<span class="number">87</span>d3-<span class="number">7</span>a0d2f523ccd <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">02</span>f815b5-a5cf-<span class="number">4</span>c84-bf20-<span class="number">649</span>d1f75d3d8 <span class="number">4</span>c793e7d-a264-<span class="number">42</span>e1-<span class="number">87</span>d3-<span class="number">7</span>a0d2f523ccd <span class="number">1</span></span><br><span class="line"><span class="comment">rem 桌面允许放映幻灯片</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">0</span>d7dbae2-<span class="number">4294</span>-<span class="number">402</span>a-ba8e-<span class="number">26777</span>e8488cd <span class="number">309</span>dce9b-bef4-<span class="number">4119</span>-<span class="number">9921</span>-a851fb12f0f4 <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">0</span>d7dbae2-<span class="number">4294</span>-<span class="number">402</span>a-ba8e-<span class="number">26777</span>e8488cd <span class="number">309</span>dce9b-bef4-<span class="number">4119</span>-<span class="number">9921</span>-a851fb12f0f4 <span class="number">0</span></span><br><span class="line"><span class="comment">rem 无线适配器最高性能</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">19</span>cbb8fa-<span class="number">5279</span>-<span class="number">450</span>e-<span class="number">9</span>fac-<span class="number">8</span>a3d5fedd0c1 <span class="number">12</span>bbebe6-<span class="number">58</span>d6-<span class="number">4636</span>-<span class="number">95</span>bb-<span class="number">3217</span>ef867c1a <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">19</span>cbb8fa-<span class="number">5279</span>-<span class="number">450</span>e-<span class="number">9</span>fac-<span class="number">8</span>a3d5fedd0c1 <span class="number">12</span>bbebe6-<span class="number">58</span>d6-<span class="number">4636</span>-<span class="number">95</span>bb-<span class="number">3217</span>ef867c1a <span class="number">0</span></span><br><span class="line"><span class="comment">rem 从不自动进入睡眠</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP <span class="number">29</span>f6c1db-<span class="number">86</span>da-<span class="number">48</span>c5-<span class="number">9</span>fdb-f2b67b1f44da <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP <span class="number">29</span>f6c1db-<span class="number">86</span>da-<span class="number">48</span>c5-<span class="number">9</span>fdb-f2b67b1f44da <span class="number">0</span></span><br><span class="line"><span class="comment">rem 允许混合睡眠</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP <span class="number">94</span>ac6d29-<span class="number">73</span>ce-<span class="number">41</span>a6-<span class="number">809</span>f-<span class="number">6363</span>ba21b47e <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP <span class="number">94</span>ac6d29-<span class="number">73</span>ce-<span class="number">41</span>a6-<span class="number">809</span>f-<span class="number">6363</span>ba21b47e <span class="number">1</span></span><br><span class="line"><span class="comment">rem 从不自动进入休眠</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP <span class="number">9</span>d7815a6-<span class="number">7</span>ee4-<span class="number">497</span>e-<span class="number">8888</span>-<span class="number">515</span>a05f02364 <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP <span class="number">9</span>d7815a6-<span class="number">7</span>ee4-<span class="number">497</span>e-<span class="number">8888</span>-<span class="number">515</span>a05f02364 <span class="number">0</span></span><br><span class="line"><span class="comment">rem 允许使用唤醒定时器</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP bd3b718a-<span class="number">0680</span>-<span class="number">4</span>d9d-<span class="number">8</span>ab2-e1d2b4ac806d <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_SLEEP bd3b718a-<span class="number">0680</span>-<span class="number">4</span>d9d-<span class="number">8</span>ab2-e1d2b4ac806d <span class="number">1</span></span><br><span class="line"><span class="comment">rem USB 选择性暂停设置</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">2</span>a737441-<span class="number">1930</span>-<span class="number">4402</span>-<span class="number">8</span>d77-b2bebba308a3 <span class="number">48</span>e6b7a6-<span class="number">50</span>f5-<span class="number">4782</span>-a5d4-<span class="number">53</span>bb8f07e226 <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 <span class="number">2</span>a737441-<span class="number">1930</span>-<span class="number">4402</span>-<span class="number">8</span>d77-b2bebba308a3 <span class="number">48</span>e6b7a6-<span class="number">50</span>f5-<span class="number">4782</span>-a5d4-<span class="number">53</span>bb8f07e226 <span class="number">0</span></span><br><span class="line"><span class="comment">rem 合上盖子，不采取任何操作</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS <span class="number">5</span>ca83367-<span class="number">6</span>e45-<span class="number">459</span>f-a27b-<span class="number">476</span>b1d01c936 <span class="number">0</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS <span class="number">5</span>ca83367-<span class="number">6</span>e45-<span class="number">459</span>f-a27b-<span class="number">476</span>b1d01c936 <span class="number">0</span></span><br><span class="line"><span class="comment">rem 按下电源按钮为关机</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS <span class="number">7648</span>efa3-dd9c-<span class="number">4</span>e3e-b566-<span class="number">50</span>f929386280 <span class="number">3</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS <span class="number">7648</span>efa3-dd9c-<span class="number">4</span>e3e-b566-<span class="number">50</span>f929386280 <span class="number">3</span></span><br><span class="line"><span class="comment">rem 按下睡眠按钮为睡眠</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS <span class="number">96996</span>bc0-ad50-<span class="number">47</span>ec-<span class="number">923</span>b-<span class="number">6</span>f41874dd9eb <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS <span class="number">96996</span>bc0-ad50-<span class="number">47</span>ec-<span class="number">923</span>b-<span class="number">6</span>f41874dd9eb <span class="number">1</span></span><br><span class="line"><span class="comment">rem (「开始」菜单电源按钮)</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_BUTTONS a7066653-<span class="number">8</span>d6c-<span class="number">40</span>a8-<span class="number">910</span>e-a1f54b84c7e5 <span class="number">2</span></span><br><span class="line"><span class="comment">rem (链接状态电源管理)</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PCIEXPRESS ee12f906-d277-<span class="number">404</span>b-b6da-e5fa1a576df5 <span class="number">0</span></span><br><span class="line"><span class="comment">rem 系统散热方式为主动</span></span><br><span class="line">powercfg -setdcvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR <span class="number">94</span>d3a615-a899-<span class="number">4</span>ac5-ae2b-e4d8f634367f <span class="number">1</span></span><br><span class="line">powercfg -setacvalueindex e9a42b02-d5df-<span class="number">448</span>d-aa00-<span class="number">03</span>f14749eb61 SUB_PROCESSOR <span class="number">94</span>d3a615-a899-<span class="number">4</span>ac5-ae2b-e4d8f634367f <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="睡眠自动唤醒的异常排查">20.2 &nbsp&nbsp<a href="#睡眠自动唤醒的异常排查" class="headerlink" title="睡眠自动唤醒的异常排查"></a>睡眠自动唤醒的异常排查</h2><p>排查命令：</p>
<ul>
<li>查看最近一次唤醒的原因：<code>powercfg /lastwake</code></li>
<li>查看哪些设备被授权唤醒计算机：<code>powercfg /devicequery wake_armed</code></li>
</ul>
<p>一般唤醒的原因：</p>
<ol>
<li>唤醒定时器：「电源选项」-&gt;「更改计划设置」-&gt;「更改高级电源设置」-&gt;「睡眠」-&gt;「允许使用唤醒定时器」（可以设置禁用）。</li>
<li>外部设备干扰：鼠标、键盘、网络适配器。「设备管理器」-&gt;选择对应设备「属性」-&gt;「电源管理」选项卡-&gt;取消选中「允许此设备唤醒计算机」复选框。</li>
<li>网络唤醒：网络上的活动可能会导致计算机从睡眠状态中唤醒。禁用网络适配器的「允许此设备唤醒计算机」复选框。</li>
<li>未知的第三方后台进程：比如迅雷等下载器、雷神等加速器或者全屏浏览器网页之类的。</li>
<li>Windows系统更新和维护任务</li>
<li>其他硬件问题（通过命令详细排查）</li>
</ol>
<h2 id="睡眠和休眠">20.3 &nbsp&nbsp<a href="#睡眠和休眠" class="headerlink" title="睡眠和休眠"></a>睡眠和休眠</h2><p>当windows系统中没有安装显卡驱动时（包括核显驱动，例如intel核显驱动），电源选项不会有睡眠按钮。</p>
<blockquote>
<p>需要特别注意的是：即使在安装了独立显卡驱动的情况下，如果将显示器视频线接到主板核显接口上输出视频信号（CPU带核显）并且也没有安装核显驱动的话，电源选项不会有睡眠按钮。这个睡眠按钮是否可用，主要是看当前输出的视频信号是否有安装对应的驱动。</p>
</blockquote>
<p>若使用<code>powercfg /hibernate off</code>命令关闭休眠功能，电源计划中的「选择电源按钮的功能」中「启动快速启动（推荐）」功能会禁用消失。</p>
<h1 id="WSL">21 &nbsp&nbsp<a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><h2 id="安装Docker-Desktop需要启用WSL2功能">21.1 &nbsp&nbsp<a href="#安装Docker-Desktop需要启用WSL2功能" class="headerlink" title="安装Docker Desktop需要启用WSL2功能"></a>安装Docker Desktop需要启用WSL2功能</h2><p>设置步骤（终端命令行执行）：</p>
<ol>
<li><code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</code></li>
<li><code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</code></li>
<li>重启系统</li>
<li><code>wsl --set-default-version 2</code></li>
</ol>
<h1 id="安装系统">22 &nbsp&nbsp<a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h1><h2 id="虚拟机将gho，esd、wim等系统镜像文件加载进pe">22.1 &nbsp&nbsp<a href="#虚拟机将gho，esd、wim等系统镜像文件加载进pe" class="headerlink" title="虚拟机将gho，esd、wim等系统镜像文件加载进pe"></a>虚拟机将gho，esd、wim等系统镜像文件加载进pe</h2><p>虚拟机中，pe系统无法安装扩展工具，因此无法通过启用共享文件夹功能和宿主机传递文件。以下方法可以给pe系统中传递文件</p>
<ul>
<li>将gho、esd、wim文件打包封装成iso文件，通过CD&#x2F;DVD虚拟机硬件加载iso文件</li>
<li>映射虚拟磁盘</li>
</ul>
<h2 id="使用系统镜像内部自带的Setup-exe安装">22.2 &nbsp&nbsp<a href="#使用系统镜像内部自带的Setup-exe安装" class="headerlink" title="使用系统镜像内部自带的Setup.exe安装"></a>使用系统镜像内部自带的Setup.exe安装</h2><div class="note danger no-icon"><p>WinPE不推荐用这个方法，既然都在pe中，有其他方能够更好实现，没必要使用这个。</p>
</div>

<p>一般常见于将镜像作为PE启动盘或者直接在系统内运行。</p>
<p>P.S.在win7-win11系统上都可以直接运行安装（一般我都是用这个方法进行大版本的更新），只不过在WinPE中我们可以删除和格式化系统分区。如果WinPE中无法运行Setup.exe，换一个未深度精简过的PE再尝试。</p>
<div class="note info no-icon"><p>注意：在WinPE中或者直接作为启动盘，GPT分区注意要启用BIOS的UEFI启动模式，MBR分区启用BIOS的Legacy启动模式。</p>
</div>

<h2 id="PE中使用Dism安装系统镜像">22.3 &nbsp&nbsp<a href="#PE中使用Dism安装系统镜像" class="headerlink" title="PE中使用Dism安装系统镜像"></a>PE中使用Dism安装系统镜像</h2><ol>
<li>使用分区工具分好区</li>
<li>查看镜像中专业版所对应的索引index：<code>Dism /Get-ImageInfo /ImageFile:H:\sources\install.wim</code></li>
<li>安装镜像：<code>Dism /apply-image /imagefile:H:\sources\install.wim /index:8 /ApplyDir:W:\</code></li>
<li>配置启动文件：<code>bcdboot W:\Windows /s S: /f ALL</code>。MBR分区使用这条命令安装bootmgr和更新mbr：<code>bootsect /nt60 W: /mbr</code></li>
<li>重启机器</li>
</ol>
<h2 id="win11-OOBE安装跳过强制登录帐号">22.4 &nbsp&nbsp<a href="#win11-OOBE安装跳过强制登录帐号" class="headerlink" title="win11 OOBE安装跳过强制登录帐号"></a>win11 OOBE安装跳过强制登录帐号</h2><ul>
<li>方案1：拔掉网线，Shift+F10调出cmd窗口，运行：<code>oobe\BypassNRO.cmd</code>，重启继续走OOBE流程，到登录账户页面时会多出一个暂时跳过的选项。<ul>
<li>bypassnro.cmd在26200.5516预览版更新已确认被移除，该方法在后期正式版将无法使用。</li>
</ul>
</li>
<li>方案2：方案1的衍生方法，通过注册表修改BypassNRO的值以激活方案1的功能。Shift+F10调出cmd窗口，运行：<code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE /v BypassNRO /t REG_DWORD /d 1 /f shutdown /r /t 0</code>。</li>
<li>方案3：输入<a href="mailto:&#110;&#111;&#x40;&#116;&#104;&#x61;&#110;&#x6b;&#121;&#x6f;&#x75;&#x2e;&#99;&#111;&#109;">no@thankyou.com</a>触发账户锁定，在登录里输入此账户然后随便输入个字符当做密码点登录，此时系统会弹出错误提醒，然后点击下一步，创建本地账户。其他类似的账户有如下：<ul>
<li><a href="mailto:&#49;&#64;&#x31;&#x2e;&#x63;&#111;&#x6d;">1@1.com</a></li>
<li><a href="mailto:&#x38;&#x40;&#x38;&#46;&#x63;&#x6f;&#x6d;">8@8.com</a></li>
<li><a href="mailto:&#110;&#111;&#64;&#x74;&#x68;&#x61;&#x6e;&#x6b;&#x73;&#46;&#x63;&#111;&#x6d;">no@thanks.com</a></li>
<li><a href="mailto:&#x6e;&#111;&#64;&#x74;&#104;&#97;&#x6e;&#107;&#121;&#111;&#x75;&#46;&#99;&#111;&#x6d;">no@thankyou.com</a></li>
<li><a href="mailto:&#101;&#120;&#x61;&#109;&#112;&#108;&#x65;&#64;&#101;&#x78;&#x61;&#x6d;&#112;&#108;&#x65;&#x2e;&#x63;&#x6f;&#x6d;">example@example.com</a></li>
</ul>
</li>
<li>方案4：拔掉网线，Shift+F10调出cmd窗口，运行<code>start ms-cxh:localonly</code>。系统会自动打开微软账户管理的窗口，在此窗口输入帐号的用户名称和密码即可。<ul>
<li>适用系统范围：Windows 11 家庭版和专业版系列 (包括专业版、专业工作站版和专业教育版)</li>
</ul>
</li>
<li>方案5：无人值守文件unattended.xml自动化脚本。</li>
</ul>
<h2 id="新主板安装win7启动报错蓝屏0x000000a5">22.5 &nbsp&nbsp<a href="#新主板安装win7启动报错蓝屏0x000000a5" class="headerlink" title="新主板安装win7启动报错蓝屏0x000000a5"></a>新主板安装win7启动报错蓝屏0x000000a5</h2><p>问题：理论上1-13代酷睿都可以安装，本质上就是驱动的支持问题（锐龙芯片也是一样）。intel酷睿芯片原生支持win7的是6代，789代可通过注入驱动方式安装（可稳定用），10代及10代以后的也可以装，十分麻烦，需要特别处理BIOS和驱动问题（否则就是无限的a5蓝屏），而且不知道能否稳定用。一般导致a5蓝屏常见也是acpi.sys驱动问题。</p>
<h1 id="系统启动项">23 &nbsp&nbsp<a href="#系统启动项" class="headerlink" title="系统启动项"></a>系统启动项</h1><h2 id="EFI-NVRAM启动项">23.1 &nbsp&nbsp<a href="#EFI-NVRAM启动项" class="headerlink" title="EFI NVRAM启动项"></a>EFI NVRAM启动项</h2><p>具有EFI的硬件，启动项是存储在NVRAM介质中的，EFI固件类似于BIOS固件。在UEFI v2.3.1及之后的版本，可以使用这些工具编辑EFI启动项：</p>
<ul>
<li>EFI version 2 shell: 提供<code>bcfg</code>的命令</li>
<li>Windows<ul>
<li><a href="https://www.easyuefi.com/index-us.html">EasyUEFI</a>：支持GUI和<a href="https://www.easyuefi.com/faq/en-US/EasyUEFI-Command-Line.html">命令行操作</a></li>
<li><a href="http://bbs.wuyou.net/forum.php?mod=viewthread&tid=57675">Bootice</a></li>
<li><a href="https://www.diskgenius.cn/">DiskGenius</a>：<a href="https://www.diskgenius.cn/help/set-uefi-bios-options.php">设置UEFI BIOS启动项</a></li>
</ul>
</li>
<li>Linux: efibootmgr</li>
</ul>
<h2 id="Windows-Boot-Manager启动失败，硬盘Disk-0启动成功">23.2 &nbsp&nbsp<a href="#Windows-Boot-Manager启动失败，硬盘Disk-0启动成功" class="headerlink" title="Windows Boot Manager启动失败，硬盘Disk 0启动成功"></a>Windows Boot Manager启动失败，硬盘Disk 0启动成功</h2><p>故障原因：在操作重装uEFI系统之后，BCD（引导配置数据）条目未正确修改引起的故障。比如，重装系统之后，Windows Boot Manager中的&quot;device&quot;相关参数被删除，因此无法正确启动。</p>
<p>解决方法，有两种：</p>
<ul>
<li>重建引导：PE系统中，运行<code>%win_drive_letter%:\Windows\System32\bcdboot %win_drive_letter%:\Windows /s %efi_drive_letter%: /f BIOS /l zh-cn</code><ul>
<li><a href="https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/bcdboot-command-line-options-techref-di?view=windows-11"><code>BCDBoot</code>命令行参数选项</a></li>
</ul>
</li>
<li>CSM模式下，设置第一启动项为硬盘启动项，而不是windows boot manager启动项。</li>
</ul>
<h2 id="多系统引导项的默认值设置">23.3 &nbsp&nbsp<a href="#多系统引导项的默认值设置" class="headerlink" title="多系统引导项的默认值设置"></a>多系统引导项的默认值设置</h2><ol>
<li>WIN+R：msconfig-&gt;「引导」-&gt;选中我们需要默认启动的操作系统-&gt;「设为默认值」</li>
<li>高级系统设置-&gt;高级-&gt;启动和故障恢复-&gt;设置-&gt;默认操作系统</li>
</ol>
<h1 id="封装系统">24 &nbsp&nbsp<a href="#封装系统" class="headerlink" title="封装系统"></a>封装系统</h1><h2 id="关于IT天空论坛工具的锁定主页的行为">24.1 &nbsp&nbsp<a href="#关于IT天空论坛工具的锁定主页的行为" class="headerlink" title="关于IT天空论坛工具的锁定主页的行为"></a>关于IT天空论坛工具的锁定主页的行为</h2><p>锁定情况：EasyImageX2是优启通里面的系统安装器，在优启通里面是去广告的，但是换到另一个pe运行它又是带广告的；万能驱动用it天空的系统封装软件封装后可以去广告，移出来运行又会有广告。</p>
<p>实现原理：优启通启动的时候会在注册表生产一个当前机器的密钥字符串，然后EasyImageX2去解密判断，判断正确就免广告。同理万能驱动也是。注册表位置：<code>HKEY_LOCAL_MACHINE\SOFTWARE\EasyDrv7\</code>，但是仍然无法通过预先在系统中写入该注册表内容来去除推广包软件和主页绑定，因为是根据当前硬件信息生成一个key的。</p>
<h2 id="万能驱动的精简">24.2 &nbsp&nbsp<a href="#万能驱动的精简" class="headerlink" title="万能驱动的精简"></a>万能驱动的精简</h2><p>精简思路：softext文件夹内的几个安装包和驱动的压缩包是可删的，但所有e7e文件不可删（softext的e7e若删除，则会报错篡改；驱动压缩包对应的e7e若删除，则会导致卡100%的问题）。一般，驱动文件删除显卡驱动即可，oem和通用的。这种精简方式只适合在部署阶段中调用，无法在桌面环境下运行（会报错文件不完整或者软件被篡改）。如果想要精简并同时可以在桌面环境中运行的话，需要用老版的主程序替代。</p>
<h2 id="DISM的系统打包（备份）">24.3 &nbsp&nbsp<a href="#DISM的系统打包（备份）" class="headerlink" title="DISM的系统打包（备份）"></a>DISM的系统打包（备份）</h2><p>备份操作，会将驱动器的映像捕获到新的 .wim 文件中：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Dism /Capture-Image /ImageFile:D:\Windows10Pro-<span class="number">2024</span>-<span class="number">04</span>-<span class="number">13</span>.wim /CaptureDir:C:\ /Name:Windows10Pro-<span class="number">2024</span>-<span class="number">04</span>-<span class="number">13</span> /compress:max</span><br></pre></td></tr></table></figure>
<p>可以同时指定使用配置文件来打包wim镜像，比如捕获文件时排除休眠文件<code>hiberfil.sys</code>等，参见「<a href="https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/dism-configuration-list-and-wimscriptini-files-winnext?view=windows-11">DISM 配置列表文件</a>」：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Dism /Capture-Image /ImageFile:D:\Windows10Pro-<span class="number">2024</span>-<span class="number">04</span>-<span class="number">13</span>.wim /CaptureDir:C:\ /Name:Windows10Pro-<span class="number">2024</span>-<span class="number">04</span>-<span class="number">13</span> /ConfigFile:config_list.ini /compress:max</span><br></pre></td></tr></table></figure>
<p>config_list.ini文件内容</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[ExclusionList]</span></span><br><span class="line">\$ntfs.log</span><br><span class="line">\hiberfil.sys</span><br><span class="line">\pagefile.sys</span><br><span class="line">\swapfile.sys</span><br><span class="line">\System Volume Information</span><br><span class="line">\RECYCLER</span><br><span class="line">\Windows\CSC</span><br><span class="line"></span><br><span class="line"><span class="section">[CompressionExclusionList]</span></span><br><span class="line">*.mp3</span><br><span class="line">*.zip</span><br><span class="line">*.cab</span><br><span class="line">\WINDOWS\inf\*.pnf</span><br></pre></td></tr></table></figure>

<h2 id="DISM的系统恢复（应用）">24.4 &nbsp&nbsp<a href="#DISM的系统恢复（应用）" class="headerlink" title="DISM的系统恢复（应用）"></a>DISM的系统恢复（应用）</h2><p>关于使用系统自带命令工具来操作格式化硬盘，恢复镜像等操作，实际用法可参见「<a href="https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/oem-deployment-of-windows-desktop-editions-sample-scripts?view=windows-11">部署实验室示例脚本</a>」</p>
<p>恢复操作，此命令将对指定的分区应用 Windows 映像文件 (.wim)：</p>
<blockquote>
<p>一般推荐同时使用<code>/Verify</code>和<code>/NoRpFix</code>参数，但在我实际应用中，wim镜像打包都OK，但是还原会有概率导致出问题（<code>/NoRpFix</code>还没测试过，也可能是因为中文字符的缘故，以往测试时<code>/Name</code>参数使用中文字符<code>专业版</code>，而非<code>Pro</code>）。</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">dism /apply-image /imagefile:<span class="variable">%image_path%</span> /index:<span class="number">1</span> /applydir:<span class="variable">%win_drive_letter%</span>:\</span><br></pre></td></tr></table></figure>
<p>bcdboot重建系统引导（UEFI）：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="variable">%win_drive_letter%</span>:\Windows\System32\bcdboot <span class="variable">%win_drive_letter%</span>:\Windows /s <span class="variable">%efi_drive_letter%</span>: /f UEFI /l zh-cn</span><br></pre></td></tr></table></figure>

<h1 id="WinPE">25 &nbsp&nbsp<a href="#WinPE" class="headerlink" title="WinPE"></a>WinPE</h1><h2 id="WinPE的二次修改封装">25.1 &nbsp&nbsp<a href="#WinPE的二次修改封装" class="headerlink" title="WinPE的二次修改封装"></a>WinPE的二次修改封装</h2><h3 id="ISO镜像">25.1.1 &nbsp&nbsp<a href="#ISO镜像" class="headerlink" title="ISO镜像"></a>ISO镜像</h3><p>ISO镜像的二次修改和打包工具：<a href="http://www.anyburn.com/">AnyBurn</a>，使用软件中的「编辑镜像文件」功能即可，这样就可以完美保留原镜像的引导启动数据。（不推荐用UltraISO，界面老旧且难用，主要是ISO的引导信息不好弄）</p>
<h3 id="WIM镜像">25.1.2 &nbsp&nbsp<a href="#WIM镜像" class="headerlink" title="WIM镜像"></a>WIM镜像</h3><p>wim镜像的二次修改，dism使用命令参见「<a href="https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/dism-image-management-command-line-options-s14?view=windows-11">DISM 映像管理命令行选项</a>」：</p>
<ul>
<li>单版本：解压后就是系统本身，这种直接解压进行二次修改，然后dism++重新打包即可，记得勾选「可启动镜像」的选项。</li>
<li>多版本（dism如何一直提示镜像已经被加载过，使用<code>dism /cleanup-wim</code>命令强制卸载所有镜像）<ol>
<li>加载wim镜像到特定的路径空文件夹：<code>dism /mount-wim /wimfile:G:\11pex64.wim /index:1 /mountdir:D:\GOF\mount</code></li>
<li>卸载镜像并保存更改到镜像中：<code>dism /unmount-wim /mountdir:D:\GOF\mount /commit</code></li>
<li>导出wim以优化镜像（如果修改映像，DISM将存储额外的资源文件，比如wim文件内新增一个目录<code>[DELETE]</code>，这会增大映像的总体大小。可以通过将映像导出到新的映像文件，实现优化该映像，即删除掉目录<code>[DELETE]</code>。）</li>
</ol>
  <figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Dism /Export-Image /SourceImageFile:<span class="number">11</span>pex64.wim /SourceIndex:<span class="number">1</span> /DestinationImageFile:<span class="number">11</span>pex64.wim</span><br><span class="line">Dism /Export-Image /SourceImageFile:<span class="number">11</span>pex64.wim /SourceIndex:<span class="number">2</span> /DestinationImageFile:<span class="number">11</span>pex64.wim</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="关于加载PE后出现「-windows-system32-drivers-cdrom-sys」驱动加载错误的分析">25.2 &nbsp&nbsp<a href="#关于加载PE后出现「-windows-system32-drivers-cdrom-sys」驱动加载错误的分析" class="headerlink" title="关于加载PE后出现「\windows\system32\drivers\cdrom.sys」驱动加载错误的分析"></a>关于加载PE后出现「\windows\system32\drivers\cdrom.sys」驱动加载错误的分析</h2><p>问题现象：无论是更换pe版本或者更换U盘亦或是用其他分区方案制作PE，当选择U盘PE引导项加载时，都会出现这个「\windows\system32\drivers\cdrom.sys」报错提示，无法进入系统。</p>
<p>问题原因：硬件稳定性引起系统层面的问题，一般是内存多一些，CPU或者硬盘有小概率可能会导致这样。</p>
<p>解决方法：从硬件排障手段入手排查，尝试拔插内存或者单根内存测试下是否会这样。</p>
<h2 id="PE内引导到特定设备">25.3 &nbsp&nbsp<a href="#PE内引导到特定设备" class="headerlink" title="PE内引导到特定设备"></a>PE内引导到特定设备</h2><p>关于自动化分区和还原系统之后，若想自动引导到硬盘系统，而非USB的PE系统，一般有如下几个方案：</p>
<ul>
<li>BIOS设置硬盘启动项：华硕主板实测无效，即使设置了BBS硬盘启动项（BBS还需要开启CSM选项保存重启），仍然是会引导至USB设备上。若设置关闭了USB的BBS，即使可以实现，但首次启动会报错提示找不到合适的启动设备。</li>
<li>PE通过BOOTICE工具的UEFI功能引导至BIOS界面或者修改<code>UEFI OS</code>指定为硬盘系统和引导位置（默认是指定到U盘的）</li>
<li>bcdedit修改引导启动项（BOOTICE好像也是通过bcdedit修改的）</li>
</ul>
<h2 id="获取特定硬盘分区的GUID">25.4 &nbsp&nbsp<a href="#获取特定硬盘分区的GUID" class="headerlink" title="获取特定硬盘分区的GUID"></a>获取特定硬盘分区的GUID</h2><ul>
<li>命令行程序：<code>mountvol</code></li>
<li>分区工具：<code>DiskGenius</code>，选择特定分区查看GUID（非分区类型GUID）</li>
</ul>
<h1 id="应答文件-unattend-xml-系统部署">26 &nbsp&nbsp<a href="#应答文件-unattend-xml-系统部署" class="headerlink" title="应答文件 (unattend.xml)系统部署"></a>应答文件 (unattend.xml)系统部署</h1><p>使用应答文件自动完成安装和部署系统，在联网的情况下，因为存在联网服务器检测系统版本和更新状态，因此比拔掉网线断网的情况会会多占用2-3分钟左右的时间。（倘若插上网线联网状态一直卡在这个阶段的话，即可能由于连接服务器失败，需手动拔掉网线，让它检测判断并跳过该阶段）</p>
<h1 id="参考文献">27 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 支持win7的最后一代CPU?支持win7系统推荐(支持8&#x2F;9&#x2F;10&#x2F;11&#x2F;12&#x2F;13代cpu)[EB&#x2F;OL]. <a href="http://w7.dnxtc.net/zixun/zuzhuangjiaocheng/2023-04-16/11866.html">http://w7.dnxtc.net/zixun/zuzhuangjiaocheng/2023-04-16/11866.html</a>.<br>[2] 10代11代主板装win7开机蓝屏A5解决办法[EB&#x2F;OL]. <a href="https://www.yweihu.com/post/242.html">https://www.yweihu.com/post/242.html</a>.<br>[3] 微软又给Windows11增加了限制？[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/514063607">https://zhuanlan.zhihu.com/p/514063607</a>.<br>[4] 在虚拟机上安装gho、esd（wim）系统镜像文件[EB&#x2F;OL]. <a href="https://www.cnblogs.com/-mrl/p/9634227.html">https://www.cnblogs.com/-mrl/p/9634227.html</a>.<br>[5] Methods to install Windows from WinPE[EB&#x2F;OL]. <a href="https://www.aioboot.com/en/install-windows/">https://www.aioboot.com/en/install-windows/</a>.<br>[6] 远程桌面连接出错「用户账户限制会阻止你登录...」[EB&#x2F;OL]. <a href="https://blog.csdn.net/tian_ci/article/details/106790244">https://blog.csdn.net/tian_ci/article/details/106790244</a>.<br>[7] win10 系统怎么删除远程桌面连接记录[EB&#x2F;OL]. <a href="https://blog.csdn.net/COCO56/article/details/102671007">https://blog.csdn.net/COCO56/article/details/102671007</a>.<br>[8] 公用网络切换为专用网络的详细步骤[EB&#x2F;OL]. <a href="https://blog.csdn.net/xuzishe/article/details/110818980">https://blog.csdn.net/xuzishe/article/details/110818980</a>.<br>[9] 如何使用 Windows 自带的 OpenSSH 服务端[EB&#x2F;OL]. <a href="https://www.cnblogs.com/lfri/p/13423261.html">https://www.cnblogs.com/lfri/p/13423261.html</a>.<br>[10]【Windows】允许空密码连接 Windows 的 OpenSSH Server[EB&#x2F;OL]. <a href="https://www.jianshu.com/p/1ec72a019bd9">https://www.jianshu.com/p/1ec72a019bd9</a>.<br>[11] 解决 Windows 10 防火墙开启后无法 ping 通的问题[EB&#x2F;OL]. <a href="https://blog.csdn.net/coco56/article/details/105800213">https://blog.csdn.net/coco56/article/details/105800213</a>.<br>[12] Microsoft账户无法登录怎么办？[EB&#x2F;OL]. <a href="https://www.zhihu.com/question/449928889">https://www.zhihu.com/question/449928889</a>.<br>[13] 万能驱动 v7.23.925.3（2023.11.08 发布）[EB&#x2F;OL]. <a href="https://www.puresys.net/1147.html">https://www.puresys.net/1147.html</a>.<br>[14] 技术 | Windows 10 更新新版微软商城（Microsoft Store） [EB&#x2F;OL]. <a href="https://www.sizau.com/a/update-microsoft-store.html">https://www.sizau.com/a/update-microsoft-store.html</a>.<br>[15] WIN10安装NVIDIA面板两种方式[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/144801155">https://zhuanlan.zhihu.com/p/144801155</a>.<br>[16] easyImageX2和万能驱动有种奇特的现象[EB&#x2F;OL]. <a href="http://wuyou.net/forum.php?mod=viewthread&tid=422066">http://wuyou.net/forum.php?mod=viewthread&amp;tid=422066</a>.<br>[17] 更新完显卡驱动，任务管理器里N卡的CUDA没了[EB&#x2F;OL]. <a href="https://blog.csdn.net/weixin_45888599/article/details/119672852">https://blog.csdn.net/weixin_45888599/article/details/119672852</a>.<br>[18] Force DISM to unmount&#x2F;delete a mounted Windows WIM[EB&#x2F;OL]. <a href="https://superuser.com/questions/1091544/force-dism-to-unmount-delete-a-mounted-windows-wim">https://superuser.com/questions/1091544/force-dism-to-unmount-delete-a-mounted-windows-wim</a>.<br>[19] All In One 把该用到的都封到安装镜像中！[EB&#x2F;OL]. <a href="http://m.cfan.com.cn/pcarticle/128008">http://m.cfan.com.cn/pcarticle/128008</a>.<br>[20] User Profile Service 服务登录失败 无法加载用户配置文件[EB&#x2F;OL]. <a href="https://www.jianshu.com/p/5e913b9cf74d">https://www.jianshu.com/p/5e913b9cf74d</a>.<br>[21] Windows10切换用户显示User Profile Service或ProfSvc服务登录失败[EB&#x2F;OL]. <a href="https://blog.csdn.net/Stand_Fast/article/details/119488113">https://blog.csdn.net/Stand_Fast/article/details/119488113</a>.<br>[22] 【经验之谈】“User Profile Service 服务未能登录,无法加载用户配置文件”实战历程[EB&#x2F;OL]. <a href="https://blog.51cto.com/weixiao43/506699">https://blog.51cto.com/weixiao43/506699</a>.<br>[23] Win10 电脑连接U盘&#x2F;移动硬盘失败解决方法分享，该设备的驱动程序未被安装。（代码28）[EB&#x2F;OL]. <a href="https://blog.csdn.net/XiaoMuiii/article/details/132660886">https://blog.csdn.net/XiaoMuiii/article/details/132660886</a>.<br>[24] Booting is unsuccessful from &quot;Windows Boot Manager&quot; on the top of boot order in EFI setup. The booting is successful from Disk 0.[EB&#x2F;OL]. <a href="https://www.veritas.com/support/en_US/article.100015603">https://www.veritas.com/support/en_US/article.100015603</a>.<br>[25] 蓝屏代码0x00000109 错误分析.[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_35206244/article/details/113805925">https://blog.csdn.net/qq_35206244/article/details/113805925</a>.<br>[26] [求助] (已解决)请问怎么关闭&quot;无法打开此ms-gamebar&quot;弹窗，谢谢？.[EB&#x2F;OL]. <a href="https://bbs.pcbeta.com/viewthread-1972471-1-1.html">https://bbs.pcbeta.com/viewthread-1972471-1-1.html</a>.<br>[27] Win11更新不能连接服务器的解决方法.[EB&#x2F;OL]. <a href="https://www.jianshu.com/p/4c1edd1f08a8">https://www.jianshu.com/p/4c1edd1f08a8</a>.<br>[28] Windows11显示“无法连接到更新服务。我们将稍后再试，你也可以立即进行检查。如果问题仍然存在，请确保你已连接到 Internet”.[EB&#x2F;OL]. <a href="https://answers.microsoft.com/zh-hans/windows/forum/all/windows11%E6%98%BE%E7%A4%BA%E6%97%A0%E6%B3%95/ebbafb81-7002-4f54-a565-cdc4a89f3c31">https://answers.microsoft.com/zh-hans/windows/forum/all/windows11%E6%98%BE%E7%A4%BA%E6%97%A0%E6%B3%95/ebbafb81-7002-4f54-a565-cdc4a89f3c31</a>.<br>[29] Run Docker and VMware&#x2F;VirtualBox at the same time in Windows[EB&#x2F;OL]. <a href="https://medium.com/@eng.binasaker/run%E2%80%91docker%E2%80%91and%E2%80%91vmware%E2%80%91at%E2%80%91the%E2%80%91same%E2%80%91time%E2%80%91in%E2%80%91windows%E2%80%91dabf32babd71">https://medium.com/@eng.binasaker/run‑docker‑and‑vmware‑at‑the‑same‑time‑in‑windows‑dabf32babd71</a>.<br>[30] Windows电脑睡眠中自动唤醒的原因和解决方法[EB&#x2F;OL]. <a href="https://baiyunju.cc/11568">https://baiyunju.cc/11568</a>.<br>[31] Reinstall and Re-register Microsoft Edge in Windows 10[EB&#x2F;OL]. <a href="https://www.tenforums.com/tutorials/28655-reinstall-re-register-microsoft-edge-windows-10-a.html">https://www.tenforums.com/tutorials/28655-reinstall-re-register-microsoft-edge-windows-10-a.html</a>.<br>[32] New Windows driver blocks software from changing default web browser[EB&#x2F;OL]. <a href="https://www.bleepingcomputer.com/news/microsoft/new-windows-driver-blocks-software-from-changing-default-web-browser/">https://www.bleepingcomputer.com/news/microsoft/new-windows-driver-blocks-software-from-changing-default-web-browser/</a>.<br>[33] BOOTICE -&gt; UEFI -&gt; UEFI boot entry configuration file ? (management of UEFI startup items)[EB&#x2F;OL]. <a href="http://reboot.pro/index.php?showtopic=21508">http://reboot.pro/index.php?showtopic=21508</a>.<br>[34] [技术] 详细探讨一下12、13代酷睿处理器在Win11、W10中大小核调度[EB&#x2F;OL]. <a href="https://bbs.pcbeta.com/viewthread-1966999-2-1.html">https://bbs.pcbeta.com/viewthread-1966999-2-1.html</a>.<br>[35] [技术] win10_电源方案设置为卓越性能节能高效设置[EB&#x2F;OL]. <a href="https://bbs.pcbeta.com/viewthread-1994529-1-1.html">https://bbs.pcbeta.com/viewthread-1994529-1-1.html</a>.<br>[36] Windows 10 科学计算 CPU大小核调度策略试验与设置建议[EB&#x2F;OL]. <a href="https://zhuanlan.zhihu.com/p/660344272">https://zhuanlan.zhihu.com/p/660344272</a>.<br>[37] win10安装openssh失败，使用离线安装包[EB&#x2F;OL]. <a href="https://www.cnblogs.com/zhg1016/p/17353348.html">https://www.cnblogs.com/zhg1016/p/17353348.html</a>.<br>[38] 安全中心无法打开【2024年1月】[EB&#x2F;OL]. <a href="https://answers.microsoft.com/zh-hans/windows/forum/all/%E5%AE%89%E5%85%A8%E4%B8%AD%E5%BF%83%E6%97%A0/220c53f6-09eb-4306-a969-98adadd6c1e3">https://answers.microsoft.com/zh-hans/windows/forum/all/%E5%AE%89%E5%85%A8%E4%B8%AD%E5%BF%83%E6%97%A0/220c53f6-09eb-4306-a969-98adadd6c1e3</a>.<br>[39] Windows共享文件夹无法访问，提示“不允许一个用户使用一个以上用户名与服务器或共享资源的多重连接”[EB&#x2F;OL]. <a href="https://www.cnblogs.com/sunnyhill/p/11780248.html">https://www.cnblogs.com/sunnyhill/p/11780248.html</a>.</p>
]]></content>
      <categories>
        <category>troubleshooting</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>维修</tag>
        <tag>系统</tag>
        <tag>windows</tag>
        <tag>计算机</tag>
        <tag>电脑</tag>
        <tag>维护</tag>
        <tag>故障</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第一章「开始」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap1/</url>
    <content><![CDATA[<h1 id="第一章：开始"><a href="#第一章：开始" class="headerlink" title="第一章：开始"></a>第一章：开始</h1><h2 id="练习1-1"><a href="#练习1-1" class="headerlink" title="练习1.1"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_1.cpp">练习1.1</a></h2><blockquote>
<p>查阅你使用的编译器文档，确定它所使用的文件命名约定。编译并运行第2页的main程序。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-2"><a href="#练习1-2" class="headerlink" title="练习1.2"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_2.cpp">练习1.2</a></h2><blockquote>
<p>改写程序，让它返回-1。返回值-1通常被当作程序错误的标识。重新编译并运行你的程序，观察你的系统如何处理main返回的错误标识。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译后在命令行运行程序，之后通过<code>echo</code>查看。</p>
<p>cmd: <code>echo %ERRORLEVEL%</code>，输出-1</p>
<p>bash: <code>echo $?</code>，输出127</p>
<h2 id="练习1-3"><a href="#练习1-3" class="headerlink" title="练习1.3"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_3.cpp">练习1.3</a></h2><blockquote>
<p>编写程序，在标准输出上打印 Hello, World。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello, World&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-4"><a href="#练习1-4" class="headerlink" title="练习1.4"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_4.cpp">练习1.4</a></h2><blockquote>
<p>我们的程序使用加法运算符+来将两个数相加。编写程序使用乘法运算符*，来打印两个数的积。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Enter two numbers:&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="type">int</span> v1 = <span class="number">0</span>, v2 = <span class="number">0</span>;</span><br><span class="line">    std::cin &gt;&gt; v1 &gt;&gt; v2;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;The product of &quot;</span> &lt;&lt; v1 &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v2</span><br><span class="line">              &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; v1 * v2 &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-5"><a href="#练习1-5" class="headerlink" title="练习1.5"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_5.cpp">练习1.5</a></h2><blockquote>
<p>我们将所有输出操作放在一条很长的语句中。重写程序，将每个运算对象的打印操作放在一条独立的语句中。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Enter two numbers:&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="type">int</span> v1 = <span class="number">0</span>, v2 = <span class="number">0</span>;</span><br><span class="line">    std::cin &gt;&gt; v1 &gt;&gt; v2;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;The product of &quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; v1;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot; and &quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; v2;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot; is &quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; v1 * v2;</span><br><span class="line">    std::cout &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="练习1-6"><a href="#练习1-6" class="headerlink" title="练习1.6"></a>练习1.6</h2><blockquote>
<p>解释下面程序片段是否合法。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; &quot;The sum of &quot; &lt;&lt; v1;</span><br><span class="line">          &lt;&lt; &quot; and &quot; &lt;&lt; v2;</span><br><span class="line">          &lt;&lt; &quot; is &quot; &lt;&lt; v1 + v2 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果程序是合法的，它的输出是什么？如果程序不合法，原因何在？应该如何修正？</p>
</blockquote>
<p>不合法。<br><strong>分号「;」之间会被编译器处理成一条语句，所有第二、第三行没有cout对象（&lt;&lt;运算符要求左侧的运算对象必须是一个ostream对象），所以不合法。</strong></p>
<p>修正方式1：二三行添加cout对象</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;The sum of &quot;</span> &lt;&lt; v1;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v2;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; v1 + v2 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>修正方式2：删除一二行多余的分号</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;The sum of &quot;</span> &lt;&lt; v1</span><br><span class="line">          &lt;&lt; <span class="string">&quot; and &quot;</span> &lt;&lt; v2</span><br><span class="line">          &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; v1 + v2 &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-7"><a href="#练习1-7" class="headerlink" title="练习1.7"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_7.cpp">练习1.7</a></h2><blockquote>
<p>编译一个包含不正确的嵌套注释的程序，观察编译器返回的错误信息。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* /* 内层注释 */</span> 外层注释 */</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习1-8"><a href="#练习1-8" class="headerlink" title="练习1.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_8.cpp">练习1.8</a></h2><blockquote>
<p>指出下列哪些输出语句是合法的(如果有的话)：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;/*&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;*/&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="comment">/* &quot;*/</span><span class="string">&quot; */;</span></span><br><span class="line"><span class="string">std::cout &lt;&lt; /* &quot;</span>*/<span class="string">&quot; /* &quot;</span><span class="comment">/*&quot; */</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>预测编译这些语句会产生什么样的结果，实际编译这些语句来验证你的答案（编写一个小程序，每次将上述一条语句作为其主体），改正每个编译错误。</p>
</blockquote>
<p>第三行不合法，编译出错，修正：增加一个双引号。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="comment">/* &quot;*/</span><span class="string">&quot; */&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**/ */ /*</span><br></pre></td></tr></table></figure>

<h2 id="练习1-9"><a href="#练习1-9" class="headerlink" title="练习1.9"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_9.cpp">练习1.9</a></h2><blockquote>
<p>编写程序，使用while循环将50到100的整数相加。</p>
</blockquote>
<h2 id="练习1-10"><a href="#练习1-10" class="headerlink" title="练习1.10"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_10.cpp">练习1.10</a></h2><blockquote>
<p>除了++运算符将运算对象的值增加1之外，还有一个递减运算符（--）实现将值减少1。编写程序，使用递减运算符在循环中按递减顺序打印出10到0之间的整数。</p>
</blockquote>
<h2 id="练习1-11"><a href="#练习1-11" class="headerlink" title="练习1.11"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_11.cpp">练习1.11</a></h2><blockquote>
<p>编写程序，提示用户输入两个整数，打印出这两个整数所指定的范围内的所有整数。</p>
</blockquote>
<h2 id="练习1-12"><a href="#练习1-12" class="headerlink" title="练习1.12"></a>练习1.12</h2><blockquote>
<p>下面的for循环完成了什么功能？sum的终值是多少？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int sum = 0;</span><br><span class="line">for (int i = -100; i &lt;= 100; ++i)</span><br><span class="line">    sum += i;</span><br></pre></td></tr></table></figure>

<p>从-100加到100，sum的终值为0。</p>
<h2 id="练习1-13"><a href="#练习1-13" class="headerlink" title="练习1.13"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_13.cpp">练习1.13</a></h2><blockquote>
<p>使用for循环重做1.4.1节中的所有练习（第11页）。</p>
</blockquote>
<h2 id="练习1-14"><a href="#练习1-14" class="headerlink" title="练习1.14"></a>练习1.14</h2><blockquote>
<p>对比for循环和while循环，两种形式的优缺点各是什么？</p>
</blockquote>
<p>对比 for 循环和 while 循环的优缺点：for 循环的变量可以在语句中定义，而 while 语句中直接就是判断循环的条件，无法在语句中定义变量。如此看来，for 语句中定义的变量所占用的内存可以在循环结束后回收，减少了内存的占用。</p>
<p><a href="http://stackoverflow.com/questions/2950931/for-vs-while-in-c-programming">在Stack Overflow上面有与这个相似的问题</a></p>
<h2 id="练习1-15"><a href="#练习1-15" class="headerlink" title="练习1.15"></a>练习1.15</h2><blockquote>
<p>编写程序，包含第14页“再探编译”中讨论的常见错误。熟悉编译器生成的错误信息。</p>
</blockquote>
<p>编译器可检查的错误：</p>
<ol>
<li>语法错误（syntax error）：比如main参数列表漏掉括号；语句结束之处用冒号而非分号；字符串字面值常量两侧漏掉引号。</li>
<li>类型错误（type error）：比如向一个期望参数为int的函数传递一个字符串字面值常量。</li>
<li>声明错误（declaration error）：比如对来自标准库的名字忘记使用std::以及标识符名字拼写错误。</li>
</ol>
<h2 id="练习1-16"><a href="#练习1-16" class="headerlink" title="练习1.16"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_16.cpp">练习1.16</a></h2><blockquote>
<p>编写程序，从cin读取一组数，输出其和。</p>
</blockquote>
<p><code>&lt;&lt;</code>输入运算符返回其左侧运算对象，而istream对象遇到文件结束符（end-of-file）或无效输入（类型不同）时就会变得无效，即条件变为假。</p>
<p>从键盘向程序输入数据时，如何输入文件结束符：</p>
<ul>
<li>Windows：ctrl+z</li>
<li>UNIX（包括Mac OS X）：ctrl+d</li>
</ul>
<h2 id="练习1-17"><a href="#练习1-17" class="headerlink" title="练习1.17"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_18.cpp">练习1.17</a></h2><blockquote>
<p>如果输入的所有值都是相等的，本节的程序会输出什么？如果没有重复值，输出又会是怎样的？</p>
</blockquote>
<ol>
<li>输入全部相等的值：程序只会打印出一个数字及它出现的次数。</li>
<li>输入没有重复的值：程序会打印每个数值，次数都为1。</li>
</ol>
<h2 id="练习1-18"><a href="#练习1-18" class="headerlink" title="练习1.18"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_18.cpp">练习1.18</a></h2><blockquote>
<p>编译并运行本节的程序，给它输入全都相等的值。再次运行程序，输入没有重复的值。</p>
</blockquote>
<h2 id="练习1-19"><a href="#练习1-19" class="headerlink" title="练习1.19"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_11.cpp">练习1.19</a></h2><blockquote>
<p>修改你为1.4.1节练习1.11（第11页）所编写的程序（打印一个范围内的数），使其能处理用户输入的第一个数比第二个数小的情况。</p>
</blockquote>
<h2 id="练习1-20"><a href="#练习1-20" class="headerlink" title="练习1.20"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_20.cpp">练习1.20</a></h2><blockquote>
<p>在网站<a href="http://www.informit.com/title/032174113">http://www.informit.com/title/032174113</a> 上，第1章的代码目录包含了头文件Sales_item.h。将它拷贝到你自己的工作目录中。用它编写一个程序，读取一组书籍销售记录，将每条记录打印到标准输出上。</p>
</blockquote>
<h2 id="练习1-21"><a href="#练习1-21" class="headerlink" title="练习1.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_21.cpp">练习1.21</a></h2><blockquote>
<p>编写程序，读取两个ISBN相同的Sales_item对象，输出他们的和。</p>
</blockquote>
<h2 id="练习1-22"><a href="#练习1-22" class="headerlink" title="练习1.22"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_22.cpp">练习1.22</a></h2><blockquote>
<p>编写程序，读取多个具有相同ISBN的销售记录，输出所有记录的和。</p>
</blockquote>
<h2 id="练习1-23"><a href="#练习1-23" class="headerlink" title="练习1.23"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_23.cpp">练习1.23</a></h2><blockquote>
<p>编写程序，读取多条销售记录，并统计每个ISBN（每本书）有几条销售记录。</p>
</blockquote>
<h2 id="练习1-24"><a href="#练习1-24" class="headerlink" title="练习1.24"></a>练习1.24</h2><blockquote>
<p>输入表示多个ISBN的多条销售记录来测试上一个程序，每个ISBN的记录应该聚在一起。</p>
</blockquote>
<h2 id="练习1-25"><a href="#练习1-25" class="headerlink" title="练习1.25"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap1/1_25.cpp">练习1.25</a></h2><blockquote>
<p>借助网站上的Sales_item.h头文件，编译并运行本节给出的书店程序。</p>
</blockquote>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>第一章</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第二章「变量和基本类型」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap2/</url>
    <content><![CDATA[<h1 id="第二章：变量和基本类型"><a href="#第二章：变量和基本类型" class="headerlink" title="第二章：变量和基本类型"></a>第二章：变量和基本类型</h1><h2 id="练习2-1"><a href="#练习2-1" class="headerlink" title="练习2.1"></a>练习2.1</h2><blockquote>
<p>类型 int、long、long long 和 short 的区别是什么？无符号类型和带符号类型的区别是什么？float 和 double的区别是什么？</p>
</blockquote>
<p>C++ 规定 <code>short</code> 和 <code>int</code> 至少16位，<code>long</code> 至少32位，<code>long long</code> 至少64位。<br>带符号类型能够表示正数、负数和 0 ，而无符号类型只能够表示 0 和正整数。<br>通常，单精度<code>float</code>用1个字表示（4个字节，32bit），双精度<code>double</code>用2个字表示（8个字节，64bit）。</p>
<p>用法（类型的选择）：</p>
<ul>
<li>如果确认数据是非负的，那么就使用 <code>unsigned</code> 无符号类型。</li>
<li>一般使用 <code>int</code> 做整数运算，<code>short</code> 因为太小在实际中用的少，<code>long</code> 通常和 <code>int</code> 有着相同的大小。如果数据非常大，可以使用 <code>long long</code> 。</li>
<li>算术表达式不用 <code>char</code> 或 <code>bool</code> ，这二者只建议用于存放字符或布尔值。因为<code>char</code>在某些机器上是有符号的，在另一些机器上是无符号型的，则使用 <code>char</code> 进行运算容易出问题。如果需要较小的整数，就明确指定 <code>signed char</code> 或者 <code>unsigned char</code>。</li>
<li>执行浮点运算时用 <code>double</code> ，因为 <code>float</code> 通常精度不够而且双精度浮点数和单精度浮点数的计算代价相差无几。</li>
</ul>
<p>参考：</p>
<ul>
<li><a href="https://isocpp.org/wiki/faq/newbie#choosing-int-size">What are the criteria for choosing between short &#x2F; int &#x2F; long data types?</a></li>
<li><a href="http://stackoverflow.com/questions/2386772/difference-between-float-and-double">Difference between float and double</a></li>
</ul>
<h3 id="float有效位理解"><a href="#float有效位理解" class="headerlink" title="float有效位理解"></a>float有效位理解</h3><p>IEEE规定<code>float</code>为32bit，尾数用23位存储，加上隐含的小数点前的1位1，2^(23+1) &#x3D; 16777216。因为 10^7 &lt; 16777216 &lt; 10^8，所以说单精度浮点数的有效位数是7位（能保证7位有效数字，当然，并非说第8位一定是非有效数字，它也有可能是准确的）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> i = <span class="number">12345678.76348</span>;</span><br><span class="line">    <span class="type">float</span> j = <span class="number">46857.9874</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n%f\n%.3f\n%.8f&quot;</span>, i, j, j, j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12345679.000000</span><br><span class="line">46857.988281</span><br><span class="line">46857.988</span><br><span class="line">46857.98828125</span><br></pre></td></tr></table></figure>

<p>从以上数据可以看出，第八个数字之后就不精确了。另外，要注意，有效数字的位数与指定输出的小数位数（%.7f，保留7位有效数字）是两码事，如第三第四个输出，这个是程序指定的输出格式，和类型本身能够存储的精度不是一回事。</p>
<h3 id="C-算术类型"><a href="#C-算术类型" class="headerlink" title="C++算术类型"></a>C++算术类型</h3><table>
<thead>
<tr>
<th align="left">类型</th>
<th align="left">含义</th>
<th align="left">最小尺寸</th>
</tr>
</thead>
<tbody><tr>
<td align="left">bool</td>
<td align="left">布尔类型</td>
<td align="left">未定义</td>
</tr>
<tr>
<td align="left">char</td>
<td align="left">字符</td>
<td align="left">8位</td>
</tr>
<tr>
<td align="left">wchar_t</td>
<td align="left">宽字符</td>
<td align="left">16位</td>
</tr>
<tr>
<td align="left">char16_t</td>
<td align="left">Unicode字符</td>
<td align="left">16位</td>
</tr>
<tr>
<td align="left">char32_t</td>
<td align="left">Unicode字符</td>
<td align="left">32位</td>
</tr>
<tr>
<td align="left">short</td>
<td align="left">短整型</td>
<td align="left">16位</td>
</tr>
<tr>
<td align="left">int</td>
<td align="left">整型</td>
<td align="left">16位</td>
</tr>
<tr>
<td align="left">long</td>
<td align="left">长整型</td>
<td align="left">32位</td>
</tr>
<tr>
<td align="left">long long</td>
<td align="left">长整型</td>
<td align="left">64位</td>
</tr>
<tr>
<td align="left">float</td>
<td align="left">单精度浮点数</td>
<td align="left">6位有效数字</td>
</tr>
<tr>
<td align="left">double</td>
<td align="left">双精度浮点数</td>
<td align="left">10位有效数字</td>
</tr>
<tr>
<td align="left">long double</td>
<td align="left">扩展精度浮点数</td>
<td align="left">10位有效数字</td>
</tr>
</tbody></table>
<h2 id="练习2-2"><a href="#练习2-2" class="headerlink" title="练习2.2"></a>练习2.2</h2><blockquote>
<p>计算按揭贷款时，对于利率、本金和付款分别应选择何种数据类型？说明你的理由。</p>
</blockquote>
<p>使用 <code>double</code> 或 <code>float</code> 。</p>
<h2 id="练习2-3"><a href="#练习2-3" class="headerlink" title="练习2.3"></a>练习2.3</h2><blockquote>
<p>读程序写结果。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> u = <span class="number">10</span>, u2 = <span class="number">42</span>;</span><br><span class="line">std::cout &lt;&lt; u2 - u &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; u - u2 &lt;&lt; std::endl;</span><br><span class="line"><span class="type">int</span> i = <span class="number">10</span>, i2 = <span class="number">42</span>;</span><br><span class="line">std::cout &lt;&lt; i2 - i &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; i - i2 &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; i - u &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; u - i &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">32</span><br><span class="line">4294967264 // -32=(-1)×2^32+4294967264</span><br><span class="line">32</span><br><span class="line">-32</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h3 id="类型转换的总结"><a href="#类型转换的总结" class="headerlink" title="类型转换的总结"></a>类型转换的总结</h3><ul>
<li>非布尔类型转换布尔类型时，0转换成false，非0则true（包括负数）。</li>
<li>布尔值转换非布尔类型时，false转换为0，true则1。</li>
<li>浮点数转换整数时，仅保留小数点之前的部分（即整数部分，小数部分直接截断），这是精度损失；当浮点数表示的值大过整型值，会发生溢出。</li>
<li>整数转浮点数时，小数部分记为0。不会发生溢出，但当整数值数据较大时，转换浮点数可能会发生精度丢失。例如，<code>int</code> 有31bit用来拓展精度，<code>float</code> 只有24bit，即当int值大于2^24或者小于-2^24时，转换<code>float</code>就会精度丢失。</li>
<li>给无符号类型赋值超过其表示范围时，实际值是初始值对无符号类型表示数值总数取模后的余数。8bit的<code>unsigned char</code>表示0-255，赋值超出范围时，实际值为该值对256取模后的余数。因此将-1赋给8bit的<code>unsigned char</code>时，结果值为255。</li>
<li>赋给带符号类型一个超出范围的值时，结果是未定义的。此时，程序可能工作、可能崩溃、也可能生成垃圾数据。</li>
</ul>
<p><strong>无符号类型和有符号类型计算，结果为负数时，结果值的计算方法</strong></p>
<p>给定一个正整数p，任意一个整数n，一定存在等式n&#x3D;kp+r</p>
<p>其中k、r是整数，且0&lt;&#x3D;r&lt;p，称k为n除以p的商，r为n除以p的余数。</p>
<p>定义取模运算：a % p（或a mod p），表示a除以p的余数。</p>
<p><strong>实际运用场景</strong>：将-1赋给8bit的<code>unsigned char</code>时，结果值为255。<br>计算过程：-1&#x3D;(-1)×256+255</p>
<p>二进制表示的本质：用补码表示，先看原码（符号位为1，数值位只有一个1）对原码取反加1（符号位不变），转换成补码后，所有位都是1。</p>
<h3 id="类型转换的使用场景总结"><a href="#类型转换的使用场景总结" class="headerlink" title="类型转换的使用场景总结"></a>类型转换的使用场景总结</h3><ul>
<li>不要混用带符号类型和无符号类型：表达式中含有这两种类型时，带符号数会自动转换成无符号数（此时，一个负数转换成无符号数后，真值将很大）。</li>
<li>循环中的判断条件慎用无符号数：无符号数表示范围为正整数，不会小于0，尤其是当循环的临界条件是0时。如以下代码，就是死循环，当u&#x3D;0时，循环条件依然满足，继续执行，--u就是-1，但无符号数只能表示整数，-1被自动地转换成一个合法的无符号数，即正整数。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> u = <span class="number">10</span>; u &gt;= <span class="number">0</span>; --u)</span><br><span class="line">    std::cout &lt;&lt; u &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>解决方式：</p>
<ol>
<li>用有符号类型</li>
<li>用while语句，代码如下。</li>
<li>类似while语句，将for语句的--u置于cout语句中。</li>
<li>2和3本质上就是保证u不会变为-1。</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> u = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">while</span> (u &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    --u;</span><br><span class="line">    std::cout &lt;&lt; u &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-4"><a href="#练习2-4" class="headerlink" title="练习2.4"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_4.cpp">练习2.4</a></h2><blockquote>
<p>编写程序检查你的估计是否正确，如果不正确，请仔细研读本节直到弄明白问题所在。</p>
</blockquote>
<span id="more"></span>

<h2 id="练习2-5"><a href="#练习2-5" class="headerlink" title="练习2.5"></a>练习2.5</h2><blockquote>
<p>指出下述字面值的数据类型并说明每一组内几种字面值的区别：</p>
</blockquote>
<ul>
<li>(a) &#39;a&#39;, L&#39;a&#39;, &quot;a&quot;, L&quot;a&quot;</li>
<li>(b) 10, 10u, 10L, 10uL, 012, 0xC</li>
<li>(c) 3.14, 3.14f, 3.14L</li>
<li>(d) 10, 10u, 10., 10e-2</li>
</ul>
<p>(a): 字符字面值，宽字符字面值，字符串字面值，宽字符串字面值。</p>
<p>(b): 十进制整型，十进制无符号整型，十进制长整型，十进制无符号长整型，八进制整型，十六进制整型。</p>
<p>(c): double, float, long double</p>
<p>(d): 十进制整型，十进制无符号整型，double, double</p>
<p>P.S. 要注意&#39;a&#39;和&quot;a&quot;不一样，&quot;a&quot;包含两个字符，字母和空字符（字符串字面值是由常量字符构成的数组，编译器会在字符串结尾处添加一个空字符&#39;\0&#39;）。</p>
<h2 id="练习2-6"><a href="#练习2-6" class="headerlink" title="练习2.6"></a>练习2.6</h2><blockquote>
<p>下面两组定义是否有区别，如果有，请叙述之：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> month = <span class="number">9</span>, day = <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> month = <span class="number">0</span>9, day = <span class="number">07</span>;</span><br></pre></td></tr></table></figure>

<p>第一行定义的是十进制整型。<br>第二行定义的是八进制整型，但是 month 变量无效，因为八进制没有 9 。</p>
<h2 id="练习2-7"><a href="#练习2-7" class="headerlink" title="练习2.7"></a>练习2.7</h2><blockquote>
<p>下述字面值表示何种含义？它们各自的数据类型是什么？</p>
</blockquote>
<ul>
<li>(a) &quot;Who goes with F\145rgus?\012&quot;</li>
<li>(b) 3.14e1L</li>
<li>(c) 1024f</li>
<li>(d) 3.14L</li>
</ul>
<p>(a): Who goes with Fergus?(换行)，string 类型：\145转为二进制001100101，ASCII表查询为e；\012转为二进制000001010，ASCII表查询为转义字符\n，即换行。</p>
<p>(b): long double</p>
<p>(c): 无效，因为后缀 f 只能用于浮点字面量，而 1024 是整型。</p>
<p>(d): long double</p>
<p>参考：</p>
<ul>
<li><a href="https://www.ascii-code.com/">ASCII Code</a></li>
<li><a href="http://www.asciitable.com/">ASCII Table</a></li>
</ul>
<p>转义序列的格式：</p>
<ul>
<li>反斜杠\后面跟着八进制的数字超过3个时，只有前三个与\构成转义序列。例如&quot;\1234&quot;表示两个字符，字符\123和字符4</li>
<li>\x会用到后面所有数字，例如&quot;\x1234&quot;表示一个16bit的字符，这种16bit字符一般都是与扩展字符集使用（用前缀表示，如u8啥的）。</li>
</ul>
<h2 id="练习2-8"><a href="#练习2-8" class="headerlink" title="练习2.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_8.cpp">练习2.8</a></h2><blockquote>
<p>请利用转义序列编写一段程序，要求先输出 2M，然后转到新一行。修改程序使其先输出 2，然后输出制表符，再输出 M，最后转到新一行。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\062\115\012&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\062\t\115\012&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-9"><a href="#练习2-9" class="headerlink" title="练习2.9"></a>练习2.9</h2><blockquote>
<p>解释下列定义的含义，对于非法的定义，请说明错在何处并将其改正。</p>
</blockquote>
<ul>
<li>(a) std::cin &gt;&gt; int input_value;</li>
<li>(b) int i &#x3D; { 3.14 };</li>
<li>(c) double salary &#x3D; wage &#x3D; 9999.99;</li>
<li>(d) int i &#x3D; 3.14;</li>
</ul>
<p>(a): 应该先定义再使用。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> input_value = <span class="number">0</span>;</span><br><span class="line">std::cin &gt;&gt; input_value;</span><br></pre></td></tr></table></figure>

<p>(b): 用列表初始化内置类型的变量时，如果存在丢失信息的风险，则编译器将报错。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> i = &#123; <span class="number">3.14</span> &#125;;</span><br></pre></td></tr></table></figure>

<p>(c): 在这里 wage 是未定义的，应该在此之前将其定义。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> wage;</span><br><span class="line"><span class="type">double</span> salary = wage = <span class="number">9999.99</span>;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> wage, salary = wage = <span class="number">9999.99</span>;</span><br></pre></td></tr></table></figure>

<p>(d): 不报错，但是小数部分会被截断。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> i = <span class="number">3.14</span>;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-10"><a href="#练习2-10" class="headerlink" title="练习2.10"></a>练习2.10</h2><blockquote>
<p>下列变量的初值分别是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">std::string global_str;</span><br><span class="line"><span class="type">int</span> global_int;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> local_int;</span><br><span class="line">    std::string local_str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>global_int</code> 是全局变量，所以初值为 0 。<br><code>local_int</code> 是局部变量并且没有初始化，它的初值是未定义的。<br><code>global_str</code> 和 <code>local_str</code> 是 string 类的对象，该对象定义了默认的初始化方式，即初始化为空字符串。</p>
<p><strong>P.S. 要养成良好习惯，初始化每个内置类型的变量，避免这种未定义造成程序运行故障（无法预计的故障）。</strong></p>
<h2 id="练习2-11"><a href="#练习2-11" class="headerlink" title="练习2.11"></a>练习2.11</h2><blockquote>
<p>指出下面的语句是声明还是定义：</p>
</blockquote>
<ul>
<li>(a) extern int ix &#x3D; 1024;</li>
<li>(b) int iy;</li>
<li>(c) extern int iz;</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): 定义</span><br><span class="line">(b): 定义</span><br><span class="line">(c): 声明</span><br></pre></td></tr></table></figure>

<h2 id="练习2-12"><a href="#练习2-12" class="headerlink" title="练习2.12"></a>练习2.12</h2><blockquote>
<p>请指出下面的名字中哪些是非法的？</p>
</blockquote>
<ul>
<li>(a) int double &#x3D; 3.14;</li>
<li>(b) int _;</li>
<li>(c) int catch-22;</li>
<li>(d) int 1_or_2 &#x3D; 1;</li>
<li>(e) double Double &#x3D; 3.14;</li>
</ul>
<p><code>(a)</code>, <code>(c)</code>, <code>(d)</code> 非法。</p>
<p>标识符由<strong>字母、数字和下划线</strong>组成。开头必须是<strong>字母或下划线</strong>。（C++中用户自定义的标识符，<strong>不能连续出现两个下划线，不能以下划线紧连大写字母开头</strong>）</p>
<h2 id="练习2-13"><a href="#练习2-13" class="headerlink" title="练习2.13"></a>练习2.13</h2><blockquote>
<p>下面程序中 j 的值是多少？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> j = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>j</code> 的值是 <code>100</code> ，局部变量 <code>i</code> 覆盖了全局变量 <code>i</code> 。</p>
<h2 id="练习2-14"><a href="#练习2-14" class="headerlink" title="练习2.14"></a>练习2.14</h2><blockquote>
<p>下面的程序合法吗？如果合法，它将输出什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">100</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i != <span class="number">10</span>; ++i)</span><br><span class="line">    sum += i;</span><br><span class="line">std::cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; sum &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>合法。输出是 <code>100 45</code> 。</p>
<h2 id="练习2-15"><a href="#练习2-15" class="headerlink" title="练习2.15"></a>练习2.15</h2><blockquote>
<p>下面的哪个定义是不合法的？为什么？</p>
</blockquote>
<ul>
<li>(a) int ival &#x3D; 1.01;</li>
<li>(b) int &amp;rval1 &#x3D; 1.01;</li>
<li>(c) int &amp;rval2 &#x3D; ival;</li>
<li>(d) int &rval3;</li>
</ul>
<p><code>(b)</code> 和 <code>(d)</code> 不合法，<code>(b)</code> 引用必须绑定在对象上，<code>(d)</code> 引用必须初始化。</p>
<p><strong>引用（左值引用）只能绑定在对象上，而且必须初始化。</strong></p>
<h2 id="练习2-16"><a href="#练习2-16" class="headerlink" title="练习2.16"></a>练习2.16</h2><blockquote>
<p>考察下面的所有赋值然后回答：哪些赋值是不合法的？为什么？哪些赋值是合法的？它们执行了哪些操作？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int i = 0, &amp;r1 = i; double d = 0, &amp;r2 = d;</span><br><span class="line">- (a) r2 = 3.14159;</span><br><span class="line">- (b) r2 = r1;</span><br><span class="line">- (c) i = r2;</span><br><span class="line">- (d) r1 = d;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): 合法。给 d 赋值为 3.14159。</span><br><span class="line">(b): 合法。会执行自动转换（这里的自动转换不是指改变原有类型，int-&gt;double，先转换再赋值）。</span><br><span class="line">(c): 合法。会发生小数截断。</span><br><span class="line">(d): 合法。会发生小数截断。</span><br></pre></td></tr></table></figure>

<h2 id="练习2-17"><a href="#练习2-17" class="headerlink" title="练习2.17"></a>练习2.17</h2><blockquote>
<p>执行下面的代码段将输出什么结果？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i, &amp;ri = i;</span><br><span class="line">i = <span class="number">5</span>; ri = <span class="number">10</span>;</span><br><span class="line">std::cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ri &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 10</span><br></pre></td></tr></table></figure>

<h2 id="练习2-18"><a href="#练习2-18" class="headerlink" title="练习2.18"></a>练习2.18</h2><blockquote>
<p>编写代码分别改变指针的值以及指针所指对象的值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;a, *p2 = p1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// change the value of a pointer.</span></span><br><span class="line">p1 = &amp;b;</span><br><span class="line"><span class="comment">// change the value to which the pointer points</span></span><br><span class="line">*p2 = b;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-19"><a href="#练习2-19" class="headerlink" title="练习2.19"></a>练习2.19</h2><blockquote>
<p>说明指针和引用的主要区别</p>
</blockquote>
<ol>
<li>引用是另一个对象的别名（但不是对象），而指针本身就是一个对象。</li>
<li>引用必须初始化，并且一旦定义了引用就无法再绑定到其他对象。而指针无须在定义时赋初值，也可以重新赋值让其指向其他对象。</li>
</ol>
<h2 id="练习2-20"><a href="#练习2-20" class="headerlink" title="练习2.20"></a>练习2.20</h2><blockquote>
<p>请叙述下面这段代码的作用。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;i;</span><br><span class="line">*p1 = *p1 * *p1;</span><br></pre></td></tr></table></figure>

<p>让指针 <code>pi</code> 指向 <code>i</code>，然后将 <code>i</code> 的值重新赋值为 42 * 42 (1764)。</p>
<h2 id="练习2-21"><a href="#练习2-21" class="headerlink" title="练习2.21"></a>练习2.21</h2><blockquote>
<p>请解释下述定义。在这些定义中有非法的吗？如果有，为什么？</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int i = 0;</span><br><span class="line">(a) double* dp = &amp;i;</span><br><span class="line">(b) int *ip = i;</span><br><span class="line">(c) int *p = &amp;i;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): 非法。不能将一个指向 `double` 的指针指向 `int` 。</span><br><span class="line">(b): 非法。不能将 `int` 变量赋给指针。</span><br><span class="line">(c): 合法。</span><br></pre></td></tr></table></figure>

<h2 id="练习2-22"><a href="#练习2-22" class="headerlink" title="练习2.22"></a>练习2.22</h2><blockquote>
<p>假设 p 是一个 int 型指针，请说明下述代码的含义。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (p) <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">if</span> (*p) <span class="comment">// ...</span></span><br></pre></td></tr></table></figure>
<p><code>if (p) // ...</code>  判断 p 是不是一个空指针,<br><code>if (*p) // ...</code> 判断 p 所指向的对象的值是不是为 0</p>
<h2 id="练习2-23"><a href="#练习2-23" class="headerlink" title="练习2.23"></a>练习2.23</h2><blockquote>
<p>给定指针 p，你能知道它是否指向了一个合法的对象吗？如果能，叙述判断的思路；如果不能，也请说明原因。</p>
</blockquote>
<p>不能，因为首先要确定这个指针是不是合法的，才能判断它所指向的对象是不是合法的。</p>
<p>书本P47，指针具有4种状态，指向对象只是状态之一。</p>
<h2 id="练习2-24"><a href="#练习2-24" class="headerlink" title="练习2.24"></a>练习2.24</h2><blockquote>
<p>在下面这段代码中为什么 p 合法而 lp 非法？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="type">void</span> *p = &amp;i;</span><br><span class="line"><span class="type">long</span> *lp = &amp;i;</span><br></pre></td></tr></table></figure>

<p><code>void *</code> 是（从C语言那里继承过来的，这句话存疑，暂未查证），可以指向任何类型的对象（即可以存放任意对象的地址）。而其他指针类型必须要与所指对象严格匹配。</p>
<p>注意，<code>void *</code>不是空指针，空指针是null pointer，不指向任何对象，字面值常用<code>nullptr</code>。</p>
<h2 id="练习2-25"><a href="#练习2-25" class="headerlink" title="练习2.25"></a>练习2.25</h2><blockquote>
<p>说明下列变量的类型和值。</p>
</blockquote>
<ul>
<li>(a) int* ip, i, &amp;r &#x3D; i;</li>
<li>(b) int i, *ip &#x3D; 0;</li>
<li>(c) int* ip, ip2;</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(a): ip是一个指向int的指针（块作用域内不赋初值），i是一个int（块作用域内不赋初值）, r是i的引用（同上）。</span><br><span class="line">(b): i是int（块作用域内不赋初值），ip是一个空指针（不指向任何对象）。</span><br><span class="line">(c): ip是一个指向int的指针（块作用域内不赋初值）, ip2是一个 int（块作用域内不赋初值）。</span><br></pre></td></tr></table></figure>

<p>作用域：全局作用域（global scope）和块作用域（block scope），一般块作用域习惯称为局部作用域。</p>
<p>面对一条复杂的指针或引用的声明语句时，从右往左阅读：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> ival = <span class="number">1024</span>;</span><br><span class="line"><span class="type">int</span> *pi = &amp;ival;</span><br><span class="line"><span class="type">int</span> **ppi = &amp;pi; <span class="comment">// ppi是指向指针的指针</span></span><br><span class="line"><span class="type">int</span> **ppi = <span class="number">0</span><span class="comment">// 为访问最原始的对象，需要两次解引用 **ppi</span></span><br><span class="line"><span class="type">int</span> *&amp;r = pi <span class="comment">// 从右往左阅读，&amp;r是一个引用，*说明r引用的是指针，int类型则具体说明了r引用的是int指针。</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-26"><a href="#练习2-26" class="headerlink" title="练习2.26"></a>练习2.26</h2><blockquote>
<p>下面哪些语句是合法的？如果不合法，请说明为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> buf;      <span class="comment">// 不合法, const 对象必须初始化</span></span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;        <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> sz = cnt; <span class="comment">// 合法</span></span><br><span class="line">++cnt; ++sz;        <span class="comment">// ++sz不合法, const 对象不能被改变</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-27"><a href="#练习2-27" class="headerlink" title="练习2.27"></a>练习2.27</h2><blockquote>
<p>下面的哪些初始化是合法的？请说明原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">-1</span>, &amp;r = <span class="number">0</span>;         <span class="comment">// 不合法, r必须引用一个对象（非常量引用的初始值必须是一个对象）</span></span><br><span class="line"><span class="type">int</span> *<span class="type">const</span> p2 = &amp;i2;        <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> i = <span class="number">-1</span>, &amp;r = <span class="number">0</span>;   <span class="comment">// 合法，常量引用可以非常量的对象、绑定字面值、一般表达式</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p3 = &amp;i2;  <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p1 = &amp;i2;        <span class="comment">// 合法</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> &amp;<span class="type">const</span> r2;        <span class="comment">// 不合法, r2是引用，引用没有顶层 const（引用只是对象的别名）</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> i2 = i, &amp;r = i;   <span class="comment">// 合法</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-28"><a href="#练习2-28" class="headerlink" title="练习2.28"></a>练习2.28</h2><blockquote>
<p>说明下面的这些定义是什么意思，挑出其中不合法的。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i, *<span class="type">const</span> cp;       <span class="comment">// 不合法，cp未初始化，const指针必须初始化（指针常量要初始化）</span></span><br><span class="line"><span class="type">int</span> *p1, *<span class="type">const</span> p2;     <span class="comment">// 不合法，p2未初始化，const指针必须初始化</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> ic, &amp;r = ic;  <span class="comment">// 不合法，ic未初始化，const int必须初始化</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *<span class="type">const</span> p3;    <span class="comment">// 不合法，p3未初始化，const指针必须初始化</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p;           <span class="comment">// 合法。一个指针，指向 const int（常量指针）</span></span><br></pre></td></tr></table></figure>

<p><strong>一个常量对象必须初始化，一旦初始化其值就不能再改变。</strong></p>
<p>指针常量（*const）把*放在const关键字之前用以说明指针是一个常量，这样的书写形式隐含着一层意味，即不变的是指针本身的值而非指向的那个值。</p>
<h2 id="练习2-29"><a href="#练习2-29" class="headerlink" title="练习2.29"></a>练习2.29</h2><blockquote>
<p>假设已有上一个练习中定义的那些变量，则下面的哪些语句是合法的？请说明原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">i = ic;     <span class="comment">// 合法, 常量赋值给普通变量</span></span><br><span class="line">p1 = p3;    <span class="comment">// 不合法, p3是一个指向int常量的常量指针常量，p1是指向int变量的指针。指向const的指针，不能给普通指针赋值。</span></span><br><span class="line">p1 = &amp;ic;   <span class="comment">// 不合法, 普通指针不能指向常量</span></span><br><span class="line">p3 = &amp;ic;   <span class="comment">// 不合法, p3是常量指针常量，是一个常量，无法改变常量的值。</span></span><br><span class="line">p2 = p1;    <span class="comment">// 不合法，p2是指针常量，无法改变常量的值。</span></span><br><span class="line">ic = *p3;   <span class="comment">// 不合法, 虽然对p3解引用是一个int常量，但ic本身就是一个int常量，无法改变常量的值。</span></span><br></pre></td></tr></table></figure>

<p>常量指针不能赋值给普通指针，因为它是指向常量（存储着常量的地址），如果允许赋值给普通指针，就意味着可以通过其他指针修改那个常量。不过可以赋值给另一个常量指针，因为它们都是指向常量，都是底层const。</p>
<p>而指针常量（const指针）是可以给普通指针赋值的。</p>
<p>引用的类型必须与其所引用的对象的类型一致，指针的类型必须与其所指对象的类型一致。但有例外情况（例如允许一个指向常量的指针指向一个非常量对象，当然，仅限于常量和非常量的区别，不是指int和double这种类型区别）。</p>
<p><strong>例外情况的解释：</strong><br>指向常量的指针或引用，并未规定所指的对象必须是一个常量。所谓的「指向常量」，只是规定不能通过指针或引用来改变对象的值（并未规定那个对象的值不能改变，这个值可以通过其他渠道改变）。通俗点讲：就是指针或引用“自以为是”，觉得自己指向了常量，所以会自觉地不去改变所指对象的值。</p>
<h2 id="练习2-30"><a href="#练习2-30" class="headerlink" title="练习2.30"></a>练习2.30</h2><blockquote>
<p>对于下面的这些语句，请说明对象被声明成了顶层const还是底层const？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> v2 = <span class="number">0</span>; <span class="type">int</span> v1 = v2;</span><br><span class="line"><span class="type">int</span> *p1 = &amp;v1, &amp;r1 = v1;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p2 = &amp;v2, *<span class="type">const</span> p3 = &amp;i, &amp;r2 = v2;</span><br></pre></td></tr></table></figure>

<p>v2是顶层const，v1是普通int；p1是普通指针，r1是对v1的引用；p2是底层const，p3既是顶层const也是底层const，r2是底层const。</p>
<p>用名词顶层const（top-level const）表示指针本身是个常量，而用名词底层const（low-level const）表示指针所指的对象是一个常量。</p>
<p>更一般通用的说法如下：</p>
<ul>
<li>顶层const：表示任意对象是常量，对任意数据类型都适用。顶层const指本身就是常量，常量只能初始化，不能被赋值。</li>
<li>底层const：表示所指或所引用对象是常量，只与指针、引用等复合类型的基本类型部分有关。（用于声明引用的const都是底层const）。拷贝时，要求两个对象具有相同的底层const或者两个对象之间的数据类型可以转换（非常量可以转常量）。</li>
</ul>
<p>指针类型既可是顶层const，也可以是底层const，这一点和其他类型相比区别明显。</p>
<p>常量表达式是指值不会改变，在编译过程中就能得到计算结果的表达式。</p>
<p>constexpr类型声明的变量是由编译器验证变量的值是否是一个常量表达式。用constexpr声明的对象会把它置为顶层const，比如constexpr int *q &#x3D; nullptr就相当于int *const q &#x3D; nullptr。</p>
<h2 id="练习2-31"><a href="#练习2-31" class="headerlink" title="练习2.31"></a>练习2.31</h2><blockquote>
<p>假设已有上一个练习中所做的那些声明，则下面的哪些语句是合法的？请说明顶层const和底层const在每个例子中有何体现。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">r1 = v2; <span class="comment">// 合法，顶层const在拷贝时不受影响</span></span><br><span class="line">p1 = p2; <span class="comment">// 不合法，p2是底层const，如果要拷贝必须要求p1也是底层const</span></span><br><span class="line">p2 = p1; <span class="comment">// 合法，int* 可以转换成const int*</span></span><br><span class="line">p1 = p3; <span class="comment">// 不合法，p3是一个底层const，p1不是</span></span><br><span class="line">p2 = p3; <span class="comment">// 合法，p2和p3都是底层const，拷贝时忽略掉顶层const</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-32"><a href="#练习2-32" class="headerlink" title="练习2.32"></a>练习2.32</h2><blockquote>
<p>下面的代码是否合法？如果非法，请设法将其修改正确。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int null = 0, *p = null;</span><br></pre></td></tr></table></figure>
<p>非法。（书本P49）把int变量直接赋给指针是错误的操作，即使int变量的值恰好等于0也不行。<br>修正方式1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int null = 0, *p = 0;</span><br></pre></td></tr></table></figure>
<p>修正方式2：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> null = <span class="number">0</span>, *p = &amp;null;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-33"><a href="#练习2-33" class="headerlink" title="练习2.33"></a>练习2.33</h2><blockquote>
<p>利用本节定义的变量，判断下列语句的运行结果。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">a=<span class="number">42</span>; <span class="comment">// a 是 int</span></span><br><span class="line">b=<span class="number">42</span>; <span class="comment">// b 是一个 int,(ci的顶层const在拷贝时被忽略掉了)</span></span><br><span class="line">c=<span class="number">42</span>; <span class="comment">// c 也是一个int</span></span><br><span class="line">d=<span class="number">42</span>; <span class="comment">// d 是一个 int *，所以语句非法</span></span><br><span class="line">e=<span class="number">42</span>; <span class="comment">// e 是一个 const int *，所以语句非法</span></span><br><span class="line">g=<span class="number">42</span>; <span class="comment">// g 是一个 const int 的引用，引用都是底层const，所以不能被赋值</span></span><br></pre></td></tr></table></figure>

<p><strong>类型别名（typedef和using）</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> wages</span><br><span class="line"><span class="keyword">using</span> wages=<span class="type">double</span></span><br><span class="line"><span class="comment">// 注意指针和类型别名的应用</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *pstring;</span><br><span class="line"><span class="type">const</span> pstring cstr = <span class="number">0</span>; <span class="comment">// cstr是指向char的指针常量。注意不要理解成 cosnt char *cstr = 0，这是错误的，const在这里是修饰整个类型，应该是顶层const。</span></span><br><span class="line"><span class="type">const</span> pstring *ps; <span class="comment">// ps是一个指针（实际就是指针的指针），它的对象是指向char的指针常量。</span></span><br></pre></td></tr></table></figure>

<p><strong>auto关键字（让编译器通过初始值推断类型）</strong></p>
<ul>
<li>auto定义的变量必须有初值。</li>
<li>auto一般会忽略掉顶层const，同时底层const会保留下来（若希望推断出的auto类型一个顶层const，明确指出const auto）。</li>
<li>引用的类型也可以设为auto，例如<code>auto &amp;a=i</code>，但注意顶层const依然是会被忽略，<code>auto &amp;b=42</code>是错误的，<code>const auto &amp;b=42</code>才是正确的。</li>
</ul>
<h2 id="练习2-34"><a href="#练习2-34" class="headerlink" title="练习2.34"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_34.cpp">练习2.34</a></h2><blockquote>
<p>基于上一个练习中的变量和语句编写一段程序，输出赋值前后变量的内容，你刚才的推断正确吗？如果不对，请反复研读本节的示例直到你明白错在何处为止。</p>
</blockquote>
<h2 id="练习2-35"><a href="#练习2-35" class="headerlink" title="练习2.35"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_35.cpp">练习2.35</a></h2><blockquote>
<p>判断下列定义推断出的类型是什么，然后编写程序进行验证。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">auto</span> j = i; <span class="type">const</span> <span class="keyword">auto</span> &amp;k = i; <span class="keyword">auto</span> *p = &amp;i;</span><br><span class="line"><span class="type">const</span> <span class="keyword">auto</span> j2 = i, &amp;k2 = i;</span><br></pre></td></tr></table></figure>

<p>j 是 int，k 是 const int的引用，p 是const int *，j2 是const int，k2 是 const int 的引用。</p>
<p>验证依靠hint即可（鼠标悬停在变量上），无需编译。</p>
<h2 id="练习2-36"><a href="#练习2-36" class="headerlink" title="练习2.36"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_36.cpp">练习2.36</a></h2><blockquote>
<p>关于下面的代码，请指出每一个变量的类型以及程序结束时它们各自的值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">decltype</span>(a) c = a;</span><br><span class="line"><span class="keyword">decltype</span>((b)) d = a;</span><br><span class="line">++c;</span><br><span class="line">++d;</span><br></pre></td></tr></table></figure>
<p>a、b、c都是int类型，d是int &amp;类型，即引用，绑定到a。<br>程序结束时的值：a、b、c、d都为4。</p>
<p><strong>decltype关键字（让编译器分析表达式来得到类型，不计算表达式的值）</strong></p>
<ul>
<li>变量是否需要赋初值，看类型，如int可以不赋初值，引用必须要初值。</li>
<li>decltype使用的表达式是一个变量时，则返回该变量的类型（包括顶层const和引用）。</li>
<li>decltype使用的表达式不是一个变量时，则返回表达式结果的类型。</li>
</ul>
<p><strong>decltype返回引用类型的情况：</strong></p>
<ol>
<li>decltype(variable)时，variable本身是一个引用，返回引用类型。</li>
<li>双层括号decltype((variable))返回的结果永远是引用类型。</li>
<li>decltype(表达式为解引用操作，如*p)，返回引用类型（解引用指针操作，得到指针所指的对象，还能给这个对象赋值）。</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>, *p = &amp;i, &amp;r = i;</span><br><span class="line"><span class="keyword">decltype</span>(r) a = i;   <span class="comment">// a是引用，绑定到变量i</span></span><br><span class="line"><span class="keyword">decltype</span>(r + <span class="number">0</span>) b;   <span class="comment">// b是int，b是一个未初始化的int</span></span><br><span class="line"><span class="keyword">decltype</span>((i)) c = i; <span class="comment">// c是引用，绑定到变量i</span></span><br><span class="line"><span class="keyword">decltype</span>(*p) d = i;  <span class="comment">// d是引用，绑定到变量i</span></span><br></pre></td></tr></table></figure>

<h2 id="练习2-37"><a href="#练习2-37" class="headerlink" title="练习2.37"></a>练习2.37</h2><blockquote>
<p>赋值是会产生引用的一类典型表达式，引用的类型就是左值的类型。也就是说，如果 i 是 int，则表达式 i&#x3D;x 的类型是 int&amp;。根据这一特点，请指出下面的代码中每一个变量的类型和值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">decltype</span>(a) c = a;</span><br><span class="line"><span class="keyword">decltype</span>(a = b) d = a;</span><br></pre></td></tr></table></figure>
<p>a、b、c都是int类型，d是int &amp;类型，即引用，绑定到a。<br>a的值为3，b的值为4，c的值为3，d的值为3。</p>
<h2 id="练习2-38"><a href="#练习2-38" class="headerlink" title="练习2.38"></a>练习2.38</h2><blockquote>
<p>说明由decltype 指定类型和由auto指定类型有何区别。请举一个例子，decltype指定的类型与auto指定的类型一样；再举一个例子，decltype指定的类型与auto指定的类型不一样。</p>
</blockquote>
<ul>
<li>decltype依据类型决定是否需要赋初值，auto必须要有初值。</li>
<li>decltype处理顶层const方式与auto不同，decltype会将顶层const保留起来，auto会忽略掉顶层const。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">0</span>, &amp;r = i;</span><br><span class="line"><span class="comment">// 相同 都是int</span></span><br><span class="line"><span class="keyword">auto</span> a = i;</span><br><span class="line"><span class="keyword">decltype</span>(i) b = i;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不同 d 是一个 int&amp;</span></span><br><span class="line"><span class="keyword">auto</span> c = r;</span><br><span class="line"><span class="keyword">decltype</span>(r) d = r;</span><br></pre></td></tr></table></figure>

<p>stackoverflow的<a href="http://stackoverflow.com/questions/21369113/what-is-the-difference-between-auto-and-decltypeauto-when-returning-from-a-fun">参考1</a>和<a href="http://stackoverflow.com/questions/12084040/decltype-vs-auto">参考2</a>有更多的讨论。</p>
<h2 id="练习2-39"><a href="#练习2-39" class="headerlink" title="练习2.39"></a>练习2.39</h2><blockquote>
<p>编译下面的程序观察其运行结果，注意，如果忘记写类定义体后面的分号会发生什么情况？记录下相关的信息，以后可能会有用。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Foo</span> &#123; <span class="comment">/* 此处为空  */</span> &#125; <span class="comment">// 注意：没有分号</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>提示应输入分号。</p>
<p><strong>关键字<code>class</code>和<code>struct</code>都可以用来定义数据类型（类）。</strong></p>
<h2 id="练习2-40"><a href="#练习2-40" class="headerlink" title="练习2.40"></a>练习2.40</h2><blockquote>
<p>根据自己的理解写出 Sales_data 类，最好与书中的例子有所区别。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    std::string bookName;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">    <span class="type">double</span> price = <span class="number">0.0</span>;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-41"><a href="#练习2-41" class="headerlink" title="练习2.41"></a>练习2.41</h2><blockquote>
<p>使用你自己的Sale_data类重写1.5.1节（第20页）、1.5.2节（第21页）和1.6节（第22页）的练习。眼下先把Sales_data类的定义和main函数放在一个文件里。</p>
</blockquote>
<h3 id="1-5-1节"><a href="#1-5-1节" class="headerlink" title="1.5.1节"></a>1.5.1节</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sale_data book;</span><br><span class="line">    <span class="type">double</span> price;</span><br><span class="line">    std::cin &gt;&gt; book.bookNo &gt;&gt; book.units_sold &gt;&gt; price;</span><br><span class="line">    book.revenue = book.units_sold * price;</span><br><span class="line">    std::cout &lt;&lt; book.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; book.units_sold &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; book.revenue &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-5-2节"><a href="#1-5-2节" class="headerlink" title="1.5.2节"></a>1.5.2节</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sale_data book1, book2;</span><br><span class="line">    <span class="type">double</span> price1, price2;</span><br><span class="line">    std::cin &gt;&gt; book<span class="number">1.</span>bookNo &gt;&gt; book<span class="number">1.</span>units_sold &gt;&gt; price1;</span><br><span class="line">    std::cin &gt;&gt; book<span class="number">2.</span>bookNo &gt;&gt; book<span class="number">2.</span>units_sold &gt;&gt; price2;</span><br><span class="line">    book<span class="number">1.</span>revenue = book<span class="number">1.</span>units_sold * price1;</span><br><span class="line">    book<span class="number">2.</span>revenue = book<span class="number">2.</span>units_sold * price2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (book<span class="number">1.</span>bookNo == book<span class="number">2.</span>bookNo)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">unsigned</span> totalCnt = book<span class="number">1.</span>units_sold + book<span class="number">2.</span>units_sold;</span><br><span class="line">        <span class="type">double</span> totalRevenue = book<span class="number">1.</span>revenue + book<span class="number">2.</span>revenue;</span><br><span class="line">        std::cout &lt;&lt; book<span class="number">1.</span>bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; totalCnt &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; totalRevenue &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (totalCnt != <span class="number">0</span>)</span><br><span class="line">            std::cout &lt;&lt; totalRevenue / totalCnt &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            std::cout &lt;&lt; <span class="string">&quot;(no sales)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;Data must refer to same ISBN&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// indicate failure</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-6节"><a href="#1-6节" class="headerlink" title="1.6节"></a>1.6节</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Sale_data</span></span><br><span class="line">&#123;</span><br><span class="line">    std::string bookNo;</span><br><span class="line">    <span class="type">unsigned</span> units_sold = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sale_data total;</span><br><span class="line">    <span class="type">double</span> totalPrice;</span><br><span class="line">    <span class="keyword">if</span> (std::cin &gt;&gt; total.bookNo &gt;&gt; total.units_sold &gt;&gt; totalPrice)</span><br><span class="line">    &#123;</span><br><span class="line">        total.revenue = total.units_sold * totalPrice;</span><br><span class="line"></span><br><span class="line">        Sale_data trans;</span><br><span class="line">        <span class="type">double</span> transPrice;</span><br><span class="line">        <span class="keyword">while</span> (std::cin &gt;&gt; trans.bookNo &gt;&gt; trans.units_sold &gt;&gt; transPrice)</span><br><span class="line">        &#123;</span><br><span class="line">            trans.revenue = trans.units_sold * transPrice;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (total.bookNo == trans.bookNo)</span><br><span class="line">            &#123;</span><br><span class="line">                total.units_sold += trans.units_sold;</span><br><span class="line">                total.revenue += trans.revenue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                std::cout &lt;&lt; total.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.units_sold &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.revenue &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (total.units_sold != <span class="number">0</span>)</span><br><span class="line">                    std::cout &lt;&lt; total.revenue / total.units_sold &lt;&lt; std::endl;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;(no sales)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">                total.bookNo = trans.bookNo;</span><br><span class="line">                total.units_sold = trans.units_sold;</span><br><span class="line">                total.revenue = trans.revenue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        std::cout &lt;&lt; total.bookNo &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.units_sold &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; total.revenue &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (total.units_sold != <span class="number">0</span>)</span><br><span class="line">            std::cout &lt;&lt; total.revenue / total.units_sold &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            std::cout &lt;&lt; <span class="string">&quot;(no sales)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;No data?!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// indicate failure</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习2-42"><a href="#练习2-42" class="headerlink" title="练习2.42"></a>练习2.42</h2><blockquote>
<p>根据你自己的理解重写一个Sales_data.h头文件，并以此为基础重做2.6.2节（第67页）的练习。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_42_1.cpp">1.5.1节</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_42_2.cpp">1.5.2节</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap2/2_42_3.cpp">1.6节</a></li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第二章</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第三章「字符串、向量和数组」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap3/</url>
    <content><![CDATA[<h1 id="第三章：字符串、向量和数组"><a href="#第三章：字符串、向量和数组" class="headerlink" title="第三章：字符串、向量和数组"></a>第三章：字符串、向量和数组</h1><h2 id="练习3-1"><a href="#练习3-1" class="headerlink" title="练习3.1"></a>练习3.1</h2><blockquote>
<p>使用恰当的using声明重做1.4.1节（第11页）和2.6.2节（第67页）的练习。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_1_1.cpp">1.4.1</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_1_2.cpp">2.6.2</a></li>
</ul>
<p>因为较为简单，每个小节就只写一个练习了。</p>
<p>using声明易造成名字冲突：</p>
<ul>
<li>使用using声明，一般建议为每个名字做独立的using声明，例如<code>using std::cin</code>，不太建议使用整个命名空间，例如<code>using namespace std</code>，易造成名字冲突。</li>
<li>头文件不应包含using声明：易造成名字冲突。</li>
</ul>
<h2 id="练习3-2"><a href="#练习3-2" class="headerlink" title="练习3.2"></a>练习3.2</h2><blockquote>
<p>编写一段程序从标准输入中一次读入一行，然后修改该程序使其一次读入一个词。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_2_1.cpp">一次读入一行</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_2_2.cpp">一次读入一个词</a></li>
</ul>
<h2 id="练习3-3"><a href="#练习3-3" class="headerlink" title="练习3.3"></a>练习3.3</h2><blockquote>
<p>请说明string类的输入运算符和getline函数分别是如何处理空白字符的。</p>
</blockquote>
<ul>
<li>类似 cin &gt;&gt; str 的读取，string对象会忽略开头的空白（空格符、换行符、制表符等）并从第一个真正的字符开始读起，直到遇见下一处空白为止。</li>
<li>类似 getline(cin, str) 的读取，string对象会从给定的输入流中读取内容，直到遇到换行符为止（换行符被读进来，但不会存放进对象）。</li>
</ul>
<h2 id="练习3-4"><a href="#练习3-4" class="headerlink" title="练习3.4"></a>练习3.4</h2><blockquote>
<p>编写一段程序读取两个字符串，比较其是否相等并输出结果。如果不相等，输出较大的那个字符串。改写上述程序，比较输入的两个字符串是否等长，如果不等长，输出长度较大的那个字符串。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_4_1.cpp">比较大的</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_4_2.cpp">长度大的</a></li>
</ul>
<h2 id="练习3-5"><a href="#练习3-5" class="headerlink" title="练习3.5"></a>练习3.5</h2><blockquote>
<p>编写一段程序从标准输入中读入多个字符串并将它们连接在一起，输出连接成的大字符串。然后修改上述程序，用空格把输入的多个字符串分隔开来。</p>
</blockquote>
<ul>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_5_1.cpp">无空格分隔</a></li>
<li><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_5_2.cpp">空格分隔</a></li>
</ul>
<p>string对象操作的一些总结：</p>
<ul>
<li><strong>定义、初始化和基本操作看下面代码（书本见P76和P77）。</strong></li>
<li>关系运算符&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;比较规则：依次比较每个位置上的字符大小，若都一样时，则长度更长的字符串就更大。</li>
<li><code>string</code>和字符字面值和字符串字面值混在一条语句中，必须确保加法运算符「+」两侧至少有一个<code>string</code>对象（因为标准库可以将字面值转换为<code>string</code>对象，但不允许两个字面值直接相加）</li>
<li><code>size()</code>函数返回的是<code>string::size_type</code>类型的值，是无符号数。表达式中如果有<code>size()</code>，切记不要再使用<code>int</code>。如果需要定义变量存储<code>size()</code>函数，使用<code>auto</code>或<code>decltype</code>，例如<code>auto len = str.size()</code></li>
<li><strong>注意字符串字面值不是<code>string</code>对象，和<code>string</code>是不同的类型（因为需要兼容C）。</strong></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义和初始化（等号是拷贝初始化，圆括号是直接初始化）</span></span><br><span class="line">string s1;     <span class="comment">//默认初始化为空串</span></span><br><span class="line"><span class="function">string <span class="title">s2</span><span class="params">(s1)</span></span>; <span class="comment">// s2是s1的副本</span></span><br><span class="line">string s2 = s1; <span class="comment">// 同上，不过是拷贝初始化</span></span><br><span class="line">string s3 = (<span class="string">&quot;hello&quot;</span>); <span class="comment">// s3是字面值&quot;hello&quot;的副本（不包括字面值中的空字符）</span></span><br><span class="line">string s3 = <span class="string">&quot;hello&quot;</span>; <span class="comment">// 同上</span></span><br><span class="line"><span class="function">string <span class="title">s4</span><span class="params">(n, <span class="string">&#x27;c&#x27;</span>)</span></span>; <span class="comment">// s4初始化为由n个字符c组成的串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本操作</span></span><br><span class="line">os &lt;&lt; s; <span class="comment">// 将s写到输出流os，返回os</span></span><br><span class="line">is &gt;&gt; s; <span class="comment">// 将输入流is读取字符串赋值给s，字符串以空白分割，返回is</span></span><br><span class="line"><span class="built_in">getline</span>(is, s); <span class="comment">// 从输入流is读取一行赋值给s，返回is</span></span><br><span class="line">s.<span class="built_in">empty</span>(); <span class="comment">// s为空返回true，否则返回false</span></span><br><span class="line">s.<span class="built_in">size</span>(); <span class="comment">// 返回s中字符的个数</span></span><br><span class="line">s[n]; <span class="comment">// 返回s中第n个字符的引用，下标从0计起。</span></span><br><span class="line">s1 + s2; <span class="comment">// 返回s1和s2连接后的结果</span></span><br><span class="line">s1 = s2; <span class="comment">// 用s2的副本代替s1中原来的字符</span></span><br><span class="line">s1 == s2; <span class="comment">// 判断两个string对象是否相等，对字母大小写敏感</span></span><br><span class="line">s1 != s2;</span><br><span class="line">&lt;, &lt;=, &gt;, &gt;= ; <span class="comment">// 利用字符在字典中的顺序进行比较，对字母大小写敏感</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="练习3-6"><a href="#练习3-6" class="headerlink" title="练习3.6"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_6.cpp">练习3.6</a></h2><blockquote>
<p>编写一段程序，使用范围for语句将字符串内的所有字符用X代替。</p>
</blockquote>
<p><strong>for范围语句中引用的理解：</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;c : s)</span><br><span class="line">    c = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> itr = s.<span class="built_in">begin</span>(); itr != s.<span class="built_in">end</span>(); ++itr) &#123;</span><br><span class="line">    <span class="keyword">auto</span> &amp;c = *itr; <span class="comment">// 每个迭代中用一个新引用绑定一个元素</span></span><br><span class="line">    c = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习3-7"><a href="#练习3-7" class="headerlink" title="练习3.7"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_7.cpp">练习3.7</a></h2><blockquote>
<p>就上一题完成的程序而言，如果将循环控制变量的类型设为char将发生什么？先估计一下结果，然后实际编程进行验证。</p>
</blockquote>
<p>字符串没有变化（因为c只是拷贝，即char，而非引用，即char &amp;，所以无法改变字符串的）。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">string <span class="title">str</span><span class="params">(<span class="string">&quot;hello, world!&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> c : str)</span><br><span class="line">    c = <span class="string">&#x27;X&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="练习3-8"><a href="#练习3-8" class="headerlink" title="练习3.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_8.cpp">练习3.8</a></h2><blockquote>
<p>分别用while循环和传统for循环重写第一题的程序，你觉得哪种形式更好呢？为什么？</p>
</blockquote>
<p>范围for语句更好，因为不需要直接操作索引，更简洁。</p>
<h2 id="练习3-9"><a href="#练习3-9" class="headerlink" title="练习3.9"></a>练习3.9</h2><blockquote>
<p>下面的程序有何作用？它合法吗？如果不合法，为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line">cout &lt;&lt; s[<span class="number">0</span>] &lt;&lt; endl;</span><br></pre></td></tr></table></figure>

<p>不合法。使用下标访问空字符串是非法的行为（通过下标访问不存在元素的行为会导致缓冲区错误buffer overflow，本质上就是下标越界，试图访问非法内存区域）。</p>
<p><strong>只能对确知已存在的元素执行下标操作：建议设下标类型为<code>decltype(str.size())</code>，这样可以确保下标不会小于0。写程序逻辑时，自己确保下标小于<code>str.size()</code>即可（或者使用范围for语句遍历更方便，能有效地确保下标合法，不会出现下标越界）。</strong></p>
<h2 id="练习3-10"><a href="#练习3-10" class="headerlink" title="练习3.10"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_10.cpp">练习3.10</a></h2><blockquote>
<p>编写一段程序，读入一个包含标点符号的字符串，将标点符号去除后输出字符串剩余的部分。</p>
</blockquote>
<p><strong>C++标准库兼容C标准库</strong><br>C标准库头文件形如ctype.h，而在C++中，则是命名为cctype，即前面加一个c并且去除后缀.h。使用方式，标准库的名字可以在命名空间std找到。</p>
<h2 id="练习3-11"><a href="#练习3-11" class="headerlink" title="练习3.11"></a>练习3.11</h2><blockquote>
<p>下面的范围for语句合法吗？如果合法，c的类型是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> string s = <span class="string">&quot;Keep out!&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;c : s)&#123; <span class="comment">/* ... */</span> &#125;</span><br></pre></td></tr></table></figure>

<p>要根据for循环体中的代码来看是否合法，s是常量，c是string对象中字符的引用（const char &amp;）。因此如果for循环体中的代码重新给c赋值就会非法，如果不改变c的值，那么合法。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cout &lt;&lt; c;  <span class="comment">// 合法</span></span><br><span class="line">c = <span class="string">&#x27;X&#x27;</span>;    <span class="comment">// 不合法</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-12"><a href="#练习3-12" class="headerlink" title="练习3.12"></a>练习3.12</h2><blockquote>
<p>下列vector对象的定义有不正确的吗？如果有，请指出来。对于正确的，描述其执行结果；对于不正确的，说明其错误的原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; ivec;         <span class="comment">// 在C++11当中合法，ivec的元素是vector对象</span></span><br><span class="line">vector&lt;string&gt; svec = ivec;       <span class="comment">// 不合法，类型不一样，ivec的元素是vector int，svec的元素是string</span></span><br><span class="line"><span class="function">vector&lt;string&gt; <span class="title">svec</span><span class="params">(<span class="number">10</span>, <span class="string">&quot;null&quot;</span>)</span></span>;  <span class="comment">// 合法，svec有10个字符串：&quot;null&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-13"><a href="#练习3-13" class="headerlink" title="练习3.13"></a>练习3.13</h2><blockquote>
<p>下列的vector对象各包含多少个元素？这些元素的值分别是多少？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; v1;         <span class="comment">// 0个，无值</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v2</span><span class="params">(<span class="number">10</span>)</span></span>;     <span class="comment">// 10个，都是0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v3</span><span class="params">(<span class="number">10</span>, <span class="number">42</span>)</span></span>; <span class="comment">// 10个，都是42</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v4&#123; <span class="number">10</span> &#125;;     <span class="comment">// 1个，10</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v5&#123; <span class="number">10</span>, <span class="number">42</span> &#125;; <span class="comment">// 2个，10和42</span></span><br><span class="line">vector&lt;string&gt; v6&#123; <span class="number">10</span> &#125;;  <span class="comment">// 10个，空串</span></span><br><span class="line">vector&lt;string&gt; v7&#123; <span class="number">10</span>, <span class="string">&quot;hi&quot;</span> &#125;;  <span class="comment">// 10个，都是&quot;hi&quot;</span></span><br></pre></td></tr></table></figure>

<p>初始化的括号区别：</p>
<ul>
<li>圆括号：构造vector对象，即圆括号声明容量和初值。</li>
<li>花括号：列表初始化，用花括号的值作为元素初始值。（当提供的值不能用来列表初始化时，就会用来构造对象。如<code>vector&lt;string&gt; v1&#123;10, &quot;hi&quot;&#125;;</code>，因为类型不同，所以构造成10个&quot;hi&quot;）</li>
</ul>
<h2 id="练习3-14"><a href="#练习3-14" class="headerlink" title="练习3.14"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_14.cpp">练习3.14</a></h2><blockquote>
<p>编写一段程序，用cin读入一组整数并把它们存入一个vector对象。</p>
</blockquote>
<p><strong>vctror对象能高效增长，在定义时设定其大小意义不大。开始时创建空vector，运行时再动态添加元素。</strong></p>
<h2 id="练习3-15"><a href="#练习3-15" class="headerlink" title="练习3.15"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_15.cpp">练习3.15</a></h2><blockquote>
<p>改写上题的程序，不过这次读入的是字符串。</p>
</blockquote>
<h2 id="练习3-16"><a href="#练习3-16" class="headerlink" title="练习3.16"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_16.cpp">练习3.16</a></h2><blockquote>
<p>编写一段程序，把练习3.13中vector对象的容量和具体内容输出出来。检验你之前的回答是否正确，如果不对，回过头重新学习3.3.1节（第87页）知道弄明白错在何处为止。</p>
</blockquote>
<h2 id="练习3-17"><a href="#练习3-17" class="headerlink" title="练习3.17"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_17.cpp">练习3.17</a></h2><blockquote>
<p>从cin读入一组词并把它们存入一个vector对象，然后设法把所有词都改写为大写形式。输出改变后的结果，每个词占一行。</p>
</blockquote>
<h2 id="练习3-18"><a href="#练习3-18" class="headerlink" title="练习3.18"></a>练习3.18</h2><blockquote>
<p>下面的程序合法吗？如果不合法，你准备如何修改？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; ivec;</span><br><span class="line">ivec[<span class="number">0</span>] = <span class="number">42</span>;</span><br></pre></td></tr></table></figure>

<p>不合法（ivec是空vector对象，对其执行下标操作是非法行为）。修正方式：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ivec.<span class="built_in">push_back</span>(<span class="number">42</span>);</span><br></pre></td></tr></table></figure>

<h2 id="练习3-19"><a href="#练习3-19" class="headerlink" title="练习3.19"></a>练习3.19</h2><blockquote>
<p>如果想定义一个含有10个元素的vector对象，所有元素的值都是42，请列举出三种不同的实现方法，哪种方式更好呢？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ivec1</span><span class="params">(<span class="number">10</span>, <span class="number">42</span>)</span></span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ivec2&#123; <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span>, <span class="number">42</span> &#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ivec3;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">    ivec<span class="number">3.</span><span class="built_in">push_back</span>(<span class="number">42</span>);</span><br></pre></td></tr></table></figure>
<p>第一种方式最好。写法简洁。</p>
<h2 id="练习3-20"><a href="#练习3-20" class="headerlink" title="练习3.20"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_20.cpp">练习3.20</a></h2><blockquote>
<p>读入一组整数并把它们存入一个vector对象，将每对相邻整数的和输出出来。改写你的程序，这次要求先输出第1个和最后1个元素的和，接着输出第2个和倒数第2个元素的和，以此类推。</p>
</blockquote>
<h2 id="练习3-21"><a href="#练习3-21" class="headerlink" title="练习3.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_21.cpp">练习3.21</a></h2><blockquote>
<p>请使用迭代器重做3.3.3节（第94页）的第一个练习。</p>
</blockquote>
<p>迭代器的总结（本质上就是指针）：</p>
<ul>
<li>类似于指针，解引用运算符*，可以获取迭代器指向的内容。</li>
<li>使用迭代器的循环体是用<code>!=</code>作为判断条件（像c或者java使用下标，多是用<code>&lt;</code>）。因为C++中标准库容器的迭代器都定义了<code>==</code>和<code>!=</code>，而只有string和vector某些库才有下标运算符。</li>
<li>容器为空时，begin和end返回的是同一个迭代器（尾后迭代器）。</li>
<li>尾后迭代器指示的是不存在的“尾后”元素，实际并不指示某个元素，因此不能进行递增或者解引用操作。</li>
<li>只需读操作时，可用cbegin和cend函数。</li>
<li>箭头运算符是结合解引用和成员访问两个操作，即<code>it-&gt;men</code>等同于<code>(*it).men</code>。</li>
<li>使用了迭代器的循环体，不要向其所属的容器添加元素。例如，在循环体中向vector对象push_back，这会导致迭代器失效。（类似的，也不能在范围for循环中向vector对象添加元素）</li>
</ul>
<h2 id="练习3-22"><a href="#练习3-22" class="headerlink" title="练习3.22"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_22.cpp">练习3.22</a></h2><blockquote>
<p>修改之前那个输出text第一段的程序，首先把text的第一段全都改成大写形式，然后输出它。</p>
</blockquote>
<h2 id="练习3-23"><a href="#练习3-23" class="headerlink" title="练习3.23"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_23.cpp">练习3.23</a></h2><blockquote>
<p>编写一段程序，创建一个含有10个整数的vector对象，然后使用迭代器将所有元素的值都变成原来的两倍。输出vector对象的内容，检验程序是否正确。</p>
</blockquote>
<h2 id="练习3-24"><a href="#练习3-24" class="headerlink" title="练习3.24"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_24.cpp">练习3.24</a></h2><blockquote>
<p>请使用迭代器重做3.3.3节（第94页）的最后一个练习。</p>
</blockquote>
<h2 id="练习3-25"><a href="#练习3-25" class="headerlink" title="练习3.25"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_25.cpp">练习3.25</a></h2><blockquote>
<p>3.3.3节（第93页）划分分数段的程序是使用下标运算符实现的，请利用迭代器改写该程序并实现完全相同的功能。</p>
</blockquote>
<h2 id="练习3-26"><a href="#练习3-26" class="headerlink" title="练习3.26"></a>练习3.26</h2><blockquote>
<p>在100页的二分搜索程序中，为什么用的是 mid &#x3D; beg + (end - beg) &#x2F; 2，而非 mid &#x3D; (beg + end) &#x2F; 2 ; ?</p>
</blockquote>
<p>因为两个迭代器之间支持的运算符只有<code>-</code>和<code>&gt;、&gt;=、&lt;、&lt;=</code>，而没有<code>+</code> 。<code>end - beg</code> 相减的结果是之间的距离，将之除以2然后与beg相加，表示将beg移动到一半的位置。</p>
<p>迭代器运算的理解：迭代器可以加减一个数（包括加减复合赋值运算符），但两个迭代器之间的运算符只有<code>-</code>和<code>&gt;、&gt;=、&lt;、&lt;=</code>关系运算符。</p>
<h2 id="练习3-27"><a href="#练习3-27" class="headerlink" title="练习3.27"></a>练习3.27</h2><blockquote>
<p>假设txt_size是一个无参数的函数，它的返回值是int。请回答下列哪个定义是非法的？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> buf_size = <span class="number">1024</span>;</span><br><span class="line">(a) <span class="type">int</span> ia[buf_size];</span><br><span class="line">(b) <span class="type">int</span> ia[<span class="number">4</span> * <span class="number">7</span> - <span class="number">14</span>];</span><br><span class="line">(c) <span class="type">int</span> ia[<span class="built_in">txt_size</span>()];</span><br><span class="line">(d) <span class="type">char</span> st[<span class="number">11</span>] = <span class="string">&quot;fundamental&quot;</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 非法。纬度必须是一个常量表达式。</li>
<li>(b) 合法。</li>
<li>(c) 非法。txt_size返回的是int，不是constexpr int。</li>
<li>(d) 非法。数组的大小应该是12，字符串字面值末尾还有个空字符&#39;\0&#39;。</li>
</ul>
<h2 id="练习3-28"><a href="#练习3-28" class="headerlink" title="练习3.28"></a>练习3.28</h2><blockquote>
<p>下列数组中元素的值是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string sa[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> ia[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	string sa2[<span class="number">10</span>];</span><br><span class="line">	<span class="type">int</span> ia2[<span class="number">10</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>sa的元素值全部为空字符串，ia的元素值全部为0。sa2的元素值全部为空字符串，ia2的元素没有被初始化，初值全部未定义。</p>
<h2 id="练习3-29"><a href="#练习3-29" class="headerlink" title="练习3.29"></a>练习3.29</h2><blockquote>
<p>相比于vector来说，数组有哪些缺点，请列举一些。</p>
</blockquote>
<ul>
<li>数组的大小是固定的，不能随意增加元素</li>
<li>不允许拷贝和赋值</li>
<li>没有像vector那样的API</li>
</ul>
<h2 id="练习3-30"><a href="#练习3-30" class="headerlink" title="练习3.30"></a>练习3.30</h2><blockquote>
<p>指出下面代码中的索引错误。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> <span class="type">size_t</span> array_size = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> ia[array_size];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> ix = <span class="number">1</span>; ix &lt;= array_size; ++ix)</span><br><span class="line">	ia[ix] = ix;</span><br></pre></td></tr></table></figure>

<p>当ix等于10时，表达式ia[ix]属于未定义行为（UB），下标越界。</p>
<p><strong>通常将数组下标类型定义size_t，size_t定义在cstddef头文件，是一种机器相关的无符号类型，可以表示内存中任意对象的大小（因为被设计得足够大）。</strong></p>
<h2 id="练习3-31"><a href="#练习3-31" class="headerlink" title="练习3.31"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_31.cpp">练习3.31</a></h2><blockquote>
<p>编写一段程序，定义一个含有10个int的数组，令每个元素的值就是其下标值。</p>
</blockquote>
<h2 id="练习3-32"><a href="#练习3-32" class="headerlink" title="练习3.32"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_32.cpp">练习3.32</a></h2><blockquote>
<p>将上一题刚刚创建的数组拷贝给另外一个数组。利用vector重写程序，实现类似的功能。</p>
</blockquote>
<h2 id="练习3-33"><a href="#练习3-33" class="headerlink" title="练习3.33"></a>练习3.33</h2><blockquote>
<p>对于104页的程序来说，如果不初始化scores将会发生什么？</p>
</blockquote>
<p>数组中所有元素的值将会未定义（有可能不是0，会有脏数据存在）。</p>
<h2 id="练习3-34"><a href="#练习3-34" class="headerlink" title="练习3.34"></a>练习3.34</h2><blockquote>
<p>假定p1和p2都指向同一个数组中的元素，则下面程序的功能是什么？什么情况下该程序是非法的？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">p1 += p2 - p1;</span><br></pre></td></tr></table></figure>

<p>将p1移动到p2的位置，即指向同一个地址。只要p1、p2值合法，该程序任何情况下都合法。</p>
<h2 id="练习3-35"><a href="#练习3-35" class="headerlink" title="练习3.35"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_35.cpp">练习3.35</a></h2><blockquote>
<p>编写一段程序，利用指针将数组中的元素置为0。</p>
</blockquote>
<p><strong>数组与指针的总结：</strong></p>
<ul>
<li>数组名可以当作是首指针（编译器会自动将其转换成一个指向数组首元素的指针（函数传参、赋值给指针、表达式），但本质上数组名自身不是指针）</li>
<li>类似迭代器，也可以获取数组的首尾指针（假设数组int array[10]&#x3D;{xxx}。<strong>类似尾迭代器，注意尾指针不指向具体元素，不能对其进行解引用或递增操作</strong>）<ul>
<li><code>int *begin = array; int *end = &amp;array[10];</code></li>
<li><code>int *begin = begin(array); int *end = end(array);</code> <strong>begin和end函数定义在iterator头文件（数组不是类类型，没有类似vector迭代器那种成员函数）</strong></li>
</ul>
</li>
<li>两个指针相减的结果类型是ptrdiff_t，是一种带符号类型，和size_t一样也定义在cstddef头文件。</li>
<li><strong>只要指针指向数组元素（或者尾元素的下一位置，即尾指针），都可以执行下标运算（当然，需要保证运算后的指针也是指向同一数组或者尾指针）。像数组这种C++语言内置的下标运算允许处理负值，但像标准库类型string和vector则限定下标是无符号类型。</strong></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> *p = &amp;array[<span class="number">2</span>]; <span class="comment">// p指向索引为2的元素</span></span><br><span class="line"><span class="type">int</span> j = p[<span class="number">1</span>];       <span class="comment">// p[1]等价于*(p+1)，即array[3]</span></span><br><span class="line"><span class="type">int</span> k = p[<span class="number">-2</span>];      <span class="comment">// 即array[0]</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-36"><a href="#练习3-36" class="headerlink" title="练习3.36"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_36.cpp">练习3.36</a></h2><blockquote>
<p>编写一段程序，比较两个数组是否相等。再写一段程序，比较两个vector对象是否相等。</p>
</blockquote>
<h2 id="练习3-37"><a href="#练习3-37" class="headerlink" title="练习3.37"></a>练习3.37</h2><blockquote>
<p>下面的程序是何含义，程序的输出结果是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> ca[] = &#123; <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span> &#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *cp = ca;</span><br><span class="line"><span class="keyword">while</span> (*cp) &#123;</span><br><span class="line">    cout &lt;&lt; *cp &lt;&lt; endl;</span><br><span class="line">    ++cp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>会将ca字符数组中的元素打印出来，但是因为没有空字符&#39;\0&#39;的存在，循环不会终止，会打印出来很多无意义脏数据。</p>
<h2 id="练习3-38"><a href="#练习3-38" class="headerlink" title="练习3.38"></a>练习3.38</h2><blockquote>
<p>在本节中我们提到，将两个指针相加不但是非法的，而且也没什么意义。请问为什么两个指针相加没什么意义？</p>
</blockquote>
<p><strong>指针本质就是地址</strong>，将两个指针相减可以表示两个指针(在同一数组中)的距离，将指针加上一个整数也可以表示移动这个指针到某一位置。<strong>但是两个指针相加后的地址并没有逻辑上的意义。</strong></p>
<p><a href="https://stackoverflow.com/questions/2935038/why-cant-i-add-pointers">参考资料</a></p>
<h2 id="练习3-39"><a href="#练习3-39" class="headerlink" title="练习3.39"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_39.cpp">练习3.39</a></h2><blockquote>
<p>编写一段程序，比较两个string对象。再编写一段程序，比较两个C风格字符串的内容。</p>
</blockquote>
<p><strong>C标准库string函数（头文件cstring）</strong></p>
<ul>
<li>strlen(p) 返回p的长度，不计算空字符</li>
<li>strcmp(p1,p2) 比较p1和p2，<code>p1==p2</code>则返回0；<code>p1&gt;p2</code>则返回正值；<code>p1&lt;p2</code>则返回负值</li>
<li>strcat(p1,p2) p2附加到p1后，再返回p1</li>
<li>strcpy(p1,p2) p2拷贝给p1，再返回p1</li>
</ul>
<p><strong>注意这些函数的指针必须指向以空字符作为结束的数组</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> ca[] = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>&#125; <span class="comment">// 没有以空字符结束。</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">strlen</span>(ca) &lt;&lt; endl; <span class="comment">// 严重错误，没有空字符，该函数有可能在内存中不断向前寻找，直至找到空字符。</span></span><br><span class="line"><span class="comment">// 修正方式：用字符串字面值给ca赋初值&quot;ab&quot;。</span></span><br></pre></td></tr></table></figure>

<h2 id="练习3-40"><a href="#练习3-40" class="headerlink" title="练习3.40"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_40.cpp">练习3.40</a></h2><blockquote>
<p>编写一段程序，定义两个字符数组并用字符串字面值初始化它们；接着再定义一个字符数组存放前面两个数组连接后的结果。使用strcpy和strcat把前两个数组的内容拷贝到第三个数组当中。</p>
</blockquote>
<h2 id="练习3-41"><a href="#练习3-41" class="headerlink" title="练习3.41"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_41.cpp">练习3.41</a></h2><blockquote>
<p>编写一段程序，用整型数组初始化一个vector对象。</p>
</blockquote>
<h2 id="练习3-42"><a href="#练习3-42" class="headerlink" title="练习3.42"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_42.cpp">练习3.42</a></h2><blockquote>
<p>编写一段程序，将含有整数元素的vector对象拷贝给一个整型数组。</p>
</blockquote>
<p><strong>使用数组初始化vector对象（不能用数组初始化数组；不能用vector对象初始化数组）</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> array[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(begin(array), end(array))</span></span>; <span class="comment">// 使用首尾指针</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">subv</span><span class="params">(array + <span class="number">1</span>, array + <span class="number">3</span>)</span></span>; <span class="comment">// 数组中的部分也可用来初始化</span></span><br></pre></td></tr></table></figure>

<p><strong>混用string对象和C风格字符串</strong></p>
<ul>
<li>允许使用以空字符结束的字符数组来初始化或赋值给string对象</li>
<li>string对象的加法运算允许以空字符结束的字符数组作为其中一个运算对象（加法运算符「+」两侧至少有一个string对象）</li>
<li>string复合赋值运算中允许以空字符结束的字符数组作为右侧运算对象</li>
<li>string对象不能直接初始化指向字符的指针，需要使用成员函数<code>c_str</code>返回指针，如<code>const char *str = s.c_str();</code></li>
</ul>
<h2 id="练习3-43"><a href="#练习3-43" class="headerlink" title="练习3.43"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_43.cpp">练习3.43</a></h2><blockquote>
<p>编写3个不同版本的程序，令其均能输出ia的元素。版本1使用范围for语句管理迭代过程；版本2和版本3都使用普通for语句，其中版本2要求使用下标运算符，版本3要求使用指针。此外，在所有3个版本的程序中都要直接写出数据类型，而不能使用类型别名、auto关键字和decltype关键字。</p>
</blockquote>
<h2 id="练习3-44"><a href="#练习3-44" class="headerlink" title="练习3.44"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_44.cpp">练习3.44</a></h2><blockquote>
<p>改写上一个练习中的程序，使用类型别名来代替循环控制变量的类型。</p>
</blockquote>
<h2 id="练习3-45"><a href="#练习3-45" class="headerlink" title="练习3.45"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap3/3_45.cpp">练习3.45</a></h2><blockquote>
<p>再一次改写程序，这次使用auto关键字。</p>
</blockquote>
<p><strong>多维数组和指针的总结</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 多维数组本质上是数组的数组，初始化时内层嵌套的花括号也可去掉</span></span><br><span class="line"><span class="type">int</span> ia[<span class="number">2</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">                &#123;<span class="number">1</span>, <span class="number">3</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用范围for语句处理多维数组时，要将控制变量声明为引用类型（为避免编译器将其转换成指针）</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;row : ia)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;col : row)</span><br><span class="line">        ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义指向多维数组的指针注意写法（手动写较易写错，建议使用auto或者decltype）</span></span><br><span class="line"><span class="type">int</span> *ip[<span class="number">2</span>];          <span class="comment">// 整型指针的数组</span></span><br><span class="line"><span class="built_in">int</span>(*ip)[<span class="number">2</span>];         <span class="comment">// 指针，指向含有2个整数的数组</span></span><br><span class="line"><span class="built_in">int</span>(&amp;ip)[<span class="number">2</span>] = ia[<span class="number">0</span>]; <span class="comment">// 引用，指向含有2个整数的数组</span></span><br><span class="line"><span class="comment">// 类型别名简化写法，下面两行等同于int(*ip)[2];</span></span><br><span class="line"><span class="keyword">using</span> int_array = <span class="type">int</span>[<span class="number">2</span>];</span><br><span class="line">int_array *ip;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第三章</tag>
        <tag>字符串</tag>
        <tag>向量</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第五章「语句」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap5/</url>
    <content><![CDATA[<h1 id="第五章：语句"><a href="#第五章：语句" class="headerlink" title="第五章：语句"></a>第五章：语句</h1><h2 id="练习5-1"><a href="#练习5-1" class="headerlink" title="练习5.1"></a>练习5.1</h2><blockquote>
<p>什么是空语句？什么时候会用到空语句？</p>
</blockquote>
<p>只含有一个单独的分号的语句是空语句。如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">;</span><br></pre></td></tr></table></figure>
<p>如果在程序的某个地方，语法上需要一条语句但是逻辑上不需要，此时应该使用空语句。（建议做好注释说明空语句作用）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//重复读入数据直至到达文件末尾或某次输入的值等于sought</span></span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; s &amp;&amp; s != sought)</span><br><span class="line">    ;</span><br></pre></td></tr></table></figure>

<h2 id="练习5-2"><a href="#练习5-2" class="headerlink" title="练习5.2"></a>练习5.2</h2><blockquote>
<p>什么是块？什么时候会用到块？</p>
</blockquote>
<p>用花括号括起来的语句和声明的序列就是块。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果在程序的某个地方，逻辑上需要多条语句，而语法上只能容纳一条语句，此时应该使用块。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (val &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">    sum += val;</span><br><span class="line">    ++val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习5-3"><a href="#练习5-3" class="headerlink" title="练习5.3"></a>练习5.3</h2><blockquote>
<p>使用逗号运算符重写（参见4.10节，第140页）1.4.1节的 while 循环，使它不再需要块，观察改写之后的代码可读性提高了还是降低了。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (val &lt;= <span class="number">10</span>)</span><br><span class="line">    sum += val, ++val;</span><br></pre></td></tr></table></figure>
<p>代码的可读性降低了。</p>
<h2 id="练习5-4"><a href="#练习5-4" class="headerlink" title="练习5.4"></a>练习5.4</h2><blockquote>
<p>说明下列例子的含义，如果存在问题，试着修改它。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">while</span> (string::iterator iter != s.<span class="built_in">end</span>()) &#123; <span class="comment">/* . . . */</span> &#125;</span><br><span class="line">(b) <span class="keyword">while</span> (<span class="type">bool</span> status = <span class="built_in">find</span>(word)) &#123; <span class="comment">/* . . . */</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> (!status) &#123; <span class="comment">/* . . . */</span> &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 这个循环试图用迭代器遍历string，但是变量的定义应该放在循环的外面，目前每次循环都会重新定义一个变量，明显是错误的。</li>
<li>(b) 这个循环的 while 和 if 是两个独立的语句，if 语句中无法访问 status 变量，正确的做法是应该将 if 语句包含在 while 里面，</li>
</ul>
<h2 id="练习5-5"><a href="#练习5-5" class="headerlink" title="练习5.5"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_5.cpp">练习5.5</a></h2><blockquote>
<p>写一段自己的程序，使用if else 语句实现把数字转换为字母成绩的要求。</p>
</blockquote>
<h2 id="练习5-6"><a href="#练习5-6" class="headerlink" title="练习5.6"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_6.cpp">练习5.6</a></h2><blockquote>
<p>改写上一题的程序，使用条件运算符（参见4.7节，第134页）代替if else语句。</p>
</blockquote>
<span id="more"></span>

<h2 id="练习5-7"><a href="#练习5-7" class="headerlink" title="练习5.7"></a>练习5.7</h2><blockquote>
<p>改写下列代码段中的错误。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">if</span> (ival1 != ival2)</span><br><span class="line">        ival1 = ival2</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ival1 = ival2 = <span class="number">0</span>;</span><br><span class="line">(b) <span class="keyword">if</span> (ival &lt; minval)</span><br><span class="line">        minval = ival;</span><br><span class="line">        occurs = <span class="number">1</span>;</span><br><span class="line">(c) <span class="keyword">if</span> (<span class="type">int</span> ival = <span class="built_in">get_value</span>())</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;ival = &quot;</span> &lt;&lt; ival &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (!ival)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;ival = 0\n&quot;</span>;</span><br><span class="line">(d) <span class="keyword">if</span> (ival = <span class="number">0</span>)</span><br><span class="line">        ival = <span class="built_in">get_value</span>();</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) <code>ival1 = ival2</code> 后面少了分号。</li>
<li>(b) 应该用花括号括起来。</li>
<li>(c) <code>if (!ival)</code> 应该改为 <code>else</code>。</li>
<li>(d) <code>if (ival = 0)</code> 应该改为 <code>if (ival == 0)</code>。</li>
</ul>
<h2 id="练习5-8"><a href="#练习5-8" class="headerlink" title="练习5.8"></a>练习5.8</h2><blockquote>
<p>什么是“悬垂else”？C++语言是如何处理else子句的？</p>
</blockquote>
<p>C++语言规定else与它最近的尚未匹配的if匹配。</p>
<h2 id="练习5-9"><a href="#练习5-9" class="headerlink" title="练习5.9"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_9.cpp">练习5.9</a></h2><blockquote>
<p>编写一段程序，使用一系列if语句统计从cin读入的文本中有多少元音字母。</p>
</blockquote>
<h2 id="练习5-10"><a href="#练习5-10" class="headerlink" title="练习5.10"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_10.cpp">练习5.10</a></h2><blockquote>
<p>我们之前实现的统计元音字母的程序存在一个问题：如果元音字母以大写形式出现，不会被统计在内。编写一段程序，既统计元音字母的小写形式，也统计大写形式，也就是说，新程序遇到&#39;a&#39;和&#39;A&#39;都应该递增 aCnt 的值，以此类推。</p>
</blockquote>
<h2 id="练习5-11"><a href="#练习5-11" class="headerlink" title="练习5.11"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_11.cpp">练习5.11</a></h2><blockquote>
<p>修改统计元音字母的程序，使其也能统计空格、制表符、和换行符的数量。</p>
</blockquote>
<h2 id="练习5-12"><a href="#练习5-12" class="headerlink" title="练习5.12"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_12.cpp">练习5.12</a></h2><blockquote>
<p>修改统计元音字母的程序，使其能统计以下含有两个字符的字符序列的数量：ff、fl和fi。</p>
</blockquote>
<h2 id="练习5-13"><a href="#练习5-13" class="headerlink" title="练习5.13"></a>练习5.13</h2><blockquote>
<p>下面显示的每个程序都含有一个常见的编程错误，指出错误在哪里，然后修改它们。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="type">unsigned</span> aCnt = <span class="number">0</span>, eCnt = <span class="number">0</span>, iouCnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="built_in">next_text</span>();</span><br><span class="line">    <span class="keyword">switch</span> (ch) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>: aCnt++;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>: eCnt++;</span><br><span class="line">        <span class="keyword">default</span>: iouCnt++;</span><br><span class="line">    &#125;</span><br><span class="line">(b) <span class="type">unsigned</span> index = <span class="built_in">some_value</span>();</span><br><span class="line">    <span class="keyword">switch</span> (index) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="type">int</span> ix = <span class="built_in">get_value</span>();</span><br><span class="line">            ivec[ ix ] = index;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            ix = ivec.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">            ivec[ ix ] = index;</span><br><span class="line">    &#125;</span><br><span class="line">(c) <span class="type">unsigned</span> evenCnt = <span class="number">0</span>, oddCnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> digit = <span class="built_in">get_num</span>() % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">switch</span> (digit) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>:</span><br><span class="line">            oddcnt++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>:</span><br><span class="line">            evencnt++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">(d) <span class="type">unsigned</span> ival=<span class="number">512</span>, jval=<span class="number">1024</span>, kval=<span class="number">4096</span>;</span><br><span class="line">    <span class="type">unsigned</span> bufsize;</span><br><span class="line">    <span class="type">unsigned</span> swt = <span class="built_in">get_bufCnt</span>();</span><br><span class="line">    <span class="keyword">switch</span>(swt) &#123;</span><br><span class="line">        <span class="keyword">case</span> ival:</span><br><span class="line">            bufsize = ival * <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> jval:</span><br><span class="line">            bufsize = jval * <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> kval:</span><br><span class="line">            bufsize = kval * <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 少了 break语句。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> aCnt = <span class="number">0</span>, eCnt = <span class="number">0</span>, iouCnt = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="built_in">next_text</span>();</span><br><span class="line"><span class="keyword">switch</span> (ch) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>: aCnt++; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>: eCnt++; <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: iouCnt++; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>switch内部的控制流：如果某个case标签匹配成功，将从该标签开始往后顺序执行所有case分支，除非程序显式地中断了这一过程，比如添加break语句，否则直到switch的结尾处才会停下来。</p>
<ul>
<li>(b) 在 default 分支当中，ix 未定义。应该在外部定义ix。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> index = <span class="built_in">some_value</span>();</span><br><span class="line"><span class="type">int</span> ix;</span><br><span class="line"><span class="keyword">switch</span> (index) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        ix = <span class="built_in">get_value</span>();</span><br><span class="line">        ivec[ ix ] = index;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        ix = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(ivec.<span class="built_in">size</span>())<span class="number">-1</span>;</span><br><span class="line">        ivec[ ix ] = index;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>(c) case 后面应该用冒号而不是逗号。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> evenCnt = <span class="number">0</span>, oddCnt = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> digit = <span class="built_in">get_num</span>() % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">switch</span> (digit) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">case</span> <span class="number">3</span>: <span class="keyword">case</span> <span class="number">5</span>: <span class="keyword">case</span> <span class="number">7</span>: <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        oddcnt++;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: <span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">case</span> <span class="number">6</span>: <span class="keyword">case</span> <span class="number">8</span>: <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        evencnt++;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>(d) case 标签必须是整型常量表达式。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">unsigned</span> ival=<span class="number">512</span>, jval=<span class="number">1024</span>, kval=<span class="number">4096</span>;</span><br><span class="line"><span class="type">unsigned</span> bufsize;</span><br><span class="line"><span class="type">unsigned</span> swt = <span class="built_in">get_bufCnt</span>();</span><br><span class="line"><span class="keyword">switch</span>(swt) &#123;</span><br><span class="line">    <span class="keyword">case</span> ival:</span><br><span class="line">        bufsize = ival * <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> jval:</span><br><span class="line">        bufsize = jval * <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> kval:</span><br><span class="line">        bufsize = kval * <span class="built_in">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习5-14"><a href="#练习5-14" class="headerlink" title="练习5.14"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_14.cpp">练习5.14</a></h2><blockquote>
<p>编写一段程序，从标准输入中读取若干string对象并查找连续重复出现的单词，所谓连续重复出现的意思是：一个单词后面紧跟着这个单词本身。要求记录连续重复出现的最大次数以及对应的单词。如果这样的单词存在，输出重复出现的最大次数；如果不存在，输出一条信息说明任何单词都没有连续出现过。例如：如果输入是：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">how now now now brown cow cow</span><br></pre></td></tr></table></figure>
<blockquote>
<p>那么输出应该表明单词now连续出现了3次。</p>
</blockquote>
<p>本题编程中使用了<code>std::pair</code>，<code>std::pair</code>是类模板，提供在一个单元存储两个相异类型对象的途径。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">T1</span>,</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">T2</span></span><br><span class="line">&gt; <span class="keyword">struct</span> <span class="title class_">pair</span>;</span><br></pre></td></tr></table></figure>
<p>总共有两个成员对象：first和second。</p>
<p>示例：<code>std::pair&lt;std::string, float&gt;(&quot;aa&quot;, 1.1);</code></p>
<h2 id="练习5-15"><a href="#练习5-15" class="headerlink" title="练习5.15"></a>练习5.15</h2><blockquote>
<p>说明下列循环的含义并改正其中的错误。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">for</span> (<span class="type">int</span> ix = <span class="number">0</span>; ix != sz; ++ix) &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line">    <span class="keyword">if</span> (ix != sz)</span><br><span class="line">        <span class="comment">// . . .</span></span><br><span class="line">(b) <span class="type">int</span> ix;</span><br><span class="line">    <span class="keyword">for</span> (ix != sz; ++ix) &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line">(c) <span class="keyword">for</span> (<span class="type">int</span> ix = <span class="number">0</span>; ix != sz; ++ix, ++sz) &#123; <span class="comment">/*...*/</span> &#125;</span><br></pre></td></tr></table></figure>
<p>修正如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="type">int</span> ix;</span><br><span class="line">    <span class="keyword">for</span> (ix = <span class="number">0</span>; ix != sz; ++ix)  &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line">    <span class="keyword">if</span> (ix != sz)</span><br><span class="line">    <span class="comment">// . . .</span></span><br><span class="line">(b) <span class="type">int</span> ix;</span><br><span class="line">    <span class="keyword">for</span> (; ix != sz; ++ix) &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line">(c) <span class="keyword">for</span> (<span class="type">int</span> ix = <span class="number">0</span>; ix != sz; ++ix) &#123; <span class="comment">/*...*/</span> &#125; <span class="comment">//如果首次判断ix不等于sz，执行++sz将导致死循环。</span></span><br></pre></td></tr></table></figure>

<h2 id="练习5-16"><a href="#练习5-16" class="headerlink" title="练习5.16"></a>练习5.16</h2><blockquote>
<p>while 循环特别适用于那种条件不变、反复执行操作的情况，例如，当未达到文件末尾时不断读取下一个值。for 循环则更像是在按步骤迭代，它的索引值在某个范围内依次变化。根据每种循环的习惯各自编写一段程序，然后分别用另一种循环改写。如果只能使用一种循环，你倾向于使用哪种呢？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// while循环读取输入</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">while</span> ( cin &gt;&gt; i )</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for循环读取输入</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; cin &gt;&gt; i;)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// for循环遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i != size; ++i)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// while循环遍历</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i != size)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    ++i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果只能用一种循环，我会更倾向使用while循环，因为while的代码可读性更强。</p>
<h2 id="练习5-17"><a href="#练习5-17" class="headerlink" title="练习5.17"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_17.cpp">练习5.17</a></h2><blockquote>
<p>假设有两个包含整数的vector对象，编写一段程序，检验其中一个vector对象是否是另一个的前缀。为了实现这一目标，对于两个不等长的vector对象，只需挑出长度较短的那个，把它的所有元素和另一个vector对象比较即可。例如，如果两个vector对象的元素分别是0、1、1、2 和 0、1、1、2、3、5、8，则程序的返回结果为真。</p>
</blockquote>
<h2 id="练习5-18"><a href="#练习5-18" class="headerlink" title="练习5.18"></a>练习5.18</h2><blockquote>
<p>说明下列循环的含义并改正其中的错误。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">do</span></span><br><span class="line">        <span class="type">int</span> v1, v2;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Please enter two numbers to sum:&quot;</span> ;</span><br><span class="line">        <span class="keyword">if</span> (cin &gt;&gt; v1 &gt;&gt; v2)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Sum is: &quot;</span> &lt;&lt; v1 + v2 &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">while</span> (cin);</span><br><span class="line">(b) <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">// . . .</span></span><br><span class="line">    &#125; <span class="keyword">while</span> (ival = <span class="built_in">get_response</span>()); <span class="comment">// 应该将ival 定义在循环外</span></span><br><span class="line">(c) <span class="keyword">do</span> &#123;</span><br><span class="line">        ival = <span class="built_in">get_response</span>();</span><br><span class="line">    &#125; <span class="keyword">while</span> (ival); <span class="comment">// 应该将ival 定义在循环外</span></span><br></pre></td></tr></table></figure>
<p>修正如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">do</span> &#123; <span class="comment">// 应该添加花括号</span></span><br><span class="line">        <span class="type">int</span> v1, v2;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Please enter two numbers to sum:&quot;</span> ;</span><br><span class="line">        <span class="keyword">if</span> (cin &gt;&gt; v1 &gt;&gt; v2)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Sum is: &quot;</span> &lt;&lt; v1 + v2 &lt;&lt; endl;</span><br><span class="line">    &#125;<span class="keyword">while</span> (cin);</span><br><span class="line">(b) <span class="type">int</span> ival;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">// . . .</span></span><br><span class="line">    &#125; <span class="keyword">while</span> (ival = <span class="built_in">get_response</span>()); <span class="comment">// 应该将ival 定义在循环外</span></span><br><span class="line">(c) <span class="type">int</span> ival;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        ival = <span class="built_in">get_response</span>();</span><br><span class="line">    &#125; <span class="keyword">while</span> (ival); <span class="comment">// 应该将ival 定义在循环外</span></span><br></pre></td></tr></table></figure>

<h2 id="练习5-19"><a href="#练习5-19" class="headerlink" title="练习5.19"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_19.cpp">练习5.19</a></h2><blockquote>
<p>编写一段程序，使用do while 循环重复地执行下述任务：首先提示用户输入两个string对象，然后挑出较短的那个并输出它。</p>
</blockquote>
<h2 id="练习5-20"><a href="#练习5-20" class="headerlink" title="练习5.20"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_20.cpp">练习5.20</a></h2><blockquote>
<p>编写一段程序，从标准输入中读取string对象的序列直到连续出现两个相同的单词或者所有的单词都读完为止。使用while循环一次读取一个单词，当一个单词连续出现两次时使用break语句终止循环。输出连续重复出现的单词，或者输出一个消息说明没有任何单词是连续重复出现的。</p>
</blockquote>
<h2 id="练习5-21"><a href="#练习5-21" class="headerlink" title="练习5.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_21.cpp">练习5.21</a></h2><blockquote>
<p>修改5.5.1节（第171页）练习题的程序，使其找到的重复单词必须以大写字母开头。</p>
</blockquote>
<h2 id="练习5-22"><a href="#练习5-22" class="headerlink" title="练习5.22"></a>练习5.22</h2><blockquote>
<p>本节的最后一个例子跳回到 begin，其实使用循环能更好的完成该任务，重写这段代码，注意不再使用goto语句。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 向后跳过一个带初始化的变量定义是合法的</span></span><br><span class="line">begin:</span><br><span class="line">    <span class="type">int</span> sz = <span class="built_in">get_size</span>();</span><br><span class="line">    <span class="keyword">if</span> (sz &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">goto</span> begin;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>用 <code>for</code> 循环修改效果如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> sz = <span class="built_in">get_size</span>(); sz &lt;=<span class="number">0</span>; sz = <span class="built_in">get_size</span>())</span><br><span class="line">    ;</span><br></pre></td></tr></table></figure>

<h2 id="练习5-23"><a href="#练习5-23" class="headerlink" title="练习5.23"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_23.cpp">练习5.23</a></h2><blockquote>
<p>编写一段程序，从标准输入读取两个整数，输出第一个数除以第二个数的结果。</p>
</blockquote>
<h2 id="练习5-24"><a href="#练习5-24" class="headerlink" title="练习5.24"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_24.cpp">练习5.24</a></h2><blockquote>
<p>修改你的程序，使得当第二个数是0时抛出异常。先不要设定catch子句，运行程序并真的为除数输入0，看看会发生什么？</p>
</blockquote>
<h2 id="练习5-25"><a href="#练习5-25" class="headerlink" title="练习5.25"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap5/5_25.cpp">练习5.25</a></h2><blockquote>
<p>修改上一题的程序，使用try语句块去捕获异常。catch子句应该为用户输出一条提示信息，询问其是否输入新数并重新执行try语句块的内容。</p>
</blockquote>
<p>异常处理（try-throw-catch）：</p>
<ul>
<li>将错误处理代码和正常代码分离开：传统的错误处理代码中都会使用一系列的 if-else 条件判断来处理错误。这些条件判断代码和错误处理代码会混在正常的程序流中，降低代码的可读性和可维护性。使用 try&#x2F;catch 块则能够将错误处理与正常流程分开。</li>
<li>个人理解：更像是一个高级goto语法。</li>
</ul>
<p>大致的使用形式：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 被保护的代码</span></span><br><span class="line">    <span class="keyword">throw</span>  <span class="comment">// 抛出异常</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">catch</span> ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 异常处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第五章</tag>
        <tag>语句</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第四章「表达式」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap4/</url>
    <content><![CDATA[<h1 id="第四章：表达式"><a href="#第四章：表达式" class="headerlink" title="第四章：表达式"></a>第四章：表达式</h1><h2 id="练习4-1"><a href="#练习4-1" class="headerlink" title="练习4.1"></a>练习4.1</h2><blockquote>
<p>表达式 5 + 10 * 20 &#x2F; 2 的求值结果是多少？</p>
</blockquote>
<p>105</p>
<h2 id="练习4-2"><a href="#练习4-2" class="headerlink" title="练习4.2"></a>练习4.2</h2><blockquote>
<p>根据4.12节中的表，在下述表达式的合理位置添加括号，使得添加括号后运算对象的组合顺序与添加括号前一致。</p>
</blockquote>
<ul>
<li>(a) *vec.begin()</li>
<li>(b) *vec.begin() + 1</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*(vec.begin())</span><br><span class="line">(*(vec.begin())) + 1</span><br></pre></td></tr></table></figure>

<h2 id="练习4-3"><a href="#练习4-3" class="headerlink" title="练习4.3"></a>练习4.3</h2><blockquote>
<p>C++语言没有明确规定大多数二元运算符的求值顺序，给编译器优化留下了余地。这种策略实际上是在代码生成效率和程序潜在缺陷之间进行了权衡，你认为这可以接受吗？请说出你的理由。</p>
</blockquote>
<p>可以接受。C++的设计思想是尽可能地“相信”程序员，将效率最大化。然而这种思想却有着潜在的危害，就是无法控制程序员自身引发的错误。因此 Java 的诞生也是必然，Java的思想就是尽可能地“不相信”程序员。</p>
<h2 id="练习4-4"><a href="#练习4-4" class="headerlink" title="练习4.4"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap4/4_4.cpp">练习4.4</a></h2><blockquote>
<p>在下面的表达式中添加括号，说明其求值过程及最终结果。编写程序编译该（不加括号的）表达式并输出结果验证之前的推断。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">12</span> / <span class="number">3</span> * <span class="number">4</span> + <span class="number">5</span> * <span class="number">15</span> + <span class="number">24</span> % <span class="number">4</span> / <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>((12&#x2F;3)*4) + (5*15) + ((24%4)&#x2F;2)</p>
<p>实际输出结果：91。</p>
<h2 id="练习4-5"><a href="#练习4-5" class="headerlink" title="练习4.5"></a>练习4.5</h2><blockquote>
<p>写出下列表达式的求值结果。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">-30</span> * <span class="number">3</span> + <span class="number">21</span> / <span class="number">5</span>  <span class="comment">// -90+4 = -86</span></span><br><span class="line"><span class="number">-30</span> + <span class="number">3</span> * <span class="number">21</span> / <span class="number">5</span>  <span class="comment">// -30+63/5 = -30+12 = -18</span></span><br><span class="line"><span class="number">30</span> / <span class="number">3</span> * <span class="number">21</span> % <span class="number">5</span>   <span class="comment">// 10*21%5 = 210%5 = 0</span></span><br><span class="line"><span class="number">-30</span> / <span class="number">3</span> * <span class="number">21</span> % <span class="number">4</span>  <span class="comment">// -10*21%4 = -210%4 = -2</span></span><br></pre></td></tr></table></figure>

<h2 id="练习4-6"><a href="#练习4-6" class="headerlink" title="练习4.6"></a>练习4.6</h2><blockquote>
<p>写出一条表达式用于确定一个整数是奇数还是偶数。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) <span class="comment">/* ... */</span></span><br></pre></td></tr></table></figure>

<h2 id="练习4-7"><a href="#练习4-7" class="headerlink" title="练习4.7"></a>练习4.7</h2><blockquote>
<p>溢出是何含义？写出三条将导致溢出的表达式。</p>
</blockquote>
<p>溢出含义：当计算的结果超出该类型所能表示的范围时就会产生溢出。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">short</span> svalue = <span class="number">32767</span>; ++svalue; <span class="comment">// -32768</span></span><br><span class="line"><span class="type">unsigned</span> uivalue = <span class="number">0</span>; --uivalue;  <span class="comment">// 4294967295</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">short</span> usvalue = <span class="number">65535</span>; ++usvalue;  <span class="comment">// 0</span></span><br></pre></td></tr></table></figure>

<h2 id="练习4-8"><a href="#练习4-8" class="headerlink" title="练习4.8"></a>练习4.8</h2><blockquote>
<p>说明在逻辑与、逻辑或及相等性运算符中运算对象的求值顺序。</p>
</blockquote>
<ul>
<li>逻辑与运算符和逻辑或运算符都是先求左侧运算对象的值再求右侧运算对象的值，当且仅当左侧运算对象无法确定表达式的结果时才会计算右侧运算对象的值。这种策略称为<strong>短路求值</strong>。</li>
<li>相等性运算符未定义求值顺序。</li>
</ul>
<span id="more"></span>

<h2 id="练习4-9"><a href="#练习4-9" class="headerlink" title="练习4.9"></a>练习4.9</h2><blockquote>
<p>解释在下面的if语句中条件部分的判断过程。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *cp = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (cp &amp;&amp; *cp)</span><br></pre></td></tr></table></figure>

<p>首先判断 <code>cp</code> ，<code>cp</code> 不是一个空指针，因此 <code>cp</code> 为真。然后判断 <code>*cp</code>，<code>*cp</code> 的值是字符 &#39;H&#39;，非0。因此最后的结果为真。</p>
<h2 id="练习4-10"><a href="#练习4-10" class="headerlink" title="练习4.10"></a>练习4.10</h2><blockquote>
<p>为while 循环写一个条件，使其从标准输入中读取整数，遇到 42 时停止。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; i &amp;&amp; i != <span class="number">42</span>)</span><br></pre></td></tr></table></figure>

<h2 id="练习4-11"><a href="#练习4-11" class="headerlink" title="练习4.11"></a>练习4.11</h2><blockquote>
<p>书写一条表达式用于测试4个值a、b、c、d的关系，确保a大于b、b大于c、c大于d。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">a&gt;b &amp;&amp; b&gt;c &amp;&amp; c&gt;d</span><br></pre></td></tr></table></figure>

<h2 id="练习4-12"><a href="#练习4-12" class="headerlink" title="练习4.12"></a>练习4.12</h2><blockquote>
<p>假设i、j 和k 是三个整数，说明表达式 i !&#x3D; j &lt; k 的含义。</p>
</blockquote>
<p>这个表达式等于 <code>i != (j &lt; k)</code>。首先得到 j &lt; k 的结果为 true 或 false，转换为整数值是 1 和 0，然后判断 i 不等于 1 和 0 ，最终的结果为 bool 值。</p>
<h2 id="练习4-13"><a href="#练习4-13" class="headerlink" title="练习4.13"></a>练习4.13</h2><blockquote>
<p>在下述语句中，当赋值完成后 i 和 d 的值分别是多少？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i;   <span class="type">double</span> d;</span><br><span class="line">d = i = <span class="number">3.5</span>; <span class="comment">// i = 3, d = 3.0</span></span><br><span class="line">i = d = <span class="number">3.5</span>; <span class="comment">// d = 3.5, i = 3</span></span><br></pre></td></tr></table></figure>

<ul>
<li>赋值运算符的左侧运算对象必须是一个可修改的左值，赋值运算的结果是左侧运算对象。</li>
<li>若左右两个运算对象类型不同，则右侧运算对象将转换成左侧运算对象的类型。</li>
<li>赋值运算符满足右结合律，因此可多重赋值，例如<code>s1=s2=&quot;Hello&quot;</code>。</li>
<li>赋值运算符优先级一般较低。</li>
<li>复合赋值运算符等价于：<code>a=a op b</code>，例如<code>a+=1等价于a=a+1</code>。</li>
</ul>
<h3 id="左值和右值"><a href="#左值和右值" class="headerlink" title="左值和右值"></a>左值和右值</h3><p>左值和右值的概念是从C语言继承过来的。</p>
<p>在C语言中，左值可以位于赋值语句的左侧，右值则不能。</p>
<p>在C++语言中，区别则复杂一些。当一个对象被用作右值的时候，用的是对象的值（内容）；当对象被用作左值的时候，用的是对象的身份（在内存中的位置）。</p>
<h2 id="练习4-14"><a href="#练习4-14" class="headerlink" title="练习4.14"></a>练习4.14</h2><blockquote>
<p>执行下述 if 语句后将发生什么情况？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">42</span> = i)   <span class="comment">// 编译错误。赋值运算符左侧必须是一个可修改的左值。而字面值是右值。</span></span><br><span class="line"><span class="keyword">if</span> (i = <span class="number">42</span>)   <span class="comment">// true.</span></span><br></pre></td></tr></table></figure>

<h2 id="练习4-15"><a href="#练习4-15" class="headerlink" title="练习4.15"></a>练习4.15</h2><blockquote>
<p>下面的赋值是非法的，为什么？应该如何修改？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> dval; <span class="type">int</span> ival; <span class="type">int</span> *pi;</span><br><span class="line">dval = ival = pi = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p>pi 是指针，不能赋值给 int 类型，应该改为：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">dval = ival = <span class="number">0</span>;</span><br><span class="line">pi = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h2 id="练习4-16"><a href="#练习4-16" class="headerlink" title="练习4.16"></a>练习4.16</h2><blockquote>
<p>尽管下面的语句合法，但它们实际执行的行为可能和预期并不一样，为什么？应该如何修改？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (p = <span class="built_in">getPtr</span>() != <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> (i = <span class="number">1024</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>p=getPtr() != 0</code>中赋值运算符优先级低于不相等运算符，因此这个条件判断首先执行<code>getPtr() != 0</code>，返回一个bool值，之后将bool值赋值给变量p，因此条件判断可能为true或者false。</li>
<li><code>i = 1024</code>条件判断总是为 true</li>
</ul>
<p>代码修改为：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ((p=<span class="built_in">getPtr</span>()) != <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1024</span>)</span><br></pre></td></tr></table></figure>

<h2 id="练习4-17"><a href="#练习4-17" class="headerlink" title="练习4.17"></a>练习4.17</h2><blockquote>
<p>说明前置递增运算符和后置递增运算符的区别。</p>
</blockquote>
<p>这两种运算符必须作用于左值运算对象。前置递增运算符将对象本身作为左值返回，而后置递增运算符将对象原始值的副本作为右值返回。</p>
<p>P.S.如无必要，例如不需要修改前的值，那么不要使用递增递减运算符的后置版本。</p>
<h2 id="练习4-18"><a href="#练习4-18" class="headerlink" title="练习4.18"></a>练习4.18</h2><blockquote>
<p>如果132页那个输出vector对象元素的while循环使用前置递增运算符，将得到什么结果？</p>
</blockquote>
<p>将会从第二个元素开始取值，并且如果序列中没有负值时，最后对 v.end() 进行取值，结果是未定义的，因为end成员返回的迭代器是尾后迭代器，指向一个本不存在的尾后元素（尾后迭代器是标记作用，无实际含义）。</p>
<h2 id="练习4-19"><a href="#练习4-19" class="headerlink" title="练习4.19"></a>练习4.19</h2><blockquote>
<p>假设 ptr 的类型是指向 int 的指针、vec 的类型是vector<int>、ival 的类型是int，说明下面的表达式是何含义？如果有表达式不正确，为什么？应该如何修改？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) ptr != <span class="number">0</span> &amp;&amp; *ptr++</span><br><span class="line">(b) ival++ &amp;&amp; <span class="built_in">ival</span></span><br><span class="line">(c) vec[ival++] &lt;= vec[ival]</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 判断ptr不是一个空指针，并且ptr当前指向的元素的值也为真，然后将ptr指向下一个元素</li>
<li>(b) 判断(ival + 1)的值为真，并且ival的值也为真</li>
<li>(c) 表达式有误。C++标准中并没有规定 <code>&lt;=</code> 运算符两边的求值顺序，因此编译器既有可能先求左侧的值，也有可能先求右侧的值，而这两种方式导致的结果也不同，这种是未定义行为undefined behavior（详见P133）。应该改为 <code>vec[ival] &lt;= vec[ival+1]</code>。</li>
</ul>
<h2 id="练习4-20"><a href="#练习4-20" class="headerlink" title="练习4.20"></a>练习4.20</h2><blockquote>
<p>假设 iter 的类型是 vector&lt;string&gt;::iterator, 说明下面的表达式是否合法。如果合法，表达式的含义是什么？如果不合法，错在何处？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) *iter++;</span><br><span class="line">(b) (*iter)++;</span><br><span class="line">(c) *iter.<span class="built_in">empty</span>();</span><br><span class="line">(d) iter-&gt;<span class="built_in">empty</span>();</span><br><span class="line">(e) ++*iter;</span><br><span class="line">(f) iter++-&gt;<span class="built_in">empty</span>();</span><br></pre></td></tr></table></figure>

<ul>
<li>(a)合法。返回迭代器所指向的元素，然后迭代器递增。</li>
<li>(b)不合法。因为vector元素类型是 string，没有 ++ 操作。</li>
<li>(c)不合法。解引用运算符的优先级低于点运算，iter是一个迭代器，没有名为empty的成员，这里应该加括号。</li>
<li>(d)合法。判断迭代器当前的元素是否为空。</li>
<li>(e)不合法。string 类型没有 ++ 操作。</li>
<li>(f)合法。判断迭代器当前元素是否为空，然后迭代器递增。</li>
</ul>
<h3 id="成员访问运算符"><a href="#成员访问运算符" class="headerlink" title="成员访问运算符"></a>成员访问运算符</h3><p>点运算符和箭头运算符都可用于访问成员，获取类对象的一个成员的的运算符形式如下（设定cls是一个类对象，ptr是指向cls的指针或者迭代器，访问其中men成员）：</p>
<ul>
<li>点运算符：<code>cls.men</code>或者<code>(*ptr).men</code>，点运算符作用于对象类型</li>
<li>箭头运算符：<code>ptr-&gt;men</code>，箭头运算符作用于指针类型</li>
</ul>
<h2 id="练习4-21"><a href="#练习4-21" class="headerlink" title="练习4.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap4/4_21.cpp">练习4.21</a></h2><blockquote>
<p>编写一段程序，使用条件运算符从 vector<int> 中找到哪些元素的值是奇数，然后将这些奇数值翻倍。</p>
</blockquote>
<p>条件运算符（?:）允许我们把简单的 if-else 逻辑嵌入到单个表达式当中，条件运算符按照如下形式使用：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cond ? exprl : expr2</span><br></pre></td></tr></table></figure>

<p>其中 cond 是判断条件的表达式，而 expr1 和 expr2 是两个类型相同或可能转换为某个公共类型的表达式。条件运算符的执行过程是：首先求 cond 的值，如果条件为真对expr1求值并返回该值，否则对expr2求值并返回该值。</p>
<ul>
<li>当条件运算符的两个表达式都是左值或者能转换成同一种左值类型时，运算的结果是左值：否则运算的结果是右值。</li>
<li>条件运算符允许嵌套，为了保证代码的可读性，嵌套不要超过两三层。</li>
<li>条件运算符满足右结合律，即运算对象一般按照从右向左的顺序组合。</li>
</ul>
<h2 id="练习4-22"><a href="#练习4-22" class="headerlink" title="练习4.22"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap4/4_22.cpp">练习4.22</a></h2><blockquote>
<p>本节的示例程序将成绩划分为high pass、pass 和 fial 三种，扩展该程序使其进一步将 60 分到 75 分之间的成绩设定为 low pass。要求程序包含两个版本：一个版本只使用条件运算符；另一个版本使用1个或多个if语句。哪个版本的程序更容易理解呢？为什么？</p>
</blockquote>
<p>if-else版本更容易理解。当条件运算符嵌套层数变多之后，代码的可读性急剧下降。而if-else的逻辑很清晰。</p>
<h2 id="练习4-23"><a href="#练习4-23" class="headerlink" title="练习4.23"></a>练习4.23</h2><blockquote>
<p>因为运算符的优先级问题，下面这条表达式无法通过编译。根据4.12节中的表（第147页）指出它的问题在哪里？应该如何修改？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s = <span class="string">&quot;word&quot;</span>;</span><br><span class="line">string pl = s + s[s.<span class="built_in">size</span>() - <span class="number">1</span>] == <span class="string">&#x27;s&#x27;</span> ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;s&quot;</span> ;</span><br></pre></td></tr></table></figure>

<p>加法运算符的优先级高于条件运算符。因此要改为：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string pl = s + (s[s.<span class="built_in">size</span>() - <span class="number">1</span>] == <span class="string">&#x27;s&#x27;</span> ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;s&quot;</span>) ;</span><br></pre></td></tr></table></figure>

<h2 id="练习4-24"><a href="#练习4-24" class="headerlink" title="练习4.24"></a>练习4.24</h2><blockquote>
<p>本节的示例程序将成绩划分为 high pass、pass、和fail三种，它的依据是条件运算符满足右结合律。假如条件运算符满足的是左结合律，求值的过程将是怎样的？</p>
</blockquote>
<p>如果条件运算符满足的是左结合律。那么</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">finalgrade = (grade &gt; <span class="number">90</span>) ? <span class="string">&quot;high pass&quot;</span> : (grade &lt; <span class="number">60</span>) ? <span class="string">&quot;fail&quot;</span> : <span class="string">&quot;pass&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>等同于</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">finalgrade = ((grade &gt; <span class="number">90</span>) ? <span class="string">&quot;high pass&quot;</span> : (grade &lt; <span class="number">60</span>)) ? <span class="string">&quot;fail&quot;</span> : <span class="string">&quot;pass&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>假如此时 grade &gt; 90 ，第一个条件表达式的结果是 &quot;high pass&quot; ，而字符串字面值的类型是 const char *，非空所以为真。因此第二个条件表达式的结果是 &quot;fail&quot;。这样就出现了自相矛盾的逻辑。</p>
<h2 id="练习4-25"><a href="#练习4-25" class="headerlink" title="练习4.25"></a>练习4.25</h2><blockquote>
<p>如果一台机器上 int 占 32 位、char 占8位，用的是 Latin-1 字符集，其中字符&#39;q&#39; 的二进制形式是 01110001，那么表达式&#39;q&#39; &lt;&lt; 6的值是什么？</p>
</blockquote>
<p>首先将char类型提升为int 类型，等同于 00000000 00000000 00000000 01110001 &lt;&lt; 6，结果是 00000000 00000000 00011100 01000000，转换十进制为7232。</p>
<h3 id="位运算符的总结"><a href="#位运算符的总结" class="headerlink" title="位运算符的总结"></a>位运算符的总结</h3><ul>
<li>位运算符操作可能会改变符号为的值，关于符号位如何处理没有明确的规定，具体依赖于机器，因此强烈建议仅将位运算符用于处理无符号类型。</li>
<li>移位运算符满足左结合律，移位运算符又名IO运算符（重载版本，用以IO操作）</li>
</ul>
<h2 id="练习4-26"><a href="#练习4-26" class="headerlink" title="练习4.26"></a>练习4.26</h2><blockquote>
<p>在本节关于测验成绩的例子中，如果使用unsigned int 作为quiz1 的类型会发生什么情况？</p>
</blockquote>
<p>C++标准中并未以字节的单位指定int的大小，但指定了它们必须能够容纳的最小范围。<code>unsigned int</code>的最小取值范围是0到65535。但在有的机器上，unsigned int类型可能只有16位，而这结果是未定义行为。</p>
<h2 id="练习4-27"><a href="#练习4-27" class="headerlink" title="练习4.27"></a>练习4.27</h2><blockquote>
<p>下列表达式的结果是什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">long</span> ul1 = <span class="number">3</span>, ul2 = <span class="number">7</span>;</span><br><span class="line">(a) <span class="function">ul1 &amp; <span class="title">ul2</span></span></span><br><span class="line"><span class="function"><span class="params">(b)</span> ul1 | <span class="title">ul2</span></span></span><br><span class="line"><span class="function"><span class="params">(c)</span> ul1 &amp;&amp; <span class="title">ul2</span></span></span><br><span class="line"><span class="function"><span class="params">(d)</span> ul1 || ul2</span></span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 3</li>
<li>(b) 7</li>
<li>(c) true</li>
<li>(d) true</li>
</ul>
<h2 id="练习4-28"><a href="#练习4-28" class="headerlink" title="练习4.28"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap4/4_28.cpp">练习4.28</a></h2><blockquote>
<p>编写一段程序，输出每一种内置类型所占空间的大小。</p>
</blockquote>
<h2 id="练习4-29"><a href="#练习4-29" class="headerlink" title="练习4.29"></a>练习4.29</h2><blockquote>
<p>推断下面代码的输出结果并说明理由。实际运行这段程序，结果和你想象的一样吗？如不一样，为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x[<span class="number">10</span>];   <span class="type">int</span> *p = x;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(x)/<span class="built_in">sizeof</span>(*x) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(p)/<span class="built_in">sizeof</span>(*p) &lt;&lt; endl;</span><br></pre></td></tr></table></figure>

<p>第一个输出结果是 10。第二个结果是未定义。</p>
<p>参考：<a href="http://stackoverflow.com/a/2428809">Why the size of a pointer is 4bytes in C++</a></p>
<p>sizeof运算符的总结：</p>
<ul>
<li>对char或者类型为char的表达式执行sizeof运算，结果得1。</li>
<li>对引用类型执行sizeof运算得到被引用对象所占空间的大小。</li>
<li>对指针执行sizeof运算得到指针本身所占空间的大小。</li>
<li>对解引用指针执行sizeof运算得到指针指向的对象所占空间的大小，指针不需有效。在sizeof的运算对象中解引用一个无效指针仍然是一种安全的行为，因为指针实际上并没有被真正使用。sizeof不需要真的解引用指针也能知道它所指对象的类型。</li>
<li>对数组执行sizeof运算得到整个数组所占空间的大小，等价于对数组中所有的元素各执行一次sizeof运算并将所得结果求和（因为执行sizeof运算能得到整个数组的大小，所以可以用数组的大小除以单个元素的大小得到数组中元素的个数：<code>sizeof(ia)/sizeof(*ia)</code>返回ia的元素数量）。注意，sizeof运算不会把数组转换成指针来处理。</li>
<li>对string对象或vector对象执行sizeof运算只返回该类型固定部分的大小，不会计算对象中的元素占用了多少空间。</li>
</ul>
<h2 id="练习4-30"><a href="#练习4-30" class="headerlink" title="练习4.30"></a>练习4.30</h2><blockquote>
<p>根据4.12节中的表，在下述表达式的适当位置加上括号，使得加上括号之后的表达式的含义与原来的含义相同。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">sizeof</span> x + <span class="built_in">y</span></span><br><span class="line">(b) <span class="keyword">sizeof</span> p-&gt;mem[i]</span><br><span class="line">(c) <span class="keyword">sizeof</span> a &lt; <span class="built_in">b</span></span><br><span class="line">(d) <span class="function"><span class="keyword">sizeof</span> <span class="title">f</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>(a) (sizeof x) + y</li>
<li>(b) sizeof(p-&gt;mem[i])</li>
<li>(c) sizeof(a) &lt; b</li>
<li>(d) sizeof(f())</li>
</ul>
<h2 id="练习4-31"><a href="#练习4-31" class="headerlink" title="练习4.31"></a>练习4.31</h2><blockquote>
<p>本节的程序使用了前置版本的递增运算符和递减运算符，解释为什么要用前置版本而不用后置版本。要想使用后置版本的递增递减运算符需要做哪些改动？使用后置版本重写本节的程序。</p>
</blockquote>
<p>在<a href="#%E7%BB%83%E4%B9%A04-17">练习4.17</a>（4.5节，132页）已经说过了，<strong>除非必须，否则不用递增递减运算符的后置版本</strong>。在这里要使用后置版本的递增递减运算符不影响程序结果，不需要任何改动。</p>
<h2 id="练习4-32"><a href="#练习4-32" class="headerlink" title="练习4.32"></a>练习4.32</h2><blockquote>
<p>解释下面这个循环的含义。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> <span class="type">int</span> size = <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> ia[size] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> *ptr = ia, ix = <span class="number">0</span>;</span><br><span class="line">    ix != size &amp;&amp; ptr != ia+size;</span><br><span class="line">    ++ix, ++ptr) &#123; <span class="comment">/* ... */</span> &#125;</span><br></pre></td></tr></table></figure>

<p>这个循环在遍历数组 ia，指针 ptr 和 整型 ix 都是起到一个计数的功能，任意选择其中一个都可以完成遍历。</p>
<h2 id="练习4-33"><a href="#练习4-33" class="headerlink" title="练习4.33"></a>练习4.33</h2><blockquote>
<p>根据4.12节中的表说明下面这条表达式的含义。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">someValue ? ++x, ++y : --x, --y</span><br></pre></td></tr></table></figure>

<p>逗号表达式的优先级是最低的。因此这条表达式也等于：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(someValue ? ++x, ++y : --x), --y</span><br></pre></td></tr></table></figure>
<p>如果someValue的值为真，x和y的值都自增并返回y值，然后丢弃y值，y递减并返回y值。如果someValue的值为假，x递减并返回x值，然后丢弃x值，y递减并返回y值。</p>
<h2 id="练习4-34"><a href="#练习4-34" class="headerlink" title="练习4.34"></a>练习4.34</h2><blockquote>
<p>根据本节给出的变量定义，说明在下面的表达式中奖发生什么样的类型转换：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="keyword">if</span> (fval)</span><br><span class="line">(b) dval = fval + ival;</span><br><span class="line">(c) dval + ival * cval;</span><br></pre></td></tr></table></figure>
<p>需要注意每种运算符遵循的是左结合律还是右结合律。</p>
<ul>
<li>(a) fval 转换为 bool 类型</li>
<li>(b) ival 转换为 float ，相加的结果转换为 double</li>
<li>(c) cval 转换为 int，然后相乘的结果转换为 double</li>
</ul>
<h2 id="练习4-35"><a href="#练习4-35" class="headerlink" title="练习4.35"></a>练习4.35</h2><blockquote>
<p>假设有如下的定义：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> cval;</span><br><span class="line"><span class="type">int</span> ival;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> ui;</span><br><span class="line"><span class="type">float</span> fval;</span><br><span class="line"><span class="type">double</span> dval;</span><br></pre></td></tr></table></figure>
<p>请回答在下面的表达式中发生了隐式类型转换吗？如果有，指出来。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) cval = <span class="string">&#x27;a&#x27;</span> + <span class="number">3</span>;</span><br><span class="line">(b) fval = ui - ival * <span class="number">1.0</span>;</span><br><span class="line">(c) dval = ui * fval;</span><br><span class="line">(d) cval = ival + fval + dval;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) &#39;a&#39; 转换为 int ，然后与 3 相加的结果转换为 char</li>
<li>(b) ival 转换为 double，ui 转换为 double，结果转换为 float</li>
<li>(c) ui 转换为 float，结果转换为 double</li>
<li>(d) ival 转换为 float，与fval相加后的结果转换为 double，最后的结果转换为char</li>
</ul>
<p>隐式转换：</p>
<ul>
<li>算术转换<ul>
<li>在大多数表达式中，比int类型小的整型值首先提升为较大的整数类型。</li>
<li>在条件中，非布尔值转换成布尔类型。</li>
<li>初始化过程中，初始值转换成变量的类型：在赋值语句中，右侧运算对象转换成左侧运算对象的类型。</li>
<li>如果算术运算或关系运算的运算对象有多种类型，需要转换成同一种类型。</li>
<li>如第 6 章将要介绍的，函数调用时也会发生类型转换。</li>
</ul>
</li>
<li>其他隐式类型转换（详见P143-P144）<ul>
<li>数组转换成指针：在大多数用到数组的表达式中，数组自动转换成指向数组首元素的指针。</li>
<li>指针的转换</li>
<li>转换成布尔类型</li>
<li>转换成常量</li>
<li>类类型定义的转换</li>
</ul>
</li>
</ul>
<h2 id="练习4-36"><a href="#练习4-36" class="headerlink" title="练习4.36"></a>练习4.36</h2><blockquote>
<p>假设 i 是int类型，d 是double类型，书写表达式 i*&#x3D;d 使其执行整数类型的乘法而非浮点类型的乘法。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">i *= <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;(d);</span><br></pre></td></tr></table></figure>

<h2 id="练习4-37"><a href="#练习4-37" class="headerlink" title="练习4.37"></a>练习4.37</h2><blockquote>
<p>用命名的强制类型转换改写下列旧式的转换语句。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i; <span class="type">double</span> d; <span class="type">const</span> string *ps; <span class="type">char</span> *pc; <span class="type">void</span> *pv;</span><br><span class="line">(a) pv = (<span class="type">void</span>*)ps;</span><br><span class="line">(b) i = <span class="built_in">int</span>(*pc);</span><br><span class="line">(c) pv = &amp;d;</span><br><span class="line">(d) pc = (<span class="type">char</span>*)pv;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) pv &#x3D; static_cast&lt;void*&gt;(const_cast&lt;string*&gt;(ps));</li>
<li>(b) i &#x3D; static_cast<int>(*pc);</li>
<li>(c) pv &#x3D; static_cast&lt;void*&gt;(&amp;d);</li>
<li>(d) pc &#x3D; static_cast&lt;char*&gt;(pv);</li>
</ul>
<h2 id="练习4-38"><a href="#练习4-38" class="headerlink" title="练习4.38"></a>练习4.38</h2><blockquote>
<p>说明下面这条表达式的含义。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> slope = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(j/i);</span><br></pre></td></tr></table></figure>

<p>将 <code>j/i</code> 的结果值转换为 double，然后赋值给slope。</p>
<p>显式转换（如无必要，尽可能避免强制类型转换，因为会干扰正常的类型检查）</p>
<ul>
<li>命名的强制类型转换：<code>cast-name&lt;type&gt;(expression);</code>其中，type是转换的目标类型，而expression是要转换的值。如果type是引用类型，则结果是左值。 cast-name有以下四种类型<ul>
<li>static_cast<ul>
<li>任何具有明确定义的类型转换，只要不包含底层const ，都可以使用 static_cast。例如，通过将一个运算对象强制转换成 double 类型就能使表达式执行浮点数除法：<code>double slope=static_cast&lt;double&gt;(j)/i</code>。</li>
<li>当需要把一个较大的算术类型赋值给较小的类型时， static_cast非常有用。此时，强制类型转换告诉程序的读者和编译器：我们知道并且不在乎潜在的精度损失。一般来说，如果编译器发现一个较大的算术类型试图赋值给较小的类型，就会给出警告信息；但是当我们执行了显式的类型转换后，警告信息就会被关闭了。</li>
<li>static_cast对于编译器无法自动执行的类型转换也非常有用。</li>
</ul>
</li>
<li>dynamic_cast：支持运行时类型识别。</li>
<li>const_cast：只能改变运算对象的底层const（详见P145）。const_cast常常用于有函数重载的上下文中。</li>
<li>reinterpret_cast：通常为运算对象的位模式提供较低层次上的重新解释。使用这个类型是非常危险的。reinterpret_cast本质上依赖于机器。要想安全地使用reinterpret_cast，必须对涉及的类型和编译器实现转换的过程都非常了解。</li>
</ul>
</li>
<li>旧式的强制类型转换<ul>
<li><code>type(expr);</code>：函数形式</li>
<li><code>(type)expr;</code>：C语言风格</li>
</ul>
</li>
</ul>
<h3 id="运算符优先级表"><a href="#运算符优先级表" class="headerlink" title="运算符优先级表"></a><strong>运算符优先级表</strong></h3><table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">功能</th>
<th align="left">用法</th>
<th align="left">结合律</th>
<th align="left">参考页码</th>
</tr>
</thead>
<tbody><tr>
<td align="left">::</td>
<td align="left">全局作用域</td>
<td align="left">::name</td>
<td align="left">左</td>
<td align="left">P256</td>
</tr>
<tr>
<td align="left">::</td>
<td align="left">类作用域</td>
<td align="left">class::name</td>
<td align="left">左</td>
<td align="left">P79</td>
</tr>
<tr>
<td align="left">::</td>
<td align="left">命名空间作用域</td>
<td align="left">namespace::name</td>
<td align="left">左</td>
<td align="left">P74</td>
</tr>
<tr>
<td align="left">.</td>
<td align="left">成员选择</td>
<td align="left">object::member</td>
<td align="left">左</td>
<td align="left">P20</td>
</tr>
<tr>
<td align="left">-&gt;</td>
<td align="left">成员选择</td>
<td align="left">pointer-&gt;member</td>
<td align="left">左</td>
<td align="left">P98</td>
</tr>
<tr>
<td align="left">[]</td>
<td align="left">下标</td>
<td align="left">expr[expr]</td>
<td align="left">左</td>
<td align="left">P104</td>
</tr>
<tr>
<td align="left">()</td>
<td align="left">函数调用</td>
<td align="left">name(expr_list)</td>
<td align="left">左</td>
<td align="left">P20</td>
</tr>
<tr>
<td align="left">()</td>
<td align="left">类型构造</td>
<td align="left">type(expr_list)</td>
<td align="left">左</td>
<td align="left">P145</td>
</tr>
<tr>
<td align="left">++</td>
<td align="left">后置递增运算</td>
<td align="left">lvalue++</td>
<td align="left">右</td>
<td align="left">P131</td>
</tr>
<tr>
<td align="left">--</td>
<td align="left">后置递减运算</td>
<td align="left">lvalue--</td>
<td align="left">右</td>
<td align="left">P131</td>
</tr>
<tr>
<td align="left">typeid</td>
<td align="left">类型ID</td>
<td align="left">typeid(type)</td>
<td align="left">右</td>
<td align="left">P731</td>
</tr>
<tr>
<td align="left">typeid</td>
<td align="left">运行时类型ID</td>
<td align="left">typeid(type)</td>
<td align="left">右</td>
<td align="left">P731</td>
</tr>
<tr>
<td align="left">explicit cast</td>
<td align="left">类型转换</td>
<td align="left">cast_nam&lt;type&gt;(expr)</td>
<td align="left">右</td>
<td align="left">P144</td>
</tr>
<tr>
<td align="left">++</td>
<td align="left">前置递增运算</td>
<td align="left">++lvalue</td>
<td align="left">右</td>
<td align="left">P131</td>
</tr>
<tr>
<td align="left">--</td>
<td align="left">前置递减运算</td>
<td align="left">--lvalue</td>
<td align="left">右</td>
<td align="left">P131</td>
</tr>
<tr>
<td align="left">~</td>
<td align="left">位求反</td>
<td align="left">~expr</td>
<td align="left">右</td>
<td align="left">P136</td>
</tr>
<tr>
<td align="left">!</td>
<td align="left">逻辑非</td>
<td align="left">!expr</td>
<td align="left">右</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">-</td>
<td align="left">一元负号</td>
<td align="left">-expr</td>
<td align="left">右</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">+</td>
<td align="left">一元正号</td>
<td align="left">+expr</td>
<td align="left">右</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">解引用</td>
<td align="left">*expr</td>
<td align="left">右</td>
<td align="left">P48</td>
</tr>
<tr>
<td align="left">&amp;</td>
<td align="left">取地址</td>
<td align="left">&amp;lvalue</td>
<td align="left">右</td>
<td align="left">P47</td>
</tr>
<tr>
<td align="left">()</td>
<td align="left">类型转换</td>
<td align="left">(type)expr</td>
<td align="left">右</td>
<td align="left">P145</td>
</tr>
<tr>
<td align="left">sizeof</td>
<td align="left">对象的大小</td>
<td align="left">sizeof expr</td>
<td align="left">右</td>
<td align="left">P139</td>
</tr>
<tr>
<td align="left">sizeof</td>
<td align="left">类型的大小</td>
<td align="left">sizeof(type)</td>
<td align="left">右</td>
<td align="left">P139</td>
</tr>
<tr>
<td align="left">sizeof...</td>
<td align="left">参数包的大小</td>
<td align="left">sizeof...(name)</td>
<td align="left">右</td>
<td align="left">P619</td>
</tr>
<tr>
<td align="left">new</td>
<td align="left">创建对象</td>
<td align="left">new type</td>
<td align="left">右</td>
<td align="left">P407</td>
</tr>
<tr>
<td align="left">new[]</td>
<td align="left">创建数组</td>
<td align="left">new typep[size]</td>
<td align="left">右</td>
<td align="left">P407</td>
</tr>
<tr>
<td align="left">delete</td>
<td align="left">释放对象</td>
<td align="left">delete expr</td>
<td align="left">右</td>
<td align="left">P409</td>
</tr>
<tr>
<td align="left">delete[]</td>
<td align="left">释放数组</td>
<td align="left">delete[] expr</td>
<td align="left">右</td>
<td align="left">P409</td>
</tr>
<tr>
<td align="left">noexcept</td>
<td align="left">能否抛出异常</td>
<td align="left">noexpect(expr)</td>
<td align="left">右</td>
<td align="left">P690</td>
</tr>
<tr>
<td align="left">-&gt;*</td>
<td align="left">指向成员选择的指针</td>
<td align="left">ptr-&gt;*ptr_to_member</td>
<td align="left">左</td>
<td align="left">P740</td>
</tr>
<tr>
<td align="left">.*</td>
<td align="left">指向成员选择的指针</td>
<td align="left">obj.*ptr_to_member</td>
<td align="left">左</td>
<td align="left">P740</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">乘法</td>
<td align="left">expr*expr</td>
<td align="left">左</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">&#x2F;</td>
<td align="left">除法</td>
<td align="left">expr&#x2F;expr</td>
<td align="left">左</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">%</td>
<td align="left">取模（取余）</td>
<td align="left">expr%expr</td>
<td align="left">左</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">+</td>
<td align="left">加法</td>
<td align="left">expr+expr</td>
<td align="left">左</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">-</td>
<td align="left">减法</td>
<td align="left">expr-expr</td>
<td align="left">左</td>
<td align="left">P124</td>
</tr>
<tr>
<td align="left">&lt;&lt;</td>
<td align="left">向左移位</td>
<td align="left">expr&lt;&lt;expr</td>
<td align="left">左</td>
<td align="left">P136</td>
</tr>
<tr>
<td align="left">&gt;&gt;</td>
<td align="left">向右移位</td>
<td align="left">exp&gt;&gt;expr</td>
<td align="left">左</td>
<td align="left">P136</td>
</tr>
<tr>
<td align="left">&lt;</td>
<td align="left">小于</td>
<td align="left">exp&lt;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">&lt;&#x3D;</td>
<td align="left">小于等于</td>
<td align="left">exp&lt;&#x3D;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">&gt;</td>
<td align="left">大于</td>
<td align="left">expr&gt;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">&lt;&#x3D;</td>
<td align="left">大于等于</td>
<td align="left">exp&gt;&#x3D;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">&#x3D;&#x3D;</td>
<td align="left">相等</td>
<td align="left">exp&#x3D;&#x3D;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">!&#x3D;</td>
<td align="left">不相等</td>
<td align="left">exp!&#x3D;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">&amp;</td>
<td align="left">位与</td>
<td align="left">exp&amp;expr</td>
<td align="left">左</td>
<td align="left">P136</td>
</tr>
<tr>
<td align="left">^</td>
<td align="left">位异或</td>
<td align="left">exp^expr</td>
<td align="left">左</td>
<td align="left">P136</td>
</tr>
<tr>
<td align="left">|</td>
<td align="left">位或</td>
<td align="left">exp|expr</td>
<td align="left">左</td>
<td align="left">P136</td>
</tr>
<tr>
<td align="left">&amp;&amp;</td>
<td align="left">逻辑与</td>
<td align="left">exp&amp;&amp;expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">||</td>
<td align="left">逻辑或</td>
<td align="left">exp||expr</td>
<td align="left">左</td>
<td align="left">P126</td>
</tr>
<tr>
<td align="left">?:</td>
<td align="left">条件</td>
<td align="left">exp?expr:expr</td>
<td align="left">右</td>
<td align="left">P134</td>
</tr>
<tr>
<td align="left">&#x3D;</td>
<td align="left">赋值</td>
<td align="left">lvalue&#x3D;expr</td>
<td align="left">右</td>
<td align="left">P129</td>
</tr>
<tr>
<td align="left">*&#x3D;, &#x2F;&#x3D;, %&#x3D;, +&#x3D;, -&#x3D;, &lt;&lt;&#x3D;, &gt;&gt;&#x3D;, &amp;&#x3D;, |&#x3D;, ^&#x3D;</td>
<td align="left">复合赋值</td>
<td align="left">lvalue+&#x3D;expr等</td>
<td align="left">右</td>
<td align="left">P129</td>
</tr>
<tr>
<td align="left">throw</td>
<td align="left">抛出异常</td>
<td align="left">throw expr</td>
<td align="left">右</td>
<td align="left">P173</td>
</tr>
<tr>
<td align="left">,</td>
<td align="left">逗号</td>
<td align="left">expr, expr</td>
<td align="left">左</td>
<td align="left">P140</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第四章</tag>
        <tag>表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：第六章「函数」习题答案</title>
    <url>/code-training/cpp-primer-v5/chap6/</url>
    <content><![CDATA[<h1 id="第六章：函数"><a href="#第六章：函数" class="headerlink" title="第六章：函数"></a>第六章：函数</h1><h2 id="练习6-1"><a href="#练习6-1" class="headerlink" title="练习6.1"></a>练习6.1</h2><blockquote>
<p>实参和形参的区别的什么？</p>
</blockquote>
<p>实参是函数调用的实际值，是形参的初始值。</p>
<h2 id="练习6-2"><a href="#练习6-2" class="headerlink" title="练习6.2"></a>练习6.2</h2><blockquote>
<p>请指出下列函数哪个有错误，为什么？应该如何修改这些错误呢？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          string s;</span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">          <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">(b) <span class="built_in">f2</span>(<span class="type">int</span> i) &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line">(c) <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span> v1, <span class="type">int</span> v1)</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line">(d) <span class="function"><span class="type">double</span> <span class="title">square</span> <span class="params">(<span class="type">double</span> x)</span>  <span class="keyword">return</span> x * x</span>;</span><br></pre></td></tr></table></figure>

<p>修正如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 应定义函数的返回值为string</span></span><br><span class="line">(a) <span class="function">string <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          string s;</span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">          <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 无返回值时，应定义函数的返回值为void</span></span><br><span class="line">(b) <span class="function"><span class="type">void</span> <span class="title">f2</span><span class="params">(<span class="type">int</span> i)</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"><span class="comment">// 任意两个形参都不能同名</span></span><br><span class="line">(c) <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span> v1, <span class="type">int</span> v2)</span> </span>&#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"><span class="comment">// 函数定义构成：返回类型、函数名字、0个或多个形参组成的列表（形参以逗号隔开，位于一对圆括号之内）、函数体（由语句块构成，位于一对花括号之内）。</span></span><br><span class="line">(d) <span class="function"><span class="type">double</span> <span class="title">square</span> <span class="params">(<span class="type">double</span> x)</span> </span>&#123; <span class="keyword">return</span> x * x; &#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-3"><a href="#练习6-3" class="headerlink" title="练习6.3"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_3.cpp">练习6.3</a></h2><blockquote>
<p>编写你自己的fact函数，上机检查是否正确。</p>
</blockquote>
<h2 id="练习6-4"><a href="#练习6-4" class="headerlink" title="练习6.4"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_4.cpp">练习6.4</a></h2><blockquote>
<p>编写一个与用户交互的函数，要求用户输入一个数字，计算生成该数字的阶乘。在main函数中调用该函数。</p>
</blockquote>
<h2 id="练习6-5"><a href="#练习6-5" class="headerlink" title="练习6.5"></a>练习6.5</h2><blockquote>
<p>编写一个函数输出其实参的绝对值。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">abs</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i &gt; <span class="number">0</span> ? i : -i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="built_in">abs</span>(<span class="number">-5</span>) &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-6"><a href="#练习6-6" class="headerlink" title="练习6.6"></a>练习6.6</h2><blockquote>
<p>说明形参、局部变量以及局部静态变量的区别。编写一个函数，同时达到这三种形式。</p>
</blockquote>
<p><strong>形参</strong>定义在函数形参列表里面；<strong>局部变量</strong>定义在代码块里面；<strong>局部静态变量</strong>在程序的执行中，第一次经过对象定义语句时初始化，并且直到程序终止时才被销毁。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 例子</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">count_add</span><span class="params">(<span class="type">int</span> n)</span>       <span class="comment">// n是形参</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> ctr = <span class="number">0</span>;    <span class="comment">// ctr 是局部静态变量</span></span><br><span class="line">    ctr += n;</span><br><span class="line">    <span class="keyword">return</span> ctr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i != <span class="number">10</span>; ++i)  <span class="comment">// i 是局部变量</span></span><br><span class="line">      cout &lt;&lt; <span class="built_in">count_add</span>(i) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-7"><a href="#练习6-7" class="headerlink" title="练习6.7"></a>练习6.7</h2><blockquote>
<p>编写一个函数，当它第一次被调用时返回0，以后每次被调用返回值加1。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">generate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> ctr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> ctr++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-8"><a href="#练习6-8" class="headerlink" title="练习6.8"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/Chapter6.h">练习6.8</a></h2><blockquote>
<p>编写一个名为Chapter6.h的头文件，令其包含6.1节练习中的函数声明。</p>
</blockquote>
<h2 id="练习6-9-fact-cc-factMain-cc"><a href="#练习6-9-fact-cc-factMain-cc" class="headerlink" title="练习6.9 : fact.cc | factMain.cc"></a>练习6.9 : <a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/fact.cpp">fact.cc</a> | <a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/factMain.cpp">factMain.cc</a></h2><blockquote>
<p>编写你自己的fact.cc 和factMain.cc ，这两个文件都应该包含上一小节的练习中编写的 Chapter6.h 头文件。通过这些文件，理解你的编译器是如何支持分离式编译的。</p>
</blockquote>
<h2 id="练习6-10"><a href="#练习6-10" class="headerlink" title="练习6.10"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_10.cpp">练习6.10</a></h2><blockquote>
<p>编写一个函数，使用指针形参交换两个整数的值。在代码中调用该函数并输出交换后的结果，以此验证函数的正确性。</p>
</blockquote>
<h2 id="练习6-11"><a href="#练习6-11" class="headerlink" title="练习6.11"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_11.cpp">练习6.11</a></h2><blockquote>
<p>编写并验证你自己的reset函数，使其作用于引用类型的参数。</p>
</blockquote>
<h2 id="练习6-12"><a href="#练习6-12" class="headerlink" title="练习6.12"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_12.cpp">练习6.12</a></h2><blockquote>
<p>改写6.2.1节练习中<a href="#%E7%BB%83%E4%B9%A06-10">6.10</a>的程序，使用引用而非指针交换两个整数的值。你觉得哪种方法更易于使用呢？为什么？</p>
</blockquote>
<p>引用更易于使用，无论是用法理解还是语法编写层面都简洁一些。</p>
<h2 id="练习6-13"><a href="#练习6-13" class="headerlink" title="练习6.13"></a>练习6.13</h2><blockquote>
<p>假设 T 是某种类型的名字，说明以下两个函数声明的区别：一个是void f(T), 另一个是 void f(&amp;T)。</p>
</blockquote>
<ul>
<li><code>void f(T)</code> 的参数通过「值传递」，在函数中T是实参的副本，改变T值不会影响到原来的实参值。</li>
<li><code>void f(&amp;T)</code> 的参数通过「引用传递」，在函数中T是实参的引用（即T是实参的别名），T的改变也就是实参的改变。</li>
</ul>
<h2 id="练习6-14"><a href="#练习6-14" class="headerlink" title="练习6.14"></a>练习6.14</h2><blockquote>
<p>举一个形参应该是引用类型的例子，再举一个形参不能是引用类型的例子。</p>
</blockquote>
<p>例如交换两个整数的函数，形参应该是引用</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span>&amp; lhs, <span class="type">int</span>&amp; rhs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = lhs;</span><br><span class="line">    lhs = rhs;</span><br><span class="line">    rhs = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当实参的值是右值时（比如整型常量，用作右值时，使用的是对象的值（内容），见<a href="/code-training/cpp-primer-v5/chap4/#%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC">左值和右值</a>），形参不能为引用类型</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="built_in">add</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-15"><a href="#练习6-15" class="headerlink" title="练习6.15"></a>练习6.15</h2><blockquote>
<p>说明find_char 函数中的三个形参为什么是现在的类型，特别说明为什么s是常量引用而occurs是普通引用？为什么s和occurs是引用类型而c不是？如果令s是普通引用会发生什么情况？如果令occurs是常量引用会发生什么情况？</p>
</blockquote>
<ul>
<li>因为字符串可能很长，因此使用引用避免拷贝；而在函数中我们不希望改变 s 的内容，所以令 s 为常量。</li>
<li>occurs 是要传到函数外部的变量，所以使用引用，occurs 的值会改变，所以是普通引用。</li>
<li>因为我们只需要 c 的值，这个实参可能是右值（右值实参无法用于引用形参），所以 c 不能用引用类型。</li>
<li>如果 s 是普通引用，函数中也可能会意外改变原来字符串的内容。</li>
<li>occurs 如果是常量引用，那么意味着不能改变它的值，那也就失去意义了。</li>
</ul>
<h2 id="练习6-16"><a href="#练习6-16" class="headerlink" title="练习6.16"></a>练习6.16</h2><blockquote>
<p>下面的这个函数虽然合法，但是不算特别有用。指出它的局限性并设法改善。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_empty</span><span class="params">(string&amp; s)</span> </span>&#123; <span class="keyword">return</span> s.<span class="built_in">empty</span>(); &#125;</span><br></pre></td></tr></table></figure>

<p>局限性：<strong>常量字符串</strong>和<strong>字符串字面值</strong>无法作为该函数的实参，比如下面这样调用是非法的：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> string str;</span><br><span class="line"><span class="type">bool</span> flag = <span class="built_in">is_empty</span>(str); <span class="comment">//非法</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="built_in">is_empty</span>(<span class="string">&quot;hello&quot;</span>); <span class="comment">//非法</span></span><br></pre></td></tr></table></figure>
<p>改善：将这个函数的形参定义为常量引用（对const的引用，并非指引用自身是常量，谨记引用不是对象，是对象的别名）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_empty</span><span class="params">(<span class="type">const</span> string&amp; s)</span> </span>&#123; <span class="keyword">return</span> s.<span class="built_in">empty</span>(); &#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-17"><a href="#练习6-17" class="headerlink" title="练习6.17"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_17.cpp">练习6.17</a></h2><blockquote>
<p>编写一个函数，判断string对象中是否含有大写字母。编写另一个函数，把string对象全部改写成小写形式。在这两个函数中你使用的形参类型相同吗？为什么？</p>
</blockquote>
<p>两个函数的形参不一样。第一个函数使用常量引用，第二个函数使用普通引用。</p>
<h2 id="练习6-18"><a href="#练习6-18" class="headerlink" title="练习6.18"></a>练习6.18</h2><blockquote>
<p>为下面的函数编写函数声明，从给定的名字中推测函数具备的功能。</p>
</blockquote>
<ul>
<li>(a) 名为 compare 的函数，返回布尔值，两个参数都是 matrix 类的引用。</li>
<li>(b) 名为 change_val 的函数，返回vector<int>的迭代器，有两个参数：一个是int，另一个是vector<int>的迭代器。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="function"><span class="type">bool</span> <span class="title">compare</span><span class="params">(matrix &amp;m1, matrix &amp;m2)</span></span>;</span><br><span class="line">(b) vector&lt;<span class="type">int</span>&gt;::<span class="function">iterator <span class="title">change_val</span><span class="params">(<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;::iterator)</span></span>;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-19"><a href="#练习6-19" class="headerlink" title="练习6.19"></a>练习6.19</h2><blockquote>
<p>假定有如下声明，判断哪个调用合法、哪个调用不合法。对于不合法的函数调用，说明原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">calc</span><span class="params">(<span class="type">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">count</span><span class="params">(<span class="type">const</span> string &amp;, <span class="type">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;::iterator, vector&lt;<span class="type">int</span>&gt;::iterator, <span class="type">int</span>)</span></span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">vec</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">(a) <span class="built_in">calc</span>(<span class="number">23.4</span>, <span class="number">55.1</span>);</span><br><span class="line">(b) <span class="built_in">count</span>(<span class="string">&quot;abcda&quot;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">(c) <span class="built_in">calc</span>(<span class="number">66</span>);</span><br><span class="line">(d) <span class="built_in">sum</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), <span class="number">3.8</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 不合法。calc只有一个参数。</li>
<li>(b) 合法。</li>
<li>(c) 合法。</li>
<li>(d) 合法。</li>
</ul>
<h2 id="练习6-20"><a href="#练习6-20" class="headerlink" title="练习6.20"></a>练习6.20</h2><blockquote>
<p>引用形参什么时候应该是常量引用？如果形参应该是常量引用，而我们将其设为了普通引用，会发生什么情况？</p>
</blockquote>
<p>应该尽量将引用形参设为常量引用，除非有明确的目的是为了<strong>改变</strong>这个引用变量。如果形参应该是常量引用，而我们将其设为了普通引用，那么常量实参将无法作用于普通引用形参，会出现编译报错。</p>
<h2 id="练习6-21"><a href="#练习6-21" class="headerlink" title="练习6.21"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_21.cpp">练习6.21</a></h2><blockquote>
<p>编写一个函数，令其接受两个参数：一个是int型的数，另一个是int指针。函数比较int的值和指针所指的值，返回较大的那个。在该函数中指针的类型应该是什么？</p>
</blockquote>
<p>应该是 <code>const int *</code> 类型。</p>
<h2 id="练习6-22"><a href="#练习6-22" class="headerlink" title="练习6.22"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_22.cpp">练习6.22</a></h2><blockquote>
<p>编写一个函数，令其交换两个int指针。</p>
</blockquote>
<h2 id="练习6-23"><a href="#练习6-23" class="headerlink" title="练习6.23"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_23.cpp">练习6.23</a></h2><blockquote>
<p>参考本节介绍的几个print函数，根据理解编写你自己的版本。依次调用每个函数使其输入下面定义的i和j:</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j[<span class="number">2</span>] = &#123; <span class="number">0</span>, <span class="number">1</span> &#125;;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-24"><a href="#练习6-24" class="headerlink" title="练习6.24"></a>练习6.24</h2><blockquote>
<p>描述下面这个函数的行为。如果代码中存在问题，请指出并改正。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">const</span> <span class="type">int</span> ia[<span class="number">10</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i != <span class="number">10</span>; ++i)</span><br><span class="line">        cout &lt;&lt; ia[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当数组作为实参的时候，会被自动转换为指向首元素的指针。因此函数形参接受的是一个指针。以上代码实际传递只是指针，会有一个隐患，因此无论是<code>const int ia[3]</code>或者<code>const int ia[255]</code>都没有区别，因为无法实际传递数组的大小。如果要让这个代码成功运行，可以将实参改为数组的引用。更多讨论可参阅<a href="https://stackoverflow.com/questions/26530659/confused-about-array-parameters">Confused about array parameters</a>。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这里的ia必须要有括号，这样才是声明为指向含有10个整数的数组的引用，没有括号就相当于引用的数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">const</span> <span class="type">int</span> (&amp;ia)[<span class="number">10</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i != <span class="number">10</span>; ++i)</span><br><span class="line">        cout &lt;&lt; ia[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-25"><a href="#练习6-25" class="headerlink" title="练习6.25"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_25.cpp">练习6.25</a></h2><blockquote>
<p>编写一个main函数，令其接受两个实参。把实参的内容连接成一个string对象并输出出来。</p>
</blockquote>
<h2 id="练习6-26"><a href="#练习6-26" class="headerlink" title="练习6.26"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_25.cpp">练习6.26</a></h2><blockquote>
<p>编写一个程序，使其接受本节所示的选项；输出传递给main函数的实参的内容。</p>
</blockquote>
<h2 id="练习6-27"><a href="#练习6-27" class="headerlink" title="练习6.27"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_27.cpp">练习6.27</a></h2><blockquote>
<p>编写一个函数，它的参数是initializer_list&lt;int&gt;类型的对象，函数的功能是计算列表中所有元素的和。</p>
</blockquote>
<h2 id="练习6-28"><a href="#练习6-28" class="headerlink" title="练习6.28"></a>练习6.28</h2><blockquote>
<p>在error_msg函数的第二个版本中包含ErrCode类型的参数，其中循环内的elem是什么类型？</p>
</blockquote>
<p><code>elem</code> 是 <code>const string &amp;</code> 类型。</p>
<h2 id="练习6-29"><a href="#练习6-29" class="headerlink" title="练习6.29"></a>练习6.29</h2><blockquote>
<p>在范围for循环中使用initializer_list对象时，应该将循环控制变量声明成引用类型吗？为什么？</p>
</blockquote>
<p>应该使用<strong>常量引用</strong>类型。<code>initializer_list</code> 对象中的元素永远都是常量，我们无法修改<code>initializer_list</code> 对象中元素的值。</p>
<h2 id="练习6-30"><a href="#练习6-30" class="headerlink" title="练习6.30"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_30.cpp">练习6.30</a></h2><blockquote>
<p>编译第200页的str_subrange函数，看看你的编译器是如何处理函数中的错误的。</p>
</blockquote>
<p>错误信息（Visual Studio 2022 Developer Command Prompt v17.9.5）：</p>
<blockquote>
<p>“str_subrange”: 函数必须返回值 （cpp(C2561)）</p>
</blockquote>
<p>clang编译器应该还能提示，<a href="https://github.com/Mooophy/Cpp-Primer/blob/master/ch06/README.md#exercise-630">参见</a>：</p>
<blockquote>
<p>Control may reach end of non-void function. &#x2F;&#x2F; error #2</p>
</blockquote>
<h2 id="练习6-31"><a href="#练习6-31" class="headerlink" title="练习6.31"></a>练习6.31</h2><blockquote>
<p>什么情况下返回的引用无效？什么情况下返回常量的引用无效？</p>
</blockquote>
<p>当返回的引用的对象是局部变量时，返回的引用无效；当我们希望返回的对象被修改时，返回常量的引用无效。</p>
<h2 id="练习6-32"><a href="#练习6-32" class="headerlink" title="练习6.32"></a>练习6.32</h2><blockquote>
<p>下面的函数合法吗？如果合法，说明其功能；如果不合法，修改其中的错误并解释原因。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> &amp;<span class="title">get</span><span class="params">(<span class="type">int</span> *array, <span class="type">int</span> index)</span> </span>&#123; <span class="keyword">return</span> array[index]; &#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ia[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i != <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">get</span>(ia, i) = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>合法。get 函数根据索引取得数组中的元素的引用。</p>
<h2 id="练习6-33"><a href="#练习6-33" class="headerlink" title="练习6.33"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_33.cpp">练习6.33</a></h2><blockquote>
<p>编写一个递归函数，输出vector对象的内容。</p>
</blockquote>
<h2 id="练习6-34"><a href="#练习6-34" class="headerlink" title="练习6.34"></a>练习6.34</h2><blockquote>
<p>如果factorial 函数的停止条件如下所示，将发生什么情况？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (val != <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>如果val为正数，从结果上来说没有区别（多乘了个 1）; 如果val为负数，那么递归永远不会结束。</p>
<p>通常而言，负数没有阶乘，但这里函数定义是int，可以输入负数。这里是问题所在。</p>
<h2 id="练习6-35"><a href="#练习6-35" class="headerlink" title="练习6.35"></a>练习6.35</h2><blockquote>
<p>在调用factorial 函数时，为什么我们传入的值是 val-1 而非 val--？</p>
</blockquote>
<p>如果传入的值是 val--，那么将会永远传入相同的值来调用该函数，递归将永远不会结束。</p>
<h2 id="练习6-36"><a href="#练习6-36" class="headerlink" title="练习6.36"></a>练习6.36</h2><blockquote>
<p>编写一个函数声明，使其返回数组的引用并且该数组包含10个string对象。不用使用尾置返回类型、decltype或者类型别名。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> (&amp;<span class="built_in">fun</span>())[<span class="number">10</span>];</span><br></pre></td></tr></table></figure>

<h2 id="练习6-37"><a href="#练习6-37" class="headerlink" title="练习6.37"></a>练习6.37</h2><blockquote>
<p>为上一题的函数再写三个声明，一个使用类型别名，另一个使用尾置返回类型，最后一个使用decltype关键字。你觉得哪种形式最好？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> string str_arr[<span class="number">10</span>];</span><br><span class="line"><span class="function">str_arr&amp; <span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">auto</span> <span class="title">fun</span><span class="params">()</span>-&gt;<span class="title">string</span><span class="params">(&amp;)</span>[10]</span>;</span><br><span class="line"></span><br><span class="line">string s[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">decltype</span>(s)&amp; <span class="built_in">fun</span>();</span><br></pre></td></tr></table></figure>
<p>我觉得尾置返回类型最好。</p>
<h2 id="练习6-38"><a href="#练习6-38" class="headerlink" title="练习6.38"></a>练习6.38</h2><blockquote>
<p>修改arrPtr函数，使其返回数组的引用。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">decltype</span>(odd)&amp; <span class="built_in">arrPtr</span>(<span class="type">int</span> i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (i % <span class="number">2</span>) ? odd : even;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-39"><a href="#练习6-39" class="headerlink" title="练习6.39"></a>练习6.39</h2><blockquote>
<p>说明在下面的每组声明中第二条声明语句是何含义。如果有非法的声明，请指出来。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">const</span> <span class="type">int</span>, <span class="type">const</span> <span class="type">int</span>)</span></span>;</span><br><span class="line">(b) <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">get</span><span class="params">()</span></span>;</span><br><span class="line">(c) <span class="function"><span class="type">int</span> *<span class="title">reset</span><span class="params">(<span class="type">int</span> *)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">double</span> *<span class="title">reset</span><span class="params">(<span class="type">double</span> *)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 非法。因为顶层const 不影响传入函数的对象，所以第二个声明无法与第一个声明区分开来。</li>
<li>(b) 非法。对于重载的函数来说，它们应该只有形参的数量和形参的类型不同。返回值与重载无关。</li>
<li>(c) 合法。</li>
</ul>
<h2 id="练习6-40"><a href="#练习6-40" class="headerlink" title="练习6.40"></a>练习6.40</h2><blockquote>
<p>下面的哪个声明是错误的？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="function"><span class="type">int</span> <span class="title">ff</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">0</span>, <span class="type">int</span> c = <span class="number">0</span>)</span></span>;</span><br><span class="line">(b) <span class="function"><span class="type">char</span> *<span class="title">init</span><span class="params">(<span class="type">int</span> ht = <span class="number">24</span>, <span class="type">int</span> wd, <span class="type">char</span> bckgrnd)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 正确。</li>
<li>(b) 错误。因为一旦某个形参被赋予了默认值，那么它后面的所有形参都必须要有默认值。</li>
</ul>
<h2 id="练习6-41"><a href="#练习6-41" class="headerlink" title="练习6.41"></a>练习6.41</h2><blockquote>
<p>下面的哪个调用是非法的？为什么？哪个调用虽然合法但显然与程序员的初衷不符？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">char</span> *<span class="title">init</span><span class="params">(<span class="type">int</span> ht, <span class="type">int</span> wd = <span class="number">80</span>, <span class="type">char</span> bckgrnd = <span class="string">&#x27; &#x27;</span>)</span></span>;</span><br><span class="line">(a) <span class="built_in">init</span>();</span><br><span class="line">(b) <span class="built_in">init</span>(<span class="number">24</span>,<span class="number">10</span>);</span><br><span class="line">(c) <span class="built_in">init</span>(<span class="number">14</span>,<span class="string">&#x27;*&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 非法。第一个参数不是默认参数，最少需要一个实参。</li>
<li>(b) 合法。</li>
<li>(c) 合法，但与代码设计初衷不符。实参字符 <code>*</code> 被编译器隐式转换成 <code>int</code> 传入给第二个参数。而初衷是要传给第三个参数。</li>
</ul>
<h2 id="练习6-42"><a href="#练习6-42" class="headerlink" title="练习6.42"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_42.cpp">练习6.42</a></h2><blockquote>
<p>给make_plural函数（参见6.3.2节，第201页）的第二个形参赋予默认实参&#39;s&#39;, 利用新版本的函数输出单词success和failure的单数和复数形式。</p>
</blockquote>
<p>这里原书应该是写错了（英文原版写的也是second），正确应该为「给第三个形参赋予默认实参&#39;s&#39;」。</p>
<h2 id="练习6-43"><a href="#练习6-43" class="headerlink" title="练习6.43"></a>练习6.43</h2><blockquote>
<p>你会把下面的哪个声明和定义放在头文件中？哪个放在源文件中？为什么？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">eq</span><span class="params">(<span class="type">const</span> BigInt&amp;, <span class="type">const</span> BigInt&amp;)</span> </span>&#123;...&#125;</span><br><span class="line">(b) <span class="function"><span class="type">void</span> <span class="title">putValues</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> size)</span></span>;</span><br></pre></td></tr></table></figure>

<p>全部都放在头文件。(a) 是内联函数，(b) 是声明。</p>
<h2 id="练习6-44"><a href="#练习6-44" class="headerlink" title="练习6.44"></a>练习6.44</h2><blockquote>
<p>将6.2.2节（第189页）的isShorter函数改写成内联函数。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">isShorter</span><span class="params">(<span class="type">const</span> string &amp;s1, <span class="type">const</span> string &amp;s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s<span class="number">1.</span><span class="built_in">size</span>() &lt; s<span class="number">2.</span><span class="built_in">size</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-45"><a href="#练习6-45" class="headerlink" title="练习6.45"></a>练习6.45</h2><blockquote>
<p>回顾在前面的练习中你编写的那些函数，它们应该是内联函数吗？如果是，将它们改写成内联函数；如果不是，说明原因。</p>
</blockquote>
<p>一般来说，内联机制用于优化规模小、流程直接、频繁调用的函数。</p>
<p>例如，<a href="#%E7%BB%83%E4%B9%A06-38">练习6.38</a>的arrPtr函数和<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_42.cpp">练习6.42</a>的make_plural函数应该定义为内联函数。其他函数若规模不小，且只有一次调用的话，即使定义为内联函数，编译器也很可能会选择忽略，并不会展开内联（内联说明只是向编译器发出的一个请求，实际是否展开内联要取决于编译器）。</p>
<h2 id="练习6-46"><a href="#练习6-46" class="headerlink" title="练习6.46"></a>练习6.46</h2><blockquote>
<p>能把isShorter函数定义成constexpr函数吗？如果能，将它改写成constexpr函数；如果不能，说明原因。</p>
</blockquote>
<p>不能。<code>constexpr</code>函数的返回值类型及所有形参都需要为字面值类型。<code>std::string::size()</code>不是常量函数，<code>s1.size() &lt; s2.size()</code>也不是常量表达式，它的运行结果虽然可以强制转换成常量类型，但由于<code>常量≠常量表达式</code>，即<code>const≠constexpr</code>，因为<code>constexpr</code>关键字不能进行强制类型转换，一个常量可能在运行时才能确定值，而常量表达式要求在编译阶段就确定值。</p>
<h2 id="练习6-47"><a href="#练习6-47" class="headerlink" title="练习6.47"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_47.cpp">练习6.47</a></h2><blockquote>
<p>改写6.3.2节（第205页）练习中使用递归输出vector内容的程序，使其有条件地输出与执行过程有关的信息。例如，每次调用时输出vector对象的大小。分别在打开和关闭调试器的情况下编译并执行这个程序。</p>
</blockquote>
<h2 id="练习6-48"><a href="#练习6-48" class="headerlink" title="练习6.48"></a>练习6.48</h2><blockquote>
<p>说明下面这个循环的含义，它对assert的使用合理吗？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; s &amp;&amp; s != sought) &#123; &#125; <span class="comment">//空函数体</span></span><br><span class="line"><span class="built_in">assert</span>(cin);</span><br></pre></td></tr></table></figure>

<p>不合理。从这个程序的意图来看，应该用</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">assert</span>(s == sought);</span><br></pre></td></tr></table></figure>

<h2 id="练习6-49"><a href="#练习6-49" class="headerlink" title="练习6.49"></a>练习6.49</h2><blockquote>
<p>什么是候选函数？什么是可行函数？</p>
</blockquote>
<ul>
<li><strong>候选函数</strong>：与被调用函数同名，并且其声明在调用点可见。</li>
<li><strong>可行函数</strong>：形参与实参的数量相等，并且每个实参类型与对应的形参类型相同或者能转换成形参的类型。</li>
</ul>
<h2 id="练习6-50"><a href="#练习6-50" class="headerlink" title="练习6.50"></a>练习6.50</h2><blockquote>
<p>已知有第217页对函数 f 的声明，对于下面的每一个调用列出可行函数。其中哪个函数是最佳匹配？如果调用不合法，是因为没有可匹配的函数还是因为调用具有二义性？</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="built_in">f</span>(<span class="number">2.56</span>, <span class="number">42</span>)</span><br><span class="line">(b) <span class="built_in">f</span>(<span class="number">42</span>)</span><br><span class="line">(c) <span class="built_in">f</span>(<span class="number">42</span>, <span class="number">0</span>)</span><br><span class="line">(d) <span class="built_in">f</span>(<span class="number">2.56</span>, <span class="number">3.14</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) <code>void f(int, int);</code> 和 <code>void f(double, double = 3.14);</code> 是可行函数。该调用具有二义性而不合法。</li>
<li>(b) <code>void f(int);</code> 和 <code>void f(double, double = 3.14);</code> 是可行函数。<code>void f(int);</code> 是最佳匹配。</li>
<li>(c) <code>void f(int, int);</code> 和 <code>void f(double, double = 3.14);</code> 是可行函数。<code>void f(int, int);</code> 是最佳匹配。</li>
<li>(d) <code>void f(int, int);</code> 和 <code>void f(double, double = 3.14);</code> 是可行函数。<code>void f(double, double = 3.14);</code> 是最佳匹配。</li>
</ul>
<h2 id="练习6-51"><a href="#练习6-51" class="headerlink" title="练习6.51"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_51.cpp">练习6.51</a></h2><blockquote>
<p>编写函数f的4版本，令其各输出一条可以区分的消息。验证上一个练习的答案，如果你的回答错了，反复研究本节内容直到你弄清自己错在何处。</p>
</blockquote>
<h2 id="练习6-52"><a href="#练习6-52" class="headerlink" title="练习6.52"></a>练习6.52</h2><blockquote>
<p>已知有如下声明：</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">manip</span><span class="params">(<span class="type">int</span> ,<span class="type">int</span>)</span></span>;</span><br><span class="line"><span class="type">double</span> dobj;</span><br></pre></td></tr></table></figure>
<p>请指出下列调用中每个类型转换的等级（参见6.6.1节，第219页）。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="built_in">manip</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;z&#x27;</span>);</span><br><span class="line">(b) <span class="built_in">manip</span>(<span class="number">55.4</span>, dobj);</span><br></pre></td></tr></table></figure>

<ul>
<li>(a) 第3级。类型提升实现的匹配。</li>
<li>(b) 第4级。算术类型转换实现的匹配。</li>
</ul>
<h2 id="练习6-53"><a href="#练习6-53" class="headerlink" title="练习6.53"></a>练习6.53</h2><blockquote>
<p>说明下列每组声明中的第二条语句会产生什么影响，并指出哪些不合法（如果有的话）。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(a) <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span>&amp;, <span class="type">int</span>&amp;)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">const</span> <span class="type">int</span>&amp;, <span class="type">const</span> <span class="type">int</span>&amp;)</span></span>;</span><br><span class="line">(b) <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">char</span>*, <span class="type">char</span>*)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">const</span> <span class="type">char</span>*, <span class="type">const</span> <span class="type">char</span>*)</span></span>;</span><br><span class="line">(c) <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">char</span>*, <span class="type">char</span>*)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">char</span>* <span class="type">const</span>, <span class="type">char</span>* <span class="type">const</span>)</span></span>;</span><br></pre></td></tr></table></figure>

<p>(c) 不合法。顶层const不影响传入函数的对象。</p>
<h2 id="练习6-54"><a href="#练习6-54" class="headerlink" title="练习6.54"></a>练习6.54</h2><blockquote>
<p>编写函数的声明，令其接受两个int形参并返回类型也是int；然后声明一个vector对象，令其元素是指向该函数的指针。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> pFunc1 = <span class="keyword">decltype</span>(func) *;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">decltype</span><span class="params">(func)</span> *pFunc2</span>;</span><br><span class="line"><span class="keyword">using</span> pFunc3 = <span class="built_in">int</span> (*)(<span class="type">int</span> a, <span class="type">int</span> b);</span><br><span class="line"><span class="keyword">using</span> pFunc4 = <span class="built_in">int</span>(<span class="type">int</span> a, <span class="type">int</span> b);</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span><span class="params">(*pFunc5)</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="keyword">using</span> pFunc6 = <span class="keyword">decltype</span>(func);</span><br><span class="line"></span><br><span class="line">std::vector&lt;pFunc1&gt; vec1;</span><br><span class="line">std::vector&lt;pFunc2&gt; vec2;</span><br><span class="line">std::vector&lt;pFunc3&gt; vec3;</span><br><span class="line">std::vector&lt;pFunc4*&gt; vec4;</span><br><span class="line">std::vector&lt;pFunc5&gt; vec5;</span><br><span class="line">std::vector&lt;pFunc6*&gt; vec6;</span><br></pre></td></tr></table></figure>

<h2 id="练习6-55"><a href="#练习6-55" class="headerlink" title="练习6.55"></a>练习6.55</h2><blockquote>
<p>编写4个函数，分别对两个int值执行加、减、乘、除运算；在上一题创建的vector对象中保存指向这些函数的指针。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a + b; &#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">subtract</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a - b; &#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">multiply</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> a * b; &#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">divide</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123; <span class="keyword">return</span> b != <span class="number">0</span> ? a / b : <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">vec<span class="number">1.</span><span class="built_in">push_back</span>(add);</span><br><span class="line">vec<span class="number">1.</span><span class="built_in">push_back</span>(subtract);</span><br><span class="line">vec<span class="number">1.</span><span class="built_in">push_back</span>(multiply);</span><br><span class="line">vec<span class="number">1.</span><span class="built_in">push_back</span>(divide);</span><br></pre></td></tr></table></figure>

<h2 id="练习6-56"><a href="#练习6-56" class="headerlink" title="练习6.56"></a><a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/chap6/6_55.cpp">练习6.56</a></h2><blockquote>
<p>调用上述vector对象中的每个元素并输出其结果。</p>
</blockquote>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第六章</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ Primer 第五版：习题答案</title>
    <url>/code-training/cpp-primer-v5/cpp-primer-v5/</url>
    <content><![CDATA[<p>练习代码文件的仓库链接：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/cpp_primer_v5/">点击跳转</a>。</p>
<p><em>习题的录入主要基于<a href="https://github.com/huangmingchuan/Cpp_Primer_Answers">Cpp_Primer_Answers（中文版）</a>和<a href="https://github.com/Mooophy/Cpp-Primer">Cpp-Primer（英文版）</a>仓库。</em></p>
<ul>
<li><a href="/code-training/cpp-primer-v5/chap1">第一章「开始」习题答案</a></li>
<li>第Ⅰ部分 C++基础<ul>
<li><a href="/code-training/cpp-primer-v5/chap2">第二章「变量和基本类型」习题答案</a></li>
<li><a href="/code-training/cpp-primer-v5/chap3">第三章「字符串、向量和数组」习题答案</a></li>
<li><a href="/code-training/cpp-primer-v5/chap4">第四章「表达式」习题答案</a></li>
<li><a href="/code-training/cpp-primer-v5/chap5">第五章「语句」习题答案</a></li>
<li><a href="/code-training/cpp-primer-v5/chap6">第六章「函数」习题答案</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>cpp-primer-v5</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++ Primer</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第五版</tag>
      </tags>
  </entry>
  <entry>
    <title>Head Fisrt HTML CSS第二版：第一章「Web语言：认识HTML」习题答案</title>
    <url>/code-training/head-first-html-css-v2/chap1/</url>
    <content><![CDATA[<h1 id="第一章：Web语言：认识HTML"><a href="#第一章：Web语言：认识HTML" class="headerlink" title="第一章：Web语言：认识HTML"></a>第一章：Web语言：认识HTML</h1><h2 id="章节总结（详见书籍P36）"><a href="#章节总结（详见书籍P36）" class="headerlink" title="章节总结（详见书籍P36）"></a>章节总结（详见书籍P36）</h2><ul>
<li>HTML和CSS是用来创建网页的语言。</li>
<li>Web服务器存储并提供由HTML和CSS创建的网页。浏览器获取页面，并根据HTML和CSS显示网页的内容。</li>
<li>HTML是超文本标记语言（HyperText Markup Language）的缩写，用来建立网页的结构。</li>
<li>CSS是层叠样式表（Cascading Style Sheets）的缩写，用来控制HTML的表现。</li>
<li>通过HTML，利用标记来标示内容提供结构。把匹配标记以及它们包围的内容称为元素。</li>
<li>元素由3部分组成：一个开始标记、内容和一个结束标记。不过有些元素（比如<code>&lt;img&gt;</code>）有所例外。</li>
<li>开始标记可以有属性。比如本章出现的一个属性：type。</li>
<li>结束标记在左尖括号后面、标记名前面有一个“&#x2F;”，以明确这是结束标记。</li>
<li>所有页面都要有一个<code>&lt;html&gt;</code>元素，其中要有一个<code>&lt;head&gt;</code>元素和一个<code>&lt;body&gt;</code>元素。</li>
<li>网页的信息放在<code>&lt;head&gt;</code>元素里。</li>
<li><code>&lt;body&gt;</code>元素里的内容是用户在浏览器里看到的东西。</li>
<li>大多数空白符（制表符、回车、空格）都会被浏览器忽略，不过可以利用空白符让HTML更有可读性。</li>
<li>可以在<code>&lt;style&gt;</code>元素中写CSS规则，为HTML网页增加CSS。<code>&lt;style&gt;</code>元素总要放在<code>&lt;head&gt;</code>元素里。</li>
<li>可以使用CSS在HTML中指定元素的特性．</li>
</ul>
<h2 id="本章节练习文件"><a href="#本章节练习文件" class="headerlink" title="本章节练习文件"></a>本章节练习文件</h2><ul>
<li>Starbuzz Coffee：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/head_first_html_css_v2/chap1/index.html">index.html</a></li>
<li>Starbuzz Coffee&#39;s Mission： <a href="https://github.com/Mister-Kin/CodeTraining/blob/master/head_first_html_css_v2/chap1/mission.html">mission.html</a></li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>head-first-html-css-v2</category>
      </categories>
      <tags>
        <tag>第一章</tag>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>Head Fisrt HTML CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Head Fisrt HTML CSS第二版：第二章「认识HTML中的“HT”：深入理解超文本」习题答案</title>
    <url>/code-training/head-first-html-css-v2/chap2/</url>
    <content><![CDATA[<h1 id="第二章：认识HTML中的“HT”：深入理解超文本"><a href="#第二章：认识HTML中的“HT”：深入理解超文本" class="headerlink" title="第二章：认识HTML中的“HT”：深入理解超文本"></a>第二章：认识HTML中的“HT”：深入理解超文本</h1><h2 id="章节总结（详见书籍P69）"><a href="#章节总结（详见书籍P69）" class="headerlink" title="章节总结（详见书籍P69）"></a>章节总结（详见书籍P69）</h2><ul>
<li>从一个页面链接到另一个页面时，需使用<code>&lt;a&gt;</code>元素。</li>
<li><code>&lt;a&gt;</code>元素的href属性指定了链接的目标文件。</li>
<li><code>&lt;a&gt;</code>元素的内容是链接的标签。这个标签就是在网页上看到的链接文本。默认地，这个标签会有下划线，指示这是可以单击的。</li>
<li>文字或图像都可以用作链接的标签。</li>
<li>单击一个链接时，浏览器会加载href属性中指定的Web页面。</li>
<li>可以链接到相同文件夹中的文件，也可链接到其他文件夹中的文件。</li>
<li>相对路径是相对于链接的源Web页面指向网站中其他文件的一个链接。就像在地图上一样，终点总是相对于起点。</li>
<li>使用“..”可以链接到源文件上一层文件夹中的一个文件 。</li>
<li>“..”表示“父文件夹”。</li>
<li>记住要用“&#x2F;”（斜线）字符分隔路径中的各个部分 。</li>
<li>指向一个图像的路径不正确时 ，会在Web页面上看到一个损坏的图像。</li>
<li>为网站选择的文件名和文件夹名中不要使用空格。</li>
<li>最好在构建网站初期组织网站文件，这样就不用在网站升级时修改一大堆的路径。</li>
</ul>
<h2 id="本章节练习文件"><a href="#本章节练习文件" class="headerlink" title="本章节练习文件"></a>本章节练习文件</h2><ul>
<li>原始的lounge文件资源：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/head_first_html_css_v2/chap2/lounge/">lounge</a></li>
<li>最终的lounge文件资源：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/head_first_html_css_v2/chap2/completelounge/">completelounge</a></li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>head-first-html-css-v2</category>
      </categories>
      <tags>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>第二章</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>Head Fisrt HTML CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Head Fisrt HTML CSS 第二版：习题答案</title>
    <url>/code-training/head-first-html-css-v2/head-first-html-css-v2/</url>
    <content><![CDATA[<p>本书代码文件的官方下载链接：<a href="https://wickedlysmart.com/hfhtmlcss/">点击跳转</a><br>练习代码文件的仓库链接：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/head_first_html_css_v2/">点击跳转</a></p>
<ul>
<li><a href="/code-training/head-first-html-css-v2/chap1/">第一章「Web 语言：认识 HTML」习题答案</a></li>
<li><a href="/code-training/head-first-html-css-v2/chap2/">第二章「认识HTML中的“HT”：深入理解超文本」习题答案</a></li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>head-first-html-css-v2</category>
      </categories>
      <tags>
        <tag>习题答案</tag>
        <tag>练习总结</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>Head Fisrt HTML CSS</tag>
        <tag>第二版</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt6 C++开发指南：第一章「认识Qt」习题答案</title>
    <url>/code-training/qt6-cpp-development-guide/chap1/</url>
    <content><![CDATA[<h1 id="第一章：认识Qt">1 &nbsp&nbsp<a href="#第一章：认识Qt" class="headerlink" title="第一章：认识Qt"></a>第一章：认识Qt</h1><h2 id="Qt简介">1.1 &nbsp&nbsp<a href="#Qt简介" class="headerlink" title="Qt简介"></a>Qt简介</h2><ul>
<li>跨平台应用程序开发框架</li>
<li>首次发布于1995年5月</li>
<li>qt官网：<a href="http://www.qt.io/">www.qt.io</a></li>
</ul>
<h3 id="跨平台开发能力">1.1.1 &nbsp&nbsp<a href="#跨平台开发能力" class="headerlink" title="跨平台开发能力"></a>跨平台开发能力</h3><table>
<thead>
<tr>
<th align="center">目标设备</th>
<th align="center">目标平台</th>
<th align="center">主机平台</th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="center">桌面Linux</td>
<td align="center">桌面Linux</td>
</tr>
<tr>
<td align="center">计算机</td>
<td align="center">macOS</td>
<td align="center">macOS</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">Windows</td>
<td align="center">Windows</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">Android</td>
<td align="center">桌面Linux、 macOS、Windows</td>
</tr>
<tr>
<td align="center">移动设备</td>
<td align="center">iOS</td>
<td align="center">macOS</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">手机Windows</td>
<td align="center">Windows</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">嵌入式Linux</td>
<td align="center">桌面Linux</td>
</tr>
<tr>
<td align="center">嵌入式设备</td>
<td align="center">QNX</td>
<td align="center">桌面Linux、 Windows</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VxWorks</td>
<td align="center">桌面Linux、 Windows</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">嵌入式Windows</td>
<td align="center">Windows</td>
</tr>
<tr>
<td align="center">单片机</td>
<td align="center">FreeRTOS或无操作系统</td>
<td align="center">Windows、 桌面Linux</td>
</tr>
</tbody></table>
<p>Qt 源代码编译后生成目标平台的原生二进制代码，不像Java那样需要虚拟机，运行效率更高。</p>
<h3 id="Qt许可的类型">1.1.2 &nbsp&nbsp<a href="#Qt许可的类型" class="headerlink" title="Qt许可的类型"></a>Qt许可的类型</h3><p>Qt 的许可类型</p>
<ul>
<li>商业许可：按年付费。模块更多，开发者可以不公开自己的源码。</li>
<li>开源许可：<ul>
<li>GPLv2 &#x2F; GPLv3 许可：使用了 GLP 许可的 Qt 代码允许销售，但必须开源。 GPLv3还要求公开相关硬件信息。</li>
<li>LGPLv3 许可：与 GPL 类似，但更宽松。若只是链接或调用 GPL 许可协议的 Qt 代码，可以不开源。</li>
</ul>
</li>
</ul>
<h3 id="安装包">1.1.3 &nbsp&nbsp<a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><p>Qt 安装包：根据目标设备不同，提供了不同的安装包。</p>
<h3 id="Qt支持的开发语言">1.1.4 &nbsp&nbsp<a href="#Qt支持的开发语言" class="headerlink" title="Qt支持的开发语言"></a>Qt支持的开发语言</h3><ol>
<li>C++ 和 QML<ul>
<li>Qt 对标准C++语言进行了扩展，引入了信号与槽等机制。</li>
<li>QML （ Qt Meta Language） 是一个用来描述应用程序界面的声明式脚本语言。</li>
<li>C++和QML可以混合使用。</li>
</ul>
</li>
<li>Python<ul>
<li>Qt C++可以被转换Python绑定，使用 Python 调用 Qt 类库进行GUI程序开发。</li>
<li>常用的 Qt 类库 Python 绑定有： PyQt （GPLv3 许可）和 PySide （LGPLv3 许可）</li>
</ul>
</li>
</ol>
<h3 id="Qt6新特性">1.1.5 &nbsp&nbsp<a href="#Qt6新特性" class="headerlink" title="Qt6新特性"></a>Qt6新特性</h3><p>2020 年 12 月正式发布了 Qt6.0 ，引入的主要新特性包括：</p>
<ul>
<li>支持 C++ 17 标准。</li>
<li>Qt 核心库的改动：新的属性和绑定系统；全面支持Unicode 字符串；修改了 QList 的实现方式，将 QVector 类和 QList 类统一为 QList 类； QMetaType 和 QVariant 几乎被重写。</li>
<li>新的图形架构： Qt5 中 3D 渲染依赖 0penGL。Qt6 中引入了新的技术 RHI （rendering hardware interface），它是一个抽象层，使得 Qt 可以使用平台本地化的 3D 图形 API（Linux：Vulkan 、Windows：Direct 3D、macOS：Metal）。</li>
<li>CMake 构建系统： Qt6 仍然支持 qmake，但建议使用 CMake。</li>
<li>其他（多媒体、网络、 Qt Quick 3D 等模块的改进）。</li>
</ul>
<h2 id="Qt的安装">1.2 &nbsp&nbsp<a href="#Qt的安装" class="headerlink" title="Qt的安装"></a>Qt的安装</h2><div class="note info no-icon"><p>个人推荐：手动选择组件编译安装Qt。详见<a href="/code/qt/#Qt%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91">Qt源码编译</a>。</p>
</div>

<p>自Qt5.1.5起，Qt官方只提供在线安装包。</p>
<p>官方下载链接：<a href="https://download.qt.io/official_releases/online_installers/">点击跳转</a>。<br>清华镜像下载链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/qt/official_releases/online_installers/">点击跳转</a></p>
<p>本人是从源码编译安装Qt，具体的在线安装步骤不再总结。</p>
<h2 id="编写一个Hello-World程序">1.3 &nbsp&nbsp<a href="#编写一个Hello-World程序" class="headerlink" title="编写一个Hello World程序"></a>编写一个Hello World程序</h2><p>Qt Creator 简介：</p>
<ul>
<li>Qt Creator 为应用程序开发人员提供了一个完整的跨平台、集成开发环境 (IDE) ，以便为桌面、嵌入式和移动设备平台（如 Android 和iOS）创建应用程序。</li>
<li>Qt Creator 提供了在整个应用程序开发生命周期所需的工具，从创建项目到将应用程序部署到目标平台。</li>
</ul>
<p>Qt Creator新建工程的一些总结：</p>
<ol>
<li>应用类型：<ul>
<li>Widgets：widget界面</li>
<li>Console：控制台程序</li>
<li>Quick：QML实现的界面</li>
</ul>
</li>
<li>base class基础类：<ul>
<li>QMainWindow：主窗口类，包括菜单栏、工具栏、状态栏</li>
<li>QWidget ：可以创建一个空白的窗口，是所有界面组件的基类</li>
<li>QDialog ：对话框类（比如创建工程弹出的窗口就是对话框类型，对话式窗口，比如下一步按钮继续执行）</li>
</ul>
</li>
<li>翻译文件：i18国际化语言</li>
</ol>
]]></content>
      <categories>
        <category>code-training</category>
        <category>qt6-cpp-development-guide</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>qt</tag>
        <tag>第一章</tag>
        <tag>qt6</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt6 C++开发指南：第二章「GUI程序设计基踹」习题答案</title>
    <url>/code-training/qt6-cpp-development-guide/chap2/</url>
    <content><![CDATA[<h1 id="第二章：GUI程序设计基础">1 &nbsp&nbsp<a href="#第二章：GUI程序设计基础" class="headerlink" title="第二章：GUI程序设计基础"></a>第二章：GUI程序设计基础</h1><p>项目目录文件结构：</p>
<ul>
<li>CMakeLists.txt：cmake构建系统的项目配置文件，存储了各种项目设置</li>
<li>main.cpp：主程序入口文件，实现main函数</li>
<li>widget.ui：使用XML格式描述元件及布局的界面文件</li>
<li>widget.h：窗口类定义头文件，用到了.ui文件（Generate form）</li>
<li>widget.cpp：是实现文件</li>
<li>res.qrc：资源文件</li>
</ul>
<p>指针的命名空间换名。Ui_Widget没有父类，不是窗口类。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> Ui&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Widget</span>: <span class="keyword">public</span> Ui Widget &#123;&#125;;</span><br><span class="line">&#125; <span class="comment">// namespace Ui</span></span><br></pre></td></tr></table></figure>

<p>Qt项目构建过程基本原理：Qt C++头文件经过MOC（Meta-object Compiler），窗口UI文件通过UIC，资源文件通过RCC转换成标准C++程序，之后通过标准C++编译器生成可执行文件。</p>
]]></content>
      <categories>
        <category>code-training</category>
        <category>qt6-cpp-development-guide</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>qt</tag>
        <tag>第二章</tag>
        <tag>qt6</tag>
      </tags>
  </entry>
  <entry>
    <title>QT6 C++开发指南：习题答案</title>
    <url>/code-training/qt6-cpp-development-guide/qt6-cpp-development-guide/</url>
    <content><![CDATA[<p><em>习题代码和总结笔记主要参照视频教程<a href="https://www.bilibili.com/video/BV1km4y1k7CW/">《Qt6 C++开发指南》2023（上册，完整版）</a></em></p>
<p>练习代码文件的仓库链接：<a href="https://github.com/Mister-Kin/CodeTraining/blob/master/qt6_cpp_development_guide/">点击跳转</a></p>
<ul>
<li><a href="/code-training/qt6-cpp-development-guide/chap1/">第一章「认识Qt」习题答案</a></li>
<li><a href="/code-training/qt6-cpp-development-guide/chap2/">第二章「GUI程序设计基础」习题答案</a></li>
</ul>
]]></content>
      <categories>
        <category>code-training</category>
        <category>qt6-cpp-development-guide</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>qt</tag>
        <tag>C++</tag>
        <tag>qt6</tag>
        <tag>开发</tag>
        <tag>第一版</tag>
      </tags>
  </entry>
  <entry>
    <title>IELTS雅思词汇圣经：6分词汇</title>
    <url>/english/IELTS/score6/</url>
    <content><![CDATA[<h1 id="list1"><a href="#list1" class="headerlink" title="list1"></a>list1</h1><ul>
<li>abstract adj.抽象的 n.摘要，概要<ul>
<li>thinking in abstract terms 抽象思维</li>
<li>同 theoretical 反 concrete</li>
</ul>
</li>
<li>abundance n.大量,充足<ul>
<li>an abundance of sth. 大量的……</li>
<li>同 sufficiency 反lack</li>
</ul>
</li>
<li>abuse v.滥用，妄用；虐待（尤指性）n.滥用[U,sing.]，虐待[U,pl.]<ul>
<li>abuse sb.&#x2F;sth. 虐待……&#x2F;滥用……</li>
<li>abuse of power 滥用职权</li>
<li>child abuse 儿童虐待</li>
<li>同 misapply, make ill use of; ill-treat</li>
</ul>
</li>
<li>baggage n.(AmE)行李<ul>
<li>同 luggage</li>
</ul>
</li>
<li>candidate n.候选人，申请人（竞选&#x2F;求职）<ul>
<li>candidate for sth. ……的候选人</li>
<li>同 applicant, seeker</li>
</ul>
</li>
<li>canteen n.食堂，餐厅</li>
<li>capable adj.有能力的，有才能的<ul>
<li>be capable of doing 有能力做……</li>
<li>同 able,competent 反 incapable</li>
</ul>
</li>
<li>capacity n.容量；能力<ul>
<li>a capacity of num+单位 有……的容量</li>
<li>同 ability</li>
</ul>
</li>
<li>capital n.资本，资金；首都；大写字母</li>
<li>data n.资料，数据</li>
<li>date n.日期，日子；年份 v.存在，追溯<ul>
<li>date back to medieval times 始于中世纪</li>
<li>date back hundreds of years 追溯到几百年前</li>
<li>date from the 17th century 自17世纪起</li>
</ul>
</li>
<li>economy n.经济</li>
<li>edition n.版本（出版）<ul>
<li>同 version</li>
</ul>
</li>
<li>facilitate v.促进，促使，使便利<ul>
<li>同 ease</li>
</ul>
</li>
<li>facilities n.设施，设备<ul>
<li>sporting facilities 运动设施</li>
</ul>
</li>
<li>gamble v.赌博（用钱）<ul>
<li>gamble sth away 赌掉xx</li>
<li>gamble on sth.&#x2F;on doing sth. 冒……的风险&#x2F;碰……的运气</li>
<li>同 bet, try one&#39;s luck</li>
</ul>
</li>
<li>gang n.一群，一伙（闹事青少年）</li>
<li>hairdresser n.理发师</li>
<li>identification n.身份证明<ul>
<li>同 recognition</li>
</ul>
</li>
<li>identify v.确认、证明<ul>
<li>identify sb.&#x2F;sth. 鉴别出……</li>
<li>identify sb. with sth. 把某人视为……</li>
<li>同 determine</li>
</ul>
</li>
<li>idiom n.习语，成语，惯用语</li>
<li>idle adj.闲散的，无工作的 v.无所事事；闲荡<ul>
<li>idle sb.&#x2F;sth. (暂时性)关闭工厂，使工人闲着</li>
<li>近 inactive,lazy 反 busy（adj.&#x2F;n.）</li>
<li>idle和busy&#x2F;load也常用于计算机</li>
</ul>
</li>
<li>jar n.广口瓶</li>
<li>jealous adj.嫉羡的，羡慕的<ul>
<li>be jealous of sb.&#x2F;sth. 妒忌……</li>
<li>近 envious</li>
</ul>
</li>
<li>labour n.劳动，劳力 v.努力做（困难的事）；干苦力活<ul>
<li>labour to do sth. 努力做……</li>
<li>近 work</li>
</ul>
</li>
<li>lack v.没有（某事物），缺乏，缺少，不足<ul>
<li>近 need（provide assistance in need 提供帮助）（need指缺乏，食物、钱、生活来源）</li>
</ul>
</li>
<li>magnify v.放大；夸张，夸大<ul>
<li>同 enlarge 反 minify</li>
</ul>
</li>
<li>naive adj.缺乏经验的，幼稚无知的；天真的<ul>
<li>同 innocent, simple</li>
</ul>
</li>
<li>overview n.(fml.)综览，概观，概述</li>
<li>pension n.养老金，抚恤金，退休金 v.发送养老金<ul>
<li>pension sb. off 准许&#x2F;强迫某人退休(并发送养老金)</li>
</ul>
</li>
<li>perceive v.理解，认为；意识到，注意到<ul>
<li>sb.&#x2F;sth. be perceived to be&#x2F;have sth.人们认为某人某物……（常用被动）</li>
<li>同 detect</li>
</ul>
</li>
<li>percent n.百分之…… adj.每一百中</li>
<li>percentage n.百分比；利润的分成，提成</li>
<li>responsible adj.有责任的，承担义务的，负责<ul>
<li>be responsible for doing&#x2F;sb.&#x2F;sth. 对……有责任</li>
<li>be responsible to sb.&#x2F;sth. （向上级）负责，承担责任</li>
<li>同 accountable</li>
</ul>
</li>
<li>restore v.回复（某种情况&#x2F;感受）<ul>
<li>restore sb.&#x2F;sth. to sth. 使……复原……</li>
<li>同 recover</li>
</ul>
</li>
<li>restrain v.制止，管制（武力）；约束，控制<ul>
<li>restrain yourself from doing&#x2F;sth. 约束自己不做……</li>
<li>同 inhibit</li>
</ul>
</li>
<li>setback n.挫折，阻碍</li>
<li>severe adj.严格的，苛刻的，纪律严明的；十分严重的；艰难的；过于简朴的<ul>
<li>be severe with sb. 对……严格</li>
</ul>
</li>
<li>shabby adj.因使用过久或管理不善而破旧；不公正的，不合理的</li>
<li>shallow adj.浅的；肤浅的，浅薄的<ul>
<li>同 superficial 反 deep</li>
</ul>
</li>
<li>yield v.出产（作物），产生（效益）；屈服，让步；放弃，缴出；变形，弯曲；给……让路 n.产量，产出，利润<ul>
<li>yield to sb.&#x2F;sth. 屈服于……（不情愿同意）</li>
<li>yield to the demands 不情愿同意要求</li>
<li>yield sb.&#x2F;sth. (up)(to sb) 放弃&#x2F;缴出……</li>
<li>yield up the gun 缴枪</li>
<li>yield to oncoming traffic 会车让行</li>
</ul>
</li>
<li>youngster n.(infml.)年轻人，少年，儿童<ul>
<li>同 juvenile</li>
</ul>
</li>
</ul>
<h1 id="list2"><a href="#list2" class="headerlink" title="list2"></a>list2</h1><ul>
<li>abandon v.离弃，舍弃<ul>
<li>同 desert,forsake 反reclaim</li>
</ul>
</li>
<li>abnormal adj.反常的，变态的<ul>
<li>反normal</li>
</ul>
</li>
<li>absorb v.吸收<ul>
<li>同give out</li>
</ul>
</li>
<li>bacteria n.(pl.)细菌<ul>
<li>sing. bacterium</li>
</ul>
</li>
<li>badminton n.羽毛球运动</li>
<li>cafeteria n.自助餐厅，自助食堂<ul>
<li>同 coffee shop, lunchroom</li>
</ul>
</li>
<li>calculate v.计算，推算<ul>
<li>同 compute, estimate</li>
</ul>
</li>
<li>calendar n.日历，挂历<ul>
<li>同 programme</li>
</ul>
</li>
<li>campus n.校园，校区（大学、学院的）</li>
<li>cancel v.取消，撤销<ul>
<li>同 drop, call off</li>
</ul>
</li>
<li>damage n.&#x2F;v.损失，损害，损毁<ul>
<li>同 ingury&#x2F;ingure</li>
</ul>
</li>
<li>damp n.不完全干燥的，潮湿的<ul>
<li>反 dry</li>
</ul>
</li>
<li>dash v.猛冲，突进<ul>
<li>同 rush</li>
</ul>
</li>
<li>ease n.容易，不费劲<ul>
<li>反 burden</li>
</ul>
</li>
<li>ecology n.生态关系，生态学</li>
<li>fabric n.织物，布料<ul>
<li>同 material</li>
</ul>
</li>
<li>fabulous adj.极好的，绝妙的<ul>
<li>同 wonderful</li>
</ul>
</li>
<li>gallery n.走廊，柱廊</li>
<li>habitat n.自然环境（动&#x2F;植物的），栖息地</li>
<li>ideal adj.理想的，完美的；最合适的 n.完美的人或事物<ul>
<li>同 flawless,perfect</li>
</ul>
</li>
<li>idealism n.理想主义者，唯心论</li>
</ul>
]]></content>
      <categories>
        <category>english</category>
        <category>IELTS</category>
      </categories>
      <tags>
        <tag>英文</tag>
        <tag>雅思</tag>
        <tag>IELTS</tag>
        <tag>词汇</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender自学资料向（干货整理）(内容已过时，作废)</title>
    <url>/software/blender/blender-learning-resources/</url>
    <content><![CDATA[<img data-src="/images/blender_learning_resources/cover.webp" style="width: 580px">

<p>本文主要介绍自学资料的获取途径。</p>
<h2 id="官方资料【强烈推荐】">0.1 &nbsp&nbsp<a href="#官方资料【强烈推荐】" class="headerlink" title="官方资料【强烈推荐】"></a>官方资料【强烈推荐】</h2><h3 id="Blender官方用户手册（User-Manual）【强烈推荐】">0.1.1 &nbsp&nbsp<a href="#Blender官方用户手册（User-Manual）【强烈推荐】" class="headerlink" title="Blender官方用户手册（User Manual）【强烈推荐】"></a>Blender官方用户手册（User Manual）<strong>【强烈推荐】</strong></h3><p>获取条件：不需翻墙。</p>
<p>描述：手册是一个十分重要的学习资源，其中包含着大量的关于Blender的基本知识及基础操作，不懂操作时，多翻翻手册。我推荐各位是去看英文文档的，因为这领域不少术语都没有很好的中文翻译。并且目前手册还有不少模块并没有中文化翻译，这也属正常，因为文档的翻译总是落后于源文档的更新，但文档翻译参与者数量不多也是一大原因。本人目前参与Krita文档的中文化翻译，对此感触颇深，这领域的翻译者着实太少了，像Krita的文档翻译者，用手指头就能数过来了。目前本人暂无过多精力，可能未来会有计划参与Blender的文档中文化翻译。</p>
<p>入口：<a href="https://docs.blender.org/manual/en/dev/">官方手册链接</a></p>
<span id="more"></span>

<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/manual-279.webp">2.79版本用户手册页面部分截图</div>
<div class="flex-column">
<img data-src="/images/blender_learning_resources/manual-280.webp">2.80版本用户手册页面部分截图</div>
</div>

<p><strong>注：2.8手册刚刚开写，所以内容跟2.79基本一样。(目前网站上已可以正常切换中文版手册)<del>且现在官网上也无法正常切换到中文版的手册，估计是官方忙着写新手册吧。</del></strong></p>
<h3 id="Blender官方完整文档（Blender-WiKi）【推荐】">0.1.2 &nbsp&nbsp<a href="#Blender官方完整文档（Blender-WiKi）【推荐】" class="headerlink" title="Blender官方完整文档（Blender WiKi）【推荐】"></a>Blender官方完整文档（Blender WiKi）<strong>【推荐】</strong></h3><p>条件：不需翻墙。</p>
<p>描述：WiKi上记录着很多Blender的资料，包括各版本的发布记录，记录详情可在Reference&#x2F;Release Notes条目中找到，在这你能了解到Blender各模块发展情况。此外，WiKi上还有FAQ等内容，这些就不多介绍了。</p>
<p>入口：<a href="https://wiki.blender.org/">Wiki网站链接</a></p>
<div class="flex-column">
<img data-src="/images/blender_learning_resources/developer-wiki.webp">WiKi网站部分截图
</div>

<h3 id="Blender官网网站支持页面（Support）【推荐】">0.1.3 &nbsp&nbsp<a href="#Blender官网网站支持页面（Support）【推荐】" class="headerlink" title="Blender官网网站支持页面（Support）【推荐】"></a>Blender官网网站支持页面（Support）<strong>【推荐】</strong></h3><p>条件：不需翻墙。</p>
<p>描述：该页面包含许多链接。如下图，文档类、教程类，社区支持等。用户手册地址都可以从这访问。教程类列出很多链接，其中含有Blender Cloud，经济条件允许的朋友可以选择支持下，注册为云成员。云上面有很多录制的视频教程，它也包含着开源电影的相关资源。云上面有一个《Blender Inside Out》系列视频，这个十分适合从其他三维平台转到Blender上的朋友去学习，讲得很细致。但因为里面有着很多硬基础知识，因此不适合完全零基础的人。（这个系列我也搬运到B站上，目前完成了第一章翻译，其余暂时都还是油管的机翻字幕，视频请戳<a href="https://www.bilibili.com/video/av21352168">这里</a>）</p>
<p>入口：<a href="https://www.blender.org/support/">Support页面链接</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/support.webp">Support页面部分截图</div>
</div>

<h3 id="Blender官方教程（Blender-Old-WiKi）【旧址】【不推荐】">0.1.4 &nbsp&nbsp<a href="#Blender官方教程（Blender-Old-WiKi）【旧址】【不推荐】" class="headerlink" title="Blender官方教程（Blender Old WiKi）【旧址】【不推荐】"></a><del>Blender官方教程（Blender Old WiKi）</del><strong>【旧址】【不推荐】</strong></h3><p>条件：不需翻墙。注：可能部分外部教程链接需要翻墙或者失效了。</p>
<p>描述：其实就是旧WiKi，但该旧WiKi已全部迁至新WiKi地址了，且该网站已经停止更新。大部分内容都是文字。</p>
<p>入口：<a href="https://en.blender.org/">教程网站新链接</a></p>
<p>旧址：<del><a href="https://wiki.blender.org/index.php/Doc:2.6/Tutorials">https://wiki.blender.org/index.php/Doc:2.6/Tutorials</a></del> 【已失效，新入口在上方】</p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/wiki2.6.webp">旧WiKi部分截图</div>
</div>

<h2 id="站点推荐">0.2 &nbsp&nbsp<a href="#站点推荐" class="headerlink" title="站点推荐"></a>站点推荐</h2><h3 id="国外篇">0.2.1 &nbsp&nbsp<a href="#国外篇" class="headerlink" title="国外篇"></a>国外篇</h3><h4 id="Blender-Guru-【强烈推荐】">0.2.1.1 &nbsp&nbsp<a href="#Blender-Guru-【强烈推荐】" class="headerlink" title="Blender Guru 【强烈推荐】"></a>Blender Guru 【强烈推荐】</h4><p>条件：无需翻墙。但实际上该站点的视频是存放于油管上的，所以想看视频是需要搭梯子翻出去的。</p>
<p>描述：Guru站点我不必多言了，相信很多朋友都看过Guru站点的教程，教程都是免费的。Guru站点有个一个初学者的系列视频，十分适合完全三维零基础的朋友去学习，就是下方右图的“甜甜圈&quot;视频系列。（视频请戳<a href="https://www.blenderguru.com/tutorials/blender-beginner-tutorial-series">这里</a>）。站长Andrew Price是个十分帅气幽默的小伙。想了解Guru网站的成立由来可以戳这个：<a href="https://www.blenderguru.com/about/">Guru站点由来</a></p>
<p>入口：<a href="https://www.blenderguru.com/">Guru站点链接</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/andrew-price.webp" style="width: 611px">Andrew Price 本人</div>
<div class="flex-column"><img data-src="/images/blender_learning_resources/blender-guru.webp">Guru站点部分截图</div>
</div>


<p><strong>注：后面国外篇的站点，本人不经常访问，不太了解详情，所以有些就不作描述了</strong></p>
<h4 id="Blender-Community-【推荐】">0.2.1.2 &nbsp&nbsp<a href="#Blender-Community-【推荐】" class="headerlink" title="Blender Community 【推荐】"></a>Blender Community 【推荐】</h4><p>入口：<a href="https://blender.community/c/">Blender Community站点</a></p>
<h4 id="Creative-Shrimp-【推荐】">0.2.1.3 &nbsp&nbsp<a href="#Creative-Shrimp-【推荐】" class="headerlink" title="Creative Shrimp 【推荐】"></a>Creative Shrimp 【推荐】</h4><p>描述：没怎么具体了解过，我猜应该是Gleb Alexandrov搭建的。最初是通过Gleb的一个加速渲染的视频了解到他的，视频详情请戳<a href="https://www.bilibili.com/video/av22416165/"><strong>这里</strong></a>。</p>
<p>入口：<a href="http://www.creativeshrimp.com/">Creative Shrimp站点链接</a></p>
<h4 id="CG-Geek">0.2.1.4 &nbsp&nbsp<a href="#CG-Geek" class="headerlink" title="CG Geek"></a>CG Geek</h4><p>入口：<a href="https://www.deviantart.com/cg-geek">CG Geek站点链接</a></p>
<h4 id="CG-Masters">0.2.1.5 &nbsp&nbsp<a href="#CG-Masters" class="headerlink" title="CG Masters"></a>CG Masters</h4><p>入口：<a href="https://cgmasters.net/">CG Masters站点链接</a></p>
<h4 id="Blender-Cookie">0.2.1.6 &nbsp&nbsp<a href="#Blender-Cookie" class="headerlink" title="Blender Cookie"></a>Blender Cookie</h4><p>入口：<a href="https://cgcookie.com/">Blender Cookie站点链接</a></p>
<h4 id="BlenderDiplom">0.2.1.7 &nbsp&nbsp<a href="#BlenderDiplom" class="headerlink" title="BlenderDiplom"></a>BlenderDiplom</h4><p>描述：Blender官方云上有一本关于Cycles引擎教程的电子书——《The Cycles Encylopedia v1.4》，该书的两位作者都活跃于该站点上。</p>
<p>入口：<a href="http://www.blenderdiplom.com/en/">BlenderDiplom站点链接</a></p>
<h4 id="Blender-Nation">0.2.1.8 &nbsp&nbsp<a href="#Blender-Nation" class="headerlink" title="Blender Nation"></a>Blender Nation</h4><p>入口：<a href="https://www.blendernation.com/">Blender Nation站点链接</a></p>
<h4 id="Blender-Artists">0.2.1.9 &nbsp&nbsp<a href="#Blender-Artists" class="headerlink" title="Blender Artists"></a>Blender Artists</h4><p>入口：<a href="https://blenderartists.org/">Blender Artists站点链接</a></p>
<h4 id="Blender-Nerd【不推荐】">0.2.1.10 &nbsp&nbsp<a href="#Blender-Nerd【不推荐】" class="headerlink" title="Blender Nerd【不推荐】"></a><del>Blender Nerd</del>【不推荐】</h4><p>描述：该站点目前改成了Richard Harby，不清楚该站点什么规划。以前不怎么上这站点，所以我不做跟进了解。</p>
<p>入口：<a href="http://www.blendernerd.com/">Blender Nerd站点链接</a></p>
<h3 id="国内篇">0.2.2 &nbsp&nbsp<a href="#国内篇" class="headerlink" title="国内篇"></a>国内篇</h3><h4 id="Blender中国社区（斑斓中国）【推荐】">0.2.2.1 &nbsp&nbsp<a href="#Blender中国社区（斑斓中国）【推荐】" class="headerlink" title="Blender中国社区（斑斓中国）【推荐】"></a>Blender中国社区（斑斓中国）【推荐】</h4><p>入口：<a href="http://www.blendercn.org/">斑斓中国站点链接</a></p>
<h4 id="Blender-Get-【推荐】">0.2.2.2 &nbsp&nbsp<a href="#Blender-Get-【推荐】" class="headerlink" title="Blender Get 【推荐】"></a>Blender Get 【推荐】</h4><p>描述：Blender Get是罗聪翼先生搭建的站点，罗先生著有全球首本中文著作《Blender权威指南》。</p>
<p>入口：<a href="http://www.blenderget.com/">Blender Get站点链接</a></p>
<h2 id="B站篇UP推荐">0.3 &nbsp&nbsp<a href="#B站篇UP推荐" class="headerlink" title="B站篇UP推荐"></a>B站篇UP推荐</h2><h3 id="翻译UP">0.3.1 &nbsp&nbsp<a href="#翻译UP" class="headerlink" title="翻译UP"></a>翻译UP</h3><h4 id="Mr-Kin-【强烈推荐】">0.3.1.1 &nbsp&nbsp<a href="#Mr-Kin-【强烈推荐】" class="headerlink" title="Mr. Kin 【强烈推荐】"></a>Mr. Kin 【强烈推荐】</h4><div class="flex-row-left-start">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/comical-face.webp" style="width: 200px">没错，就是我，滑稽护体。
</div>
</div>

<p><a href="https://space.bilibili.com/17025250/#/">空间入口请戳</a>。<strong>（明示支持三连，滑稽.jpg）</strong></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/my-bili-zone.webp">我的Bilibili空间截图
</div>
</div>

<h4 id="随波远流">0.3.1.2 &nbsp&nbsp<a href="#随波远流" class="headerlink" title="随波远流"></a>随波远流</h4><p><a href="https://space.bilibili.com/24808665/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/suibozhuliu-zone.webp">随波远流的Bilibili空间截图
</div>
</div>

<h4 id="CGGAP">0.3.1.3 &nbsp&nbsp<a href="#CGGAP" class="headerlink" title="CGGAP"></a>CGGAP</h4><p><a href="https://space.bilibili.com/50678221/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/cggap-zone.webp">CGGA的Bilibili空间截图
</div>
</div>

<p><strong>注：其他不作介绍了，大家自己去寻找吧！</strong></p>
<h3 id="原创UP">0.3.2 &nbsp&nbsp<a href="#原创UP" class="headerlink" title="原创UP"></a>原创UP</h3><h4 id="blenderCN-黑马赛克-【推荐】">0.3.2.1 &nbsp&nbsp<a href="#blenderCN-黑马赛克-【推荐】" class="headerlink" title="blenderCN-黑马赛克 【推荐】"></a>blenderCN-黑马赛克 【推荐】</h4><p><a href="https://space.bilibili.com/7549097/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/blendercn-zone.webp">blenderCN-黑马赛克的Bilibili空间截图
</div>
</div>

<h4 id="顺子老师">0.3.2.2 &nbsp&nbsp<a href="#顺子老师" class="headerlink" title="顺子老师"></a>顺子老师</h4><p><a href="https://space.bilibili.com/38988725/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/shunzi-zone.webp">顺子老师的Bilibili空间截图
</div>
</div>

<h4 id="我是栗子菌">0.3.2.3 &nbsp&nbsp<a href="#我是栗子菌" class="headerlink" title="我是栗子菌"></a>我是栗子菌</h4><p><a href="https://space.bilibili.com/20444678/#/">空间入口请戳</a></p>
<div class="flex-row">
<div class="flex-column">
<img data-src="/images/blender_learning_resources/shunzi-zone.webp">我是栗子菌的Bilibili空间截图
</div>
</div>

<p><strong>注：其他不作介绍了，大家自己去寻找吧！</strong></p>
<h2 id="Youtube专讲【强烈推荐】">0.4 &nbsp&nbsp<a href="#Youtube专讲【强烈推荐】" class="headerlink" title="Youtube专讲【强烈推荐】"></a>Youtube专讲【强烈推荐】</h2><h3 id="概述">0.4.1 &nbsp&nbsp<a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>条件：翻墙。也可通过镜像链接来访问，即不需翻墙，但肯定不如原网站链接好使，且油管的镜像链接经常失效。<strong>推荐搭梯子翻墙</strong>，不推荐使用镜像链接直翻。</p>
<p>作为全球最大的视频网站，油管有着许多优质的教程，以上有些站点的视频教程便是放在油管上的，例如Guru。建议朋友们上油管搜索教程，搜索也是有不少技巧的，以下列出一些关键字：</p>
<ul>
<li>搜索Blender，关键字【blender】</li>
<li>搜索教程时，关键字【tutorial】或【training】</li>
<li>具体搜索某个模块时，比如建模，关键字【modeling】；角色建模，关键字【character modeling】</li>
<li>纹理贴图，关键字【texture】</li>
<li>材质，关键字【material】</li>
<li>渲染，关键字【rendering】</li>
<li>灯光，关键字【lighting】</li>
<li>动画，关键字【animate】【animation】</li>
<li>其余以此类推</li>
</ul>
<p>关于油管的使用，对于英文不太好的朋友来说，如果视频没有自带中文字幕，可以选择观看油管的自动翻译字幕。如果原视频带有其他语言的字幕，此时自动翻译的质量还是不错的。但如果原视频没有自带任何字幕，只能看机器是否能够识别出来语言来了，例如视频开头若有很长一段背景音乐就无法识别了。使用选项如下图：<br><img data-src="/images/blender_learning_resources/youtube.webp"></p>
<h3 id="Youtuber推荐">0.4.2 &nbsp&nbsp<a href="#Youtuber推荐" class="headerlink" title="Youtuber推荐"></a>Youtuber推荐</h3><ul>
<li>Blender Developers</li>
<li>Blender</li>
<li>Blender Guru</li>
<li>Daniel Kreuter</li>
<li>CG Master</li>
<li>CG Geek</li>
<li>Gleb Alexandrov</li>
<li>CG Cookie - Blender Training</li>
</ul>
<p><strong>注：其他靠大家寻找了，不过多列举了。</strong></p>
<h2 id="结语">0.5 &nbsp&nbsp<a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>关于英语资料的阅读技巧：</p>
<ul>
<li>提高英语水平 —— 应对所有状况</li>
<li>给浏览器装上页面翻译的拓展插件 —— 应对网站上文字类资料</li>
<li>Youtube的自动翻译选项 —— 应对视频（前提：油管上有该视频且满足自动翻译的条件）</li>
</ul>
<p>以上很多资料都是英文居多，非以英语为母语的我们，观看时难免会有阅读障碍。拿我自己举个例子吧，虽然我能看懂听译这些教程，但其实速度上远远不及阅读中文的速度，相比于看英文，看中文的速度就像是开挂加速的。而这对于想要快速通过教程资料上手BL的朋友们来说，中文无疑是成为了一个很重要的因素。所以，这也是我做翻译的一个原因，同时也是为了方便自个看吧。但由于个人精力有限，因此我此前搬运的大部分视频教程的中文字幕是油管上的机翻字幕，所以也同时贴出英文字幕（油管上英文字幕准确率还是可以的）。至于有些没字幕的，才会去听译，但听译极其耗费时间和精力。</p>
<p>目前本人已暂停搬运教程，正在编写一个字幕处理程序，以此加快我翻译的速度。程序完成后，会重新开始译制教程，并在过往的投稿选择我认为较为重要的机翻教程教程进行精翻。</p>
<p>Anyways, 其实掌握了基础的语法和音标，把词汇量提上去，英语学习基本上是没有障碍的了。汉语是语义型语言，注重内容的意会性；英语是语法型语言，表现形式完整、严谨。这一点认识对于英语的学习来说也是很重要的，意识到这个，要有针对性地学习，我们就不能用汉语的思维去学习英语。而关于词汇量的提高方法，不赘述了，仅告诫大家一点，切忌死记硬背，放在语境中去理解来记更好，比如多去阅读英文资料。更多时候英文资料看不看得下去，其实是<strong>心态问题</strong>。</p>
<p>Alright! Hope you guys could enjoy learning Blender! Adios!</p>
<p><em><strong>注：最后呼吁喜欢这领域且英语不错的朋友能够参与该领域的翻译，无论是文档或是程序本体亦或是教程视频。十分感谢！欢迎和我交流！</strong></em></p>
<p><a href="https://www.bilibili.com/read/cv553195">本文B站链接</a></p>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
      </categories>
      <tags>
        <tag>开源软件</tag>
        <tag>翻译</tag>
        <tag>blender</tag>
        <tag>资料整理</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender总结</title>
    <url>/software/blender/blender/</url>
    <content><![CDATA[<div class="flex-row">
<a href="/software/blender/interface-tools-operation">
<button class="navigation-button-box">Blender界面工具操作总结</button></a>
<div style="width: 20px;"></div>
<a href="/software/blender/q-a">
<button class="navigation-button-box">Blender常见问题总结——Q&A</button></a>
</div>

<div class="flex-row">
<a href="/software/blender/examples">
<button class="navigation-button-box">Blender实战案例总结</button></a>
<div style="width: 20px;"></div>
<a href="/software/blender/code-development">
<button class="navigation-button-box">Blender二次代码开发总结</button></a>
</div>

<div class="flex-row">
<a href="/software/blender/blender-learning-resources">
<button class="navigation-button-box">Blender自学资料向（干货整理）(内容已过时，作废)</button></a>
</div>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>blender</tag>
        <tag>汇总</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender二次代码开发总结</title>
    <url>/software/blender/code-development/</url>
    <content><![CDATA[<h1 id="推荐资源">1 &nbsp&nbsp<a href="#推荐资源" class="headerlink" title="推荐资源"></a>推荐资源</h1><ul>
<li><a href="https://b3d.interplanety.org/en/">B3D - Interplanety</a></li>
</ul>
<h1 id="开发技巧">2 &nbsp&nbsp<a href="#开发技巧" class="headerlink" title="开发技巧"></a>开发技巧</h1><ul>
<li>cycles API直接查看cycles源码，properties.py</li>
<li>blender -r -R注册blend后缀名文件，小r为静默注册-v显示版本</li>
<li>blender排错cmd工具：blender_debug_log.bat</li>
</ul>
<p>用户偏好设置-开发额外选项+Python工具提示+工具提示</p>
<p>开启「开发额外选项」后，右键UI组件，可以查看源代码。</p>
<p>在寻找UI组件所在类目时，可查看Python工具提示信息。</p>
<p>在查找一些操作命令时，可以在blender里操作后在控制台看执行的语句。活用blender控制台进行调试。</p>
<p>live edit状态去除bl_info（meta元数据），其余状态一样</p>
<p>Operator 的 bl_label 的 translation context 必须为 Operator。<br>Operator 的 bl_description 的 translation context 必须为 *。</p>
<p>blender主程序目录下，有debug.cmd工具可以用于生成blender崩溃的日志。</p>
<h1 id="常见API总结">3 &nbsp&nbsp<a href="#常见API总结" class="headerlink" title="常见API总结"></a>常见API总结</h1><ul>
<li>插件信息说明：<a href="https://wiki.blender.org/wiki/Process/Addons/Guidelines/metainfo#Script_Meta_Info">见info字典元素</a></li>
<li>bpy.types：Header, Menu, Panel, Operator。前三个都是需要定义draw函数来实现UI，Operator一般用来定义操作的execute函数。</li>
<li><a href="https://docs.blender.org/api/current/bpy.props.html#">Props属性</a></li>
<li><a href="https://docs.blender.org/api/current/bpy.types.KeyMaps.html#bpy.types.KeyMaps">KeyMaps类</a></li>
<li><a href="https://docs.blender.org/api/current/bpy.types.KeyMapItems.html#bpy.types.KeyMapItem">KeyMapItem类</a></li>
</ul>
<h1 id="插件升级功能">4 &nbsp&nbsp<a href="#插件升级功能" class="headerlink" title="插件升级功能"></a>插件升级功能</h1><ul>
<li><a href="https://theduckcow.com/2016/addon-updater-tutorial/">https://theduckcow.com/2016/addon-updater-tutorial/</a></li>
<li><a href="https://github.com/CGCookie/blender-addon-updater">https://github.com/CGCookie/blender-addon-updater</a></li>
</ul>
<h1 id="常见问题总结">5 &nbsp&nbsp<a href="#常见问题总结" class="headerlink" title="常见问题总结"></a>常见问题总结</h1><h2 id="调用operator出现poll-函数报错">5.1 &nbsp&nbsp<a href="#调用operator出现poll-函数报错" class="headerlink" title="调用operator出现poll()函数报错"></a>调用operator出现poll()函数报错</h2><div class="note info no-icon"><p>在Blender的插件开发中，业务逻辑功能若能避免使用bpy.ops函数就尽量避免使用，因为大量使用ops函数不仅影响性能，而且还可能引发poll函数RuntimeError异常。二次代码开发，更推荐使用Blender原生API类接口实现业务逻辑功能。</p>
</div>
<p>问题现象：RuntimeError: Operator bpy.ops.object.empty_image_add.poll() failed, context is incorrect</p>
<p>问题原因：Blender代码设计中，很多operator都有一个poll函数专门用于检测鼠标指针是否在一个有效的窗口区域或者检测当前物体是否在正确的模式中（例如编辑模式，权重绘制模式），如果poll函数返回失败值的话，就会引发RuntimeError异常。</p>
<p>解决方法：<br>context override的代码实现，如下代码适用于所有blender版本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ContextExecuterOverride</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, window, screen, area, region</span>):</span><br><span class="line">        <span class="variable language_">self</span>.window, <span class="variable language_">self</span>.screen, <span class="variable language_">self</span>.area, <span class="variable language_">self</span>.region = window, screen, area, region</span><br><span class="line">        <span class="variable language_">self</span>.legacy = <span class="keyword">not</span> <span class="built_in">hasattr</span>(bpy.context, <span class="string">&quot;temp_override&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.legacy:</span><br><span class="line">            <span class="variable language_">self</span>.context = bpy.context.copy()</span><br><span class="line">            <span class="variable language_">self</span>.context[<span class="string">&#x27;window&#x27;</span>] = window</span><br><span class="line">            <span class="variable language_">self</span>.context[<span class="string">&#x27;screen&#x27;</span>] = screen</span><br><span class="line">            <span class="variable language_">self</span>.context[<span class="string">&#x27;area&#x27;</span>] = area</span><br><span class="line">            <span class="variable language_">self</span>.context[<span class="string">&#x27;region&#x27;</span>] = region</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.context = bpy.context.temp_override(window=window, screen=screen, area=area, region=region)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__enter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.legacy:</span><br><span class="line">            <span class="variable language_">self</span>.context.__enter__()</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exit__</span>(<span class="params">self, exc_type, exc_value, traceback</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.legacy:</span><br><span class="line">            <span class="variable language_">self</span>.context.__exit__(<span class="variable language_">self</span>, exc_type, exc_value, traceback)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ContextScriptExecuter</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, area_type, ui_type=<span class="literal">None</span>, script=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.area_type = area_type</span><br><span class="line">        <span class="variable language_">self</span>.ui_type = ui_type <span class="keyword">if</span> ui_type <span class="keyword">else</span> area_type</span><br><span class="line">        <span class="variable language_">self</span>.script = script</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">script_content</span>(<span class="params">self, override</span>):</span><br><span class="line">        <span class="variable language_">self</span>.script(override)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">execute_script</span>(<span class="params">self</span>):</span><br><span class="line">        window = bpy.context.window</span><br><span class="line">        screen = window.screen</span><br><span class="line">        areas = [area <span class="keyword">for</span> area <span class="keyword">in</span> screen.areas <span class="keyword">if</span> area.<span class="built_in">type</span> == <span class="variable language_">self</span>.area_type]</span><br><span class="line">        area = areas[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(areas) <span class="keyword">else</span> screen.areas[<span class="number">0</span>]</span><br><span class="line">        prev_ui_type = area.ui_type</span><br><span class="line">        area.ui_type = <span class="variable language_">self</span>.ui_type</span><br><span class="line">        regions = [region <span class="keyword">for</span> region <span class="keyword">in</span> area.regions <span class="keyword">if</span> region.<span class="built_in">type</span> == <span class="string">&#x27;WINDOW&#x27;</span>]</span><br><span class="line">        region = regions[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(regions) <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">with</span> ContextExecuterOverride(window=window, screen=screen, area=area, region=region) <span class="keyword">as</span> override:</span><br><span class="line">            <span class="variable language_">self</span>.script_content(override)</span><br><span class="line">        area.ui_type = prev_ui_type</span><br></pre></td></tr></table></figure>
<p>具体context override代码的使用例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bpy.ops.object.empty_image_add()函数例子</span></span><br><span class="line">ContextScriptExecuter(</span><br><span class="line">    area_type=<span class="string">&quot;VIEW_3D&quot;</span>,</span><br><span class="line">    script=<span class="keyword">lambda</span> override: (</span><br><span class="line">        bpy.ops.<span class="built_in">object</span>.empty_image_add(</span><br><span class="line">            override.context, filepath=blueprint_front</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> override.legacy</span><br><span class="line">        <span class="keyword">else</span> bpy.ops.<span class="built_in">object</span>.empty_image_add(filepath=blueprint_front_path)</span><br><span class="line">    ),</span><br><span class="line">).execute_script()</span><br><span class="line"><span class="comment"># bpy.ops.view3d.view_axis()函数例子</span></span><br><span class="line">ContextScriptExecuter(</span><br><span class="line">    area_type=<span class="string">&quot;VIEW_3D&quot;</span>,</span><br><span class="line">    script=<span class="keyword">lambda</span> override: (</span><br><span class="line">        bpy.ops.view3d.view_axis(override.context, <span class="built_in">type</span>=<span class="string">&quot;FRONT&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> override.legacy</span><br><span class="line">        <span class="keyword">else</span> bpy.ops.view3d.view_axis(<span class="built_in">type</span>=<span class="string">&quot;FRONT&quot;</span>)</span><br><span class="line">    ),</span><br><span class="line">).execute_script()</span><br></pre></td></tr></table></figure>

<h1 id="参考文献">6 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] 「切换语言」使用手册 - Blender 插件，参考文献小节[EB&#x2F;OL]. <a href="https://mister-kin.github.io/works/software-works/toggle-language/#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">https://mister-kin.github.io/works/software-works/toggle-language/#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE</a>.<br>[2] poll() failed, context incorrect? - Example: bpy.ops.view3d.background_image_add()[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/6101/poll-failed-context-incorrect-example-bpy-ops-view3d-background-image-add">https://blender.stackexchange.com/questions/6101/poll-failed-context-incorrect-example-bpy-ops-view3d-background-image-add</a>.<br>[3] Context override[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/context-override/">https://b3d.interplanety.org/en/context-override/</a>.<br>[4] Blender 插件开发 技巧&#x2F;误区&#x2F;指南&#x2F;笔记[EB&#x2F;OL]. <a href="https://blog.csdn.net/qq_36288357/article/details/143528487">https://blog.csdn.net/qq_36288357/article/details/143528487</a>.</p>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
      </categories>
  </entry>
  <entry>
    <title>Blender实战案例总结</title>
    <url>/software/blender/examples/</url>
    <content><![CDATA[<h1 id="精确建模">1 &nbsp&nbsp<a href="#精确建模" class="headerlink" title="精确建模"></a>精确建模</h1><ul>
<li>N面板可以控制物体尺寸查看，查看当前模型的尺寸。缩放到精确尺寸后，ctrl+a应用变化。</li>
<li>object mode变换可能会导致系数变化，Ctrl+A可以重置缩放系数，全部归并至系数1（以当前尺寸为基础）<ul>
<li>（edit mode不会改变物体属性，只是改变物体内部的点线面分布）不推荐在物体模式下进行单轴向缩放，旋转还是会考虑在物体模式</li>
</ul>
</li>
<li>建模后添加细分修改器，右键平滑</li>
</ul>
<p>注：系数为负数时，从blender导出资产到UE4会导致模型法线变反还是模型变黑？</p>
<h1 id="SVG转3D网格">2 &nbsp&nbsp<a href="#SVG转3D网格" class="headerlink" title="SVG转3D网格"></a>SVG转3D网格</h1><ol>
<li>切换到顶视图-7键。</li>
<li>菜单&gt;文件&gt;导入&gt;SVG</li>
<li>缩放视图找到SVG。</li>
<li>右键set origin，调整“原点”至物体中心。</li>
<li>shift+s键对齐“原点”至世界中心</li>
<li>选中并缩放至合适大小。</li>
<li>右键convert to，转换到Mesh。</li>
<li>选中网格物体，TAB键进入“编辑模式”。</li>
<li>A键选中所有网格。</li>
<li>切换到侧视图-3或1键。（按住Ctrl时为视图反方向）</li>
<li>E键挤出面。</li>
<li>TAB键回到“物体模式”。</li>
</ol>
<h1 id="灰尘例子动画">3 &nbsp&nbsp<a href="#灰尘例子动画" class="headerlink" title="灰尘例子动画"></a>灰尘例子动画</h1><p>无特殊说明，则都是在粒子标签内操作。</p>
<ol>
<li>创建合适的立方体（粒子场）</li>
<li>选择立方体，属性编辑器&gt;粒子标签&gt;新建粒子系统</li>
<li>粒子类型&gt;发射体；发射&gt;源&gt;发射源&gt;体积</li>
<li>创建灰尘物体模型</li>
<li>渲染&gt;渲染为&gt;物体（此为单个效果，用集合来实现多个），物体&gt;选择灰尘物体模型</li>
<li>渲染&gt;缩放&gt;数值调整；缩放随机性&gt;1</li>
<li>1键切换到前视图，ctrl+alt+0并左击相机视角边框处以选中相机，按G调整相机视角；属性编辑器&gt;相机属性&gt;镜头&gt;焦距&gt;数值调整。</li>
<li>启用旋转功能&gt;坐标系轴向&gt;normal；随机&gt;数值调整；相位&gt;数值调整；随机相位&gt;数值调整</li>
<li>选中立方体，属性编辑器&gt;材质&gt;表面&gt;移除材质，材质&gt;体积&gt;原理化体积&gt;密度调0.14</li>
<li>属性编辑器&gt;世界属性&gt;颜色调至黑色（除去环境亮度）</li>
</ol>
<h1 id="无限旋转循环">4 &nbsp&nbsp<a href="#无限旋转循环" class="headerlink" title="无限旋转循环"></a>无限旋转循环</h1><p>物体属性&gt;旋转（选一个方向）&gt;输入「#frame&#x2F;30」</p>
<p># 符号，blender会将其判为驱动器表达式。</p>
<h1 id="VSE无限循环片段">5 &nbsp&nbsp<a href="#VSE无限循环片段" class="headerlink" title="VSE无限循环片段"></a>VSE无限循环片段</h1><ol>
<li>shift + D 复制并对齐片段</li>
<li>shift + R 重操操作</li>
</ol>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
      </categories>
  </entry>
  <entry>
    <title>Blender界面工具操作总结</title>
    <url>/software/blender/interface-tools-operation/</url>
    <content><![CDATA[<h1 id="3D-视窗（3D-Viewport）">1 &nbsp&nbsp<a href="#3D-视窗（3D-Viewport）" class="headerlink" title="3D 视窗（3D Viewport）"></a>3D 视窗（3D Viewport）</h1><p>3D视图用于和3D场景交互，例如建模、动画、纹理绘制等。</p>
<h2 id="交互确认与取消（Confirm-Cancel）">1.1 &nbsp&nbsp<a href="#交互确认与取消（Confirm-Cancel）" class="headerlink" title="交互确认与取消（Confirm&#x2F;Cancel）"></a>交互确认与取消（Confirm&#x2F;Cancel）</h2><table>
<thead>
<tr>
<th align="center">交互状态</th>
<th align="center">interactive state</th>
<th align="center">快捷键</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">确认</td>
<td align="center">confirm</td>
<td align="center">LMB or Enter</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">取消</td>
<td align="center">cancel</td>
<td align="center">RMB or ESC</td>
<td align="center"></td>
</tr>
</tbody></table>
<h2 id="视窗导航（Menu-View）">1.2 &nbsp&nbsp<a href="#视窗导航（Menu-View）" class="headerlink" title="视窗导航（Menu&gt;View）"></a>视窗导航（Menu&gt;View）</h2><p><strong>gizmo位于3D视窗右上角，数字或标点符号快捷键位于数字键盘区</strong></p>
<table>
<thead>
<tr>
<th align="center">视窗导航功能</th>
<th align="center">view function</th>
<th align="center">快捷键</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">环绕</td>
<td align="center">orbit</td>
<td align="center">MMB or Gizmo球体 or 4862</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">平移</td>
<td align="center">pan</td>
<td align="center">Shift+Drag MMB or Gizmo手掌</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">缩放</td>
<td align="center">zoom in or out</td>
<td align="center">滚轮 or Gizmo放大镜 or +‑</td>
<td align="center">平滑缩放：Ctrl+Drag MMB</td>
</tr>
<tr>
<td align="center">框选选中对象</td>
<td align="center">frame selected</td>
<td align="center">.</td>
<td align="center">最大化显示选中物体</td>
</tr>
<tr>
<td align="center">查看活动摄像机</td>
<td align="center">view active camera</td>
<td align="center">Gizmo摄像机 or 0</td>
<td align="center">切换到摄像视图</td>
</tr>
<tr>
<td align="center">透视&#x2F;正交视图</td>
<td align="center">perspective&#x2F;orthographic projection</td>
<td align="center">Gizmo网格</td>
<td align="center">透视：近大远小；正交：观察模型准确性（2d草图）</td>
</tr>
</tbody></table>
<h2 id="选择（Menu-Select）">1.3 &nbsp&nbsp<a href="#选择（Menu-Select）" class="headerlink" title="选择（Menu&gt;Select）"></a>选择（Menu&gt;Select）</h2><p><strong>多选模式下，亮橙色是当前激活物体，关系到属性编辑器显示的内容。</strong></p>
<table>
<thead>
<tr>
<th align="center">选择功能</th>
<th align="center">select function</th>
<th align="center">快捷键</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">选择</td>
<td align="center">select</td>
<td align="center">LMB</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">添选</td>
<td align="center">add select</td>
<td align="center">Shift+LMB</td>
<td align="center">继续点击已选择的，可取消</td>
</tr>
<tr>
<td align="center">全选</td>
<td align="center">select all</td>
<td align="center">A</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">取消所有</td>
<td align="center">deselect all</td>
<td align="center">LMB（空白处） or Alt+A or Double A</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">框选（默认激活）</td>
<td align="center">select box</td>
<td align="center">Drag LMB</td>
<td align="center">取消选择：Ctrl+Drag MMB</td>
</tr>
<tr>
<td align="center">框选（快捷键激活的状态）</td>
<td align="center">select box</td>
<td align="center">B</td>
<td align="center">取消选择：Drag MMB</td>
</tr>
<tr>
<td align="center">刷选</td>
<td align="center">select circle</td>
<td align="center">C</td>
<td align="center">取消选择：Drag MMB</td>
</tr>
<tr>
<td align="center">套索选择</td>
<td align="center">select lasso</td>
<td align="center">Shift+Space, L</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>P.S. 选择菜单中的Select More&#x2F;Less只在编辑模式下生效</p>
<span id="more"></span>

<h2 id="界面（UI）">1.4 &nbsp&nbsp<a href="#界面（UI）" class="headerlink" title="界面（UI）"></a>界面（UI）</h2><table>
<thead>
<tr>
<th align="center">界面操作</th>
<th align="center">interface operate</th>
<th align="center">快捷键</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">最大化&#x2F;恢复当前窗口</td>
<td align="center">toggle maximize area</td>
<td align="center">Ctrl+Space</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">工作区选项卡的切换</td>
<td align="center">cycle workspace</td>
<td align="center">Ctrl+PageUp&#x2F;PageDown</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">左边工具栏</td>
<td align="center">toolbar</td>
<td align="center">T</td>
<td align="center">查看子项：Hold LMB</td>
</tr>
<tr>
<td align="center">右边侧边栏</td>
<td align="center">sidebar</td>
<td align="center">N</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">3d游标</td>
<td align="center">3d cursor</td>
<td align="center">Shift+RMB</td>
<td align="center"></td>
</tr>
</tbody></table>
<ul>
<li>底部信息栏可根据当前鼠标事件提示用户</li>
<li>拖动视窗边界可以调整窗口大小，右键边界处可拆分合并窗口（拖动四角也行，拆分：鼠标拖动要保持在同一窗口；合并：鼠标拖动到另一窗口）</li>
<li>删除视窗：右键边界处合并窗口</li>
</ul>
<h2 id="变换物体（Menu-Object-Transform）">1.5 &nbsp&nbsp<a href="#变换物体（Menu-Object-Transform）" class="headerlink" title="变换物体（Menu&gt;Object&gt;Transform）"></a>变换物体（Menu&gt;Object&gt;Transform）</h2><table>
<thead>
<tr>
<th align="center">变换物体</th>
<th align="center">transform object</th>
<th align="center">快捷键</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">移动</td>
<td align="center">grab</td>
<td align="center">G</td>
<td align="center">重置移动：Alt+G</td>
</tr>
<tr>
<td align="center">旋转</td>
<td align="center">rotate</td>
<td align="center">R</td>
<td align="center">重置缩放：Alt+R</td>
</tr>
<tr>
<td align="center">缩放</td>
<td align="center">scale</td>
<td align="center">S</td>
<td align="center">重置缩放：Alt+S</td>
</tr>
<tr>
<td align="center">吸附饼菜单</td>
<td align="center">snap pie menu</td>
<td align="center">Shift+S</td>
<td align="center"></td>
</tr>
</tbody></table>
<p><strong>工具栏中工具切换：Shift+Space</strong></p>
<p>**快捷键模式：LMB确认，RMB取消。**未确认之前，都可以通过更改快捷键（包括三种变换之间可直接切换，不限于一种变换内切换），查看对应效果。</p>
<h3 id="移动（Grab，G）">1.5.1 &nbsp&nbsp<a href="#移动（Grab，G）" class="headerlink" title="移动（Grab，G）"></a>移动（Grab，G）</h3><ul>
<li>工具栏：内部白线（自由移动）、三个轴（箭头）、平面（两轴之间的小平面）</li>
<li>快捷键模式G：默认：自由移动；单轴移动：X&#x2F;Y&#x2F;Z；双轴移动：Shift+X&#x2F;Y&#x2F;Z（移除单轴，结果就是双轴）</li>
<li>重置移动：Alt+G</li>
</ul>
<h3 id="旋转（Rorate，R）">1.5.2 &nbsp&nbsp<a href="#旋转（Rorate，R）" class="headerlink" title="旋转（Rorate，R）"></a>旋转（Rorate，R）</h3><ul>
<li>工具栏：三弧线、内部轨迹球（鼠标悬停在弧线内显示）、最外部的白线（当前视角按物体原点旋转）</li>
<li>快捷键模式R（内部模式切换R）：默认：自由旋转；单轴旋转：X&#x2F;Y&#x2F;Z；轨迹球：R；双轴旋转：Shift+X&#x2F;Y&#x2F;Z（移除单轴，结果就是双轴）</li>
<li>重置旋转：Alt+R</li>
</ul>
<h3 id="缩放（Scale，S）">1.5.3 &nbsp&nbsp<a href="#缩放（Scale，S）" class="headerlink" title="缩放（Scale，S）"></a>缩放（Scale，S）</h3><ul>
<li>工具栏：内部&#x2F;外部白线（自由缩放）、三个轴（方块）、平面（两轴之间的小平面）</li>
<li>快捷键模式G：默认：自由缩放；单轴缩放：X&#x2F;Y&#x2F;Z；双轴缩放：Shift+X&#x2F;Y&#x2F;Z（移除单轴，结果就是双轴）</li>
<li>重置缩放：Alt+S</li>
</ul>
<h3 id="吸附（Shift-Tab）">1.5.4 &nbsp&nbsp<a href="#吸附（Shift-Tab）" class="headerlink" title="吸附（Shift+Tab）"></a>吸附（Shift+Tab）</h3><p>Shift+Tab激活</p>
<ul>
<li>顶点（吸附时，鼠标悬停在其他顶点上）</li>
</ul>
<h3 id="精度控制（按住shift-Ctrl）">1.5.5 &nbsp&nbsp<a href="#精度控制（按住shift-Ctrl）" class="headerlink" title="精度控制（按住shift&#x2F;Ctrl）"></a>精度控制（按住shift&#x2F;Ctrl）</h3><ul>
<li>精确控制：按住Shift（十分之一的速度变换）</li>
<li>按吸附方案：按住Ctrl（确保未启用吸附功能，已启用的状态下，Ctrl是禁用吸附）<ul>
<li>增量方案snap&gt;increment，变化量递增（非连续量），但不是默认模式那种连续量</li>
<li>顶点</li>
<li>面</li>
</ul>
</li>
</ul>
<h3 id="变换坐标系和变换轴心点">1.5.6 &nbsp&nbsp<a href="#变换坐标系和变换轴心点" class="headerlink" title="变换坐标系和变换轴心点"></a>变换坐标系和变换轴心点</h3><p>位置：正上方</p>
<ul>
<li>坐标系：<ul>
<li>全局坐标系</li>
<li>局部坐标系：物体自身轴。全局坐标系下快速访问：double X&#x2F;Y&#x2F;Z</li>
</ul>
</li>
<li>轴心点：默认是质心点</li>
</ul>
<h3 id="比例化编辑（Proportional-Editing，O）">1.5.7 &nbsp&nbsp<a href="#比例化编辑（Proportional-Editing，O）" class="headerlink" title="比例化编辑（Proportional Editing，O）"></a>比例化编辑（Proportional Editing，O）</h3><h2 id="添加和删除物体（Shift-A；X）">1.6 &nbsp&nbsp<a href="#添加和删除物体（Shift-A；X）" class="headerlink" title="添加和删除物体（Shift+A；X）"></a>添加和删除物体（Shift+A；X）</h2><p>Menu&gt;Add<br>Menu&gt;Object&gt;Delete</p>
<p>删除物体：X（D确认，只有这个方式有确认）；Delete</p>
<h1 id="大纲视图编辑器">2 &nbsp&nbsp<a href="#大纲视图编辑器" class="headerlink" title="大纲视图编辑器"></a>大纲视图编辑器</h1><p>类似其他软件的组管理或层管理。</p>
<p>图标解释</p>
<ul>
<li>倒三角：网格</li>
<li>灯泡：灯光</li>
<li>摄像机</li>
<li>箱子：集合</li>
<li>眼镜：控制视窗隐藏</li>
<li>相机：控制渲染</li>
</ul>
<p>新建集合或移动物体到某集合</p>
<ul>
<li>M</li>
<li>RMB Menu，选择Move to Collection（新建需要两次Enter）。</li>
<li>直接在大纲视图操作</li>
</ul>
<p>链接物体到集合：Shift+M（不建议将一个物体链接到多个集合，不好追踪管理）；取消链接需要在大纲视图里操作：LMB&gt;Unlink</p>
<p>大纲视图的操作</p>
<ul>
<li>新建集合，RMB空白处</li>
<li>在已有集合下新建：RMB集合名字；选中集合名字，C新建</li>
<li>重命名：Double LMB</li>
<li>移动：LMB（drag）</li>
<li>展开&#x2F;折叠：+-</li>
</ul>
<h1 id="建模">3 &nbsp&nbsp<a href="#建模" class="headerlink" title="建模"></a>建模</h1><p>Tab进入编辑模式或者使用建模工作区选项卡。</p>
<h2 id="多边形概念">3.1 &nbsp&nbsp<a href="#多边形概念" class="headerlink" title="多边形概念"></a>多边形概念</h2><p>点、线、面（三角面triangle、四边面quad、多边面n-gon）、多边形建模（polygon&#x2F;polys）</p>
<p>面的类型效果：尽量使用四边面，利于动画的网格变形，进行表面细分也合理。某些复杂形状的情况，多边面的变形和细分效果比四边面好。</p>
<h2 id="物体模式和编辑模式">3.2 &nbsp&nbsp<a href="#物体模式和编辑模式" class="headerlink" title="物体模式和编辑模式"></a>物体模式和编辑模式</h2><p>编辑模式是用以物体的网格（mesh）数据，部分非mesh物体（如骨架曲线，晶格也有编辑模式，不过不是用以操作mesh，只是用以操作相关的物体数据）</p>
<p>可同时选择多个物体进入编辑模式，但注意无法将它们的mesh相连接。</p>
<h3 id="物体模式下合并物体（Ctrl-J）">3.2.1 &nbsp&nbsp<a href="#物体模式下合并物体（Ctrl-J）" class="headerlink" title="物体模式下合并物体（Ctrl+J）"></a>物体模式下合并物体（Ctrl+J）</h3><p>选好物体：</p>
<ul>
<li>Menu&gt;Obejct&gt;Join</li>
<li>Crtl+J</li>
</ul>
<h3 id="编辑模式下分离mesh（P）">3.2.2 &nbsp&nbsp<a href="#编辑模式下分离mesh（P）" class="headerlink" title="编辑模式下分离mesh（P）"></a>编辑模式下分离mesh（P）</h3><p>选好mesh：</p>
<ul>
<li>Menu&gt;Menu&gt;Seperate</li>
<li>P</li>
</ul>
<h2 id="mesh选择点线面模式（主键盘123；Shift-123）">3.3 &nbsp&nbsp<a href="#mesh选择点线面模式（主键盘123；Shift-123）" class="headerlink" title="mesh选择点线面模式（主键盘123；Shift+123）"></a>mesh选择点线面模式（主键盘123；Shift+123）</h2><ul>
<li>左上角图标；多选：Shift+图标</li>
<li>快捷键（主键盘）：123；多选：Shift+123</li>
</ul>
<h2 id="快速选择技巧">3.4 &nbsp&nbsp<a href="#快速选择技巧" class="headerlink" title="快速选择技巧"></a>快速选择技巧</h2><ul>
<li>加选：Shift</li>
<li>最短路径：Ctrl（在uv展开中标记缝合边很有用）</li>
<li>循环边(loop)：按住Alt+LMB选择点线面（根据模式）</li>
<li>并排边(ring)：按住Ctrl+Alt+LMB选择</li>
<li>加选&#x2F;减选（已选中部分mesh）：Ctrl+Plus&#x2F;Minus。效果是在已选中的范围基础上加选或减选。</li>
<li>关联选择（适合选择孤立部分，物体由多个孤立mesh组成）<ul>
<li>已选中部分mesh：Ctrl+L</li>
<li>未选中任何mesh：鼠标悬停，L</li>
</ul>
</li>
</ul>
<p>基本选择方式在编辑模式下都可用。</p>
<h2 id="点工具（Ctrl-V）">3.5 &nbsp&nbsp<a href="#点工具（Ctrl-V）" class="headerlink" title="点工具（Ctrl+V）"></a>点工具（Ctrl+V）</h2><h3 id="连接顶点路径（connect-vertex-path，J）">3.5.1 &nbsp&nbsp<a href="#连接顶点路径（connect-vertex-path，J）" class="headerlink" title="连接顶点路径（connect vertex path，J）"></a>连接顶点路径（connect vertex path，J）</h3><p>连接同一个面的两个顶点，或者相连两个面的顶点</p>
<h2 id="线工具（Ctrl-E）">3.6 &nbsp&nbsp<a href="#线工具（Ctrl-E）" class="headerlink" title="线工具（Ctrl+E）"></a>线工具（Ctrl+E）</h2><h2 id="边线倒角（Bevel，Ctrl-B-滚轮）">3.7 &nbsp&nbsp<a href="#边线倒角（Bevel，Ctrl-B-滚轮）" class="headerlink" title="边线倒角（Bevel，Ctrl+B&gt;滚轮）"></a>边线倒角（Bevel，Ctrl+B&gt;滚轮）</h2><p><strong>倒角能让物体更加真实，一般用于硬表面建模。</strong></p>
<p><strong>除了倒角工具，倒角修改器也可以实现倒角。</strong></p>
<ul>
<li>段数（segments）：段数越高，越圆滑</li>
<li>材质编号（material index）：通过调整材质编号给倒角使用材质列表中的材质。</li>
</ul>
<h3 id="桥接循环边（bridge-edge-loop）">3.7.1 &nbsp&nbsp<a href="#桥接循环边（bridge-edge-loop）" class="headerlink" title="桥接循环边（bridge edge loop）"></a>桥接循环边（bridge edge loop）</h3><h2 id="环切和滑动（Loop-Cut，Ctrl-R-滚轮，重新滑动GG）">3.8 &nbsp&nbsp<a href="#环切和滑动（Loop-Cut，Ctrl-R-滚轮，重新滑动GG）" class="headerlink" title="环切和滑动（Loop Cut，Ctrl+R&gt;滚轮，重新滑动GG）"></a>环切和滑动（Loop Cut，Ctrl+R&gt;滚轮，重新滑动GG）</h2><ul>
<li>默认环切：</li>
<li>偏移量环切：</li>
</ul>
<p>快捷键模式和工具栏模式的区别</p>
<ul>
<li>快捷键模式：Ctrl+R（滚轮确定环切次数），LMB确认方位后进入滑动模式，RMB取消就是保持中间切割（确保当前激活工具不是环切，否则Ctrl+R就直接进入滑动模式，因为环切工具激活时，本身就可通过鼠标确认方位）</li>
<li>工具栏模式：LMB直接切换，按住LMB滑动（或者Ctrl+R）</li>
</ul>
<h2 id="面工具（Ctrl-F）">3.9 &nbsp&nbsp<a href="#面工具（Ctrl-F）" class="headerlink" title="面工具（Ctrl+F）"></a>面工具（Ctrl+F）</h2><h3 id="挤出（Extrude，E，到光标Ctrl-RMB）">3.9.1 &nbsp&nbsp<a href="#挤出（Extrude，E，到光标Ctrl-RMB）" class="headerlink" title="挤出（Extrude，E，到光标Ctrl+RMB）"></a>挤出（Extrude，E，到光标Ctrl+RMB）</h3><p><strong>快捷键实现单个轴向上挤出各个面：E，用s在单轴上，如z缩放。</strong></p>
<ul>
<li>默认挤出选区（region）</li>
<li>挤出流形（manifold）</li>
<li>沿法线挤出（along normals）：相邻的面挤出时，各个面仍会相连。不像individual，就是单独挤出面。</li>
<li>挤出各个面（individual）：单独挤出。适合在选中面的情况下操作。比如挤出后，再单独操作啥的（例如调整变换轴心点为各自的原点，可单独缩放调整各个面）</li>
<li>挤出到光标（to cursor）（激活该工具时LMB；快速实现Ctrl+RMB）</li>
</ul>
<h2 id="内插面（Inset-Faces，I）">3.10 &nbsp&nbsp<a href="#内插面（Inset-Faces，I）" class="headerlink" title="内插面（Inset Faces，I）"></a>内插面（Inset Faces，I）</h2><p><strong>挤出工具实现内插面：按e移动后右键取消，通过s缩小。</strong></p>
<h2 id="顶点倒角（Bevel，Ctrl-Shift-B-滚轮）">3.11 &nbsp&nbsp<a href="#顶点倒角（Bevel，Ctrl-Shift-B-滚轮）" class="headerlink" title="顶点倒角（Bevel，Ctrl+Shift+B&gt;滚轮）"></a>顶点倒角（Bevel，Ctrl+Shift+B&gt;滚轮）</h2><h2 id="切割（Knife，K）">3.12 &nbsp&nbsp<a href="#切割（Knife，K）" class="headerlink" title="切割（Knife，K）"></a>切割（Knife，K）</h2><p><strong>切分（bisect）一般用于创建物体的横截面</strong></p>
<p>确认：空格&#x2F;Enter</p>
<ul>
<li>切割（knife）：默认切割方式</li>
<li>切分（bisect）：根据面或者线直接切分开来，不是默认靠点分割。该方式还可以移动切割的线条，或者通过面板去掉一半或填充面</li>
</ul>
<h1 id="参考资料">4 &nbsp&nbsp<a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] Blender. Blender 2.80 Fundamentals[EB&#x2F;OL]. <a href="https://www.youtube.com/playlist?list=PLa1F2ddGya_-UvuAqHAksYnB0qL9yWDO6">https://www.youtube.com/playlist?list=PLa1F2ddGya_-UvuAqHAksYnB0qL9yWDO6</a>.</p>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>blender</tag>
        <tag>问题总结</tag>
        <tag>Q&amp;A</tag>
        <tag>界面</tag>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender常见问题总结——Q&amp;A</title>
    <url>/software/blender/q-a/</url>
    <content><![CDATA[<h1 id="三维视窗操作">1 &nbsp&nbsp<a href="#三维视窗操作" class="headerlink" title="三维视窗操作"></a>三维视窗操作</h1><h2 id="物体模式下无法旋转">1.1 &nbsp&nbsp<a href="#物体模式下无法旋转" class="headerlink" title="物体模式下无法旋转"></a>物体模式下无法旋转</h2><p>Active Tool and Workspace settings tab &gt; Options header &gt; Transform &gt; Affect Only and then uncheck all (Origins; Locations; Parents)</p>
<h2 id="缩放一定程度后，便无法继续缩放或者平移">1.2 &nbsp&nbsp<a href="#缩放一定程度后，便无法继续缩放或者平移" class="headerlink" title="缩放一定程度后，便无法继续缩放或者平移"></a>缩放一定程度后，便无法继续缩放或者平移</h2><p>解决方案：点击数字键盘「小数点」最大化查看所选对象。</p>
<p>原因：缩放操作会导致blender的观察基点变化，需要观察的东西可能会增加或者减少。</p>
<h1 id="渲染">2 &nbsp&nbsp<a href="#渲染" class="headerlink" title="渲染"></a>渲染</h1><h2 id="Cycles引擎不适合混合CPU和GPU渲染的几个场景，只适合纯GPU渲染">2.1 &nbsp&nbsp<a href="#Cycles引擎不适合混合CPU和GPU渲染的几个场景，只适合纯GPU渲染" class="headerlink" title="Cycles引擎不适合混合CPU和GPU渲染的几个场景，只适合纯GPU渲染"></a>Cycles引擎不适合混合CPU和GPU渲染的几个场景，只适合纯GPU渲染</h2><p>其实Cycles引擎渲染大多情况下，设置纯显卡渲染会更好。</p>
<ul>
<li>CPU比GPU性能差很多</li>
<li>渲染Volumetrics场景</li>
</ul>
<h1 id="其它类别">3 &nbsp&nbsp<a href="#其它类别" class="headerlink" title="其它类别"></a>其它类别</h1><h2 id="v3-0版本之后的blender-launcher-exe">3.1 &nbsp&nbsp<a href="#v3-0版本之后的blender-launcher-exe" class="headerlink" title="v3.0版本之后的blender-launcher.exe"></a>v3.0版本之后的blender-launcher.exe</h2><p>和blender.exe一样也是启动器，但不会弹出控制台窗口console。</p>
<span id="more"></span>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
      </categories>
      <tags>
        <tag>blender</tag>
        <tag>问题总结</tag>
        <tag>Q&amp;A</tag>
      </tags>
  </entry>
  <entry>
    <title>看翻译学英语 —— blender开放动画电影《Sprite Fright》</title>
    <url>/translations/blender-animation/sprite-fright/</url>
    <content><![CDATA[<h1 id="翻译的感想">1 &nbsp&nbsp<a href="#翻译的感想" class="headerlink" title="翻译的感想"></a>翻译的感想</h1><p>抽空翻译了blender的开放动画电影《Sprite Fright》，该动画电影是一部恐怖喜剧，台词有部分俚语，总体的翻译难度比一般的教学类视频要高一点。</p>
<h1 id="观看动画电影">2 &nbsp&nbsp<a href="#观看动画电影" class="headerlink" title="观看动画电影"></a>观看动画电影</h1><iframe src="//player.bilibili.com/player.html?bvid=BV1eS4y1j7ay&autoplay=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"></iframe>

<h1 id="下载字幕">3 &nbsp&nbsp<a href="#下载字幕" class="headerlink" title="下载字幕"></a>下载字幕</h1><p>字幕采用aegisub软件制作，已同步分享至Github仓库「<a href="https://github.com/Mister-Kin/OpenDocs/tree/master/translations/subtitles/blender_animation">OpenDocs</a>」，有需要的朋友可下载学习或者观看。</p>
<h1 id="本期翻译的英语词汇总结">4 &nbsp&nbsp<a href="#本期翻译的英语词汇总结" class="headerlink" title="本期翻译的英语词汇总结"></a>本期翻译的英语词汇总结</h1><ul>
<li>tree hugger 抱树者（意指给环保主义者贴上过于情绪化和不理性的标签）</li>
<li>sugar buns&#x2F;sweet cakes&#x2F;love muffin 这三个都是用作爱称，意思同sweetheart</li>
<li>get wasted 喝醉，形容大醉</li>
<li>way ahead of you 形容比别人更早地完成或者解决某事</li>
<li>dilly-dally v. 犹豫，磨蹭</li>
<li>fungis n. 真菌（这个用法有问题，fungi本身就是复数，加s应该只是为了配合台词fun guys）</li>
<li>dorkwad n. 傻瓜，呆子（俚语，意思同dork）</li>
<li>be supposed to do&#x2F;be sth. 应当……</li>
<li>piss break 指上厕所的休息过程（例如在听一个无聊的讲座时，可以说piss break，然后离场去休息）</li>
<li>make yourself useful 让对方别闲着，干点事情（差不多就是get off your ass and do something）</li>
<li>innit 表示强调，用于陈述句后代替附加疑问句（tag question）<ul>
<li>She&#39;s a real weenie that one, innit? 她是一个真正的窝囊废，不是吗？（innit相当于isn’t she）</li>
</ul>
</li>
<li>gnome n. 守护精灵（童话故事中的地下宝藏守护神，外形像戴着尖顶帽的小人）</li>
<li>shag v. 和……性交（该词我根据上下文来翻译了）<ul>
<li>It&#39;s like a gnome shagged a mushroom. 这就像一个守护精灵头顶一只蘑菇</li>
</ul>
</li>
<li>peppermint n. （常用于糖果的）薄荷</li>
<li>sprite n. 小精灵（该词本身只是名词，但动画中原创了动词用法，因此我根据上下文来翻译动词意思了）<ul>
<li>We sprite balance to the forest. 我们让森林保持平衡</li>
<li>Sprite them! 净化他们</li>
</ul>
</li>
<li>son of a spriteberry 狗娘养的（意思同son of a bitch，不过动画中小精灵用的是spriteberry）</li>
<li>treat sth. as sth. 把……视为……，把……看作……</li>
</ul>
<h1 id="参考文献">5 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] BRIDGERS B. What it Means to be Called a Tree Hugger[EB&#x2F;OL]. <a href="https://www.newamerica.org/millennials/dm/what-it-means-be-called-tree-hugger/">https://www.newamerica.org/millennials/dm/what-it-means-be-called-tree-hugger/</a>.<br>[2] What does Way ahead of you. mean?[EB&#x2F;OL]. <a href="https://hinative.com/en-US/questions/166902">https://hinative.com/en-US/questions/166902</a>.<br>[3] What is the difference between get lit and get wasted and get hammered?[EB&#x2F;OL]. <a href="https://hinative.com/en-US/questions/17881208">https://hinative.com/en-US/questions/17881208</a>.<br>[4] What does Make yourself useful. mean?[EB&#x2F;OL]. <a href="https://hinative.com/en-US/questions/15910440">https://hinative.com/en-US/questions/15910440</a>.</p>
]]></content>
      <categories>
        <category>translations</category>
        <category>blender-animation</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>blender</tag>
        <tag>字幕</tag>
        <tag>英语</tag>
        <tag>开放动画</tag>
        <tag>动画</tag>
        <tag>动画电影</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender练习总结：《CG Boost-Blender 2.8 Beginner Series》</title>
    <url>/software/blender/tranining/cg-boost-blender28-beginner-series/</url>
    <content><![CDATA[<h1 id="练习成果展示">1 &nbsp&nbsp<a href="#练习成果展示" class="headerlink" title="练习成果展示"></a>练习成果展示</h1><h1 id="前期工作">2 &nbsp&nbsp<a href="#前期工作" class="headerlink" title="前期工作"></a>前期工作</h1><p>设计草图，善于利用参考资料（搜索引擎&gt;图片，现实中的实物&gt;拍照等）。三维创作需要时间，很难一蹴而就，慢慢迭代制作即可。</p>
<h1 id="建模">3 &nbsp&nbsp<a href="#建模" class="headerlink" title="建模"></a>建模</h1><p>开始建模之前，要注意建模物体的尺寸。注意观察物体外形，思考用哪些基础网格mesh创建模型会更容易点。</p>
<p>查看当前物体的尺寸：右边侧边栏（快捷键N）&gt;item条目&gt;尺寸</p>
<p>设置当前场景的单位：属性编辑器&gt;场景属性&gt;单位。</p>
<p><img data-src="/1.1.png"></p>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
        <category>tranining</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>练习</tag>
        <tag>blender</tag>
        <tag>教程</tag>
        <tag>苹果</tag>
        <tag>小刀</tag>
        <tag>布料</tag>
      </tags>
  </entry>
  <entry>
    <title>Blender教程总结</title>
    <url>/software/blender/tranining/training/</url>
    <content><![CDATA[<h1 id="单个物体建模">1 &nbsp&nbsp<a href="#单个物体建模" class="headerlink" title="单个物体建模"></a>单个物体建模</h1><h1 id="综合场景全流程">2 &nbsp&nbsp<a href="#综合场景全流程" class="headerlink" title="综合场景全流程"></a>综合场景全流程</h1><ul>
<li><a href="/software/blender/tranining/cg-boost-blender28-beginner-series">Blender练习总结：《CG Boost-Blender 2.8 Beginner Series》</a>：苹果、小刀</li>
</ul>
]]></content>
      <categories>
        <category>software</category>
        <category>blender</category>
        <category>tranining</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>教程</tag>
        <tag>Blender</tag>
      </tags>
  </entry>
  <entry>
    <title>404 Not Found：该页无法显示</title>
    <url>//404.html</url>
    <content><![CDATA[<p class="center-bold" style="font-size: 35px;">很抱歉，阁下所访问的地址并不存在!</p>

<div class="navigation-border">
<center>
<a href="/navigation-announcement">
<button class="navigation-button-box">站点导航和公告</button></a>
<a href="/">
<button class="navigation-button-box">回主页</button></a>
</center></div>

<div class="navigation-border">
<center>
<a href="/archives">
<button class="navigation-button-box">所有文章</button></a>
<a href="/about#联系方式">
<button class="navigation-button-box">联系我</button></a>
<a href="/about">
<button class="navigation-button-box">关于我</button></a>
<a href="/about/about-site/">
<button class="navigation-button-box">关于本站</button></a>
</center></div>

<p class="center-bold">可利用侧边栏的搜索功能对本站进行检索，以获取相关信息。</p>

<center>
<div style="text-align: center; width: 50%;">
可以听歌，稍作休息~
<div style="text-align: left">
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=488249475&auto=0&height=66"></iframe>
</div></div>
</center>
]]></content>
  </entry>
  <entry>
    <title>关于我</title>
    <url>/about/index.html</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<p>愿我终有一天能和重要的人再次相逢！</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=32823253&auto=0&height=66"></iframe>
</blockquote>

<h1 id="本人">1 &nbsp&nbsp<a href="#本人" class="headerlink" title="本人"></a>本人</h1><div class="flex-row">
    <img data-src="/images_public/avatar.webp" style="width: 35%; margin:0%;"><p style="margin-left: -18%; text-indent:3.5ch;"><b>Mr. Kin</b>，广东客家仁，CG和游戏爱好者，翻译UP主，个人UP主。目标是做一个有趣的极客。随缘发布一些博文、文档翻译、视频翻译、视频教程等。(ง •_•)ง <a href="#关注我" }>点击关注我！</a></p>
</div>

<div class="text-border">
    <p style="position: relative; margin-top: 2%; text-align: center; font-weight: bold;">Talk is cheap, show me the code.</p>
    <div class="line-dashed"></div>
    <div class="flex-row-top-start" style="position: relative; margin-top: 2%; justify-content: center; font-weight: bold;">
    <div class="flex-column" style="text-align: left;">
    你可不可以<br>
    成为我的main函数<br>
    做我此生必须有<br>
    且只能有一个的入口</div>
    <div class="flex-column" style="position: relative; margin-left: 10%; text-align: left;">
    我愿为自己加上private<br>
    在你的class中只有<br>
    你能调用<br>
    <p style="text-align: right;">—— 代码如诗 </p></div>
    </div>
</div>

<img data-src="/images_public/single_dog.webp">

<h1 id="技能点">2 &nbsp&nbsp<a href="#技能点" class="headerlink" title="技能点"></a>技能点</h1><div class="tabs" id="skill"><ul class="nav-tabs"><li class="tab active"><a href="#skill-1"><i class="fa fa-laptop-code"></i>编程</a></li><li class="tab"><a href="#skill-2"><i class="fa fa-video"></i>后期处理</a></li><li class="tab"><a href="#skill-3"><i class="fa fa-pen-nib"></i>文档办公</a></li><li class="tab"><a href="#skill-4"><i class="fa fa-tools"></i>计算机维修</a></li><li class="tab"><a href="#skill-5"><i class="fa fa-graduation-cap"></i>专业</a></li></ul><div class="tab-content"><div class="tab-pane active" id="skill-1"><ul>
<li>C&#x2F;C++</li>
<li>Qt</li>
<li>Python</li>
<li>Html&#x2F;CSS&#x2F;JavaScript</li>
<li>Batch&#x2F;Bash Shell</li>
<li>Assembly</li>
</ul></div><div class="tab-pane" id="skill-2"><div class="tabs" id="post_process"><ul class="nav-tabs"><li class="tab active"><a href="#post_process-1"><i class="fa fa-code-branch"></i>开源类</a></li><li class="tab"><a href="#post_process-2"><i class="fa fa-user-secret"></i>闭源类</a></li></ul><div class="tab-content"><div class="tab-pane active" id="post_process-1"><ul>
<li>Blender</li>
<li>FFmpeg</li>
<li>Aegisub</li>
<li>Audacity</li>
<li>Krita</li>
<li>Inkscape</li>
<li>GIMP</li>
</ul></div><div class="tab-pane" id="post_process-2"><ul>
<li>Adobe<ul>
<li>Photoshop</li>
<li>Premiere</li>
<li>Audition</li>
</ul>
</li>
<li>Maya</li>
</ul></div></div></div></div><div class="tab-pane" id="skill-3"><ul>
<li>LaTeX</li>
<li>MS Office</li>
<li>Markdown</li>
</ul></div><div class="tab-pane" id="skill-4"><ul>
<li>一体&#x2F;分体水冷PC主机安装拆解</li>
<li>PC硬件故障排查</li>
<li>PC系统（WinOS）维护</li>
</ul></div><div class="tab-pane" id="skill-5"><div class="tabs" id="major"><ul class="nav-tabs"><li class="tab active"><a href="#major-1"><i class="fa fa-code-branch"></i>开源类</a></li><li class="tab"><a href="#major-2"><i class="fa fa-user-secret"></i>闭源类</a></li></ul><div class="tab-content"><div class="tab-pane active" id="major-1"><ul>
<li>KiCad</li>
<li>Libre CAD</li>
</ul></div><div class="tab-pane" id="major-2"><ul>
<li>Matlab</li>
<li>Altium Designer</li>
<li>NI Multisim</li>
<li>Keil μVision</li>
<li>Proteus</li>
<li>Quartus</li>
<li>AutoCAD</li>
</ul></div></div></div></div></div></div>

<h1 id="教育经历">3 &nbsp&nbsp<a href="#教育经历" class="headerlink" title="教育经历"></a>教育经历</h1><ul>
<li>南华大学电力专业毕业</li>
<li>茂名市第一中学毕业</li>
</ul>
<h1 id="开源建设（中文化翻译）">4 &nbsp&nbsp<a href="#开源建设（中文化翻译）" class="headerlink" title="开源建设（中文化翻译）"></a>开源建设（中文化翻译）</h1><ul>
<li><a href="https://docs.krita.org/zh_CN/">Krita 手册</a>：2018.8.5 - <a href="https://crowdin.com/project/kdeorg">2019.4.23</a></li>
<li><a href="https://docs.blender.org/manual/zh-hans/latest/">Blender 手册</a>：2019.7.20 - <a href="https://www.blendercn.org/5812.html?tdsourcetag=s_pctim_aiomsg">2019.9.4</a> - <del>至今（<a href="https://developer.blender.org/p/Mr_Kin/">翻译维护</a>）</del></li>
</ul>
<h1 id="作品">5 &nbsp&nbsp<a href="#作品" class="headerlink" title="作品"></a>作品</h1><table>
<thead>
<tr>
<th align="center"><a href="/works/software-works">软件作品</a></th>
<th align="center">艺术作品（待补充）</th>
</tr>
</thead>
</table>
<h1 id="目前">6 &nbsp&nbsp<a href="#目前" class="headerlink" title="目前"></a>目前</h1><ul>
<li>努力学习转型中</li>
<li>B 站 - 翻译 UP、个人 UP：2017.11.8 - 至今</li>
</ul>
<h1 id="联系方式">7 &nbsp&nbsp<a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><div class="note danger no-icon"><p>注：联系时请注明身份，谢谢！</p>
</div>
<ul>
<li>邮箱：<a href="mailto:&#x69;&#x6d;&#46;&#109;&#105;&#115;&#116;&#x65;&#114;&#x6b;&#x69;&#x6e;&#x40;&#x67;&#109;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;">im.misterkin@gmail.com</a></li>
<li>QQ：<a href="tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=2312463626&website=www.oicqzone.com">2312463626</a><strong>（点击号码即加好友）</strong></li>
</ul>
<div class="flex-row-left-start">
<div class="flex-column">
QQ 二维码<img data-src="/images_public/qq_qr_code2.webp" style="width: 200px;"></div>
</div>

<h1 id="关注我">8 &nbsp&nbsp<a href="#关注我" class="headerlink" title="关注我"></a>关注我</h1><div class="note info no-icon"><p>注：<strong>点击</strong> <em><strong>下列图标文字</strong></em> 或主页侧边栏的 <em><strong>社交图标</strong></em> 即可跳转关注我。</p>
</div>

<center><i class="fa fa-rss-square" aria-hidden="true"></i> RSS: https://mister-kin.github.io/atom.xml</center>

<img data-src="/images_public/follow_me/wechat_official_accounts.webp">

<div class="flex-row">
    <div class="flex-column">
    <a href="https://www.acfun.cn/u/73269306"><i class="fa fa-book"></i> A站 - AcFun</a><img data-src="/images_public/follow_me/acfun.webp"></div>
    <div class="flex-column">
    <a href="https://github.com/mister-kin"><i class="fab fa-github"></i> GitHub</a><img data-src="/images_public/follow_me/github.webp"></div>
    <div class="flex-column">
    <a href="https://weibo.com/6270111192/profile?topnav=1&wvr=6&is_all=1"><i class="fab fa-weibo"></i> 微博 - Weibo</a><img data-src="/images_public/follow_me/weibo.webp"></div>
    <div class="flex-column">
    <a href="https://www.zhihu.com/people/drwu-94"><i class="fab fa-zhihu"></i> 知乎 - Zhihu</a><img data-src="/images_public/follow_me/zhihu.webp"></div>
</div>
<div class="flex-row">
    <div class="flex-column">
    <a href="http://space.bilibili.com/17025250?"><i class="fa fa-tv"></i> B站 - Bilibili</a><img data-src="/images_public/follow_me/bilibili.webp"></div>
    <div class="flex-column">
    <a href="http://i.youku.com/i/UNjA3MTk5Mjgw?spm=a2hzp.8253869.0.0"><i class="fa fa-chevron-circle-right"></i> 优酷 - Youku</a><img data-src="/images_public/follow_me/youku.webp"></div>
    <div class="flex-column">
    <a href="https://www.toutiao.com/c/user/835254071079053/#mid=1663279303982091"><i class="far fa-newspaper"></i> 头条 - Headline</a><img data-src="/images_public/follow_me/headline.webp"></div>
    <div class="flex-column">
    <a href="https://www.youtube.com/channel/UCXqjfWLzMlRKxGC8syWj17Q?view_as=public"><i class="fab fa-youtube"></i> 油管 - YouTube</a><img data-src="/images_public/follow_me/youtube.webp"></div>
</div>

<h1 id="免费支持我">9 &nbsp&nbsp<a href="#免费支持我" class="headerlink" title="免费支持我"></a>免费支持我</h1><p>如果手头拮据的话，可以扫码领取支付宝红包来免费支持我！</p>
<div class="flex-row-left-start">
    <div class="flex-column">
    <img data-src="/images_public/pay_qr_code/alipay_red_packet.webp">支付宝红包</div>
    <div class="flex-column">
    <img data-src="/images_public/pay_qr_code/alipay.webp" style="width: 360px;">支付宝收款码</div>
</div>

<p>扫码得到的红包，可以正常使用，向商家付款。当然，如果你不用的话，也可以通过上面的支付宝收款码直接捐赠给我，无需花一分钱即可支持我！</p>
<p>不差钱的朋友，可以通过<a href="#%E6%94%AF%E6%8C%81%E6%88%91">以下方式</a>支持我！</p>
<h1 id="支持我">10 &nbsp&nbsp<a href="#支持我" class="headerlink" title="支持我"></a>支持我</h1><div class="note primary no-icon"><p>靓仔&#x2F;美女，不考虑请我喝杯饮料，吃份外卖吗？<strong>谢谢支持与鼓励！(๑•̀ㅂ•́)و✧</strong></p>
</div>

<div class="tabs" id="support_me"><ul class="nav-tabs"><li class="tab active"><a href="#support_me-1"><i class="fa fa-bars"></i>一包薯片</a></li><li class="tab"><a href="#support_me-2"><i class="fa fa-mug-hot"></i>一杯饮料</a></li><li class="tab"><a href="#support_me-3"><i class="fa fa-concierge-bell"></i>一份外卖</a></li><li class="tab"><a href="#support_me-4"><i class="fa fa-gifts"></i>富豪大吉大利</a></li><li class="tab"><a href="#support_me-5"><i class="fa fa-yen-sign"></i>任意金额</a></li></ul><div class="tab-content"><div class="tab-pane active" id="support_me-1"><div class="tabs" id="a_bag_of_chips"><ul class="nav-tabs"><li class="tab active"><a href="#a_bag_of_chips-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#a_bag_of_chips-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="a_bag_of_chips-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/alipay7.webp" style="width: 50%;"></div></div><div class="tab-pane" id="a_bag_of_chips-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/wechatpay7.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-2"><div class="tabs" id="a_cup_of_beverage"><ul class="nav-tabs"><li class="tab active"><a href="#a_cup_of_beverage-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#a_cup_of_beverage-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="a_cup_of_beverage-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/alipay14.webp" style="width: 50%;"></div></div><div class="tab-pane" id="a_cup_of_beverage-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/wechatpay14.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-3"><div class="tabs" id="a_take-away"><ul class="nav-tabs"><li class="tab active"><a href="#a_take-away-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#a_take-away-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="a_take-away-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/alipay28.webp" style="width: 50%;"></div></div><div class="tab-pane" id="a_take-away-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/wechatpay28.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-4"><div class="tabs" id="rich_gifts"><ul class="nav-tabs"><li class="tab active"><a href="#rich_gifts-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#rich_gifts-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="rich_gifts-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
富豪大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/alipay88.webp" style="width: 50%;"></div></div><div class="tab-pane" id="rich_gifts-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
富豪大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/wechatpay88.webp" style="width: 50%;"></div></div></div></div></div><div class="tab-pane" id="support_me-5"><div class="tabs" id="any_amount"><ul class="nav-tabs"><li class="tab active"><a href="#any_amount-1"><i class="fab fa-alipay"></i>支付宝</a></li><li class="tab"><a href="#any_amount-2"><i class="fab fa-weixin"></i>微信</a></li></ul><div class="tab-content"><div class="tab-pane active" id="any_amount-1"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
任意金额 | RMB￥0 ~ ∞<img data-src="/images_public/pay_qr_code/alipay.webp" style="width: 50%;"></div></div><div class="tab-pane" id="any_amount-2"><div class="flex-column" style="font-size: 30px; font-weight: bold;">
任意金额 | RMB￥0 ~ ∞<img data-src="/images_public/pay_qr_code/wechatpay.webp" style="width: 50%;"></div></div></div></div></div></div></div>

<!--
## 支付宝
<div class="flex-row">
<div class="flex-column">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/alipay7.webp"></div>
<div class="flex-column">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/alipay14.webp"></div>
<div class="flex-column">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/alipay28.webp"></div>
<div class="flex-column">
大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/alipay88.webp"></div>
<div class="flex-column">
任意额 | RMB￥0~∞<img data-src="/images_public/pay_qr_code/alipay.webp"></div>
</div>

## 微信
<div class="flex-row">
<div class="flex-column">
一包薯片 | RMB￥7<img data-src="/images_public/pay_qr_code/wechatpay7.webp"></div>
<div class="flex-column">
一杯饮料 | RMB￥14<img data-src="/images_public/pay_qr_code/wechatpay14.webp"></div>
<div class="flex-column">
一份外卖 | RMB￥28<img data-src="/images_public/pay_qr_code/wechatpay28.webp"></div>
<div class="flex-column">
大吉大利 | RMB￥88<img data-src="/images_public/pay_qr_code/wechatpay88.webp"></div>
<div class="flex-column">
任意额 | RMB￥0~∞<img data-src="/images_public/pay_qr_code/wechatpay.webp"></div>
</div>
-->

<h1 id="关于-Mr-Kin-的名称说明">11 &nbsp&nbsp<a href="#关于-Mr-Kin-的名称说明" class="headerlink" title="关于 Mr. Kin 的名称说明"></a>关于 Mr. Kin 的名称说明</h1><p>取名「健先生」，英文写法 Mr. Kin 中的 Kin 是采用 Wade-Giles（威妥玛－翟理斯式）拼法取的。部分网站账户名称有格式限制，故部分媒体帐号名称写作 MisterKin（虽然使用 Mister 称呼人名时一般写缩写「Mr.」）。</p>
<style type="text/css">
.flex-row-top-start{
    display: flex;
    flex-direction: row;
}
.line-dashed{
    border-top-style: dashed;
    border-width: 3px;
}
.text-border{
    border: solid;
    border-width: 4px;
    margin-bottom: 40px;
}
</style>
]]></content>
  </entry>
  <entry>
    <title>分类</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>知识总结手册</title>
    <url>/manuals/index.html</url>
    <content><![CDATA[<h1 id="软件操作总结">1 &nbsp&nbsp<a href="#软件操作总结" class="headerlink" title="软件操作总结"></a>软件操作总结</h1><ul>
<li><a href="/software/blender/blender">Blender总结</a><ul>
<li><a href="/software/blender/interface-tools-operation">Blender界面工具操作总结</a></li>
<li><a href="/software/blender/q-a">Blender常见问题总结 ——Q&amp;A</a></li>
<li><a href="/software/blender/examples">Blender实战案例总结</a></li>
<li><a href="/software/blender/code-development">Blender二次代码开发总结</a></li>
<li><a href="/software/blender/blender-learning-resources">Blender自学资料向（干货整理）(内容已过时，作废)</a></li>
</ul>
</li>
<li><a href="/software/blender/tranining/training">Blender教程总结</a><ul>
<li><a href="/software/blender/tranining/cg-boost-blender28-beginner-series">Blender练习总结：《CG Boost-Blender 2.8 Beginner Series》</a></li>
</ul>
</li>
<li><a href="/software/krita">Krita</a></li>
<li><a href="/software/office">Office</a></li>
<li><a href="/software/virtual-machine">虚拟机总结</a></li>
<li><a href="/software/server">服务器</a></li>
</ul>
<h1 id="编程总结">2 &nbsp&nbsp<a href="#编程总结" class="headerlink" title="编程总结"></a>编程总结</h1><ul>
<li><a href="/code/data-structure">数据结构</a></li>
<li><a href="/code-training/leetcode">力扣LeetCode</a></li>
<li><a href="/code-training/pat">Programming Ability Test (PAT)</a></li>
<li><a href="/code/code">开发总结</a></li>
<li><a href="/code/vscode">Visual Studio Code</a></li>
<li><a href="/code/bash">Bash Shell</a></li>
<li><a href="/code/bat-powershell">Bat&amp;Powershell</a></li>
<li><a href="/code/database">数据库</a></li>
<li><a href="/code/docker">Docker</a></li>
<li><a href="/code/c">C</a></li>
<li><a href="/code/css">CSS</a></li>
<li><a href="/code/git">Git</a></li>
<li><a href="/code/latex">LaTeX</a></li>
<li><a href="/code/markdown">Markdown</a></li>
<li><a href="/code/python">Python</a></li>
<li><a href="/code/qt">Qt</a></li>
<li><a href="/code/hexo">Hexo个人博客搭建踩坑记</a></li>
<li><a href="/code/regular-expressions">正则表达式</a></li>
</ul>
<h1 id="排障总结">3 &nbsp&nbsp<a href="#排障总结" class="headerlink" title="排障总结"></a>排障总结</h1><ul>
<li><a href="/troubleshooting/windows-troubleshooting">Windows系统排障总结</a></li>
<li><a href="/troubleshooting/runtime-library-repair-on-windows">运行库修复（Windows平台）</a></li>
<li><a href="/troubleshooting/linux-troubleshooting">Linux系统排障总结</a></li>
<li><a href="/troubleshooting/hardware-troubleshooting">计算机硬件排障总结</a></li>
<li><a href="/troubleshooting/software-troubleshooting">计算机软件排障总结</a></li>
<li><a href="/troubleshooting/android-troubleshooting">Android系统排障总结</a></li>
<li><a href="/troubleshooting/router-troubleshooting">路由排障总结</a></li>
</ul>
<h1 id="系统安装">4 &nbsp&nbsp<a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h1><ul>
<li><a href="/software/pve">PVE+iKuai+OpenWrt+fnOS 虚拟机折腾记录</a></li>
<li><a href="/software/arch-linux">安装Arch Linux的踩坑记录总结</a></li>
<li><a href="/software/install-deepin-on-lenovo-z500">给联想z500安装deepin linux（深度系统）</a></li>
</ul>
<h1 id="AI开发">5 &nbsp&nbsp<a href="#AI开发" class="headerlink" title="AI开发"></a>AI开发</h1><ul>
<li><a href="/software/ai">AI总结</a></li>
<li><a href="/software/nvidia-jetson">英伟达Jetson开发板踩坑记录总结</a></li>
</ul>
<h1 id="CAD类">6 &nbsp&nbsp<a href="#CAD类" class="headerlink" title="CAD类"></a>CAD类</h1><ul>
<li><a href="/cad/cad">CAD</a></li>
<li><a href="/cad/pcb">PCB设计</a></li>
<li><a href="/cad/flash-disk">闪存驱动器设计</a></li>
<li><a href="/cad/simulation">电路仿真设计</a></li>
</ul>
<h1 id="书籍阅读总结">7 &nbsp&nbsp<a href="#书籍阅读总结" class="headerlink" title="书籍阅读总结"></a>书籍阅读总结</h1><ul>
<li><a href="/code-training/cpp-primer-v5/cpp-primer-v5">C++ Primer 第五版</a></li>
<li><a href="/code-training/qt6-cpp-development-guide/qt6-cpp-development-guide">QT6 C++开发指南</a></li>
<li><a href="/code-training/head-first-html-css-v2/head-first-html-css-v2">Head Fisrt HTML CSS 第二版</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>作品</title>
    <url>/works/index.html</url>
    <content><![CDATA[<div class="wrap">
<div class="left">
<div class="row-right">
<a href="/works/software-works">
<button class="navigation-button-box">软件作品</button></a></div>

<div class="blank-space-column"></div>

<div class="row-right">
<a href="/works/software-works/toggle-language">
<button class="navigation-button-box">切换语言</button></a>
<div class="blank-space-row"></div>
</div>

<div class="blank-space-column"></div>

<div class="row-right">
<a href="/works/software-works/batch-tools">
<button class="navigation-button-box">批处理工具</button></a>
<div class="blank-space-row"></div>
</div>

</div>

<div class="right">
<div class="row-left">
<a href="/works/artworks/">
<button class="navigation-button-box">艺术作品</button></a></div></div>

<div class="row-left">

<div class="blank-space-row"></div>
</div>

</div>

<style type="text/css">
.wrap{
    display: flex;
    flex-direction: row;
}
.left {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    text-align: right;
    margin-right: 25px;
}
.right {
    flex-grow: 1;
    margin-left: 25px;
}
.row-right{
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}
.row-left{
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
}
.blank-space-column{
    height: 20px;
}
.blank-space-row{
    width: 60px;
}
</style>
]]></content>
  </entry>
  <entry>
    <title>关于本站</title>
    <url>/about/about-site/index.html</url>
    <content><![CDATA[<h1 id="初衷">1 &nbsp&nbsp<a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>最初只是想建立用来记录自己的一些学习及心得杂记。网络给予我一个便捷的方式去获取知识，让我学习到了很多东西，从博客搭建到电脑维修、从程序编写到影视后期、从……到……，大多技能都实现了自学。</p>
<p>取之于网，返之于网，通过本站记录下来。一来，锻炼了写作思维能力；二来，分享了知识，帮助那些想在网络上获取知识的朋友；再者，也记录自身点点滴滴的成长。</p>
<div class="note primary no-icon"><p>若觉得本站的文章不错，靓仔&#x2F;美女们，不考虑打个赏，挺挺我吗？谢谢支持！(๑•̀ㅂ•́)و✧ <a href="/about/#%E6%8C%BA%E6%88%91">点击挺我！</a></p>
</div>

<h1 id="本站许可协议">2 &nbsp&nbsp<a href="#本站许可协议" class="headerlink" title="本站许可协议"></a>本站许可协议</h1><p>许可协议：本作品的所有内容，除个人设计创作的图像（如 logo 等）和相关的视频创作及其他特别声明外，均采用<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh">知识共享 署名‐非商业性使用‐相同方式共享 4.0 国际许可协议</a>进行发布。版权 © Mr. Kin，保留所有权利。</p>
<table>
<thead>
<tr>
<th align="left">允许</th>
<th align="left">限制</th>
<th align="left">条件</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><font style="color: green;">√</font> 修改</td>
<td align="left"><font style="color: red;">×</font> 商标使用</td>
<td align="left"><font style="color: blue;">⊙</font> 保留原署名</td>
</tr>
<tr>
<td align="left"><font style="color: green;">√</font> 分发</td>
<td align="left"><font style="color: red;">×</font> 专利使用</td>
<td align="left"><font style="color: blue;">⊙</font> 状态变更说明</td>
</tr>
<tr>
<td align="left"><font style="color: green;">√</font> 个人使用</td>
<td align="left"><font style="color: red;">×</font> 商业使用</td>
<td align="left"><font style="color: blue;">⊙</font> 相同的许可和版权声明</td>
</tr>
</tbody></table>
<p><em>许可注意：若想对本作品进行转载、引用亦或是进行二次创作时，请详细阅读上述相关协议内容（若不理解，请点击链接跳转阅读）。为保障本人权利，对于违反者，本人将依法予以处理！同时会向搜索引擎提交<a href="https://www.copyright.gov/legislation/dmca.pdf">DMCA</a>的投诉申请。望周知！—— Mr. Kin</em></p>
<h1 id="勘误声明">3 &nbsp&nbsp<a href="#勘误声明" class="headerlink" title="勘误声明"></a>勘误声明</h1><p>虽本人写作时已尽力保证其内容的正确性，但因个人知识面和经验的局限性以及计算机技术等相关技术日新月异，本作品内容或存在一些错误之处。欢迎<a href="/about#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F">联系我</a>以更正错误，不胜感激！—— Mr. Kin</p>
<h1 id="侵权声明">4 &nbsp&nbsp<a href="#侵权声明" class="headerlink" title="侵权声明"></a>侵权声明</h1><p>若本站采用的第三方内容侵犯了你的版权，请<a href="/about#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F">联系我</a>进行处理，谢谢！—— Mr. Kin</p>
<h1 id="免责声明">5 &nbsp&nbsp<a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>根据**中国《<a href="https://ipc.court.gov.cn/zh-cn/news/view-407.html">计算机软件保护条例</a>》第十七条规定：“为了学习和研究软件内含的设计思想和原理，通过安装、显示、传输或者存储软件等方式使用软件的，可以不经软件著作权人许可，不向其支付报酬。”**本站分享的任何逆向破解软件，版权所有者归原软件著作权人。仅供个人使用或学习研究，严禁商业或非法用途，严禁用于打包恶意软件推广，否则后果由用户承担责任，特此说明。—— Mr. Kin</p>
<h1 id="关于本站博文的几点声明">6 &nbsp&nbsp<a href="#关于本站博文的几点声明" class="headerlink" title="关于本站博文的几点声明"></a>关于本站博文的几点声明</h1><div class="note info no-icon"><p><strong>本站一些重要的博文（例如软件手册或者系列文章汇总）会有对应的 PDF 及 LaTeX 源码，可以下载用以离线查看，具体详看「<a href="/about/post-offline-download/">博文离线下载</a>」。</strong></p>
</div>

<h1 id="网站浏览适配性问题">7 &nbsp&nbsp<a href="#网站浏览适配性问题" class="headerlink" title="网站浏览适配性问题"></a>网站浏览适配性问题</h1><p>本网站基于以下条件进行 debug 测试：</p>
<ul>
<li>1920×1080 分辨率的笔记本屏幕</li>
<li>火狐浏览器</li>
<li>Win10 OS</li>
</ul>
<p>本站存在的问题：</p>
<ul>
<li>若浏览器页面缩放程度或浏览设备屏幕分辨率不同时，部分网页内容设计的位置和样式可能会与我设想中的效果不同，例如“关于我”页面中「本人」那一小节内容的图片和文字在移动端上的排版效果就很糟糕。</li>
<li>特殊日子网站效果中的哀悼效果对 html 标签应用 filter 会破坏火狐中的 fixed 元素，而在 chrome 内核的浏览器中解析正常。<br><em>（本人不是科班出身，网站中各种问题计划会在日后的实力增长中陆续解决。）</em></li>
</ul>
<p><del><strong>注：网站的图标是白色Alpha透明底的图像，只有在深色模式下才能看到。（“关于我”页面「本人」小节用的头像也是白色Alpha透明底图像）</strong></del></p>
<div class="note info no-icon"><p>网站默认启用了“深色模式”（Dark Mode），但只有在启用了深色模式的操作系统中使用支持 prefers-color-scheme 属性的浏览器才能浏览“深色模式”。</p>
</div>

<p><em><strong>关于“深色模式”问题的自我诊断：若系统启用了深色模式，而浏览器未见效时，请先排查当前使用的浏览器是否支持 prefers-color-scheme 属性。若是支持性无问题，则浏览器应该有独自设置来确定其主题。以Edge为例：版本 83.0.478.44的新版Edge（Chromium核心）中的「设置&gt;外观&gt;自定义浏览器&gt;默认主题」，该选项支持切换主题颜色「浅色」「深色」「系统默认」。</strong></em></p>
<div class="note danger no-icon"><p><strong>正式决定：所有开发环境取消“深色模式”。本想也取消网站的，但系统不启用深色模式时便不会影响，所以就保留了网站默认启用“深色模式”，以方便那些习惯了“深色模式”的朋友。</strong></p>
<p>近日研究 PWM 调光技术，在查询相关资料时无意中了解到有关深色模式和浅色模式的研究。</p>
<blockquote class="blockquote-center">
<p>多数研究表明深色字体&#x2F;浅色背景要优于浅色字体&#x2F;深色背景，<br>Bauer and Cavonius (1980) 的实验中，人们阅读前者的文字比后者准确率高 26%。</p>

</blockquote>

<blockquote class="blockquote-center">
<p>在使用白色背景时，人眼的瞳孔会收缩（进入眼球的光线就减少了），使得视线更易聚焦；<br>而使用深色背景时，瞳孔放大，进入眼球的光线变多，但眼睛更容易眼花。</p>

</blockquote>

<blockquote class="blockquote-center">
<p>正确的习惯是，不管白天黑色，都把室内的环境灯打开；<br>同时，选择和环境反差小的浅色背景。</p>
<p style="text-align: right;">以上引用均来自知乎用户「<a href="https://www.zhihu.com/people/fanegenstein">右璵</a>」</p>
</blockquote>

<p>使用“深色模式”已将近两年多，自己确实感觉到不舒适和不方便。且有一点特别明显，“深色模式”下，我需要花费更多的注意力在聚焦上，总感觉自己看不清字。目前在切换到浅色模式（Light Mode）后，虽有些许不适应（毕竟使用了很长时间的深色模式），但总体还是往好的方向发展。</p>
<p style="text-align: right;"> —— Mr. Kin, 2020/6/16</p></div>
]]></content>
  </entry>
  <entry>
    <title>更新日志</title>
    <url>/about/logs/index.html</url>
    <content><![CDATA[<div class="note info no-icon"><p>注：本页面用来记录本博客的建设日志。（从2021&#x2F;11&#x2F;11起，只记录博客功能的变化，如dependence更新、新功能等，但不再记录博客文档内容变化。）</p>
</div>

<h1 id="2025"><a href="#2025" class="headerlink" title="2025"></a><center>2025</center></h1><div class="hang-retract">

<p>2025-05-11：hexo-generator-searchdb从v1.4.1升级至v1.5.0。</p>
<p>2025-04-06：hexo-theme-next从v8.22.0升级至v8.23.0。</p>
<p>2025-03-31：禁用hexo-theme-next的TOC的折叠效果（因主题插件该功能仍存在bug，过长字符会导致TOC出现折叠丢失等异常问题）。</p>
<p>2025-03-18：hexo-renderer-marked从v7.0.0升级至v7.0.1。</p>
<p>2025-02-21：重新启用<code>hexo-theme-next</code>主题的<code>动画效果</code>和<code>页面加载进度样式</code>，以改善页面浏览体验。</p>
<p>2025-01-13：移除<code>hexo-tag-mmedia</code>（该插件已久不更新，选择弃用，相关功能改用<code>&lt;iframe&gt;</code>标签实现）。</p>
<p>2025-01-11：移除依赖包<code>js-yaml</code>：已经不存在<a href="https://github.com/hexojs/hexo/issues/4917">YAMLException</a>错误。</p>
<p>2025-01-10：修复插件<code>hexo-heading-index</code>：<a href="https://github.com/Mister-Kin/hexo-heading-index/commit/50ed3f449bb8d43e998ca31a6af01ac7c33ace22">fix: sometimes render blank content for post excerpt and cheerio always still decodes html entities</a>。</p>
<p>2025-01-07：hexo-renderer-marked从v6.3.0升级至v7.0.0。</p>
<p>2025-01-06：<a href="https://github.com/r12f/hexo-heading-index/pull/8">修复</a>插件<code>hexo-heading-index</code>的「<a href="https://github.com/r12f/hexo-heading-index/issues/6">Unexpected behavior with Tabs feature of hexo-theme-next</a>」问题，并指定<code>package.json</code>的<code>hexo-heading-index</code>版本为github仓库<code>git://github.com/Mister-Kin/hexo-heading-index.git</code>。</p>
<p>2025-01-04：引入<a href="https://giscus.app/zh-CN">Giscus评论系统</a>（基于<a href="https://github.com/next-theme/hexo-next-giscus">hexo-next-giscus</a>插件）。</p>
<p>2025-01-01：hexo-theme-next从v8.22.1升级至v8.22.0。取消「移除菜单元素激活后的样式内容（移除小灰点）」，该问题<a href="https://github.com/next-theme/hexo-theme-next/commit/58004e8180584fd7507d5f7817f9c2b063b10fe3">已被修复</a>。</p>
</div>

<h1 id="2024"><a href="#2024" class="headerlink" title="2024"></a><center>2024</center></h1><div class="hang-retract">

<p>2024-12-26：修整博客移动端页面判断，移动端不调整主框架宽度。（即仅检测不支持触摸屏的设备才会生效样式）</p>
<p>2024-12-25：调整live2d的小埋模型边距；移除菜单元素激活后的样式内容（移除小灰点）；拓宽主页面框架宽度。</p>
<p>2024-11-19：hexo-theme-next从v8.21.0升级至v8.21.1。</p>
<p>2024-09-22：hexo-theme-next从v8.20.0升级至v8.21.0。</p>
<p>2024-07-10：hexo从v7.2.0升级至v7.3.0；hexo-generator-index从v3.0.0升级至v4.0.0。</p>
<p>2024-05-12：博文TOC目录取消全部展开；本地开发环境：Node.js降级至v20.13.1。</p>
<p>2024-05-08：将「关于我」的“I love OS”动态文字的改动至站点底部（可能是由于开启了lazyload功能，博客post页面的js脚本在首次渲染页面时不能正常加载该脚本，因此将其改至站点页面全局的元素）；「鼠标点击特效 - 社会主义核心价值观」功能，改用无jQuery版本的方案（新版next主题已无自带有jQuery，因此更换实现方案）。</p>
<p>2024-05-03：移除Gitee相关部署代码（注销Gitee账号，详细参见<a href="https://gitee.com/oschina/git-osc/issues/I9L5FJ?from=project-issue">关于GiteePages无法启动和更新的看过来！</a>，不再使用Gitee作为镜像站点）</p>
<p>2024-05-02：hexo-theme-next从v8.19.2升级至v8.20.0；back2top位置修改至sidebar栏。</p>
<p>2024-04-26：hexo从v7.1.1升级至v7.2.0；hexo-word-counter从v0.1.0升级至v0.2.0。</p>
<p>2024-04-05：hexo-renderer-marked从v6.2.0升级至v6.3.0。</p>
<p>2024-04-01：添加对「网站收藏夹」页面的样式支持。</p>
<p>2024-03-14：更新Github Action的依赖：checkout从v3升级至v4；setup-node从v3升级至v4；node-version从18修改为20；cache从v3升级至v4。</p>
<p>2024-03-06：hexo-theme-next从v8.19.1升级至v8.19.2。</p>
<p>2024-02-17：hexo从v7.0.0升级至v7.1.1。</p>
</div>

<h1 id="2023"><a href="#2023" class="headerlink" title="2023"></a><center>2023</center></h1><div class="hang-retract">

<p>2023-12-27：hexo-theme-next从v8.19.0升级至v8.19.1。</p>
<p>2023-12-03：hexo-theme-next从v8.18.2升级至v8.19.0；hexo-renderer-marked从v6.1.1升级至v6.2.0；本地开发环境：Node.js从v20.4.0升级至v21.3.0。</p>
<p>2023-11-02：hexo从v6.3.0升级至v7.0.0。</p>
<p>2023-10-10 - hexo-theme-next从v8.18.1升级至v8.18.2。</p>
<p>2023&#x2F;09&#x2F;09 - hexo-theme-next从v8.18.0升级至v8.18.1。</p>
<p>2023&#x2F;08&#x2F;02 - hexo-theme-next从v8.17.1升级至v8.18.0；启动代码块折叠功能（设置超过高度600就折叠）。</p>
<p>2023&#x2F;07&#x2F;18 - 本地开发环境：Node.js从v20.1.0更新至v20.4.0；hexo-renderer-marked从v6.1.0升级至v6.1.1；hexo-tag-mmedia从v1.1.7升级至v1.2.1。</p>
<p>2023&#x2F;07&#x2F;02 - hexo-theme-next从v8.17.0升级至v8.17.1。</p>
<p>2023&#x2F;06&#x2F;07 - post-body样式下的special_declaration样式名称重命名为special-declaration。</p>
<p>2023&#x2F;06&#x2F;06 - hexo-renderer-marked从v6.0.0升级至v6.1.0；hexo-theme-next从v8.16.0升级至v8.17.0；移除resolutions下手动指定版本的stylus拓展（已经不再需要，hexo-renderer-stylus v3.0.0已默认为当前最新的stylus v0.59.0以及hexo-theme-next v8.17.0也解决stylus依赖问题——css库依赖报错）。</p>
<p>2023&#x2F;06&#x2F;03 - hexo-heading-index设置：编号后（即编号和标题之间）多加两个空格，便于阅读；styles.styl文件：post-body添加强调文本框样式（special_declaration）。</p>
<p>2023&#x2F;05&#x2F;20 - hexo-renderer-stylus从v2.0.0升级至v3.0.0。</p>
<p>2023&#x2F;05&#x2F;09 - hexo-theme-next从v8.15.1升级至v8.16.0；本地开发环境：Node.js从v20.0.0更新至v20.1.0。</p>
<p>2023&#x2F;04&#x2F;25 - follow me增添acfun链接，更新bilibili的fontawesome图标。</p>
<p>2023&#x2F;04&#x2F;20 - 本地开发环境：Node.js从v19.7.0更新至v20.0.0。</p>
<p>2023&#x2F;04&#x2F;03 - hexo-theme-next从v8.15.0升级至v8.15.1。</p>
<p>2023&#x2F;03&#x2F;08 - styles.styl的「center-bold」样式设置字体大小为x-large。</p>
<p>2023&#x2F;03&#x2F;05 - hexo-theme-next从v8.14.2升级至v8.15.0；本地开发环境：Node.js从v19.3.0更新至v19.7.0。</p>
<p>2023&#x2F;02&#x2F;05 - hexo-theme-next从v8.14.1升级至v8.14.2。</p>
<p>2023&#x2F;01&#x2F;31 - 文章末尾社交链接添加橡皮筋动画。</p>
<p>2023&#x2F;01&#x2F;22 - 文章末尾“许可注意”添加DMCA描述；文章末尾新增“免责声明”；侧边栏logo图像添加橡皮筋动画。</p>
<p>2023&#x2F;01&#x2F;07 - hexo-theme-next从v8.14.0升级至v8.14.1。</p>
<p>2023&#x2F;01&#x2F;01 - 本地开发环境：Node.js从v19.0.0更新至v19.3.0。</p>
</div>

<h1 id="2022"><a href="#2022" class="headerlink" title="2022"></a><center>2022</center></h1><div class="hang-retract">

<p>2022&#x2F;12&#x2F;09 - 禁用google_adsense功能设置（虽然网站已经通过了审核，但考虑到大陆网络对google广告是墙的，并且自动广告设置不当，页内嵌入广告又需要每个页面进行设置，即使可以用模板实现还是过于繁琐，详见<a href="https://szukevin.site/2020/03/27/GitHub-page%E6%8E%A5%E5%85%A5Google%E5%B9%BF%E5%91%8A/">这篇文章</a>，因此最终选择不再启用google_adsense）。</p>
<p>2022&#x2F;12&#x2F;06 - hexo-theme-next从v8.13.2升级至v8.14.0。</p>
<p>2022&#x2F;11&#x2F;14 - hexo-word-counter从v0.0.3升级至0.1.0（移除新版中不再支持的awl选项）；精简action部署脚本的触发条件，不再细写repo分支名。</p>
<p>2022&#x2F;11&#x2F;04 - hexo-theme-next从v8.13.1升级至v8.13.2。</p>
<p>2022&#x2F;10&#x2F;30 - hexo-generator-searchdb从v1.4.0升级至v1.4.1。</p>
<p>2022&#x2F;10&#x2F;26 - 「更新日志」页面增加悬挂缩进量（日期统一写法：xxxx&#x2F;xx&#x2F;xx）；hexo-generator-archive从v1.0.0升级至v2.0.0；hexo-generator-category从v1.0.0升级至v2.0.0；hexo-generator-index从v2.0.0升级至v3.0.0；hexo-generator-tag从v1.0.0升级至v2.0.0；本地开发环境：Node.js从v18.8.0更新至v19.0.0。</p>
<p>2022&#x2F;10&#x2F;22 - 移除hexo-cake-moon-menu插件；启用next主题中的back2top功能（回到顶部），并启动其scrollpercent选项；禁用next主题中的pace功能（页面加载样式）。</p>
<p>2022&#x2F;10&#x2F;10 - hexo-renderer-marked从v5.0.0升级至v6.0.0。</p>
<p>2022&#x2F;10&#x2F;04 - hexo-theme-next从v8.13.0升级至v8.13.1。</p>
<p>2022&#x2F;9&#x2F;28 - Github action自动部署脚本中恢复支持刷新Gitee页面（改用<a href="https://github.com/yanglbme/gitee-pages-action">yanglbme&#x2F;gitee-pages-action</a>，弃用<a href="https://github.com/mizuka-wu/gitee-pages-action">mizuka-wu&#x2F;gitee-pages-action</a>）。</p>
<p>2022&#x2F;9&#x2F;10 - Github action自动部署脚本中暂时停用刷新Gitee页面（Error: Max redirects exceeded.）。</p>
<p>2022&#x2F;9&#x2F;9 - hexo从v6.0.0升级至v6.3.0（通过<code>yarn add js-yaml@latest</code>安装最新的js-yaml依赖，已解决<a href="https://github.com/hexojs/hexo/issues/4917">YAMLException错误</a>）；js-yaml首次安装v4.1.0；hexo-theme-next从v8.12.3升级至v8.13.0。</p>
<p>2022&#x2F;8&#x2F;12 - hexo-theme-next从v8.11.2升级至v8.12.3。</p>
<p>2022&#x2F;7&#x2F;23 - hexo-theme-next从v8.11.1升级至v8.12.2；stylus从v0.57.0更新至v0.58.1。</p>
<p>2022&#x2F;5&#x2F;21 - hexo-theme-next从v8.11.0升级至v8.11.1。</p>
<p>2022&#x2F;4&#x2F;3 - hexo-theme-next从v8.10.1升级至v8.11.0。</p>
<p>2022&#x2F;3&#x2F;28 - hexo强制安装v6.0.0（升级至v6.1.0有bug，会导致YAMLException错误）；hexo-generator-sitemap从v2.2.0更新至v3.0.1；hexo-theme-next从v8.10.0升级至v8.10.1；stylus从v0.56.0更新至v0.57.0。</p>
<p>2022&#x2F;2&#x2F;9 - 不再使用next主题的centerquote标签来作为居中强调用途，使用自定义的center-bold样式；完善部分样式名称，避免过于简略导致样式重名。</p>
<p>2022&#x2F;2&#x2F;7 - hexo-theme-next从v8.9.0升级至v8.10.0（解决了highlight.js版本导致的问题，新版中tomorrow-night被移除。折腾了两天的问题终于得到了解决。<em>highlight.js v11.0版本后发布的css经过了压缩，导致next主题原有的正则表达式失效，传递了空值给stylus引擎。NexT为了支持highlight.js提供的近百个代码高亮主题，使用正则表达式从css中提取代码块的前景、背景色。虽然健壮性不好，但对现有的绝大多数highlight.js主题都适用。——引用自主题维护者</em>）。</p>
<p>2022&#x2F;2&#x2F;4 - hexo-renderer-marked从v4.1.0升级至v5.0.0。</p>
<p>2022&#x2F;2&#x2F;3 - 关闭next主题的bookmark选项。</p>
<p>2022&#x2F;1&#x2F;19 - hexo-heading-index从v1.0.4升级至v1.0.6（昨日向插件作者反应，<a href="https://github.com/r12f/hexo-heading-index/issues/5">该插件无法保留超链接</a>，作者于今日提交了两个版本以解决这个问题，目前插件可以保留原标题的html的样式）。</p>
<p>2022&#x2F;1&#x2F;18 - 超链接样式适配markdown标题链接；修复样式重名bug：post-body-end.njk中line样式和next主题的codeblock样式中line重名（现已将line和text样式重新命名为dividing-line和tag-text样式，并移除add-vertical-space样式，将其写进标签中的style属性）；关闭hexo默认渲染器marked（hexo-renderer-marked）的smartypants选项，避免英文引号被替换成中文引号。</p>
<p>2022&#x2F;1&#x2F;14 - 调整参考文献的小节文字的css样式：左对齐；依赖升级：hexo-heading-index从v1.0.2升级至v1.0.4，hexo-server从v2.0.0升级至v3.0.0。</p>
<p>2022&#x2F;1&#x2F;2 - hexo从v5.4.0更新至v6.0.0；hexo-generator-sitemap从v2.1.0更新至v2.2.0；hexo-renderer-ejs从v1.0.0更新至v2.0.0；hexo-theme-next从v8.8.1更新至v8.9.0；stylus从v0.55.0更新至v0.56.0。本地开发环境：Node.js从v16.13.0更新至v17.3.0，yarn从v1.22.5更新至v1.22.15。<del>移除yarn的v1.22.5版本，使用Node.js的v16.10版本起自带的corepack工具，<code>corepack enable</code>命令启用corepack工具即可正常使用yarn（目前是v1.22.15，暂不考虑迁移到yarn的高版本）。</del></p>
</div>

<h1 id="2021"><a href="#2021" class="headerlink" title="2021"></a><center>2021</center></h1><div class="hang-retract">

<p>2021&#x2F;11&#x2F;7 - Next theme更新至v8.8.1。</p>
<p>2021&#x2F;10&#x2F;29 - 本地开发环境：Node.js 从 v16.8.0 更新至 v16.13.0。</p>
<p>2021&#x2F;10&#x2F;28 - 更新手册「切换语言」。</p>
<p>2021&#x2F;10&#x2F;21 - 规范化HTML的style和script标签的写法（补充type&#x3D;&quot;text&#x2F;css&quot;和type&#x3D;&quot;text&#x2F;javascript&quot;）；调整flexbox布局的部分间距以改善排版效果；移除flexbox布局内img等标签自动生成的底部外边距（margin-bottom）；移除 fancybox生成的图像父标签（即a标签）的下划线；增加“免费支持我”内容和按钮。</p>
<p>2021&#x2F;10&#x2F;20 - Next theme更新至v8.8.0；修改赞赏内容的描述。</p>
<p>2021&#x2F;10&#x2F;19 - 更新「关于我」页面的QQ二维码。</p>
<p>2021&#x2F;10&#x2F;18 - 特殊日子网站效果-纪念日：国庆节由1号改至1-7号。</p>
<p>2021&#x2F;10&#x2F;4 - 樱花动效的z-index属性设置为-1：避免在浏览文章时遮挡视线。</p>
<p>2021&#x2F;9&#x2F;29 - 添加hexo-footnotes插件（同时用styles.styl强制覆盖原有样式）；移除每个文件内的flex样式，改由styles.styl文件实现；添加适配超链接样式的父标签：文章顶部的 meta 信息。</p>
<p>2021&#x2F;9&#x2F;22 - 添加hexo-directory-category插件：根据文章目录自动生成文章的category；hexo-generator-searchdb插件从v1.3.4更新至1.4.0。</p>
<p>2021&#x2F;9&#x2F;9 - 移除适配超链接文本样式：文章的span行内元素标签（效果不佳）。</p>
<p>2021&#x2F;9&#x2F;7 - 使用variables.styl定义超链接文本样式颜色的变量；启用一些主题设置：links（友情链接）+pangu（自动添加中英文字符间的空格）+pace（页面加载进度）；hexo-renderer-marked从v4.0.0更新至v4.1.0；stylus从v0.54.8更新至v0.55.0；自定义主题设置选项从button更改为sidebar_button。</p>
<p>2021&#x2F;9&#x2F;6 - 修改 Github Action 并支持部署到 gitee；部分文件名中的 Wechat 修正为 WeChat。</p>
<p>2021&#x2F;9&#x2F;5 - 添加适配超链接文本样式的父标签：文章的 span 行内元素标签；使用 npm 包安装 next 主题，同时利用 _config.next.yml 配置主题（弃用以往手动更新主题相关文件的繁琐流程）。</p>
<p>2021&#x2F;8&#x2F;24 - 添加特殊日子网站效果：纪念日（烟花特效和庆祝语）、公祭日及哀悼日（全站灰色效果+R.I.P标语+黑色丝带图标）；「关于本站」页面添加“本站存在的问题”的描述。</p>
<p>2021&#x2F;8&#x2F;22 - 添加适配超链接文本样式的父标签：页面文章底部的面包屑导航按钮。</p>
<p>2021&#x2F;8&#x2F;17 - 改进头像效果：支持鼠标悬停变色。</p>
<p>2021&#x2F;8&#x2F;14 - 改进头像效果：添加环阴影效果，禁用旋转效果。</p>
<p>2021&#x2F;8&#x2F;13 - 启用 next 主题的 pjax 功能：提供更快的页面加载速度。</p>
<p>2021&#x2F;8&#x2F;5 - 修正「站点导航」下拉菜单内容的鼠标悬停样式为 pointer。</p>
<p>2021&#x2F;8&#x2F;2 - 添加 hexo-heading-index 插件，实现文章标题自动编号；关闭文章侧边栏目录的自动编号功能；改进文章末尾添加 “本文结束” 标记：添加顶部间距 + 加深颜色，从 #bbb 改为 darkgrey；改进超链接文本样式：合并部分功能选项设置 + 自适应博文中的多种父标签。</p>
<p>2021&#x2F;8&#x2F;1 - Next theme 从 v8.5.0 更新至 v8.7.0；本地开发环境：Node 从 v16.5.0 更新至 v16.6.0；更新「博文离线下载 - PDF 及 LaTeX 源码」页面。</p>
<p>2021&#x2F;7&#x2F;31 - 更新「「切换语言」使用手册 - Blender 插件」页面中的链接。</p>
<p>2021&#x2F;7&#x2F;27 - 本地开发环境：Node 从 v16.3.0 更新至 v16.5.0。</p>
<p>2021&#x2F;6&#x2F;22 - 本地开发环境：hexo-cli 依赖从 v4.2.0 更新到 v4.3.0；优化改进「live2d 模型更换 - 小埋」：分别 fork 仓库 <a href="https://github.com/EYHN/hexo-helper-live2d"> EYHN&#x2F;hexo-helper-live2d </a> 和仓库 <a href="https://github.com/xiazeyu/live2d-widget.js"> xiazeyu&#x2F;live2d-widget.js </a> 后再进行修改代码及重新编译（为 umaru 模型修正 motion 的读取），以便适配 Github Action 的自动构建流程（无需增加 action 流程，例如写相关命令来自动修改文件代码和自动编译）。</p>
<p>2021&#x2F;6&#x2F;21 - 实现「蓝图规划」页面中「网站建设」的「live2d 模型更换 - 小埋」；移除 hibiki 模型依赖：live2d-widget-model-hibiki；hexo-generator-searchdb 插件从 v1.3.3 更新到 v1.3.4。</p>
<p>2021&#x2F;6&#x2F;20 - 格式化 source&#x2F;_data&#x2F;body-end.njk 部分注释内容的代码（优化排版）。</p>
<p>2021&#x2F;6&#x2F;19 - 修改 Next 主题侧边栏超链接的文本样式，以适配 postbody 类的超链接样式，同时合并两种超链接文本样式的设置选项到父设置选项 theme_color_custom。</p>
<p>2021&#x2F;6&#x2F;18 - 实现「蓝图规划」页面中「网站建设」的「鼠标指针样式修改」。</p>
<p>2021&#x2F;6&#x2F;17 - 实现「蓝图规划」页面中「网站建设」的「超链接样式优化改进」。</p>
<p>2021&#x2F;6&#x2F;15 - 实现「蓝图规划」页面中「网站建设」的「樱花动效背景」。</p>
<p>2021&#x2F;6&#x2F;2 - Next theme 更新至 v8.5.0，hexo-tag-mmedia 插件从 v1.1.6 更新到 v1.1.7。</p>
<p>2021&#x2F;5&#x2F;30 - 本地开发环境的 Node 从 v15.11.0 升级至 v16.2.0。</p>
<p>2021&#x2F;5&#x2F;1 - 创建页面「博文离线下载」；站点导航增加按钮「离线下载」；添加置顶公告1；纠正「关于我」页面中的 flex 布局错乱；Next theme 更新至 v8.4.0。</p>
<p>2021&#x2F;4&#x2F;30 - 优化 flex 布局的 CSS 样式（添加图片并排的间隔；针对图片大小不一，统一横向底端对齐；针对小图的横向并排居中显示）。</p>
<p>2021&#x2F;4&#x2F;26 - Next theme 更新至 2021&#x2F;4&#x2F;26 仓库版本；hexo-cake-moon-menu 插件从 2.4.1 更新至 2.5.0 版本；新建页面「软件使用手册」；将文章「Blender 插件 - 切换语言」内容作为手册内容移植到页面「软件使用手册」；依照新页面「软件使用手册」更新相应链接和菜单。</p>
<p>2021&#x2F;3&#x2F;11 - Next theme 更新至 v8.2.2；Hexo 更新至 v5.4.0；改用_data&#x2F;languages.yml 文件实现语言修改，取代直接修改语言配置文件；升级插件的过时包依赖（订正新版本 hexo-tag-mmedia 标签写法）；除主题外，全部更新均使用 package 中 dependencies 版本号修改更新完成。</p>
<p>2021&#x2F;2&#x2F;11 - 完成 Github Actions 编写，成功部署博客。</p>
<p>2021&#x2F;2&#x2F;10 - 取消 Next Theme 中 back2top 的设置，改换 hexo-cake-moon-menu 插件实现；修改 站点配置文件中 url 块的设置，修复 RSS 中原文链接错误的问题；修改 hexo-generator-feed 的设置，在 RSS 展示文章所有内容，同时修复 icon 路径问题。</p>
<p>2021&#x2F;2&#x2F;8 - Next theme 更新至仓库最新；Hexo 更新至 5.3.0；hexo-cli 重装 4.2.0（目前默认主题 landscape 已经改为 npm 安装，clone hexo-cli 就很快速简便了）；关闭 motion 动画（加载过慢）；<s> 图片查看方法由 fancybox 更改为 mediumzoom</s>（mediumzoom 只支持查看单张图片，即无法在浏览时切换其他图片，并且会使 「关于我」中头像排版混乱，因为以前的 html 代码是在 fancybox 下调试编写的）。</p>
</div>

<h1 id="2020"><a href="#2020" class="headerlink" title="2020"></a><center>2020</center></h1><div class="hang-retract">

<p>2020&#x2F;12&#x2F;18 - 「关于我」页面添加「关于 Mr. Kin 的名称说明」小节内容。</p>
<p>2020&#x2F;12&#x2F;10 - Next theme 更新至仓库最新；开启 hexo-neat 插件中移除 LineBreaks 的选项（主题作者已修复该问题，不会因此导致 sticky icon 和文章标题之间缺失空白）。</p>
<p>2020&#x2F;9&#x2F;30 - Node 从 12.8.3 升级至 12.8.4；Hexo 从 v5.1.1 升级至 5.2.0；Next theme 更新至最新仓库；去除 Sticky 功能的依赖插件 hexo-generator-indexed，未安装时无影响。</p>
<p>2020&#x2F;9&#x2F;22 - 更新文章「Blender 插件 - 切换语言 」。</p>
<p>2020&#x2F;9&#x2F;20 - 更新页面「第三方开源许可声明」；更新文章「Blender 插件 - 切换语言」。</p>
<p>2020&#x2F;9&#x2F;19 - 「关于我」页面更新专业技能点。</p>
<p>2020&#x2F;9&#x2F;18 - 「关于本站」页面添加 “本站许可协议” 说明。</p>
<p>2020&#x2F;9&#x2F;17 - 更新文章「Blender 插件 - 切换语言」；更新「站点导航」部分链接。</p>
<p>2020&#x2F;9&#x2F;15 - Hexo 从 v5.0.0 升级至 v5.1.1；hexo-cli 脚手架从 v4.1.0 升级至 v4.2.0；Next theme 从 v8.0.0-rc.5 升级至 v8.0.0；因主题作者已使用 flex 排版进行重构，所以去除「文章末尾自动插入信息」功能实现的旧方案 -“injects point”，使用 flex 中 order 属性实现顺序排版功能。</p>
<p>2020&#x2F;8&#x2F;6 - 去除页面“关于我”第一小节的原 hr 标签生成的横线，改用 css 样式生成边框和分割线。</p>
<p>2020&#x2F;8&#x2F;4 - 调整 hexo-neat 插件组件中的 HTMLMinifie（设置项为neat_html） 的参数设置，添加参数以保留 LineBreaks（因其默认参数会移除 LineBreaks，该问题会导致 sticky icon 和文章标题之间缺失空白空间的情况）。</p>
<p>2020&#x2F;8&#x2F;3 - Hexo 从 v4.2.1 升级至 v5.0.0；hexo-cli 脚手架从 v3.1.0 升级至 v4.1.0；Next theme 从 v8.0.0-rc.3 升级至 v8.0.0-rc.5；移除标签云插件 hexo-tag-cloud（对当前主题兼容性不好，会导致侧边栏超出限定 height 而出现滚动栏。另外，此插件有时挺占用 CPU 资源）；添加插件 index_generator 以支持置顶文章（扩展 Front-matter: sticky 参数）；重新添加回 hexo-browsersync 插件（字数超过 1000 时渲染空白的问题已找到解决方法，hexo-server 插件导致产生此bug，设置下 server 插件的参数即可）；页面 “关于我” 修改第一小节的排版属性 position 和 width 的参数以适应排版（当前环境下渲染有问题）。</p>
<p>2020&#x2F;6&#x2F;29 - 补充页面“关于”「技能点」；页面“关于”「挺我」中二维码放弃瀑布流排版方式，换用 tabs 实现切换。</p>
<p>2020&#x2F;6&#x2F;25 - 谷歌帐号由 moyu1355 迁至新帐号 im.misterkin，更新相应的 Google Analytics, Google Search Console, Google AdSense 标签代码；更新网站上关于 Gmail 邮件和 Youtube 频道的链接。</p>
<p>2020&#x2F;6&#x2F;21 - 部分页面使用 Pangu 在全角和半角字符间添加空格。</p>
<p>2020&#x2F;6&#x2F;16 - 替换网站透明图标和页面 “关于” 的透明头像；样式修改：深色模式下也给头像添加阴影（适应「深色模式」选项启用时的浅色浏览，即操作系统不启用 “深色模式”）；删除页面 “更新日志” 的标题 “日志内容”。</p>
<p>2020&#x2F;6&#x2F;14 - 更新页面 “关于我”「技能点」小节；侧边栏底部添加标签云特效；关闭侧边栏许可图标；侧边栏按钮增加样式 “顶部边距”。</p>
<p>2020&#x2F;6&#x2F;7 - 更新页面 “关于本站”；发表文章《BL 插件 - 一键切换语言》</p>
<p>2020&#x2F;6&#x2F;4 - 本机环境 Node 从 v14.3.0 降级到 v12.18.0 LTS（模块 stylus 在 node v14 下有 &#39;Accessing non-existent property&#39;s error&#39;，待该项目修复升级支持 node v14 才能解决；模块 fsevents（可选模块）在两个 node 版本都出现 win32 incompatible，暂未找到解决方式）；Next 主题从 v8.0.0-rc.2 升级至 v8.0.0-rc.3；增加 velocity 的 jsdelivr cdn；修改 hexo\config.yml 和 Next\config.yml 的部分注释；重新测试 hexo-browsersync 插件在 node v12 的效果（文章字数过多时，渲染页面依旧是空白）；更新页面 “蓝图”。</p>
<p>2020&#x2F;6&#x2F;3 - 更新页面 “关于本站”；添加页面 “<a href="/about/third-party-declaration/"> 第三方声明 </a>”。</p>
<p>2020&#x2F;6&#x2F;2 - 完成蓝图目标 “文章末尾自动插入信息” 剩余任务；去除功能「按钮菜单」「文章末尾自动插入信息」中具体颜色代码，使用 Next 主题定义的颜色变量，以适配 default&#x2F;darkmode 两种方案的显示。</p>
<p>2020&#x2F;6&#x2F;1 - 完成蓝图目标 “文章末尾自动插入信息 - 添加结尾标记” 等。</p>
<p>2020&#x2F;5&#x2F;29 - “flex-column” 类增加文字居中效果，去除以往手动添加 center 的标签；添加页面 “<a href="/roadmap/"> 蓝图规划 </a>”；页面 “更新日志” 迁至 <a href="/roadmap/"> 蓝图 </a> 子菜单之下。</p>
<p>2020&#x2F;5&#x2F;28 - Next 主题从 v7.8.0 升级至 v8.0.0-rc.2（<a href="https://github.com/theme-next/hexo-theme-next/">v7.8.0 仓库 </a> 废弃，新版迁至 <a href="https://github.com/next-theme/hexo-theme-next"> v8.0.0 仓库 </a>）；重新测试 hexo-browsersync 插件（当前主题版本勉强能用，但文章字数超过 1k 后就会加载异常，渲染空白）；使用新主题的 TabJS 重编排以往文章「飞助远程服务店」的 “注明” 部分内容及去除 img 标签的 width 属性，改用 style 实现；去除旧文章文件名中的 “-” 字符，统一使用大驼峰式命名法；<strong>推送时 hexo deploy 强制 push 导致所有 commit 丢失</strong>。</p>
<p>2020&#x2F;5&#x2F;27 - 对比 v5.1.4 和 v7.8.0 的异同，并进行相关测试 debug；新版主题已集成很多功能，删除 “Github forkme”“文章底部标签图标修改” 等自定义实现的代码；原页面 “关于” 中「关于本站」小节内容单独分离出做子菜单页面 “关于本站”。</p>
<p>2020&#x2F;5&#x2F;25-26 - 升级 hexo-cli 脚手架至 v3.1.0；hexo 框架从 v3.9.0 升级至 v4.2.1；Next 主题从 v5.1.4 升级至 v7.8.0（<a href="https://github.com/iissnan/hexo-theme-next/">v5.1.4 仓库 </a> 废弃，新版迁至 <a href="https://github.com/theme-next/hexo-theme-next/">v7.8.0 仓库 </a>）；删除 hexo-browsersync 插件（不支持新版 next 主题，主页空页）。</p>
<p>2020&#x2F;5&#x2F;8 - 添加 hexo-browsersync 插件；删除 “分类” 页；更新主页菜单联系图标；修改文章样式模板以适应：草稿 draft &gt; 发布 publish 的工作流；更正 “关于” 页面中「关注我」- 知乎图标。</p>
<p>2020&#x2F;4&#x2F;27 - 插入谷歌自动广告代码。</p>
<p>2020&#x2F;4&#x2F;24 - 完善 “关于页面” 信息；完善 “版权声明” 信息；完善 “侵权声明” 信息；添加 “许可注意事项”；将站点位图转换成 webp 格式；重新制作白色透明通道网站图标；修改文章尾部 “阅读结束” 样式；删除自定义代码块高亮效果；添加文章尾部 “微信公众号订阅”。</p>
<p>2020&#x2F;2&#x2F;23 - 重新排版 “关于页面”；作废文章《飞助远程服务店》《翻译计划》。</p>
</div>

<h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a><center>2019</center></h1><div class="hang-retract">

<p>2019&#x2F;9&#x2F;15 - 访客数悬浮框显示改用 setTimeout 和 innerHTML 调试成功。调试记录：头次使用不蒜子计数标签失败，因为同一页面内不能出现两个相同 id 的标签；接着尝试异步拷贝数据，由于实在看不懂 async 和 await 命令；后来尝试 setTimeout 命令，但 setTimeout 执行外部 function 不能成功，将 function 置于 setTimeout 内后，document.write 数值获取成功，但页面被重写；最后改用 innerHTML 后没问题。从 4 号开始尝试的功能，终于调试成功。但目前 setTimeout 实现效果不完美，以后有时间再完善。</p>
<p>2019&#x2F;9&#x2F;14 - “关于页面” 个人经历添加 Blender 翻译成员统计链接。</p>
<p>2019&#x2F;9&#x2F;4 - 更新 “关于页面” 个人经历中的 Blender 翻译阶段；悬浮菜单下添加访客数悬浮框显示（不蒜子标签方式未成功显示），另外探索新的方式显示。</p>
<p>2019&#x2F;9&#x2F;3 - 文章末尾添加 “侵权声明”。</p>
<p>2019&#x2F;9&#x2F;1 - “关于” 页面个人经历添加时间标注，修改个人技能描述。文章末尾 “勘误声明” 在 “联系我” 字符上增加联系方式链接。</p>
<p>2019&#x2F;8&#x2F;1 - “logs” 页面放弃 markdown 的列表排版，改用 css 样式达到换行缩进效果。更新 “about” 页面：添加打赏小节及相关二维码，添加关注小节。修改《火狐浏览器拓展推荐》文章的 read more 标签位置。添加站点悬浮按钮。</p>
<p>2019&#x2F;7&#x2F;31 - 完善 404 页面：添加导航按钮、添加音乐播放 + 歌单。</p>
<p>2019&#x2F;7&#x2F;27 - 增加博文压缩功能 (hexo-neat)。</p>
<p>2019&#x2F;7&#x2F;26 - 更改 logs 页面菜单图标；更改 youtube 图标，查询 html 源码得出 next 主题使用 Font Awesome 4.6.2 版本图标，不支持 5.0; 添加 google_analytics；google_site_verification 项属性值直接更换 meta 值；停用自定义代码高亮，启用自带的 night 风格的高亮；增加图片懒加载功能 (lazyload)。</p>
<p>2019&#x2F;7&#x2F;24-25 - 完成旧样式的重现，并重新开发文件，把自定义修改独立成一个配置文件，主题自定义资源整合一个文件夹。新添加样式：Gemini 配色 &#x2F; 主页文章阴影效果 &#x2F; 代码块自定义 &#x2F; 网页点击浮现文字；新添加布局：网站运行时间；新添加社交链接及图标：优酷 &#x2F; 油管；更改：显示” 全站文字统计 “的语言文件 &#x2F;“勘误声明” 的实现方式 &#x2F;”Fork me on Github“图标 &#x2F; 版权声明使用官方配置实现 &#x2F; 文章结束标记使用雪花图标 &#x2F; 第三方布局” 不蒜子统计” 的域名更新。</p>
<p>2019&#x2F;7&#x2F;23 - hexo 框架组件出问题，重建 hexo 博客并重新规范化配置文件。站点配置和主题配置文件修改完成。</p>
<p>2019&#x2F;7&#x2F;22 - 添加 live2d-hibiki，相应配置信息在站点配置文件下。live2d 配置若放于主题配置文件下，本机测试结果无法生效。</p>
<p>2019&#x2F;7&#x2F;20 - 系统重装，hexo 系统重新部署。ssh 丢失，现已新建部署测试通过。</p>
<p>2019&#x2F;5&#x2F;14 - 修改 Github 用户名，迁移博客地址至 <a href="https://mister-kin.github.io/">https://mister-kin.github.io/</a> ，旧地址 <a href="https://kin-sir.github.io/">https://kin-sir.github.io/</a> 已失效。</p>
<p>2019&#x2F;4&#x2F;1 - “关于” 页面增添点击 qq 号码调用客户端加好友方式。</p>
<p>2019&#x2F;3&#x2F;31 - 更新 “关于” 页面的本人概述内容。</p>
<p>2019&#x2F;3&#x2F;30 - 博客地址更改后的相应更新，签名更新，制作个人 logo 并更新头像，更新网站图标，更新统一结尾文件信息，更新文章《飞助远程服务店》联系方式内容。</p>
<p>2019&#x2F;3&#x2F;19 - 添加 &amp; 编写 “更新日志” 页面。</p>
</div>

<h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a><center>2018</center></h1><div class="hang-retract">

<p>2018&#x2F;12&#x2F;17 - 修改一些拼写错误，更新 B 站 UP 信息。P.S. 自此记录更新日志</p>
<p>2018&#x2F;12&#x2F;16 - 发表文章《翻译计划》。</p>
<p>2018&#x2F;10&#x2F;5 - 发表文章《Blender 自学资料向（干货整理）》。</p>
<p>2018&#x2F;9&#x2F;9 - 发表文章《飞助远程服务店》。</p>
<p>2018&#x2F;8&#x2F;12 - 博客搭建。</p>
</div>

<style type="text/css">
/* 悬挂缩进，下面的方法都是相同的距离。暂时没找到方式可以根据特定字符 “-” 进行缩进 */
.hang-retract {
    padding-left: 6.5em; /* 用 padding 将文字整理向右平移 */
    text-indent: -6.5em; /* 用 indent 将第一行收回来，相互抵消 */
}
</style>
]]></content>
  </entry>
  <entry>
    <title>博文离线下载 - PDF 及 LaTeX 源码</title>
    <url>/about/post-offline-download/index.html</url>
    <content><![CDATA[<h1 id="背景">1 &nbsp&nbsp<a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>本站一些重要的博文（例如软件手册或者系列文章汇总）会有对应的 PDF 及 LaTeX 源码，可以下载用以离线查看，<strong>一般都是在博文开头处有相关说明</strong>。PDF 文件发布在<a href="https://github.com/Mister-Kin/OpenDocs/releases/tag/latex2pdf">OpenDocs的latex2pdf页面</a>，LaTeX 源码文件存放在 Github 的 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 仓库。</p>
<h1 id="获取-PDF-电子文档">2 &nbsp&nbsp<a href="#获取-PDF-电子文档" class="headerlink" title="获取 PDF 电子文档"></a>获取 PDF 电子文档</h1><p>PDF 电子文档主要发布在OpenDocs的latex2pdf页面，百度云和蓝奏云提供分流下载。PDF 和项目文件夹同名，直接下载即可。</p>
<ul>
<li><a href="https://github.com/Mister-Kin/OpenDocs/releases/tag/latex2pdf">OpenDocs的latex2pdf页面</a></li>
<li><a href="https://pan.baidu.com/s/1Tn7qIO0raqvNoesgT8SKow?pwd=docs">百度云</a>（提取码：docs）</li>
<li><a href="https://wwr.lanzoui.com/b02c7lamf#docs">蓝奏云</a>（提取码：docs）</li>
</ul>
<h1 id="获取-LaTeX-源码文件">3 &nbsp&nbsp<a href="#获取-LaTeX-源码文件" class="headerlink" title="获取 LaTeX 源码文件"></a>获取 LaTeX 源码文件</h1><div class="note info no-icon"><p><strong>LaTeX 源码文件可用以编译生成 PDF 文件，若不熟悉 LaTeX 语法的话，不推荐使用此方法。</strong></p>
</div>

<p>LaTeX 源码文件存放在 Github 的 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 仓库，在下载LaTeX源码文件之前，建议先了解一下仓库的存储结构。</p>
<h2 id="OpenDocs-仓库存储结构">3.1 &nbsp&nbsp<a href="#OpenDocs-仓库存储结构" class="headerlink" title="OpenDocs 仓库存储结构"></a>OpenDocs 仓库存储结构</h2><p><a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 仓库只提供文章源码（LaTeX）。</p>
<p><strong>注：为缩减仓库大小，本仓库自 2021&#x2F;6&#x2F;28 起，不再提供电子格式文件（PDF）。PDF 文件将改由百度云网盘同步分享。</strong></p>
<p>单个文档项目本身由一个含有 PDF 电子文档及其 LaTeX 源码的文件夹组成，均有其父分类。文件夹的名称就是该项目的名称，主文件名一般与文档项目名一致，即 PDF 电子文档和 LaTeX 源码主文件的文件名与文件夹名称相同。</p>
<p>例如名为 ToggleLanguage 文件夹所对应的项目名称就是 ToggleLanguage，位于名为 Manuals 的父文件夹下。其 PDF 电子文档和 LaTeX 源码的主文件名均为 ToggleLanuage。目录结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└── OpenDocs</span><br><span class="line">    └── Manuals</span><br><span class="line">        └── ToggleLanguage</span><br><span class="line">            ├── resources</span><br><span class="line">            │   ├── images</span><br><span class="line">            │   │   ├── Installation.png</span><br><span class="line">            │   │   ├── UI.png</span><br><span class="line">            │   │   └── ...</span><br><span class="line">            │   └── reference.bib</span><br><span class="line">            ├── ToggleLanguage.pdf</span><br><span class="line">            └── ToggleLanguage.tex</span><br></pre></td></tr></table></figure>

<h2 id="下载单个文件（推荐）">3.2 &nbsp&nbsp<a href="#下载单个文件（推荐）" class="headerlink" title="下载单个文件（推荐）"></a>下载单个文件（推荐）</h2><div class="note info no-icon"><p><strong>优点：可以找到所需单个文件夹或者单个文件进行下载，无需下载或克隆整个仓库。</strong></p>
</div>

<p>下面以火狐浏览器为例，说明具体的下载步骤：</p>
<ol>
<li>打开火狐浏览器。</li>
<li>安装浏览器插件 <a href="https://addons.mozilla.org/zh-CN/firefox/addon/gitzip/?utm_source=addons.mozilla.org&utm_medium=referral&utm_content=search">GitZip</a>。</li>
<li>访问 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 页面。</li>
<li>在所需的文件或者文件夹对应的空白处双击鼠标左键。</li>
<li>之后左侧会自动出现 √ 符号，如图 1 所示。</li>
<li>点击右下角的箭头图标，GitZip 会拉取文件。</li>
<li>GitZip 插件成功拉取文件后，记得保存文件到本地，如图 2 所示。</li>
</ol>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/DownloadProcess.webp">图 1: 下载步骤</div>
    <div class="flex-column">
    <img data-src="./images/Downloaded.webp">图 2: 保存文件</div>
</div>

<h2 id="下载整个仓库">3.3 &nbsp&nbsp<a href="#下载整个仓库" class="headerlink" title="下载整个仓库"></a>下载整个仓库</h2><div class="note danger no-icon"><p><strong>浏览器下载仓库的 ZIP 压缩包不会包含 .git 文件夹（即不包含 git 历史），Git 克隆方式则会完整克隆仓库。</strong></p>
</div>

<h3 id="通过浏览器下载仓库（推荐）">3.3.1 &nbsp&nbsp<a href="#通过浏览器下载仓库（推荐）" class="headerlink" title="通过浏览器下载仓库（推荐）"></a>通过浏览器下载仓库（推荐）</h3><ol>
<li>打开浏览器。</li>
<li>访问 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 页面。</li>
<li>点击「Code」图标上，如图 3 所示。</li>
<li>点击「Download ZIP」，下载整个仓库的 ZIP 压缩包。</li>
<li>保存压缩包到本地即可。</li>
</ol>
<div class="flex-column">
<img data-src="./images/DownloadClone.webp">图 3: 浏览器下载和 Git 克隆仓库</div>

<h3 id="用过-Git-克隆完整仓库（确保系统已经安装了-Git-程序）">3.3.2 &nbsp&nbsp<a href="#用过-Git-克隆完整仓库（确保系统已经安装了-Git-程序）" class="headerlink" title="用过 Git 克隆完整仓库（确保系统已经安装了 Git 程序）"></a>用过 Git 克隆完整仓库（确保系统已经安装了 Git 程序）</h3><ol>
<li>打开浏览器。</li>
<li>访问 <a href="https://github.com/Mister-Kin/OpenDocs">OpenDocs</a> 页面。</li>
<li>点击「Code」图标上，如图 3 所示。</li>
<li>复制克隆操作所需的 HTTPS 链接：<a href="https://github.com/Mister-Kin/OpenDocs.git">https://github.com/Mister-Kin/OpenDocs.git</a></li>
<li>运行 Git Bash，切换当前目录到所需保存的路径，输入 <code>git clone https://github.com/Mister-Kin/OpenDocs.git</code>。</li>
<li>在保存路径上会生成一个 OpenDocs 文件夹。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>第三方开源许可声明</title>
    <url>/about/third-party-declaration/index.html</url>
    <content><![CDATA[<div class="wrap">

<div class="left">
<div class="center-bold">
编程&写作
</div>

<ul>
<li><a href="https://code.visualstudio.com/">Visual Studio Code</a>: <a href="https://github.com/Microsoft/vscode/blob/master/LICENSE.txt">MIT</a></li>
<li><a href="https://tug.org/texlive/">Tex Live</a>: <a href="https://tug.org/texlive/copying.html">TeX Live Licensing</a></li>
<li><a href="https://git-scm.com/">Git</a>: <a href="https://github.com/git/git/blob/master/COPYING">GPL v2</a></li>
</ul>

<div class="center-bold">
CGI&后期处理
</div>
<ul>
<li><a href="https://www.blender.org">Blender</a>: <a href="https://www.blender.org/about/license/">GPL</a></li>
<li><a href="http://ffmpeg.org">FFmpeg</a>: <a href="http://ffmpeg.org/legal.html">LGPL v2.1 / GPL v2</a></li>
<li><a href="https://krita.org/en/">Krita</a>: <a href="https://docs.krita.org/en/KritaFAQ.html?highlight=license#license-rights-and-the-krita-foundation">Krita's GNU GPL license</a></li>
<li><a href="https://inkscape.org/">Inkscape</a>: <a href="https://inkscape.org/about/license/">GPL</a></li>
<li><a href="https://www.audacityteam.org/">Audacity</a>: <a href="https://www.audacityteam.org/about/license/">GPL v2</a></li>
<li><a href="https://www.gimp.org">GIMP</a>: <a href="https://www.gimp.org/about/COPYING">GPL</a></li>
</ul>
</div>

<div class="right">
<div class="center-bold">
网站建设
</div>
<ul>
<li><a href="http://nodejs.cn/">Node</a>: <a href="https://github.com/nodejs/node/blob/master/LICENSE">MIT</a></li>
<li><a href="https://classic.yarnpkg.com">Yarn</a>: <a href="https://github.com/yarnpkg/yarn/blob/master/LICENSE">BSD 2-Clause</a></li>
</ul>

<div class="center-bold">
开源字体
</div>
<ul>
<li><a href="https://github.com/adobe-fonts">Adobe Fonts</a>: <a href="https://github.com/adobe-fonts/source-serif-pro/blob/release/LICENSE.md">SIL OFL v1.1</a></li>
</ul>

<div class="center-bold">
已弃用
</div>
<ul>
<li><a href="https://handbrake.fr">Handbrake</a>: <a href="https://github.com/HandBrake/HandBrake/blob/master/LICENSE">GPL v2</a></li>
</ul>
</div>

</div>

<style type="text/css">
.wrap{
    display: flex;
}
.left {
    flex-grow: 1;
    margin-right: 25px;
}
.right {
    flex-grow: 1;
    margin-left: 25px;
}
</style>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/live2d_models/umaru/physics.json</url>
    <content><![CDATA[{"type":"Live2D Physics","physics_hair":[{"label":"hair_front","setup":{"length":0.15,"regist":0.5,"mass":0.1},"src":[{"id":"PARAM_ANGLE_X","ptype":"x","scale":0.005,"weight":0.5},{"id":"PARAM_BODY_ANGLE_X","ptype":"x","scale":0.015,"weight":1},{"id":"PARAM_ANGLE_Z","ptype":"angle","scale":0.8,"weight":0.5},{"id":"PARAM_BODY_ANGLE_Z","ptype":"angle","scale":2.4,"weight":1}],"targets":[{"id":"PARAM_HAIR_FRONT","ptype":"angle","scale":0.022,"weight":1}]},{"label":"hair_side","setup":{"length":0.35,"regist":0.6,"mass":0.22},"src":[{"id":"PARAM_ANGLE_X","ptype":"x","scale":0.005,"weight":0.5},{"id":"PARAM_BODY_ANGLE_X","ptype":"x","scale":0.015,"weight":1},{"id":"PARAM_ANGLE_Z","ptype":"angle","scale":0.8,"weight":0.5},{"id":"PARAM_BODY_ANGLE_Z","ptype":"angle","scale":2.4,"weight":1}],"targets":[{"id":"PARAM_HAIR_SIDE","ptype":"angle","scale":0.022,"weight":1}]},{"label":"hair_back","setup":{"length":0.25,"regist":0.7,"mass":0.25},"src":[{"id":"PARAM_ANGLE_X","ptype":"x","scale":0.005,"weight":0.5},{"id":"PARAM_BODY_ANGLE_X","ptype":"x","scale":0.012,"weight":1},{"id":"PARAM_ANGLE_Z","ptype":"angle","scale":0.8,"weight":0.5},{"id":"PARAM_BODY_ANGLE_Z","ptype":"angle","scale":2,"weight":1}],"targets":[{"id":"PARAM_HAIR_BACK","ptype":"angle","scale":0.022,"weight":1}]}]}]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/live2d_models/umaru/umaru.model.json</url>
    <content><![CDATA[{"version":"Sample 1.0.0","model":"umaru.moc","textures":["umaru2048/texture_00.png"],"physics":"physics.json","layout":{"width":1.5,"center_x":-0.0507,"center_y":0.57},"hit_areas":[{"name":"head","id":"D_REF.PT_HEAD"},{"name":"body","id":"D_REF.PT_BODY"}],"hit_areas_custom":{"head_x":[0.3,-0.9],"head_y":[0.19,-0.2],"body_x":[-0.3,-0.25],"body_y":[0.3,-0.9]},"motions":{"idle":[{"file":"mtn/umaru_idle.mtn","fade_in":1000,"fade_out":1000,"expressions":"F00"}],"tap_body":[{"file":"mtn/rita_Live2D_001.mtn","sound":"voice/01.wav"},{"file":"mtn/rita_Live2D_002.mtn","sound":"voice/02.wav"},{"file":"mtn/rita_Live2D_003.mtn","sound":"voice/03.wav"},{"file":"mtn/rita_Live2D_004.mtn","sound":"voice/04.wav"},{"file":"mtn/rita_Live2D_005.mtn","sound":"voice/05.wav"},{"file":"mtn/rita_Live2D_006.mtn","sound":"voice/06.wav"},{"file":"mtn/rita_Live2D_007.mtn","sound":"voice/07.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_008.mtn","sound":"voice/08.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_009.mtn","sound":"voice/09.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_010.mtn","sound":"voice/10.wav"},{"file":"mtn/rita_Live2D_011.mtn","sound":"voice/11.wav"},{"file":"mtn/rita_Live2D_012.mtn","sound":"voice/12.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_013.mtn","sound":"voice/13.wav","fade_in":500,"fade_out":500},{"file":"mtn/rita_Live2D_014.mtn","sound":"voice/14.wav"},{"file":"mtn/rita_Live2D_015.mtn","sound":"voice/15.wav"},{"file":"mtn/rita_Live2D_016.mtn","sound":"voice/16.wav"},{"file":"mtn/rita_Live2D_017.mtn","sound":"voice/17.wav"},{"file":"mtn/rita_Live2D_018.mtn","sound":"voice/18.wav"},{"file":"mtn/rita_Live2D_019.mtn","sound":"voice/19.wav"},{"file":"mtn/rita_Live2D_020.mtn","sound":"voice/20.wav","fade_in":500,"fade_out":1000},{"file":"mtn/rita_Live2D_021.mtn","sound":"voice/21.wav"},{"file":"mtn/rita_Live2D_022.mtn","sound":"voice/22.wav"},{"file":"mtn/rita_Live2D_023.mtn","sound":"voice/23.wav"},{"file":"mtn/rita_Live2D_024.mtn","sound":"voice/24.wav"},{"file":"mtn/rita_Live2D_025.mtn","sound":"voice/25.wav"},{"file":"mtn/rita_Live2D_026.mtn","sound":"voice/26.wav"},{"file":"mtn/rita_Live2D_027.mtn","sound":"voice/27.wav"},{"file":"mtn/rita_Live2D_028.mtn","sound":"voice/28.wav"},{"file":"mtn/rita_Live2D_029.mtn","sound":"voice/29.wav"},{"file":"mtn/rita_Live2D_030.mtn","sound":"voice/30.wav"},{"file":"mtn/rita_Live2D_031.mtn","sound":"voice/31.wav"},{"file":"mtn/rita_Live2D_032.mtn","sound":"voice/32.wav"},{"file":"mtn/rita_Live2D_033.mtn","sound":"voice/33.wav"},{"file":"mtn/rita_Live2D_034.mtn","sound":"voice/34.wav"}]}}]]></content>
  </entry>
  <entry>
    <title>艺术作品</title>
    <url>/works/artworks/index.html</url>
    <content><![CDATA[<p>TODO</p>
]]></content>
  </entry>
  <entry>
    <title>软件作品</title>
    <url>/works/software-works/index.html</url>
    <content><![CDATA[<div class="flex-row">
<a href="/works/software-works/toggle-language">
<button class="navigation-button-box">切换语言</button></a>
<div style="width: 20px;"></div>
<a href="/works/software-works/batch-tools">
<button class="navigation-button-box">批处理工具</button></a>
</div>
]]></content>
  </entry>
  <entry>
    <title>「批处理工具」使用手册</title>
    <url>/works/software-works/batch-tools/index.html</url>
    <content><![CDATA[<h1 id="介绍">1 &nbsp&nbsp<a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一些方便工作的批处理程序。</p>
<h2 id="背景">1.1 &nbsp&nbsp<a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>TODO</p>
<h2 id="程序目前实现的功能">1.2 &nbsp&nbsp<a href="#程序目前实现的功能" class="headerlink" title="程序目前实现的功能"></a>程序目前实现的功能</h2><ul>
<li>ffmpeg.sh<ul>
<li>个人工作：批量操作媒体资源</li>
<li>压缩媒体资源</li>
<li>图片转换器：图片格式互转</li>
<li>视频转换器：视频格式互转</li>
<li>音频转换器：音频格式互转</li>
<li>音频元数据标签工具</li>
<li>音频封面图工具：获取、添加、删除</li>
<li>媒体资源工具：合并、分割、缩放</li>
</ul>
</li>
<li>text.sh<ul>
<li>合并文本文件</li>
</ul>
</li>
<li>ffmpeg.bat（不再维护bat）<ul>
<li>给图片添加版权水印并压缩</li>
<li>图片压缩</li>
<li>合并音视频</li>
<li>视频转封装</li>
<li>视频压缩：转 hevc 编码</li>
<li>显卡加速图片序列合成视频</li>
</ul>
</li>
</ul>
<h1 id="用法">2 &nbsp&nbsp<a href="#用法" class="headerlink" title="用法"></a>用法</h1><h2 id="下载及安装">2.1 &nbsp&nbsp<a href="#下载及安装" class="headerlink" title="下载及安装"></a>下载及安装</h2><h3 id="下载步骤">2.1.1 &nbsp&nbsp<a href="#下载步骤" class="headerlink" title="下载步骤"></a>下载步骤</h3><ul>
<li>下载最新版的<a href="https://github.com/AnimMouse/ffmpeg-stable-autobuild/releases">FFmpeg</a>。</li>
<li>下载最新版的<a href="https://git-scm.com/download/win">Git for Windows</a>。</li>
<li>下载<a href="https://github.com/Mister-Kin/BatchTools">批处理工具</a>仓库代码。</li>
</ul>
<div class="flex-row">
<div class="flex-column">
<img data-src="./images/download_ffmpeg.webp">下载FFmpeg</div>
<div class="flex-column">
<img data-src="./images/download_git.webp">下载Git for Windows</div>
<div class="flex-column">
<img data-src="./images/download_project_code.webp">下载批处理工具代码</div>
</div>

<h3 id="安装步骤">2.1.2 &nbsp&nbsp<a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="FFmpeg配置">2.1.2.1 &nbsp&nbsp<a href="#FFmpeg配置" class="headerlink" title="FFmpeg配置"></a>FFmpeg配置</h4><ol>
<li>将前面下载好的FFmpeg压缩包，解压并重命名文件名为ffmpeg放置于C盘根目录。</li>
<li>WIN+R键打开运行对话框，输入<code>control system</code>。</li>
<li>在System Path环境变量新建一个路径，定位到FFmpeg路径。</li>
</ol>
<div class="flex-row">
<div class="flex-column">
<img data-src="./images/1.1.webp">解压重命名放于C盘</div>
<div class="flex-column">
<img data-src="./images/1.2.webp">运行对话框</div>
<div class="flex-column">
<img data-src="./images/1.3.webp">打开高级系统设置</div>
<div class="flex-column">
<img data-src="./images/1.4.webp">打开环境变量</div>
</div>

<div class="flex-row">
<div class="flex-column">
<img data-src="./images/1.5.webp">编辑系统变量Path</div>
<div class="flex-column">
<img data-src="./images/1.6.webp">添加一个新路径</div>
<div class="flex-column">
<img data-src="./images/1.7.webp">定位路径</div>
<div class="flex-column">
<img data-src="./images/1.8.webp">确保添加成功，点击确定</div>
</div>

<h4 id="安装Git-for-Windows">2.1.2.2 &nbsp&nbsp<a href="#安装Git-for-Windows" class="headerlink" title="安装Git for Windows"></a>安装Git for Windows</h4><p>一路默认安装下去，终端使用Git Bash。</p>
<h4 id="批处理工具配置">2.1.2.3 &nbsp&nbsp<a href="#批处理工具配置" class="headerlink" title="批处理工具配置"></a>批处理工具配置</h4><p>解压批处理工具代码的压缩包即可，自行确定路径。比如我的路径如下图：</p>
<div class="flex-column">
<img data-src="./images/1.9.webp">批处理工具程序路径</div>

<h2 id="使用方法">2.2 &nbsp&nbsp<a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol>
<li>鼠标右键选择<code>Git Bash Here</code>，即可打开Bash终端。</li>
<li>输入批处理工具程序的路径，回车执行。</li>
<li>按菜单提示选择对应功能。</li>
<li>输入需要操作媒体文件的文件夹路径。</li>
</ol>
<div class="flex-column">
<img data-src="./images/2.1.webp">输入程序路径执行</div>
<div class="flex-column">
<img data-src="./images/2.2.webp">输入操作路径执行</div>

<h2 id="程序功能">2.3 &nbsp&nbsp<a href="#程序功能" class="headerlink" title="程序功能"></a>程序功能</h2><ul>
<li>ffmpeg.sh<ul>
<li>个人工作：批量操作媒体资源<ul>
<li>给图片添加版权文字水印并压缩</li>
<li>给视频添加文字版权水印（libx264）</li>
<li>图片序列导出mp4格式视频（libx264）</li>
<li>重编码视频导出mp4格式视频（libx264）</li>
<li>添加字幕（硬编码，libx264）</li>
<li>显卡加速将图片序列合成为视频（不再维护该功能）</li>
</ul>
</li>
<li>压缩媒体资源<ul>
<li>压缩图片（原格式压缩或者转换为webp格式）</li>
<li>压缩视频，转换为hevc编码的mp4格式（libx265）</li>
</ul>
</li>
<li>图片转换器：图片格式互转<ul>
<li>图片转png格式</li>
</ul>
</li>
<li>视频转换器：视频格式互转<ul>
<li>视频转mp4格式</li>
</ul>
</li>
<li>音频转换器：音频格式互转<ul>
<li>无损音频转m4a格式</li>
</ul>
</li>
<li>音频元数据标签工具<ul>
<li>根据元数据标签重命名音频文件</li>
<li>根据音频文件名修改元数据标签</li>
<li>设置音频文件的专辑名</li>
<li>设置音频文件的歌曲名</li>
<li>设置音频文件的歌手名</li>
</ul>
</li>
<li>音频封面图工具：获取、添加、删除<ul>
<li>获取音频封面图</li>
<li>添加音频封面图</li>
<li>删除音频封面图</li>
</ul>
</li>
<li>媒体资源工具：合并、分割、缩放<ul>
<li>合并音视频：mp4+m4a&#x2F;mp3</li>
<li>分割视频</li>
</ul>
</li>
</ul>
</li>
<li>text.sh<ul>
<li>合并文本文件<ul>
<li>合并文本文件（文件首尾拼接）</li>
<li>合并文本文件（逐行拼接合并）</li>
</ul>
</li>
</ul>
</li>
<li>ffmpeg.bat（不再维护bat）<ul>
<li>给图片添加版权水印并压缩</li>
<li>图片压缩：转 webp</li>
<li>合并音视频：mp4 + m4a</li>
<li>视频转封装：flv -&gt; mp4</li>
<li>视频压缩：转 hevc 编码（libx265）</li>
<li>显卡加速图片序列合成视频：普通录屏（jpg + wav -&gt; h264_nvenc + aac）</li>
<li>显卡加速图片序列合成视频：CG（png + wav -&gt; h264_nvenc + aac）</li>
</ul>
</li>
</ul>
<h1 id="开发记录">3 &nbsp&nbsp<a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><h2 id="开发与测试环境">3.1 &nbsp&nbsp<a href="#开发与测试环境" class="headerlink" title="开发与测试环境"></a>开发与测试环境</h2><p>OS: Win10 v22H2 &#x2F; Arch Linux &#x2F; Mac<br>Shell: Git Bash &#x2F; Zsh</p>
<h1 id="作者">4 &nbsp&nbsp<a href="#作者" class="headerlink" title="作者"></a>作者</h1><p><strong>批处理工具</strong> © Mr. Kin，所有文件均采用 <a href="https://github.com/Mister-Kin/BatchTools/blob/master/LICENSE">WTFPL</a> 许可协议进行发布。</p>
<p>由 Mr. Kin 著作并维护。</p>
]]></content>
  </entry>
  <entry>
    <title>「切换语言」使用手册v1.6.3 - Blender 插件</title>
    <url>/works/software-works/toggle-language/index.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage/releases/latest">插件下载链接（Github Release）</a></th>
<th align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage">项目代码仓库链接</a></th>
<th align="center"><a href="https://github.com/Mister-Kin/OpenDocs/releases/download/latex2pdf/toggle_language.pdf">离线文档 PDF 链接</a></th>
<th align="center"><a href="https://github.com/Mister-Kin/OpenDocs/tree/master/manuals/toggle_language">文档 LaTeX 源码链接</a></th>
</tr>
</thead>
</table>
<h1 id="介绍">1 &nbsp&nbsp<a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一款 blender 插件，旨在通过一键快速、轻松地在两种语言之间切换用户界面，而非重复打开偏好设置。</p>
<blockquote>
<p>碎碎念：TL插件项目，本人一直断断续续抽闲暇时间开发，目前已成为我个人综合性开发验证Blender的一个插件应用，因此该插件实现的功能会比较多样化（说人话就是大杂烩(ಡωಡ)）。但TL插件最初开发的「界面语言切换」功能自Blender v2.83版本起都会一直保持兼容可用的状态，放心使用即可。—— Mr. Kin，2025-03-28</p>
</blockquote>
<h2 id="背景">1.1 &nbsp&nbsp<a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在早期进行 blender 手册翻译工作时，因需要校对相关 UI 内容，本人频繁地在中英文之间切换软件的用户界面语言。但每次繁琐地使用偏好设置进行语言切换令人苦不堪言，索性就开发一款插件以简化这操作。</p>
<h2 id="面向人群">1.2 &nbsp&nbsp<a href="#面向人群" class="headerlink" title="面向人群"></a>面向人群</h2><p>本插件主要面向需要频繁切换界面语言的人群，常见的有如下人群：</p>
<ul>
<li>翻译者：校对相关内容。</li>
<li>CG 学习者：跟进外语教程。</li>
</ul>
<h2 id="插件目前实现的功能">1.3 &nbsp&nbsp<a href="#插件目前实现的功能" class="headerlink" title="插件目前实现的功能"></a>插件目前实现的功能</h2><ul>
<li>支持的Blender版本：Blender v2.83 ‑ v4.4.3</li>
<li>一键切换 UI 语言（支持多种语言和快捷键）</li>
<li>一键打开用户偏好设置（支持快捷键）</li>
<li>插件的键位映射功能（允许自定义快捷键）</li>
<li>一键切换提示模式：默认模式和开发者模式（拥有切换当前UI提示级别的菜单）</li>
<li>一键删除当前场景集合和物体</li>
<li>一键添加视频进度条</li>
<li>自动放置模型蓝图参考图片</li>
<li>自动检测插件更新情况（基于<a href="https://github.com/Mister-Kin/ToggleLanguage/releases">GitHub Rleases</a>）</li>
<li>……</li>
</ul>
<p><em>注：更多详细介绍请查看「<a href="#%E6%8F%92%E4%BB%B6%E5%8A%9F%E8%83%BD">插件功能</a>」小节内容。</em></p>
<h1 id="用法">2 &nbsp&nbsp<a href="#用法" class="headerlink" title="用法"></a>用法</h1><blockquote>
<p>若想获取插件的最新功能，请下载<a href="https://github.com/Mister-Kin/ToggleLanguage/archive/refs/heads/master.zip">项目代码master分支</a>的最新代码，然后参照<a href="#%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%EF%BC%88Blender-v4-2-%EF%BC%89">本地安装</a>步骤进行安装即可。</p>
</blockquote>
<blockquote>
<p>最新代码可能会存在运行不稳定的情况，请自行选择是否使用最新版本。</p>
</blockquote>
<h2 id="下载及安装（Blender-v4-2-）">2.1 &nbsp&nbsp<a href="#下载及安装（Blender-v4-2-）" class="headerlink" title="下载及安装（Blender v4.2+）"></a>下载及安装（Blender v4.2+）</h2><h3 id="在线更新安装（Blender-v4-2-）">2.1.1 &nbsp&nbsp<a href="#在线更新安装（Blender-v4-2-）" class="headerlink" title="在线更新安装（Blender v4.2+）"></a>在线更新安装（Blender v4.2+）</h3><div class="note info no-icon"><p><strong>自<a href="https://github.com/Mister-Kin/ToggleLanguage/releases/tag/v1.6.3">v1.6.3</a>版本起，TL插件内置基于<a href="https://github.com/Mister-Kin/ToggleLanguage/releases">GitHub Rleases</a>的版本信息自动检查最新版本和自动下载更新的功能。—— Mr. Kin，2025-03-28</strong></p>
</div>

<div class="note danger no-icon"><p><strong>因「<a href="https://extensions.blender.org/">Blender Extension平台</a>」网站管理员认为本插件存在多项功能并不符合插件名称，管理员称这不符合规范，故本人已选择删除<a href="https://id.blender.org/">Blender ID</a>帐号。自2024-12-26起，不再支持插件以「Blender在线扩展插件平台】方式来在线安装。—— Mr. Kin，2024-12-26</strong></p>
</div>

<p>检测更新&amp;安装步骤：</p>
<ol>
<li>运行 Blender。</li>
<li>点击插件的「检查插件更新」按钮。</li>
<li>插件自动完成版本检测或者完成更新操作。</li>
<li>重启Blender（若是已经成功完成更新TL插件，则需要重启Blender程序）。</li>
</ol>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/check_addon_update_button.webp">图2.1: 点击插件的「检查插件更新」按钮</div>
    <div class="flex-column">
    <img data-src="./images/update_success.webp">图2.2: 插件更新成功之后的弹窗提示</div>
</div>

<h3 id="本地安装（Blender-v4-2-）">2.1.2 &nbsp&nbsp<a href="#本地安装（Blender-v4-2-）" class="headerlink" title="本地安装（Blender v4.2+）"></a>本地安装（Blender v4.2+）</h3><p>blender v4.2之后版本（含v4.2）的本地安装方式和blender v4.2之前版本类似，「Get Extensions&#x2F;获取扩展」和「Add‐ons&#x2F;插件」选项卡均有「Install from Disk...&#x2F;从磁盘安装...」的选项，如图2.3和图2.4。具体安装步骤可以参见<a href="#%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85%EF%BC%88Blender-v2-83-v4-1-1%EF%BC%89">「下载及安装（Blender v2.83-v4.1.1）」</a>，从本地安装成功后，插件会自行启动。</p>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/tab_get_extensions.webp">图2.3: 获取扩展选项卡</div>
    <div class="flex-column">
    <img data-src="./images/tab_addon.webp">图2.4: 插件选项卡</div>
</div>

<h2 id="下载及安装（Blender-v2-83-v4-1-1）">2.2 &nbsp&nbsp<a href="#下载及安装（Blender-v2-83-v4-1-1）" class="headerlink" title="下载及安装（Blender v2.83-v4.1.1）"></a>下载及安装（Blender v2.83-v4.1.1）</h2><h3 id="下载步骤">2.2.1 &nbsp&nbsp<a href="#下载步骤" class="headerlink" title="下载步骤"></a>下载步骤</h3><ul>
<li>插件下载链接：<a href="https://github.com/Mister-Kin/ToggleLanguage/releases/latest">Github Releases</a>，在<code>Assets</code>资产中下载 ToggleLanguage.zip 文件。</li>
<li>Blender 版本要求：<a href="https://www.blender.org/download/">v2.83+</a></li>
</ul>
<p><em>注：blender v2.83默认是启用翻译功能，这也是本插件要求将v2.83作为最低版本的缘由。本插件也许在v2.83以下版本能够运行，但不推荐，因为没测试过。</em></p>
<h3 id="安装步骤">2.2.2 &nbsp&nbsp<a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol>
<li>运行 Blender。</li>
<li>打开「Preferences&#x2F;用户偏好设置」（Menu&#x2F;菜单 &gt;Edit&#x2F;编辑 &gt;Preferences&#x2F;用户偏好设置）。</li>
<li>选择「Add‐ons&#x2F;插件」选项卡。</li>
<li>点击「Install...&#x2F;安装」后，选择先前所下载好的 ToggleLanguage.zip 并点击确定。</li>
<li>启用插件。</li>
</ol>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/installation.webp">图2.5: 安装方法</div>
    <div class="flex-column">
    <img data-src="./images/enable_addon.webp">图2.6: 启用插件</div>
</div>

<h2 id="插件-UI">2.3 &nbsp&nbsp<a href="#插件-UI" class="headerlink" title="插件 UI"></a>插件 UI</h2><p>如图2.7 所示，启用插件后，可看见插件位于顶部菜单栏末尾处。插件 UI 从左往右看，有四个元素：</p>
<ol>
<li>语言切换按钮</li>
<li>实用工具菜单</li>
<li>插件的个性化设置菜单</li>
<li>用户偏好设置按钮</li>
</ol>
<div class="flex-column">
    <img data-src="./images/ui.webp">
    图2.7: 插件UI
</div>

<h2 id="插件功能">2.4 &nbsp&nbsp<a href="#插件功能" class="headerlink" title="插件功能"></a>插件功能</h2><p><em>注：以下UI功能的介绍，按照UI排列位置进行。UI排列位置详见「<a href="#%E6%8F%92%E4%BB%B6-UI">插件UI</a>」小节</em>。</p>
<h3 id="语言切换">2.4.1 &nbsp&nbsp<a href="#语言切换" class="headerlink" title="语言切换"></a>语言切换</h3><ul>
<li>功能名称：语言切换</li>
<li>快捷键：F5</li>
<li>功能介绍：在两种语言之间切换blender用户界面语言（支持多种语言相互切换）。插件允许自定义该功能的快捷键，详见「<a href="#%E6%8F%92%E4%BB%B6%E7%9A%84%E9%94%AE%E4%BD%8D%E6%98%A0%E5%B0%84">插件的键位映射</a>」小节内容。</li>
<li>功能设置：在本插件的偏好设置面板中，可以设置「切换语言」功能所需的语言项，如图2.9 所示，两个语言项的默认值分别为「Simplified Chinese (简体中文)」和「English (English)」。两个语言项不分前后顺序，只要设置好两种不同语言，插件便可以在这两种语言之间切换 UI 界面。</li>
</ul>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/toggle_language_button.webp">图2.8: 「语言切换」按钮</div>
    <div class="flex-column">
    <img data-src="./images/toggle_language_button_setting.webp">图2.9: 「语言切换」功能设置</div>
</div>

<center>表 2.1: 「语言切换」功能支持的语言列表</center>

<table>
<thead>
<tr>
<th align="center">Blender v2.83-v3.6.x（共17种语言<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>）</th>
<th align="center">Blender v4.0+（共18种语言<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>）</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Simplified Chinese (简体中文)</td>
<td align="center">Simplified Chinese (简体中文)</td>
</tr>
<tr>
<td align="center">Traditional Chinese (繁體中文)</td>
<td align="center">Traditional Chinese (繁體中文)</td>
</tr>
<tr>
<td align="center">English (English)</td>
<td align="center">English (English)</td>
</tr>
<tr>
<td align="center">Spanish (Español)</td>
<td align="center">Catalan (Català)</td>
</tr>
<tr>
<td align="center">Japanese (日本語)</td>
<td align="center">Spanish (Español)</td>
</tr>
<tr>
<td align="center">Slovak (Slovenčina)</td>
<td align="center">French (Français)</td>
</tr>
<tr>
<td align="center">Ukrainian (Український)</td>
<td align="center">Japanese (日本語)</td>
</tr>
<tr>
<td align="center">Vietnamese (tiếng Việt)</td>
<td align="center">Slovak (Slovenčina)</td>
</tr>
<tr>
<td align="center">Arabic (ﺔﻴﺑﺮﻌﻟﺍ)</td>
<td align="center">Czech (Čeština)</td>
</tr>
<tr>
<td align="center">Czech (Český)</td>
<td align="center">German (Deutsch)</td>
</tr>
<tr>
<td align="center">German (Deutsch)</td>
<td align="center">Italian (Italiano)</td>
</tr>
<tr>
<td align="center">French (Français)</td>
<td align="center">Georgian (ქართული)</td>
</tr>
<tr>
<td align="center">Italian (Italiano)</td>
<td align="center">Korean (한국어)</td>
</tr>
<tr>
<td align="center">Korean (한국 언어)</td>
<td align="center">Brazilian Portuguese (Português do Brasil)</td>
</tr>
<tr>
<td align="center">Brazilian Portuguese (Português do Brasil)</td>
<td align="center">Portuguese (Português)</td>
</tr>
<tr>
<td align="center">Portuguese (Português)</td>
<td align="center">Russian (Русский)</td>
</tr>
<tr>
<td align="center">Russian (Русский)</td>
<td align="center">Ukrainian (Українська)</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">Vietnamese (Tiếng Việt)</td>
</tr>
</tbody></table>
<h3 id="实用工具菜单">2.4.2 &nbsp&nbsp<a href="#实用工具菜单" class="headerlink" title="实用工具菜单"></a>实用工具菜单</h3><ul>
<li>功能名称：实用工具菜单</li>
<li>快捷键：无</li>
<li>功能介绍：菜单内包含一些实用工具</li>
</ul>
<div class="flex-column">
    <img data-src="./images/utilities.webp">
    图2.10: 实用工具菜单
</div>

<h4 id="删除当前场景中所有集合和物体">2.4.2.1 &nbsp&nbsp<a href="#删除当前场景中所有集合和物体" class="headerlink" title="删除当前场景中所有集合和物体"></a>删除当前场景中所有集合和物体</h4><ul>
<li>功能名称：删除当前场景中所有集合和物体</li>
<li>快捷键：无</li>
<li>功能介绍：清空场景，即删除当前场景中的所有集合和物体，但并不会删除其他场景的数据。</li>
</ul>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/before_dellete.webp">图2.11：删除前的效果</div>
    <div class="flex-column">
    <img data-src="./images/after_dellete.webp">图2.12：删除后的效果</div>
</div>

<h4 id="添加视频进度条">2.4.2.2 &nbsp&nbsp<a href="#添加视频进度条" class="headerlink" title="添加视频进度条"></a>添加视频进度条</h4><ul>
<li>功能名称：添加视频进度条</li>
<li>快捷键：无</li>
<li>功能介绍：在视频剪辑工作区（VSE工作区）的画面顶部空白区域添加视频进度条，如图2.13和图2.14所示。视频进度条为一个复合片段，相关参数为：置于视频顶部，高度44px，透明度0.9，底部进度条颜色RGB（0.45, 0.45, 0.45），滚动进度条颜色RGB（0.255, 0.255, 0.255）。<ul>
<li>注意：若禁用新建数据块名称的翻译功能，该功能添加的效果片段名称为英文名称，不会翻译为当前界面语言。</li>
<li>P.S. 后续会开发增设一个调整视频进度条参数的窗口。</li>
</ul>
</li>
</ul>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/video_progress_bar_meta_strip.webp">图2.13：视频进度条-复合片段</div>
    <div class="flex-column">
    <img data-src="./images/video_progress_bar_child_strip.webp">图2.14：复合片段「视频进度条」内的子片段</div>
</div>

<h4 id="导入蓝图（参考图）">2.4.2.3 &nbsp&nbsp<a href="#导入蓝图（参考图）" class="headerlink" title="导入蓝图（参考图）"></a>导入蓝图（参考图）</h4><ul>
<li>功能名称：导入蓝图（参考图）</li>
<li>快捷键：无</li>
<li>功能介绍：导入蓝图（参考图）到当前场景，总共支持6视图的参考图导入，即仰视图、俯视图、前视图、后视图、左视图、右视图，如图2.15所示。所有参考图缩放基准为前视图的高度，固定显示长度为4M（4米）。<ul>
<li>注意：在使用该功能导入参考图前，请重命名参考图文件，具体命名规则请参考下方的列表。</li>
</ul>
</li>
<li>功能设置：复选框「启用“导入蓝图”的选择」。在本插件的偏好设置面板中，可以设置「导入蓝图（参考图）」功能的选择功能，如图2.16所示。默认为禁用，即导入蓝图（参考图）在Blender的3D视图中是无法被选中的。</li>
</ul>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/import_blueprint.webp">图2.15：「导入蓝图（参考图）」功能</div>
    <div class="flex-column">
    <img data-src="./images/import_blueprint_setting.webp">图2.16：「导入蓝图（参考图）」功能设置</div>
</div>

<p><strong>「导入蓝图（参考图）」功能支持的参考图文件格式和命名规则列表：</strong></p>
<ul>
<li>在导入前，请重命名参考图文件，实际添加[连接符]和[后缀]即可</li>
<li>命令规则：[文件的旧文件名称]+[连接符]+[后缀]+[文件格式]<ul>
<li>文件格式，即文件后缀名，不要求必须为小写字母，只要是符合的文件格式均支持，例如<code>.png</code>、<code>.Png</code>、<code>.PNG</code>等。</li>
</ul>
</li>
<li>示例参考图文件名：<ul>
<li>1.俯视图.png</li>
<li>pen-topview.png</li>
<li>小刀_left-view.jpg</li>
</ul>
</li>
</ul>
<center>表 2.2: 参考图文件格式和命名规则列表</center>

<table>
<thead>
<tr>
<th align="center">支持的参考图文件格式</th>
<th align="center">文件名支持的连接符</th>
<th align="center">文件名支持的后缀（中英文后缀均支持）</th>
</tr>
</thead>
<tbody><tr>
<td align="center">.png</td>
<td align="center">短杠<code>-</code></td>
<td align="center">bottom | bottomview | bottom-view | bottom_view<br> 仰 | 仰视 | 仰视图</td>
</tr>
<tr>
<td align="center">.jpg</td>
<td align="center">下划线<code>_</code></td>
<td align="center">top | topview | top-view | top_view<br>俯 | 俯视 | 俯视图 | 顶 | 顶视 | 顶视图</td>
</tr>
<tr>
<td align="center">.jpeg</td>
<td align="center">一个空格<code> </code></td>
<td align="center">front | frontview | front-view | front_view<br>前 | 前视 | 前视图</td>
</tr>
<tr>
<td align="center">.jp2</td>
<td align="center">小数点<code>.</code></td>
<td align="center">rear | rearview | rear-view | rear_view<br>后 | 后视 | 后视图</td>
</tr>
<tr>
<td align="center">.bmp</td>
<td align="center"></td>
<td align="center">left | leftview | left-view | left_view<br>左 | 左视 | 左视图</td>
</tr>
<tr>
<td align="center">.webp</td>
<td align="center"></td>
<td align="center">right | rightview | right-view | right_view<br>右 | 右视 | 右视图</td>
</tr>
</tbody></table>
<h3 id="设置菜单">2.4.3 &nbsp&nbsp<a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><ul>
<li>功能名称：设置菜单</li>
<li>快捷键：无</li>
<li>功能介绍：插件的个性化设置</li>
</ul>
<div class="flex-column">
    <img data-src="./images/setting_menu.webp">
    图2.17: 实用工具菜单
</div>

<h4 id="UI提示方案菜单">2.4.3.1 &nbsp&nbsp<a href="#UI提示方案菜单" class="headerlink" title="UI提示方案菜单"></a>UI提示方案菜单</h4><ul>
<li>功能名称：UI提示方案菜单</li>
<li>快捷键：无</li>
<li>功能介绍：菜单内含有相应UI提示的两个方案。</li>
</ul>
<p><strong>「UI提示方案菜单」选项：</strong></p>
<ol>
<li>默认模式：禁用「开发选项」「Python 工具提示」，如图2.19所示。</li>
<li>开发者模式：启用「开发选项」「Python 工具提示」，如图2.20所示。</li>
</ol>
<div class="flex-column">
    <img data-src="./images/hint_menu.webp">
    图2.18: UI提示方案菜单
</div>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/default_hint.webp">图2.19: UI 提示方案菜单：默认模式</div>
    <div class="flex-column">
    <img data-src="./images/developer_hint.webp">图2.20: UI 提示方案菜单：开发者模式</div>
</div>

<h4 id="翻译新建数据块的名称">2.4.3.2 &nbsp&nbsp<a href="#翻译新建数据块的名称" class="headerlink" title="翻译新建数据块的名称"></a>翻译新建数据块的名称</h4><ul>
<li>功能名称：UI提示方案菜单</li>
<li>快捷键：无</li>
<li>功能介绍：启用&#x2F;禁用新建数据块名称的翻译功能<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>，默认值为禁用，如图2.21所示，其对应在偏好设置中的选项如图2.22所示。在非英语界面环境中，启用该功能可使 blender 新建数据块的名称为当前语言，如图2.23所示，新建平面的名称为「平面」，而非「plane」。</li>
</ul>
<div class="flex-row">
    <div class="flex-column">
    <img data-src="./images/translate_name_option_addon.webp">图2.21: 插件中的翻译新建数据块名称的选项</div>
    <div class="flex-column">
    <img data-src="./images/translate_name_option_pref.webp">图2.22: 偏好设置中的翻译新建数据块名称的选项</div>
</div>
<div class="flex-column">
<img data-src="./images/translate_name_option_effect.webp">图2.23: 翻译新建数据块名称的效果（图示界面语言为简中）</div>

<h4 id="加载我的Blender设置">2.4.3.3 &nbsp&nbsp<a href="#加载我的Blender设置" class="headerlink" title="加载我的Blender设置"></a>加载我的Blender设置</h4><ul>
<li>功能名称：加载我的Blender设置</li>
<li>快捷键：无</li>
<li>功能介绍：部署我个人的偏好设置。所涉及的设置选项详见下方<a href="#%E6%88%91%E7%9A%84Blender%E8%AE%BE%E7%BD%AE%EF%BC%88%E6%88%91%E6%9C%AC%E4%BA%BA%E7%9A%84%E4%B8%80%E4%BA%9B-blender-%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0%EF%BC%89">我的Blender设置</a>。<ul>
<li>注意：<strong>该功能默认会覆盖你原有的 blender 设置（启动文件和偏好设置），请详细了解所涉及的设置项后再确认是否使用该功能。</strong><sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></li>
</ul>
</li>
</ul>
<h5 id="我的Blender设置（我本人的一些-blender-设置参数）">2.4.3.3.1 &nbsp&nbsp<a href="#我的Blender设置（我本人的一些-blender-设置参数）" class="headerlink" title="我的Blender设置（我本人的一些 blender 设置参数）"></a>我的Blender设置（我本人的一些 blender 设置参数）</h5><p>开发这个功能主要是为了方便我一键设置恢复个人的偏好设置，比如更换设备使用blender时，通过下载安装本插件就可以一键恢复设置，而无需拷贝配置文件。</p>
<p>详细的设置参数情况如下：</p>
<ol>
<li>偏好设置部分：<ol>
<li>界面 &gt; 分辨率缩放到 1.3</li>
<li>界面&gt;编辑器&gt;状态栏&gt;启用「场景统计数据」「系统内存」「显存」（v2.90以上版本才有）</li>
<li>主题 &gt; White</li>
<li>插件 &gt; 启用插件 Node Wrangler、Cell Fracture、Auto Tile Size、Development: Icon Viewer（v3.0以上版本的不含有Auto Tile Size插件）</li>
<li>视图切换 &gt; 启用「围绕选择物体选择」和「缩放至鼠标位置」</li>
<li>键位映射 &gt; 启用「Pie Menu on Drag」和「Extra Shading Pie Menu Items」</li>
<li>系统<ol>
<li>Cycles 渲染设备 &gt; 有显卡设备时会自动选择启用显卡设备，无显卡时设置为默认 NONE（当检测到英伟达显卡时，若 OPTIX 可用时则优先选择。默认下仅启用显卡，不含 CPU，若需要 CPU 和 GPU 混合渲染，请在加载我的设置的设置参数中开启）</li>
<li>内存和限额 &gt; 撤销次数 &gt;256</li>
<li>声音 &gt; 音频设备 &gt; SDL（v2.83版本才有）</li>
</ol>
</li>
<li>保存 &amp; 加载 &gt; 启用「压缩文件」</li>
<li>文件路径<ol>
<li>纹理：H:&#x2F;textures&#x2F;</li>
<li>渲染输出：D:&#x2F;process&#x2F;</li>
</ol>
</li>
</ol>
</li>
<li>启动界面部分（注意：使用「我的偏好设置」功能，会同时将以下设置保存进启动界面文件）：<ol>
<li>属性编辑器<ol>
<li>渲染属性<ol>
<li>渲染引擎 &gt; Cycles</li>
<li>设备 &gt; GPU 计算（有GPU设备时会自动启用，无显卡则设置为CPU）</li>
<li>采样 &gt; 启用「自适应采样」（v2.9 之后版本才有，含 v2.9。v3.0 之后版本默认启用）</li>
<li>采样&gt;启用「自适应采样」&gt;噪波阈值&gt; 0.1</li>
<li>采样 &gt; 最大采样 &gt; 渲染设置为 250，视图设置为 1</li>
<li>采样 &gt; 降噪 &gt; 通道 &gt; 反照和法向</li>
<li>采样 &gt; 降噪 &gt; 降噪器（当 OPTIX 可用时优先选择，v2.9 系列版本设置为 NLM，其余为 OPEN IMAGEDENOISE，v2.83 是自带的其他降噪方法）</li>
<li>采样&gt;降噪&gt;降噪器&gt;OpenImageDenoise &gt; 使用 GPU（v4.1 之后版本才有，含 v4.1）</li>
<li>采样 &gt; 路径引导（纯 CPU 渲染才有，v3.4 之后版本才有，含 v3.4）</li>
<li>性能 &gt; Auto Tile Size &gt; Target Tile Size &gt; 128（v3.0之前版本才有，不含v3.0，v3.0之后版本的不含有Auto Tile Size插件）</li>
<li>性能 &gt; 内存  &gt; 平铺尺寸 &gt; 4096（v3.0之后版本才有，含v3.0，v3.0之前版本的没有分块渲染功能。设定值为4096是为了避免渲染4k图像时导致分块。）</li>
<li>性能 &gt; 线程 &gt; 多线程模式 &gt; 固定</li>
<li>性能 &gt; 线程 &gt; 线程 &gt; 总线程数量-2（自动检测总线程数量并计算设置，保留两个线程给系统。例如 CPU 总线程为 8，那么插件会设置为6）</li>
<li>性能 &gt; 最终渲染 &gt; 持久数据</li>
</ol>
</li>
<li>输出属性 &gt; 输出路径：D:&#x2F;process&#x2F;</li>
</ol>
</li>
<li>顶部菜单栏&gt;文件&gt;外部数据&gt;自动打包资源</li>
<li>窗口活动工作区-&gt;新增「视频编辑」工作区</li>
</ol>
</li>
</ol>
<p>考虑到「加载我的设置」功能比较偏个性化，并非适合所有人，所以我专门又开发设计了一些设置值来控制其中部分功能。如果你想用「加载我的设置」功能，但又不喜欢其中所有功能，就可以通过这些设置值来单独控制。这些设置值位于插件偏好设置面板中，如图2.24 所示，首先设置对应参数，再应用「加载我的设置」功能。</p>
<p><strong>关于「加载我的设置」的一些设置参数如下：</strong></p>
<ul>
<li>禁用路径设置：禁用路径参数设置（默认不启用，即设置路径参数）。</li>
<li>禁用主题设置：禁用主题参数设置（默认不启用，即设置个性化主题）。</li>
<li>禁止保存启动文件：在应用「加载我的设置」时，禁止保存启动文件，因此所设置的参数不会写入启动文件中（默认不启用，即保存启动文件）。</li>
<li>在 GPU 渲染设置中使用 CPU：Cycles 渲染设备中同时选择 CPU（默认不启用，即纯 GPU 渲染，不含 CPU 设备。启用后效果是 CPU 和 GPU 混合渲染）。</li>
<li>预设主题：blender 主题（默认白色，当启用「禁用主题设置」后，该选项无效）。</li>
</ul>
<div class="flex-column">
<img data-src="./images/settings_for_loading_my_settings.webp">图2.24: 关于「加载我的设置」的一些设置参数</div>

<h4 id="加载Blender初始设置">2.4.3.4 &nbsp&nbsp<a href="#加载Blender初始设置" class="headerlink" title="加载Blender初始设置"></a>加载Blender初始设置</h4><ul>
<li>功能名称：加载Blender初始设置</li>
<li>快捷键：无</li>
<li>功能介绍：加载初始的偏好设置和启动文件，即重置 blender，还原成初次安装blender时的状态。</li>
</ul>
<h4 id="检查插件更新">2.4.3.5 &nbsp&nbsp<a href="#检查插件更新" class="headerlink" title="检查插件更新"></a>检查插件更新</h4><ul>
<li>功能名称：检查插件更新</li>
<li>快捷键：无</li>
<li>功能介绍：检查插件更新情况。基于<a href="https://github.com/Mister-Kin/ToggleLanguage/releases">GitHub Rleases</a>的版本信息，插件会自动检查最新版本和自动下载更新。</li>
</ul>
<h3 id="用户偏好设置">2.4.4 &nbsp&nbsp<a href="#用户偏好设置" class="headerlink" title="用户偏好设置"></a>用户偏好设置</h3><ul>
<li>功能名称：用户偏好设置</li>
<li>快捷键：Ctrl+Alt+U</li>
<li>功能介绍：打开用户偏好设置窗口。插件允许自定义该功能的快捷键，详见「<a href="#%E6%8F%92%E4%BB%B6%E7%9A%84%E9%94%AE%E4%BD%8D%E6%98%A0%E5%B0%84">插件的键位映射</a>」小节内容。</li>
</ul>
<h3 id="插件的键位映射">2.4.5 &nbsp&nbsp<a href="#插件的键位映射" class="headerlink" title="插件的键位映射"></a>插件的键位映射</h3><p>本插件的偏好设置面板中，允许修改插件的键位映射，设置方法和Blender原生的键位映射设置方法一样，如图2.25 所示。修改键位映射后，均会自动保存相应修改。</p>
<div class="flex-column">
<img data-src="./images/addon_keymaps.webp">图2.25: 插件的键位映射功能</div>

<h3 id="关于使用翻译新建数据块的名称按钮的说明">2.4.6 &nbsp&nbsp<a href="#关于使用翻译新建数据块的名称按钮的说明" class="headerlink" title="关于使用翻译新建数据块的名称按钮的说明"></a>关于使用翻译新建数据块的名称按钮的说明</h3><p>需要注意的是，翻译新建数据块的名称按钮设置值是无法随用户偏好设置自动保存。该功能的代码实现：其 property 属性值是注册在 bpy.types.Scene 中。因此，无法通过用户偏好设置中自动保存设置的功能进行存储。不像本插件偏好设置面板中的两种语言的属性值，后者是通过 bpy.types.AddonPreferences 类实现的，它可以通过用户偏好设置中自动保存设置的功能进行存储<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup>。</p>
<p>建议：若需要保存该功能的设置值，请保存一个工程文件<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup>（.blend），该功能的设置值会保存在这个工程文件。</p>
<h1 id="已知问题">3 &nbsp&nbsp<a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><h2 id="加载初始设置按钮导致闪退">3.1 &nbsp&nbsp<a href="#加载初始设置按钮导致闪退" class="headerlink" title="加载初始设置按钮导致闪退"></a>加载初始设置按钮导致闪退</h2><p>在未保存工程文件<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>（.blend）的情况下，加载初始设置功能会有机率引起异常码EXCEPTION_ACCESS_VIOLATION，从而导致 blender 闪退，目前暂未查明原因。在导致 blender 闪退时，重置功能的代码执行的不完整，一般是成功地加载初始偏好设置并保存，而初始启动文件并未成功加载并保存。因此，在该功能导致 blender 闪退后，还请用户自行重置偏好设置及启动文件。</p>
<p>建议：在使用该功能之前，请先保存一个工程文件（.blend）。</p>
<h1 id="开发记录">4 &nbsp&nbsp<a href="#开发记录" class="headerlink" title="开发记录"></a>开发记录</h1><h2 id="开发及测试环境">4.1 &nbsp&nbsp<a href="#开发及测试环境" class="headerlink" title="开发及测试环境"></a>开发及测试环境</h2><p>OS: Win11 v24H2 &#x2F; Win10 v22H2 &#x2F; Kali Linux 2021.3 &#x2F; MacOS<br>Blender: v2.83 ‑ v4.4.3</p>
<h2 id="更新历史">4.2 &nbsp&nbsp<a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>表 4.1 记录了本插件各个版本的更新历史。</p>
<center>表 4.1: 插件的更新历史</center>

<table>
<thead>
<tr>
<th align="center">版本</th>
<th align="center">更新日期</th>
<th align="center">更新内容</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage/releases/tag/v1.6.3">v1.6.3</a></td>
<td align="center">2025-03-28</td>
<td align="center">新增功能：导入蓝图参考图；检查插件更新；代码优化：修改个别标签文字的描述……</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage/releases/tag/v1.6.2">v1.6.2</a></td>
<td align="center">2024-12-15</td>
<td align="center">新增功能：插件键位映射；优化：为操作器确认对话框添加更多提示信息；优化：润色部份提示文字……</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage/releases/tag/v1.6.1">v1.6.1</a></td>
<td align="center">2024-07-01</td>
<td align="center">在blender v4.1中为OpenImageDenoise启用gpu；支持blender v4.2</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/Mister-Kin/ToggleLanguage/releases/tag/v1.6">v1.6</a></td>
<td align="center">2023-11-19</td>
<td align="center">修复并适配blender v4.0</td>
</tr>
<tr>
<td align="center">v1.5.1</td>
<td align="center">2023&#x2F;08&#x2F;23</td>
<td align="center">修复：optix_exist 变量引用前未分配；优化：润色翻译</td>
</tr>
<tr>
<td align="center">v1.5</td>
<td align="center">2023&#x2F;04&#x2F;21</td>
<td align="center">新增功能：添加视频进度条；新增功能：添加实用工具菜单……</td>
</tr>
<tr>
<td align="center">v1.4</td>
<td align="center">2023&#x2F;04&#x2F;16</td>
<td align="center">新增功能：删除所有集合和物体；新增功能：添加复选框禁用保存启动文件……</td>
</tr>
<tr>
<td align="center">v1.3.1</td>
<td align="center">2023&#x2F;03&#x2F;29</td>
<td align="center">更新文档链接</td>
</tr>
<tr>
<td align="center">v1.3</td>
<td align="center">2023&#x2F;01&#x2F;24</td>
<td align="center">修复：optix_exist 变量引用前未分配；优化降噪设置⋯⋯</td>
</tr>
<tr>
<td align="center">v1.2</td>
<td align="center">2023&#x2F;01&#x2F;15</td>
<td align="center">优化「加载我的设置」功能；优化「翻译新建数据块名称」 功能⋯⋯</td>
</tr>
<tr>
<td align="center">v1.1</td>
<td align="center">2022&#x2F;10&#x2F;16</td>
<td align="center">修复偏好设置一直被修改导致无法消星的情况；移除keymaps.py中的注释代码……</td>
</tr>
<tr>
<td align="center">v1.0</td>
<td align="center">2022&#x2F;01&#x2F;12</td>
<td align="center">移除F6快捷键的支持；paths路径统一为小写格式……</td>
</tr>
<tr>
<td align="center">v0.9</td>
<td align="center">2021&#x2F;11&#x2F;06</td>
<td align="center">重构：拆分文件规范化开发；加载我的设置功能支持更多的系统和硬件平台……</td>
</tr>
<tr>
<td align="center">v0.8</td>
<td align="center">2021&#x2F;08&#x2F;30</td>
<td align="center">支持切换更多语言；支持完整翻译插件 UI；为某些功能添加交互提示（信息框，确认框等）……</td>
</tr>
<tr>
<td align="center">v0.7</td>
<td align="center">2021&#x2F;07&#x2F;11</td>
<td align="center">我的偏好设置支持 blender v2.93；重写 property 代码</td>
</tr>
<tr>
<td align="center">v0.6</td>
<td align="center">2021&#x2F;03&#x2F;10</td>
<td align="center">添加布尔值按钮‐新数据翻译；支持快捷键；代码重构，插件翻译重构……</td>
</tr>
<tr>
<td align="center">v0.5</td>
<td align="center">2020&#x2F;12&#x2F;08</td>
<td align="center">支持 blender v2.91；支持从.zip 文件安装插件……</td>
</tr>
<tr>
<td align="center">v0.5‐beta</td>
<td align="center">2020&#x2F;09&#x2F;20</td>
<td align="center">添加菜单用以选择 UI 提示方案</td>
</tr>
<tr>
<td align="center">v0.4</td>
<td align="center">2020&#x2F;08&#x2F;03</td>
<td align="center">代码项目重命名为 ToggleLanguage；按钮 UI 放置于最右端；添加新按钮以快速查看 preferences</td>
</tr>
<tr>
<td align="center">v0.3</td>
<td align="center">2020&#x2F;06&#x2F;05</td>
<td align="center">更新至 blender 2.83 API；修改部分类名；添加文档链接；修改完善许可说明</td>
</tr>
<tr>
<td align="center">v0.2</td>
<td align="center">2020&#x2F;05&#x2F;21</td>
<td align="center">清除未使用属性的报错</td>
</tr>
<tr>
<td align="center">v0.1</td>
<td align="center">2020&#x2F;05&#x2F;12</td>
<td align="center">完成基础的功能设计「一键切换」</td>
</tr>
</tbody></table>
<p><em>注：更多详细的信息，请查看 <a href="https://github.com/Mister-Kin/ToggleLanguage/releases">Release Notes</a> 。</em></p>
<h1 id="作者">5 &nbsp&nbsp<a href="#作者" class="headerlink" title="作者"></a>作者</h1><p><strong>ToggleLanguage</strong> © Mr. Kin, 项目代码采用 <a href="https://github.com/Mister-Kin/ToggleLanguage/blob/master/LICENSE">GNU GPL v3.0</a> 许可协议进行发布。<br>由 Mr. Kin 著作并维护。</p>
<h1 id="参考文献">6 &nbsp&nbsp<a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] CONLAN C. The Blender Python API[M]. Bethesda, Maryland: Apress, 2017: 65-85. DOI: 10.1007&#x2F;978-1-4842-2802-9.<br>[2] Blender Python API Documentation[EB&#x2F;OL]. <a href="https://docs.blender.org/api/current/index.html">https://docs.blender.org/api/current/index.html</a>.<br>[3] Blender Stackexchange[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/">https://blender.stackexchange.com/questions/</a>.<br>[4] 一花一世界，一叶一乾坤. Blender 插件编写指南[EB&#x2F;OL]. <a href="https://www.cnblogs.com/yaoyu126/p/9319746.html">https://www.cnblogs.com/yaoyu126/p/9319746.html</a>.<br>[5] Python Documentation[EB&#x2F;OL]. <a href="https://docs.python.org/3/library/functions.html?highlight=dir#dir">https://docs.python.org/3/library/functions.html?highlight=dir#dir</a>.<br>[6] Nikita. Localization of Blender add-ons –with API[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/localization-of-blender-add-ons-with-api/">https://b3d.interplanety.org/en/localization-of-blender-add-ons-with-api/</a>.<br>[7] Nikita. Add-on preferences panel[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/add-on-preferences-panel/">https://b3d.interplanety.org/en/add-on-preferences-panel/</a>.<br>[8] Blendermonkey. How to save custom user preferences for an addon[EB&#x2F;OL]. <a href="https://devtalk.blender.org/t/how-to-save-custom-user-preferences-for-an-addon/10362">https://devtalk.blender.org/t/how-to-save-custom-user-preferences-for-an-addon/10362</a>.<br>[9] Skylumz. How to popup simple message box from python console?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/109711/how-to-popup-simple-message-box-from-python-console">https://blender.stackexchange.com/questions/109711/how-to-popup-simple-message-box-from-python-console</a>.<br>[10] P2or. How to call a confirmation dialog box?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/73286/how-to-call-a-confirmation-dialog-box">https://blender.stackexchange.com/questions/73286/how-to-call-a-confirmation-dialog-box</a>.<br>[11] Nikita. Creating pop-up panels with user UI in Blender add-on[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/creating-pop-up-panels-with-user-ui-in-blender-add-on/">https://b3d.interplanety.org/en/creating-pop-up-panels-with-user-ui-in-blender-add-on/</a>.<br>[12] TEUSINK D. Force GPU rendering python script[EB&#x2F;OL]. <a href="https://developer.blender.org/T54099">https://developer.blender.org/T54099</a>.<br>[13] Lewis2e. Need a way to detect if a valid GPU device is available from Python[EB&#x2F;OL]. <a href="https://devtalk.blender.org/t/need-a-way-to-detect-if-a-valid-gpu-device-is-available-from-python/17080">https://devtalk.blender.org/t/need-a-way-to-detect-if-a-valid-gpu-device-is-available-from-python/17080</a>.<br>[14] NEUMANN N. Python API for getting available devices is getting even more awkward in 2.81[EB&#x2F;OL]. <a href="https://developer.blender.org/T71172">https://developer.blender.org/T71172</a>.<br>[15] Quarkpol. How setup Cycles Compute Device in console[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/154249/how-setup-cycles-compute-device-in-console">https://blender.stackexchange.com/questions/154249/how-setup-cycles-compute-device-in-console</a>.<br>[16] User2746401. Render using all cores except one (or N)[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/45213/render-using-all-cores-except-one-or-n">https://blender.stackexchange.com/questions/45213/render-using-all-cores-except-one-or-n</a>.<br>[17] Nikita. Class naming conventions in Blender 2.8 Python API[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/class-naming-conventions-in-blender-2-8-python-api/">https://b3d.interplanety.org/en/class-naming-conventions-in-blender-2-8-python-api/</a>.<br>[18] BARTON C. Python API, changes to type registration in 2.8[EB&#x2F;OL]. <a href="https://developer.blender.org/T52599">https://developer.blender.org/T52599</a>.<br>[19] Blender Addon UI Cookbook[EB&#x2F;OL]. <a href="https://archive.blender.org/wiki/index.php/Dev:Py/Scripts/Cookbook/Code_snippets/Interface/">https://archive.blender.org/wiki/index.php/Dev:Py/Scripts/Cookbook/Code_snippets/Interface/</a>.<br>[20] Rendering on command‑line with GPU?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/156503/rendering%E2%80%91on%E2%80%91command%E2%80%91line%E2%80%91with%E2%80%91gpu/156680#">https://blender.stackexchange.com/questions/156503/rendering‑on‑command‑line‑with‑gpu/156680#</a>.<br>[21] Why does getting Cycles devices fail with Blender 3.0?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/255371/why%E2%80%91does%E2%80%91getting%E2%80%91cycles%E2%80%91devices%E2%80%91fail%E2%80%91with%E2%80%91blender%E2%80%913%E2%80%910">https://blender.stackexchange.com/questions/255371/why‑does‑getting‑cycles‑devices‑fail‑with‑blender‑3‑0</a>.<br>[22] Python API for getting available devices is getting even more awkward in 2.81[EB&#x2F;OL]. <a href="https://developer.blender.org/T71172">https://developer.blender.org/T71172</a>.<br>[23] How to use bpy.context.scene.use_denoising in Blender 2.8?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/163941/how%E2%80%91to%E2%80%91use%E2%80%91bpy%E2%80%91context%E2%80%91scene%E2%80%91use%E2%80%91denoising%E2%80%91in%E2%80%91blender%E2%80%912%E2%80%918?noredirect=1&lq=1">https://blender.stackexchange.com/questions/163941/how‑to‑use‑bpy‑context‑scene‑use‑denoising‑in‑blender‑2‑8?noredirect=1&amp;lq=1</a>.<br>[24] How Do I Speed Up My Render Times In Cycles And Cycles X?[EB&#x2F;OL]. <a href="https://www.blenderbasecamp.com/home/how-do-i-speed-my-render-times-in-cycles-and-cycles-x/">https://www.blenderbasecamp.com/home/how-do-i-speed-my-render-times-in-cycles-and-cycles-x/</a>.<br>[25] How to speed up Blender&#39;s Cycles X rendering engine[EB&#x2F;OL]. <a href="https://irendering.net/how-to-speed-up-blenders-cycles-x-rendering-engine/">https://irendering.net/how-to-speed-up-blenders-cycles-x-rendering-engine/</a>.<br>[26] SCRIPT TO DELETE ALL OBJECTS IN 3D WINDOW[EB&#x2F;OL]. <a href="https://blendernet.blogspot.com/2020/10/script%E2%80%91to%E2%80%91delete%E2%80%91all%E2%80%91objects%E2%80%91in%E2%80%913d.html">https://blendernet.blogspot.com/2020/10/script‑to‑delete‑all‑objects‑in‑3d.html</a>.<br>[27] How to list all collections and their objects?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/144928/how%E2%80%91to%E2%80%91list%E2%80%91all%E2%80%91collections%E2%80%91and%E2%80%91their%E2%80%91objects">https://blender.stackexchange.com/questions/144928/how‑to‑list‑all‑collections‑and‑their‑objects</a>.<br>[28] How to get all collections of the current scene?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/167878/how%E2%80%91to%E2%80%91get%E2%80%91all%E2%80%91collections%E2%80%91of%E2%80%91the%E2%80%91current%E2%80%91scene">https://blender.stackexchange.com/questions/167878/how‑to‑get‑all‑collections‑of‑the‑current‑scene</a>.<br>[29] Selecting a specific Collection by name and then deleting it[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/173867/selecting%E2%80%91a%E2%80%91specific%E2%80%91collection%E2%80%91by%E2%80%91name%E2%80%91and%E2%80%91then%E2%80%91deleting%E2%80%91it">https://blender.stackexchange.com/questions/173867/selecting‑a‑specific‑collection‑by‑name‑and‑then‑deleting‑it</a>.<br>[30] How to programmatically add an effect strip[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/73955/how%E2%80%91to%E2%80%91programmatically%E2%80%91add%E2%80%91an%E2%80%91effect%E2%80%91strip#">https://blender.stackexchange.com/questions/73955/how‑to‑programmatically‑add‑an‑effect‑strip#</a>.<br>[31] Blender, video sequencer, insert keyframes for transform.offset by script[EB&#x2F;OL]. <a href="https://stackoverflow.com/questions/44238673/blender%E2%80%91video%E2%80%91sequencer%E2%80%91insert%E2%80%91keyframes%E2%80%91for%E2%80%91transform%E2%80%91offset%E2%80%91by%E2%80%91script">https://stackoverflow.com/questions/44238673/blender‑video‑sequencer‑insert‑keyframes‑for‑transform‑offset‑by‑script</a>.<br>[32] How to Create Extensions[EB&#x2F;OL]. <a href="https://docs.blender.org/manual/en/4.2/advanced/extensions/getting_started.html">https://docs.blender.org/manual/en/4.2/advanced/extensions/getting_started.html</a>.<br>[33] How can I call a specific keymap to draw within my AddonPreferences?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/1497/how-can-i-call-a-specific-keymap-to-draw-within-my-addonpreferences#">https://blender.stackexchange.com/questions/1497/how-can-i-call-a-specific-keymap-to-draw-within-my-addonpreferences#</a>.<br>[34] addon_keymap_template[EB&#x2F;OL]. <a href="https://github.com/pitiwazou/Scripts-Blender/blob/Older-Scripts/addon_keymap_template">https://github.com/pitiwazou/Scripts-Blender/blob/Older-Scripts/addon_keymap_template</a>.<br>[35] How to draw a custom KeyMapItem.properties[EB&#x2F;OL]. <a href="https://devtalk.blender.org/t/how-to-draw-a-custom-keymapitem-properties/13059">https://devtalk.blender.org/t/how-to-draw-a-custom-keymapitem-properties/13059</a>.<br>[36] UI: Operator Confirm Dialog Changes #117564[EB&#x2F;OL]. <a href="https://projects.blender.org/blender/blender/pulls/117564">https://projects.blender.org/blender/blender/pulls/117564</a>.<br>[37] WindowManager(ID)[EB&#x2F;OL]. <a href="https://docs.blender.org/api/current/bpy.types.WindowManager.html#bpy.types.WindowManager.invoke_confirm">https://docs.blender.org/api/current/bpy.types.WindowManager.html#bpy.types.WindowManager.invoke_confirm</a>.<br>[38] Switching workspaces in Blender using Python API[EB&#x2F;OL]. <a href="https://b3d.interplanety.org/en/switching-workspaces-in-blender-using-python-api/">https://b3d.interplanety.org/en/switching-workspaces-in-blender-using-python-api/</a>.<br>[39] How to create an Empty of type Image and assign a picture with Python?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/10875/how-to-create-an-empty-of-type-image-and-assign-a-picture-with-python#">https://blender.stackexchange.com/questions/10875/how-to-create-an-empty-of-type-image-and-assign-a-picture-with-python#</a>.<br>[40] How to add empty object not using bpy.ops?[EB&#x2F;OL]. <a href="https://blender.stackexchange.com/questions/51290/how-to-add-empty-object-not-using-bpy-ops">https://blender.stackexchange.com/questions/51290/how-to-add-empty-object-not-using-bpy-ops</a>.<br>[41] How to use BPY to create an Image empty?[EB&#x2F;OL]. <a href="https://blenderartists.org/t/how-to-use-bpy-to-create-an-image-empty/606430">https://blenderartists.org/t/how-to-use-bpy-to-create-an-image-empty/606430</a>.<br>[42] Footnotes in longtable captions[EB&#x2F;OL]. <a href="https://tex.stackexchange.com/questions/50151/footnotes-in-longtable-captions">https://tex.stackexchange.com/questions/50151/footnotes-in-longtable-captions</a>.</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">即blender v4.0以前（不含blender v4.0）内置翻译语言列表中 Complete 和 In Progress 两个列表中的语言，共17种。暂不考虑加入 Starting 列表中的语言，因为其变动性较高，有可能被删除或者新添加。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">即blender v4.0以后（含blender v4.0）内置翻译语言列表中 Complete 和 In Progress 两个列表中的语言，共18种。暂不考虑加入 Starting 列表中的语言，因为其变动性较高，有可能被删除或者新添加。</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">v1.1之后版本的插件不再是强制接管该功能。虽然可以通过用户偏好设置来设置一个不同于插件的设置值，但在使用插件的该功能或者语言切换按钮后，插件会对该项改写修正为插件的设置值。</span><a href="#fnref:3" rev="footnote"> ↩</a></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">4.</span><span style="display: inline-block; vertical-align: top;">理论上支持任意系统、任意安装路径、任意显卡平台的情况，但Linux OS和Mac OS比较少测试，可能会存在有bug。</span><a href="#fnref:4" rev="footnote"> ↩</a></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">5.</span><span style="display: inline-block; vertical-align: top;">实际上，在禁用用户偏好设置的自动保存设置功能后，本插件偏好设置面板中的两种语言的属性值也无法自动存储，需要保存在某一工程文件中才行。</span><a href="#fnref:5" rev="footnote"> ↩</a></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">6.</span><span style="display: inline-block; vertical-align: top;">保存在启动文件也是可行的。</span><a href="#fnref:6" rev="footnote"> ↩</a></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">7.</span><span style="display: inline-block; vertical-align: top;">例如通过安装路径打开主程序的情况或者打开一个工程文件后进行修改却未保存的情况。</span><a href="#fnref:7" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
  </entry>
</search>
